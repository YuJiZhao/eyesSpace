{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/message.json","path":"live2d/message.json","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/global/index.css","path":"css/global/index.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/artitalk/index.js","path":"js/artitalk/index.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/global/banf12.js","path":"js/global/banf12.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/global/chocolate.js","path":"js/global/chocolate.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/global/footer-beautify-runtime.js","path":"js/global/footer-beautify-runtime.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/global/title.js","path":"js/global/title.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/css/live2d.css","path":"live2d/css/live2d.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/js/mHide.js","path":"live2d/js/mHide.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/js/live2d.js","path":"live2d/js/live2d.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/js/message.js","path":"live2d/js/message.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/13.jpg","path":"live2d/model/xiaomai/13.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/13.json","path":"live2d/model/xiaomai/13.json","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/physics.json","path":"live2d/model/xiaomai/physics.json","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/umaru.moc","path":"live2d/model/xiaomai/umaru.moc","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_003.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_003.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_001.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_001.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_002.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_002.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_004.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_004.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_005.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_005.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_006.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_006.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_007.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_007.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_008.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_008.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_010.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_010.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_011.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_011.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_009.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_009.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_012.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_012.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_015.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_015.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_013.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_013.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_014.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_014.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_016.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_016.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_017.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_017.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_018.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_018.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_019.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_019.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_020.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_020.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_021.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_021.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_023.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_023.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_022.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_022.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_025.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_025.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_026.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_026.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_024.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_024.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_027.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_027.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_028.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_028.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_029.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_029.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_031.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_031.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_030.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_030.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_032.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_032.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_033.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_033.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_034.mtn","path":"live2d/model/xiaomai/mtn/rita_Live2D_034.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/umaru2048/texture_00.png","path":"live2d/model/xiaomai/umaru2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/umaru_idle.mtn","path":"live2d/model/xiaomai/mtn/umaru_idle.mtn","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/01.wav","path":"live2d/model/xiaomai/voice/01.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/03.wav","path":"live2d/model/xiaomai/voice/03.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/02.wav","path":"live2d/model/xiaomai/voice/02.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/05.wav","path":"live2d/model/xiaomai/voice/05.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/04.wav","path":"live2d/model/xiaomai/voice/04.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/06.wav","path":"live2d/model/xiaomai/voice/06.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/07.wav","path":"live2d/model/xiaomai/voice/07.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/08.wav","path":"live2d/model/xiaomai/voice/08.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/09.wav","path":"live2d/model/xiaomai/voice/09.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/11.wav","path":"live2d/model/xiaomai/voice/11.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/10.wav","path":"live2d/model/xiaomai/voice/10.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/12.wav","path":"live2d/model/xiaomai/voice/12.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/13.wav","path":"live2d/model/xiaomai/voice/13.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/14.wav","path":"live2d/model/xiaomai/voice/14.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/15.wav","path":"live2d/model/xiaomai/voice/15.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/16.wav","path":"live2d/model/xiaomai/voice/16.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/18.wav","path":"live2d/model/xiaomai/voice/18.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/17.wav","path":"live2d/model/xiaomai/voice/17.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/20.wav","path":"live2d/model/xiaomai/voice/20.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/21.wav","path":"live2d/model/xiaomai/voice/21.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/19.wav","path":"live2d/model/xiaomai/voice/19.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/22.wav","path":"live2d/model/xiaomai/voice/22.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/23.wav","path":"live2d/model/xiaomai/voice/23.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/24.wav","path":"live2d/model/xiaomai/voice/24.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/25.wav","path":"live2d/model/xiaomai/voice/25.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/26.wav","path":"live2d/model/xiaomai/voice/26.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/28.wav","path":"live2d/model/xiaomai/voice/28.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/27.wav","path":"live2d/model/xiaomai/voice/27.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/29.wav","path":"live2d/model/xiaomai/voice/29.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/30.wav","path":"live2d/model/xiaomai/voice/30.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/31.wav","path":"live2d/model/xiaomai/voice/31.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/32.wav","path":"live2d/model/xiaomai/voice/32.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/34.wav","path":"live2d/model/xiaomai/voice/34.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/33.wav","path":"live2d/model/xiaomai/voice/33.wav","modified":0,"renderable":1},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/35.wav","path":"live2d/model/xiaomai/voice/35.wav","modified":0,"renderable":1},{"_id":"source/font/eyesblog.ttf","path":"font/eyesblog.ttf","modified":0,"renderable":0},{"_id":"source/font/萌神手写体.ttf","path":"font/萌神手写体.ttf","modified":0,"renderable":0},{"_id":"source/font/eyesblog.woff2","path":"font/eyesblog.woff2","modified":0,"renderable":0},{"_id":"source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0}],"Cache":[{"_id":"source/categories/index.md","hash":"d50964b1842dbad75f4da977ed9cfa84f952d352","modified":1638540123669},{"_id":"source/img/favicon.ico","hash":"54280c1686c7041cc796e3a837c8bef01b422167","modified":1619682355530},{"_id":"source/music/index.html","hash":"1cc92e85237f72a79858cc1a10f00038e6ee6365","modified":1638712181100},{"_id":"source/video/index.html","hash":"53d181758b5aa6cb7dd9afda569f6cf7b0d54226","modified":1638712291777},{"_id":"source/tags/index.md","hash":"27856d52f9cec1ecb44cdd380916c1165f1ff91e","modified":1638540134878},{"_id":"source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1629736770309},{"_id":"source/_posts/other/git操作.md","hash":"b8acd8bf78d542d7cd64ab1959b3b59fdf5fa2c6","modified":1638543495207},{"_id":"source/_posts/other/smtp发邮件.md","hash":"90fa07d0b2b82bff0f813c41148c2505ebb71f89","modified":1638543498026},{"_id":"source/_posts/java/Tomcat以及端口.md","hash":"5294da26cd115928aae36ab5c824404248af7062","modified":1638543436897},{"_id":"source/_posts/java/file操作.md","hash":"abed9513037a6c73b4b1c3361053de607e7f16ac","modified":1638543430090},{"_id":"source/_posts/PHP/GD缩略图.md","hash":"fffb51eb25cdc7fd90f55197d6390d637fd4b4aa","modified":1638543517339},{"_id":"source/_posts/PHP/phpGD.md","hash":"74df1c0680573cbe9975f82023fade214e6fa2c3","modified":1638543588616},{"_id":"source/_posts/PHP/php文件.md","hash":"deaf641be7b6fd3173cd2ea12125e22a7c2b9e8e","modified":1638543535243},{"_id":"source/_posts/PHP/php水印.md","hash":"17c17db176fd8109785649be7eb0b4ffa0d5d5ab","modified":1638543532569},{"_id":"source/_posts/PHP/php加密.md","hash":"220baceda1da44344bda40887a0b38df08a7a36a","modified":1638586517320},{"_id":"source/_posts/PHP/php会话技术.md","hash":"b7f4955672718a433b731c5a64516332dafb1ae1","modified":1638586510024},{"_id":"source/_posts/PHP/php的mail.md","hash":"abe0e999dc9056de851310c607cb2462caf79a79","modified":1638586506853},{"_id":"source/_posts/PHP/php表单.md","hash":"be2001ce943c5f3b3b1c39701c5cb711c3bcde84","modified":1638543520673},{"_id":"source/_posts/PHP/php验证码.md","hash":"6b498ee47b4ebff5fb659aa09b9d21c5df1b5c82","modified":1638543583859},{"_id":"source/_posts/PHP/thinkphp控制器.md","hash":"cf605fae0c6f879298b107e3b8c99ea6d58340a5","modified":1638543592151},{"_id":"source/_posts/PHP/thinkphp数据库(上).md","hash":"849c925dd2960648d5dbecd9d980dff3bbae3cc8","modified":1638543599332},{"_id":"source/_posts/PHP/thinkphp模型.md","hash":"25f9a498ae8423a038d44201e660e3960297f72d","modified":1638543595643},{"_id":"source/_posts/javascript/CommonJS服务端.md","hash":"ddae46a56c0b4a1f0af300640d234886144f1612","modified":1638543457372},{"_id":"source/_posts/javascript/CommonJS浏览器端.md","hash":"1b6d44e6890fa84c095c56de3e49299807565daa","modified":1638543460769},{"_id":"source/_posts/javascript/ES6模块化编程.md","hash":"0915976116e7846a136573381d13dcaf11049485","modified":1638543463867},{"_id":"source/_posts/javascript/FileReader.md","hash":"a7cc2e8294a24a319dd19799ca5b21f2296e60be","modified":1638543467273},{"_id":"source/_posts/javascript/JS模块化之AMD规范.md","hash":"3b0cd695cafda8e279489fef5c113fae5cd0bb73","modified":1638543473368},{"_id":"source/_posts/javascript/js防抖和节流.md","hash":"963e21637acb7f046b4d3c8b59e784524c47df0e","modified":1638543470250},{"_id":"source/_posts/javascript/axios-json.md","hash":"d5b9485127448c49d2602b01880c6d854ba09080","modified":1638586498161},{"_id":"source/_posts/javascript/Webpack5打包.md","hash":"fa29e865a68c4fbe7794e51ea3052f5cc4bf5e9a","modified":1638543483119},{"_id":"source/_posts/javascript/promise.md","hash":"ed798fc2b8da6665252f981e74d6c5ee03d37a54","modified":1638543476131},{"_id":"source/_posts/javascript/uniCloud初体验.md","hash":"ebcfdb96b18792fb92c4124dc991bd87227d9a36","modified":1638543479603},{"_id":"source/_posts/javascript/webstotage.md","hash":"72e16e0128a20d1ef5c1845eed95541010c76946","modified":1638543486196},{"_id":"source/_posts/javascript/拖放.md","hash":"5a900d7aef1854f6c858dbb453f4b66bf5051dba","modified":1638543446586},{"_id":"source/_posts/script/autoScoll.md","hash":"d7de1f2fb8ea5357ec872ace70d54f156905ff69","modified":1638543620301},{"_id":"source/_posts/javascript/地理位置服务.md","hash":"a1742fcf89469b65cf328d0eeb427d0e7003c168","modified":1638543443048},{"_id":"source/_posts/script/bilibiliBarrageList.md","hash":"79418c40852a1082ec6c4498f9a5427e8e75e0e5","modified":1638543623090},{"_id":"source/_posts/script/csdnNoFee.md","hash":"804f1f55823574cbfa2a7c195ed219545aa7d9f6","modified":1638543625874},{"_id":"source/_posts/python/pil的使用.md","hash":"ea5d55a75d3fe4da859ace2ab22f6adc18a6a68a","modified":1638586520890},{"_id":"source/_posts/python/pip.md","hash":"8e7030225aab0752399468a6892771ec0d3b5d9d","modified":1638543613075},{"_id":"source/_posts/python/通用爬虫中.md","hash":"3ef8c311314165ddb6b22010e6bc2388738feafd","modified":1638543606832},{"_id":"source/_posts/python/wordcloud.md","hash":"f955ded529f9aa361b8997d93e1d2dbf8a71ad29","modified":1638543615946},{"_id":"source/_posts/sql/mysql存储引擎.md","hash":"931f08b9fb32a321b6e3cccdcdfb736c90d824d8","modified":1638543630683},{"_id":"source/_posts/python/通用爬虫上.md","hash":"d38511f9bea604cfe4d8b077f7108d4fc01c2926","modified":1638543603458},{"_id":"source/_posts/sql/sql约束事务视图.md","hash":"806a4e529c2f295f6391d24afdb2ab6e7dae8c0f","modified":1638543633396},{"_id":"themes/butterfly/package.json","hash":"6a5ddc166980502757c1413b5e04a3a8a91c0a48","modified":1638528687928},{"_id":"themes/butterfly/.github/stale.yml","hash":"7a131b8aa4936fbcedea3517299e1cdc1bcbcaab","modified":1638528687887},{"_id":"themes/butterfly/languages/default.yml","hash":"b9dbdb20bd1f1c7ca8a8f38635bdc4ed8bb1d44c","modified":1638528687891},{"_id":"themes/butterfly/README.md","hash":"0f0eaee9c30ef1e9aed588fbb3e8263401348b55","modified":1638528687888},{"_id":"themes/butterfly/README_CN.md","hash":"70ec43a8aa0776b5a0a2a6b6009dd253fa3679eb","modified":1638528687889},{"_id":"themes/butterfly/languages/en.yml","hash":"fd1c1211c8f166d089a7697872185a81182d92e1","modified":1638528687891},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"46685048a05b419ed9c72cf31bd6e5efef7524f2","modified":1638611816262},{"_id":"themes/butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1638528687893},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"736bec8eeb3a29d0d43669d81f1fa686e02be18e","modified":1638528687892},{"_id":"themes/butterfly/layout/category.pug","hash":"5ac3cd8172088843cec03175c612a9c85f49cf2e","modified":1638528687893},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1638528687926},{"_id":"themes/butterfly/layout/page.pug","hash":"cae76ce64c114fd192b5da5a7d14aa0240df2f06","modified":1638602481383},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1638528687927},{"_id":"themes/butterfly/layout/post.pug","hash":"8f2f13c9ae099dd83827ce3dbac5abc8d7d5bde3","modified":1638528687927},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"b41123ce5f0ccfa9e06a68b9f3cb59ba040a049a","modified":1638528687887},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"205a69ba038cf76affcdc1f39d88a8cb8079fc12","modified":1638528687887},{"_id":"themes/butterfly/scripts/events/init.js","hash":"5803aa55d9c21e51ea64c1ae50c9b602979aaee2","modified":1638528687928},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"1e1da036fae593be7e2cc502f0a5cbeb2e7881d1","modified":1638528687929},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1638528687888},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1638528687888},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1638528687928},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"98ef86305b8d2ad9dbab969715e1ac93b407f036","modified":1638528687929},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"bd29f20fad3d3fab600940e7a6dc9a803943cb33","modified":1638528687929},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"0b7979a908ebe8c350d73b6731f0be3e29d401c2","modified":1638528687886},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1638528687930},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"98ab13a60413d68bd9d02d54d121c66a6d4634d2","modified":1638528687931},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1638528687930},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"384de3c04809ec5fa996e8aa0628f770cd4bff3e","modified":1638528687931},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"26dd1900e68a3e10a5cf3f3484a93139a0f1340e","modified":1638528687932},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"8cb7ef368cc2ac7f4a13c2959908b1574e572acf","modified":1638528687932},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"7ffbe625f184116e442648c8416ea58614a1cef8","modified":1638528687933},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"eb019da8c190923e759d2fd7cb846281eef8594e","modified":1638528687933},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1638528687933},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1638528687933},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1638528687934},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"829229b0074b332ba779e159219eb2466612ff6e","modified":1638528687934},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1638528687934},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1638528687952},{"_id":"themes/butterfly/source/css/var.styl","hash":"31198af95fecc6819d3b2cb7ef03988ef67257da","modified":1638528687952},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1638528687953},{"_id":"themes/butterfly/source/js/main.js","hash":"53c6df70de6e7949b102ab06fd0cd53b9b39b01c","modified":1638528687955},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1638528687953},{"_id":"themes/butterfly/source/js/utils.js","hash":"1b8bf1e6d50fa8ffe2aff7548b141cab72540ba0","modified":1638528687957},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1638528687953},{"_id":"themes/butterfly/source/live2d/message.json","hash":"54e15cda1634002f7d5d48dcc6e932d17b884f7f","modified":1533842451000},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"3cdc5e32d0f1e5866bcf86f94a0d76aaf7142937","modified":1638528687893},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"a1ca58fdff74b890cade94479f8f0eb9ce7e5e73","modified":1638528687894},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1638528687894},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1638528687954},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"f4dcc0a596eb9801c4d3c033d018d0abb413c8e5","modified":1638528687894},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"f2e1d8a05d2e409c4804f67a98f5f59f527d6627","modified":1638536972567},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1638528687956},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1638528687903},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"66b14189a1913119ff5927c0b933b5c73fb37f48","modified":1638528687905},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9b5243385f7a90e0103c25c531a1e7f2f1884c15","modified":1638528687905},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"03164bca4546707543828cb2a41bc672b77bfa5a","modified":1638528687936},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"2e8e391b211b2416d3c9430ab5361659c073f348","modified":1638528687936},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f9de9db2a49ac4d5447660ab159171ac5c228e3c","modified":1638528687935},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"f25415a436100688248fef0ad90e3d4397627833","modified":1638528687940},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1638528687940},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"23ea60f8becc91f6e9f6cfb1cbfd25689c263b9c","modified":1638528687940},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"8e6c9a2c1881985e4b2ae14ef1bdfdbb1bc83b37","modified":1638528687941},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"bfc4b9d8df66593c11c9ae78899f54e69785ca90","modified":1638528687941},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"dd71e34edece4e06b59e941fb3cc5ad9a3ad09cf","modified":1638528687941},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"807f18717c29b5c41de6fc600a69a80ce8b7a19c","modified":1638528687941},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"db7fe645662d87be4f8dfc08e55bbe1a3734bf93","modified":1638528687942},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"814729d1d71f4326623a4f34b621bf0421503103","modified":1638528687942},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"4ae98e703440b616d2a36da139bda844c94d425e","modified":1638528687943},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"8c4e08c8a63dacdfb2a733a0d0035fa97c7f5e9e","modified":1638528687943},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"a00ad74074513a1c7f6e02977b8fa778beaa2108","modified":1638528687943},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"943aa34c83c87d0225db65ae90621870472972fa","modified":1638528687944},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"191ce31ce0f2b1d22a64225801a88cee6054f574","modified":1638528687943},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"8489722684aa9b4baa38386f4d4b39f4dbd60113","modified":1638528687944},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"89a6cb63a97cc08675319c403e4a89391f6ab401","modified":1638528687944},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"87c576a3361f30eefafec27a872ad76e9fbb2765","modified":1638528687945},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"190b85de3e686393e45869d12464995f23b304dc","modified":1638528687946},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"ca1d3a885a85a91fcd6f7b55fca96cafb6a1b0a3","modified":1638528687946},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"5e5c1d6d104cc15314ae365d0da7cb07334a6457","modified":1638528687946},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"48ad198d0ea97a25db4d2a3e587a16ef41617c0b","modified":1638528687947},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"0da09b1811a776106ca66c56be6e2a396dca5680","modified":1638528687947},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"26e26797b3175498e20b2a8bf1679d3ed9fac5a6","modified":1638528687947},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"e65ed98056e6c91e622f94bad5283d00fdb22142","modified":1638528687948},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"fa2985afd08556b25f5f1a01bc1a7c76b294a962","modified":1638528687948},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"c3369a14f4111c098d0177036ca57df6deb59d72","modified":1638528687949},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"aa0728c556af75f5d66ecd44fa207722d474c26d","modified":1638528687949},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"25ac939fc57346de07ba9e15a1a760b492baefd7","modified":1638528687948},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1638528687950},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"6c12a03e26ca5d538537d472657d3d03a7fcbb87","modified":1638528687949},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"c91609b7f431cacecc3718ae2fb7403c55f8267a","modified":1638528687950},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"56691537c7f06c2cf1ffa1509a328f506d938ee8","modified":1638528687949},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"75a5c15c7029197ec5cffd27f7c5455891c946c9","modified":1638528687950},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"8520674768dd0b1837f947892e8402b192a4f9c1","modified":1638528687951},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1638528687951},{"_id":"themes/butterfly/source/css/global/index.css","hash":"407d7ec544c2010c028133c254e112e05d468cf6","modified":1638596115081},{"_id":"themes/butterfly/source/js/artitalk/index.js","hash":"956ff539fe6b5b80fde3a865ffff951883b3f582","modified":1638626379266},{"_id":"themes/butterfly/source/js/global/banf12.js","hash":"a698e8558667c4ecef8e82052432c406ee94f804","modified":1638673304690},{"_id":"themes/butterfly/source/js/global/chocolate.js","hash":"72b4d9cb0b323f007bdf8c50a1809aa2d19aefd8","modified":1638587812205},{"_id":"themes/butterfly/source/js/global/title.js","hash":"340c5687319ed11766386843861d91c94425725b","modified":1638617646589},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"54378d52d275e4ab84173bb02e17ea02ae46e55f","modified":1638528687956},{"_id":"themes/butterfly/source/js/global/footer-beautify-runtime.js","hash":"dad50792aa6a95d8a17a9d60e8100b104383d8c9","modified":1638548473724},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"a19f12257b14f70806a0c3cb0e9df1090f36e919","modified":1638528687955},{"_id":"themes/butterfly/source/live2d/js/mHide.js","hash":"9043cf2c3c80923deba752bdb7973ee68e869fd2","modified":1638593382369},{"_id":"themes/butterfly/source/live2d/css/live2d.css","hash":"b82c38f0a607d771a52837be4234ee7cbe2b946b","modified":1630145526039},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1638528687895},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"903d12250ce70713dd5b8ac7e1f7a20fe15eb815","modified":1638528687895},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"3ca9d9cdfd6e61df1d5b07de40f34349cda7a7c7","modified":1638528687895},{"_id":"themes/butterfly/source/live2d/js/message.js","hash":"3777a1b07340a3a014c24b493a93fac6e2b4bc30","modified":1533842451000},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"73c04d62055840545112dd12d73807835ca62347","modified":1638528687895},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1638528687896},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"d6556d5396eb0e10ea0ec10158779c21dc78f738","modified":1638528687897},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1638528687898},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1638528687896},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"3a2797d2744607ba6cdb5a02853851957c0f7e29","modified":1638528687898},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"4d52000cae1fce333329c382dac6c9a21ad0b195","modified":1638528687899},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"419807903e5586b8804b1f8f17cea97bd05f0b17","modified":1638528687899},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1638528687898},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1638528687900},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"7677911bd3f43edaf8230eea02f60a248eee9934","modified":1638528687899},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1638528687900},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1638528687901},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"95924d28d71b28769963529f82b376a9dc731fad","modified":1638528687902},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"f5ea1e10a169aeb98e42b19ac084c4eb27693b46","modified":1638528687902},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"9aa743b1f6fb7fafabee38f9204ce9c8f1be7f9a","modified":1638528687902},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"62dc2e683d56ddc9b588abc44dc1cfb778a2c68f","modified":1638528687903},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1638528687901},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"dcccb1425fabcf12a1bed955518b0e7b1054cab0","modified":1638528687901},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"6ec54b77e3a90e148e66e317e5bb6c89624fddca","modified":1638528687904},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"c762732e200ff2627bc046af5f170b3269343341","modified":1638528687904},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"bee06b3f01fa1f0d8fa08c154234b452da425101","modified":1638528687905},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4c3da5a89b4e6fd3ab527f5c6d27790359d57f71","modified":1638528687913},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"d06dafe7faf3a2e328ef62f26166a51ffe7a5579","modified":1638528687917},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"ad59dcce32e4e67066303a1ffd1dd95874d9953e","modified":1638528687918},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"2448b243ded58aa1d5fc22fd115e6d06b636f9fd","modified":1638528687918},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"4a2ea9fe59f1dc8cb4f4f6a28cf24a40fc300254","modified":1638528687920},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1638528687921},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"6c3449a44ae1a80f71dd4d9d6a85cec1781ceff1","modified":1638528687922},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"009bdbef23381f10664622fafdc602f2ff5bf1ec","modified":1638528687921},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1638528687922},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1638528687921},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1638528687922},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"0f1a5c356c1ffd47ff49e153226e2d670dc61057","modified":1638528687923},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"0b5c165664f9f8691551fc5ff435b40e7f73c737","modified":1638528687923},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1638528687923},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1638528687924},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"62adef7998fb9bebc5891a49472cfea944a1bf7a","modified":1638528687925},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1638528687925},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"e4c39101d7087066a86f7743985a53d6a246470b","modified":1638611792220},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"b0916c8c7d15b67b55cb1618be8370870fedbf42","modified":1638528687937},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"b74c61f6e15b422e9d2df23133552bbd1b5fe513","modified":1638528687937},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"4d71aab9082c67d3ee52ad58dfc3c1c9b41f2ab1","modified":1638528687939},{"_id":"themes/butterfly/source/live2d/model/xiaomai/13.jpg","hash":"ed57b8a15ebb813ddeee1c983ecfc02ce5f98158","modified":1528296720000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1638528687939},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1638528687938},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1638528687906},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4eebb2d94ca75809ef0cf32d70f13e9bf1e87091","modified":1638528687906},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"a18415004d03c0a1783eccac522fbcb6ce0ea1f1","modified":1638528687906},{"_id":"themes/butterfly/source/live2d/model/xiaomai/13.json","hash":"e0f4d3938a09a61919c136717eff2d2bf5f69cca","modified":1629955412276},{"_id":"themes/butterfly/source/live2d/model/xiaomai/physics.json","hash":"2bcda235e3e865e2aa4bc959fd9b890954fc6313","modified":1528296720000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"896dc0b7480151562c5717771e3000c5a7fc1b16","modified":1638528687907},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"eb2d840fa42de3ec7a7fda0eaa30246d52f543e2","modified":1638528687907},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1638528687908},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"f3db5c5e738e097a191dc0de59c61d3e1444f7c3","modified":1638528687907},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1638528687908},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1638528687908},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1638528687909},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1638528687908},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1638528687909},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"0bf6a47e804fb793b40f82690a24816b902edd41","modified":1638528687910},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"50126b2e841b01584b8b65b2f834038e3997b694","modified":1638528687910},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"d5f81fd5443a1b09efb165b5f4447a35949d14ad","modified":1638528687909},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0254203aae73e70b90dfce6ec4f9c9d3be9ac9f8","modified":1638528687910},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"d97403cdd58c759cfd1752dd85aa4a0f9b73dc46","modified":1638528687910},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1638528687912},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"afffc4ac8ce93d39dcc892bd518805cf33531244","modified":1638528687912},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"e877c98949873a62659db7501d19eb3d66650b51","modified":1638528687911},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"8290994cf1ee2faff60214ff245cf513fbbe94aa","modified":1638528687912},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"0bf1c53b914443c66be5077ff09cfc218f111e11","modified":1638528687913},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1c7e9fe86b7d7ef18cc876dfce19263fd4e73066","modified":1638528687912},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"266caf985dc0703ff81b871b8f8d206f57db6e79","modified":1638528687914},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1638528687913},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"87e40f0c315407ab88571a2b3450d640f15c96bc","modified":1638528687914},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"faf1113de12d6db0486572d7e99b03cbd0c4a896","modified":1638528687914},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"8890becd8220c57db2c7451409710942c103a7f4","modified":1638528687915},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"16cf05cf9649322da57e9b8d316573bb65f8d8d8","modified":1638528687915},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"767c38e3dfa0097b0dc1fdfd0df292c16f757d05","modified":1638528687916},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"a3d43cc360666b5b9730e8bb9e5c8fd940ae5b3d","modified":1638528687916},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0ad766ae491e6fcba2ef3d136a7af6158cd4153e","modified":1638528687915},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"1c06e60b120c946c1856904848ceba6ab58d1f82","modified":1638528687918},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"83103bad0db195bce095330c4a84e7529bbd40dd","modified":1638528687917},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1638528687919},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"fbcf94ecdca30bed7cfc4f4ec08b200579c2614e","modified":1638528687919},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1638528687919},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"fbac21a6c5924fb2f8d1190fd634105fdbc603d4","modified":1638528687920},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1638528687920},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"7e9a7347dd8ca4c33c564fb62512743b6012bb2d","modified":1638528687920},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_003.mtn","hash":"42735645d5113cbf520945fd98d67ff0f69f2c28","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_002.mtn","hash":"d738b7ef3ce30d998aea9f6a2df55eb6e4ebd63a","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_004.mtn","hash":"2165ac8f474156c6aba214413b27484997a831a1","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_001.mtn","hash":"3ea8ce850bcd12e3b70d563f5f01983da04e2c88","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_005.mtn","hash":"abd4d070f397dca34eac7495623d01faec8689ed","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_006.mtn","hash":"e63f017b0afdeb487f27dd845879922756a3dce2","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_007.mtn","hash":"a73d347500f92c4d3256bfc992fcdbd486e31753","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_008.mtn","hash":"a79dbf55063a9e8d1d51b20861ef2605abeb6cd2","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_010.mtn","hash":"635a373dc2f9bd898f4a1111c658c46738427080","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_012.mtn","hash":"15f0e4c7d449da5e5ca6fa8e66e4007ee47735e8","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_009.mtn","hash":"c679d3a24a9d080fbfd65cc18b5fac1244646f2a","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_011.mtn","hash":"f58df22e09c2f6a0f10ccf3cf91367a4ac86ee8c","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_015.mtn","hash":"b81230dfe08841b9976f5c195dcf25badafceb0d","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_013.mtn","hash":"760ece9652de0afbbf1a145f618b2bad9eee8b6c","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_014.mtn","hash":"061364191bdb3455ecdf24f13c270724a22d9a25","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_016.mtn","hash":"e002f3790cf44606d03639550172d0c9648edc4e","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_017.mtn","hash":"ba4821d95452cbec29f0184c8d334b713cffba8d","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_019.mtn","hash":"cc3e4f9627985a24f9d330643affc7c78e355255","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_018.mtn","hash":"b04e44cba2121a270e4d09a1cfeeca17ac6dccc7","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_020.mtn","hash":"7433179d73b2ef87b34041c8375dd629934519e2","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_022.mtn","hash":"8b381c98b19b6518a95a308c962445fda8b791fe","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_021.mtn","hash":"f748a570e827ae83c9e7069b8a89641190f94671","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_023.mtn","hash":"406db7a9810f9851a23a697d2e733c36a8ef8908","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_025.mtn","hash":"7e29074c31cbd90a4557c16e5adb5bfde520cc81","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_024.mtn","hash":"4d08399f6d93ca8be6b9d801e339a79800226f0f","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_028.mtn","hash":"5db764d1237adad7f4466dd0deb3a0a84a27bc2b","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_027.mtn","hash":"6273b8705201612e00400e918540e8d82d179ffd","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_026.mtn","hash":"f5aede132dcdb427a52bb142b31bcfc0de676ba1","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_029.mtn","hash":"3767e93ea353cb5a7bfe2dc6af892f9a32c91384","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_031.mtn","hash":"ff4ca94b6b454389081c26eaa1cc6f547d676a71","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_030.mtn","hash":"f53d8043cc98679c44f5d86123d12806381538b7","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_033.mtn","hash":"e9c4ffa6de9baf5e7e3e20cfc2c5e3601743148d","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_032.mtn","hash":"fddf62d048feee614e7340bdabfd7eab703eb99d","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/umaru_idle.mtn","hash":"b427a05c8d43a64dff8b834cae6db0808c7ec0a2","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/mtn/rita_Live2D_034.mtn","hash":"3f7effb825b1316023cba4adf67933df70222ed9","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/35.wav","hash":"cef00f59cc40e08e01f9be620bd4f0c7389da51c","modified":1528296720000},{"_id":"themes/butterfly/_config.yml","hash":"357b06c2365970425587447f198ee594b2854375","modified":1638595979726},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/01.wav","hash":"aa7b2d14b075fbd47e158d0962fdf3b153b31418","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/js/live2d.js","hash":"86dcec89139bf72a8be0a17feaeca631721ffee7","modified":1533842451000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/10.wav","hash":"1668085158c3098a07ccd8daf00764fa9849ad85","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/22.wav","hash":"747b5f2717187d8642cb5ad3bbcbf98f4453facd","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/umaru.moc","hash":"d6edc4ba69fdd1330d581d59afcd40b2a9f7e7b3","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/02.wav","hash":"263aed0dc3289fd1065965c72d825eda1049c2d8","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/11.wav","hash":"b9c911f06eb8c381b3a0b629d48fd4179047241e","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/12.wav","hash":"93c45c4aa99df702431517f5b3d904e6873a33f0","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/20.wav","hash":"44a352da2675c22928688eb43c2b737fd34ae8ce","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/17.wav","hash":"a469e48bd327ca858ce88c0e0e691ba82151e037","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/16.wav","hash":"6796c34aeaa15973b9b8248206b0053065751b8a","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/21.wav","hash":"7841ac27b286bf195744140deca00e0f042fc918","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/19.wav","hash":"40a31f2b7891c9fe968a4370a76cdc16d526998b","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/23.wav","hash":"dde55daf5956ef138f264101dd2adcfd163e0a89","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/24.wav","hash":"8c28f83b703509466c82a8eed6d2110c88b8c16d","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/26.wav","hash":"786e2ae0d53f35e21b6e34dc520d2126a2f3caa7","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/03.wav","hash":"aa032416917c421d7cd0727481c38cd303e013e5","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/05.wav","hash":"d7718a6d1051e7dce0a3a9ebcb9953c57b8fe41b","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/04.wav","hash":"37b40df665b71ee1a1f58df30ea664b3f670749b","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/06.wav","hash":"af6904e122cf8b3306c635031a40b63204bded03","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/09.wav","hash":"3d3d044a30aec9434396f764b0a9a2c829ee2360","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/13.wav","hash":"220eed2d434a053b151ce430326273a69011f13a","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/27.wav","hash":"2b27dc1ffa5b021a666b50d9190fa183de606d3e","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/25.wav","hash":"7453e824702b40f9143634494053caa683396c77","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/30.wav","hash":"33285e19499106b0333fc805596d45e6f06f5c52","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/32.wav","hash":"b06a13c7de1950f8ac17fd489fe9654fbad80d0d","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/31.wav","hash":"7a94c4e98759f3043da0c0137eeec525d69c3dfa","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/29.wav","hash":"17fcee577d3121fe2ab5c1b0a5fc274958708e6d","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/33.wav","hash":"cc4b904e8cefb021a996e0d2b4b7b3adb1049153","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/14.wav","hash":"8a43f0f9dc1ef73375f4c332a34b6736594dab4f","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/28.wav","hash":"fdecadad8f49df4b6c5fd1dc6954b751343add27","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/34.wav","hash":"d2efa8d70846e5641b406e6be07ca218336350e7","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/07.wav","hash":"497cf21a5a16a7130aaa62886f93173939279aca","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/08.wav","hash":"9d85ffee694f89f084705643e46b22abb6dca912","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/18.wav","hash":"7f9bc537afc280e6ca52f025c2ced3e1a2a50ed3","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/voice/15.wav","hash":"0ab8eadae9f6d03a8e08295c316dbf5d963164ca","modified":1528296720000},{"_id":"themes/butterfly/source/live2d/model/xiaomai/umaru2048/texture_00.png","hash":"1ff00d4ac2e68584be6a9e3be02468878942e9e7","modified":1528296720000},{"_id":"source/font/eyesblog.woff2","hash":"a8512c6d5d70f5fc098a58a01a0ad720aa211c2a","modified":1638585475713},{"_id":"source/font/eyesblog.ttf","hash":"a60d278a840e453ef97b33a53de9eed541872435","modified":1638585173594},{"_id":"source/font/萌神手写体.ttf","hash":"34d3c32b2162a358afe224b522321a16d497eb09","modified":1615901740965}],"Category":[{"name":"其他","_id":"ckwt958aj0004asda1l3teuir"},{"name":"PHP","_id":"ckwt958ap000basdabx721ocf"},{"name":"javascript","_id":"ckwt958b20010asdac9wpg8sz"},{"name":"脚本","_id":"ckwt958bf001wasda3a7rd84k"},{"name":"python","_id":"ckwt958bo002hasda1ognd3ol"},{"name":"sql","_id":"ckwt958c9004rasdaf4h9h4jc"},{"name":"java","_id":"ckwt958cc004zasdafs89a7ss"}],"Data":[],"Page":[{"title":"博客分类","type":"categories","top_img":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/cover/37.jpg","_content":"","source":"categories/index.md","raw":"---\ntitle: 博客分类\ntype: \"categories\"\ntop_img: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/cover/37.jpg\n---","date":"2021-12-03T14:02:03.669Z","updated":"2021-12-03T14:02:03.669Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckwt958ab0000asdahwl73t5z","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/cover/default2.jpg","excerpt":"","more":""},{"title":"视频","type":"video","aside":false,"_content":"\n<!DOCTYPE html>\n<html lang=\"th\">\n\n<head>\n    <style>\n    </style>\n</head>\n\n<body>\n    <div id=\"dplayer\"></div>\n</body>\n<script src=\"https://cdn.bootcdn.net/ajax/libs/hls.js/8.0.0-beta.3/hls.js\"></script>\n<script src=\"https://cdn.bootcdn.net/ajax/libs/dplayer/1.25.1/DPlayer.min.js\"></script>\n<script>\n    $(function () {\n        // 修改初始页面\n        $(\"#page-header\").css({\n            \"height\": \"70px\",\n            \"background\": \"none\"\n        });\n        $(\"#page-site-info\").css({\n            \"display\": \"none\",\n        });\n        $(\"#footer-wrap\").css(\"display\", \"none\");\n        $(\".dplayer-menu\").css(\"display\", \"none\");\n        $(\"body\").css({\n            \"overflow\": \"hidden\"\n        });\n        $(\"#nav a\").css({\n            \"color\": \"#9CBCD1\"\n        })\n    })\n\n    // 播放器设置\n    const dp = new DPlayer({\n        container: document.getElementById('dplayer'),\n        video: {\n            url: 'https://qqgame.gzc.svp.tencent-cloud.com/gzc_5684_1047_0bc3neazaaabwqacie5jdvqrm2iesbuqdeca.f0.mp4',\n        },\n    });\n</script>\n\n</html>","source":"video/index.html","raw":"---\ntitle: 视频\ntype: \"video\"\naside: false\n---\n\n<!DOCTYPE html>\n<html lang=\"th\">\n\n<head>\n    <style>\n    </style>\n</head>\n\n<body>\n    <div id=\"dplayer\"></div>\n</body>\n<script src=\"https://cdn.bootcdn.net/ajax/libs/hls.js/8.0.0-beta.3/hls.js\"></script>\n<script src=\"https://cdn.bootcdn.net/ajax/libs/dplayer/1.25.1/DPlayer.min.js\"></script>\n<script>\n    $(function () {\n        // 修改初始页面\n        $(\"#page-header\").css({\n            \"height\": \"70px\",\n            \"background\": \"none\"\n        });\n        $(\"#page-site-info\").css({\n            \"display\": \"none\",\n        });\n        $(\"#footer-wrap\").css(\"display\", \"none\");\n        $(\".dplayer-menu\").css(\"display\", \"none\");\n        $(\"body\").css({\n            \"overflow\": \"hidden\"\n        });\n        $(\"#nav a\").css({\n            \"color\": \"#9CBCD1\"\n        })\n    })\n\n    // 播放器设置\n    const dp = new DPlayer({\n        container: document.getElementById('dplayer'),\n        video: {\n            url: 'https://qqgame.gzc.svp.tencent-cloud.com/gzc_5684_1047_0bc3neazaaabwqacie5jdvqrm2iesbuqdeca.f0.mp4',\n        },\n    });\n</script>\n\n</html>","date":"2021-12-05T13:51:31.777Z","updated":"2021-12-05T13:51:31.777Z","path":"video/index.html","_id":"ckwt958ah0002asda7rga7wke","comments":1,"layout":"page","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n<!DOCTYPE html>\n<html lang=\"th\">\n\n<head>\n    <style>\n    </style>\n</head>\n\n<body>\n    <div id=\"dplayer\"></div>\n</body>\n<script src=\"https://cdn.bootcdn.net/ajax/libs/hls.js/8.0.0-beta.3/hls.js\"></script>\n<script src=\"https://cdn.bootcdn.net/ajax/libs/dplayer/1.25.1/DPlayer.min.js\"></script>\n<script>\n    $(function () {\n        // 修改初始页面\n        $(\"#page-header\").css({\n            \"height\": \"70px\",\n            \"background\": \"none\"\n        });\n        $(\"#page-site-info\").css({\n            \"display\": \"none\",\n        });\n        $(\"#footer-wrap\").css(\"display\", \"none\");\n        $(\".dplayer-menu\").css(\"display\", \"none\");\n        $(\"body\").css({\n            \"overflow\": \"hidden\"\n        });\n        $(\"#nav a\").css({\n            \"color\": \"#9CBCD1\"\n        })\n    })\n\n    // 播放器设置\n    const dp = new DPlayer({\n        container: document.getElementById('dplayer'),\n        video: {\n            url: 'https://qqgame.gzc.svp.tencent-cloud.com/gzc_5684_1047_0bc3neazaaabwqacie5jdvqrm2iesbuqdeca.f0.mp4',\n        },\n    });\n</script>\n\n</html>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/cover/default2.jpg","excerpt":"","more":"\n<!DOCTYPE html>\n<html lang=\"th\">\n\n<head>\n    <style>\n    </style>\n</head>\n\n<body>\n    <div id=\"dplayer\"></div>\n</body>\n<script src=\"https://cdn.bootcdn.net/ajax/libs/hls.js/8.0.0-beta.3/hls.js\"></script>\n<script src=\"https://cdn.bootcdn.net/ajax/libs/dplayer/1.25.1/DPlayer.min.js\"></script>\n<script>\n    $(function () {\n        // 修改初始页面\n        $(\"#page-header\").css({\n            \"height\": \"70px\",\n            \"background\": \"none\"\n        });\n        $(\"#page-site-info\").css({\n            \"display\": \"none\",\n        });\n        $(\"#footer-wrap\").css(\"display\", \"none\");\n        $(\".dplayer-menu\").css(\"display\", \"none\");\n        $(\"body\").css({\n            \"overflow\": \"hidden\"\n        });\n        $(\"#nav a\").css({\n            \"color\": \"#9CBCD1\"\n        })\n    })\n\n    // 播放器设置\n    const dp = new DPlayer({\n        container: document.getElementById('dplayer'),\n        video: {\n            url: 'https://qqgame.gzc.svp.tencent-cloud.com/gzc_5684_1047_0bc3neazaaabwqacie5jdvqrm2iesbuqdeca.f0.mp4',\n        },\n    });\n</script>\n\n</html>"},{"title":"音乐","type":"music","aside":false,"_content":"{% meting \"6936632013\" \"netease\" \"playlist\" %}\n\n<!DOCTYPE html>\n<html lang=\"th\">\n\n<head>\n    <style>\n    </style>\n</head>\n\n<body>\n\n</body>\n<script>\n    console.log(\"hello music\");\n    $(function () {\n        // 修改初始页面\n        $(\"#page-header\").css({\n            \"height\": \"70px\",\n            \"background\": \"none\"\n        });\n        $(\"#page-site-info\").css({\n            \"display\": \"none\",\n        });\n        $(\"#nav a\").css({\n            \"color\": \"#9CBCD1\"\n        })\n        $(\"#page\").css({\n            \"position\": \"fixed\",\n            \"top\": \"0\",\n            \"left\": \"0\",\n            \"height\": \"100%\",\n            \"width\": \"100%\",\n            \"background-image\": \"url('https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/song/芒种.png')\"\n        })\n        $(\"#footer-wrap\").css(\"display\", \"none\");\n\n        // 修改播放器\n        let clear1 = setInterval(() => {\n            if ($(\".aplayer\").length != 0) {\n                clearInterval(clear1);\n                // 删除组件\n                $(\".aplayer-icon.aplayer-icon-menu\").css(\"display\", \"none\");\n                $(\".aplayer-list\").css(\"display\", \"none\");\n                $(\".aplayer-icon.aplayer-icon-loop\").css(\"display\", \"none\");\n                $(\".aplayer-icon.aplayer-icon-order\").css(\"display\", \"none\");\n                $(\".aplayer.aplayer-withlist .aplayer-info\").css({\n                    \"border-bottom\": \"none\"\n                })\n                // 修改样式\n                $(\".aplayer .aplayer-info .aplayer-music .aplayer-author\").css({\n                    \"color\": \"#fff\"\n                })\n                $(\".aplayer .aplayer-lrc p\").css({\n                    \"color\": \"#fff\",\n                    \"font-size\": \"17px\"\n                });\n                $(\"#article-container\").css({\n                    \"overflow\": \"visible\",\n                })\n                $(\"#aplayer-dHveJhAh\").css({\n                    \"overflow\": \"visible\",\n                })\n                $(\".aplayer\").css({\n                    \"background\": \"none\",\n                    \"color\": \"#fff\"\n                })\n                $(\".aplayer-body\").css({\n                    \"position\": \"fixed\",\n                    \"bottom\": \"5%\",\n                    \"left\": \"10%\",\n                    \"width\": \"80%\"\n                });\n                $(\".aplayer-lrc\").css({\n                    \"position\": \"fixed\",\n                    \"top\": \"45%\",\n                    \"left\": \"50%\",\n                    \"transform\": \"translate(-50%, -50%)\",\n                    \"width\": \"80%\",\n                    \"height\": \"70%\",\n                });\n                $(\".aplayer-lrc-contents\").css({\n                    \"margin-top\": \"20%\"\n                })\n                $(\".aplayer-played\").css({\n                    \"background\": \"rgb(20, 214, 214)\"\n                })\n            }\n        }, 100)\n    })\n</script>\n\n</html>","source":"music/index.html","raw":"---\ntitle: 音乐\ntype: \"music\"\naside: false\n---\n{% meting \"6936632013\" \"netease\" \"playlist\" %}\n\n<!DOCTYPE html>\n<html lang=\"th\">\n\n<head>\n    <style>\n    </style>\n</head>\n\n<body>\n\n</body>\n<script>\n    console.log(\"hello music\");\n    $(function () {\n        // 修改初始页面\n        $(\"#page-header\").css({\n            \"height\": \"70px\",\n            \"background\": \"none\"\n        });\n        $(\"#page-site-info\").css({\n            \"display\": \"none\",\n        });\n        $(\"#nav a\").css({\n            \"color\": \"#9CBCD1\"\n        })\n        $(\"#page\").css({\n            \"position\": \"fixed\",\n            \"top\": \"0\",\n            \"left\": \"0\",\n            \"height\": \"100%\",\n            \"width\": \"100%\",\n            \"background-image\": \"url('https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/song/芒种.png')\"\n        })\n        $(\"#footer-wrap\").css(\"display\", \"none\");\n\n        // 修改播放器\n        let clear1 = setInterval(() => {\n            if ($(\".aplayer\").length != 0) {\n                clearInterval(clear1);\n                // 删除组件\n                $(\".aplayer-icon.aplayer-icon-menu\").css(\"display\", \"none\");\n                $(\".aplayer-list\").css(\"display\", \"none\");\n                $(\".aplayer-icon.aplayer-icon-loop\").css(\"display\", \"none\");\n                $(\".aplayer-icon.aplayer-icon-order\").css(\"display\", \"none\");\n                $(\".aplayer.aplayer-withlist .aplayer-info\").css({\n                    \"border-bottom\": \"none\"\n                })\n                // 修改样式\n                $(\".aplayer .aplayer-info .aplayer-music .aplayer-author\").css({\n                    \"color\": \"#fff\"\n                })\n                $(\".aplayer .aplayer-lrc p\").css({\n                    \"color\": \"#fff\",\n                    \"font-size\": \"17px\"\n                });\n                $(\"#article-container\").css({\n                    \"overflow\": \"visible\",\n                })\n                $(\"#aplayer-dHveJhAh\").css({\n                    \"overflow\": \"visible\",\n                })\n                $(\".aplayer\").css({\n                    \"background\": \"none\",\n                    \"color\": \"#fff\"\n                })\n                $(\".aplayer-body\").css({\n                    \"position\": \"fixed\",\n                    \"bottom\": \"5%\",\n                    \"left\": \"10%\",\n                    \"width\": \"80%\"\n                });\n                $(\".aplayer-lrc\").css({\n                    \"position\": \"fixed\",\n                    \"top\": \"45%\",\n                    \"left\": \"50%\",\n                    \"transform\": \"translate(-50%, -50%)\",\n                    \"width\": \"80%\",\n                    \"height\": \"70%\",\n                });\n                $(\".aplayer-lrc-contents\").css({\n                    \"margin-top\": \"20%\"\n                })\n                $(\".aplayer-played\").css({\n                    \"background\": \"rgb(20, 214, 214)\"\n                })\n            }\n        }, 100)\n    })\n</script>\n\n</html>","date":"2021-12-05T13:49:41.100Z","updated":"2021-12-05T13:49:41.100Z","path":"music/index.html","_id":"ckwt958am0006asda45695yoh","comments":1,"layout":"page","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-NLLlxGcD\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"6936632013\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"\n    ></div>\n\n<!DOCTYPE html>\n<html lang=\"th\">\n\n<head>\n    <style>\n    </style>\n</head>\n\n<body>\n\n</body>\n<script>\n    console.log(\"hello music\");\n    $(function () {\n        // 修改初始页面\n        $(\"#page-header\").css({\n            \"height\": \"70px\",\n            \"background\": \"none\"\n        });\n        $(\"#page-site-info\").css({\n            \"display\": \"none\",\n        });\n        $(\"#nav a\").css({\n            \"color\": \"#9CBCD1\"\n        })\n        $(\"#page\").css({\n            \"position\": \"fixed\",\n            \"top\": \"0\",\n            \"left\": \"0\",\n            \"height\": \"100%\",\n            \"width\": \"100%\",\n            \"background-image\": \"url('https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/song/芒种.png')\"\n        })\n        $(\"#footer-wrap\").css(\"display\", \"none\");\n\n        // 修改播放器\n        let clear1 = setInterval(() => {\n            if ($(\".aplayer\").length != 0) {\n                clearInterval(clear1);\n                // 删除组件\n                $(\".aplayer-icon.aplayer-icon-menu\").css(\"display\", \"none\");\n                $(\".aplayer-list\").css(\"display\", \"none\");\n                $(\".aplayer-icon.aplayer-icon-loop\").css(\"display\", \"none\");\n                $(\".aplayer-icon.aplayer-icon-order\").css(\"display\", \"none\");\n                $(\".aplayer.aplayer-withlist .aplayer-info\").css({\n                    \"border-bottom\": \"none\"\n                })\n                // 修改样式\n                $(\".aplayer .aplayer-info .aplayer-music .aplayer-author\").css({\n                    \"color\": \"#fff\"\n                })\n                $(\".aplayer .aplayer-lrc p\").css({\n                    \"color\": \"#fff\",\n                    \"font-size\": \"17px\"\n                });\n                $(\"#article-container\").css({\n                    \"overflow\": \"visible\",\n                })\n                $(\"#aplayer-dHveJhAh\").css({\n                    \"overflow\": \"visible\",\n                })\n                $(\".aplayer\").css({\n                    \"background\": \"none\",\n                    \"color\": \"#fff\"\n                })\n                $(\".aplayer-body\").css({\n                    \"position\": \"fixed\",\n                    \"bottom\": \"5%\",\n                    \"left\": \"10%\",\n                    \"width\": \"80%\"\n                });\n                $(\".aplayer-lrc\").css({\n                    \"position\": \"fixed\",\n                    \"top\": \"45%\",\n                    \"left\": \"50%\",\n                    \"transform\": \"translate(-50%, -50%)\",\n                    \"width\": \"80%\",\n                    \"height\": \"70%\",\n                });\n                $(\".aplayer-lrc-contents\").css({\n                    \"margin-top\": \"20%\"\n                })\n                $(\".aplayer-played\").css({\n                    \"background\": \"rgb(20, 214, 214)\"\n                })\n            }\n        }, 100)\n    })\n</script>\n\n</html>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/cover/default2.jpg","excerpt":"","more":"\n    <div id=\"aplayer-NLLlxGcD\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"6936632013\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"\n    ></div>\n\n<!DOCTYPE html>\n<html lang=\"th\">\n\n<head>\n    <style>\n    </style>\n</head>\n\n<body>\n\n</body>\n<script>\n    console.log(\"hello music\");\n    $(function () {\n        // 修改初始页面\n        $(\"#page-header\").css({\n            \"height\": \"70px\",\n            \"background\": \"none\"\n        });\n        $(\"#page-site-info\").css({\n            \"display\": \"none\",\n        });\n        $(\"#nav a\").css({\n            \"color\": \"#9CBCD1\"\n        })\n        $(\"#page\").css({\n            \"position\": \"fixed\",\n            \"top\": \"0\",\n            \"left\": \"0\",\n            \"height\": \"100%\",\n            \"width\": \"100%\",\n            \"background-image\": \"url('https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/song/芒种.png')\"\n        })\n        $(\"#footer-wrap\").css(\"display\", \"none\");\n\n        // 修改播放器\n        let clear1 = setInterval(() => {\n            if ($(\".aplayer\").length != 0) {\n                clearInterval(clear1);\n                // 删除组件\n                $(\".aplayer-icon.aplayer-icon-menu\").css(\"display\", \"none\");\n                $(\".aplayer-list\").css(\"display\", \"none\");\n                $(\".aplayer-icon.aplayer-icon-loop\").css(\"display\", \"none\");\n                $(\".aplayer-icon.aplayer-icon-order\").css(\"display\", \"none\");\n                $(\".aplayer.aplayer-withlist .aplayer-info\").css({\n                    \"border-bottom\": \"none\"\n                })\n                // 修改样式\n                $(\".aplayer .aplayer-info .aplayer-music .aplayer-author\").css({\n                    \"color\": \"#fff\"\n                })\n                $(\".aplayer .aplayer-lrc p\").css({\n                    \"color\": \"#fff\",\n                    \"font-size\": \"17px\"\n                });\n                $(\"#article-container\").css({\n                    \"overflow\": \"visible\",\n                })\n                $(\"#aplayer-dHveJhAh\").css({\n                    \"overflow\": \"visible\",\n                })\n                $(\".aplayer\").css({\n                    \"background\": \"none\",\n                    \"color\": \"#fff\"\n                })\n                $(\".aplayer-body\").css({\n                    \"position\": \"fixed\",\n                    \"bottom\": \"5%\",\n                    \"left\": \"10%\",\n                    \"width\": \"80%\"\n                });\n                $(\".aplayer-lrc\").css({\n                    \"position\": \"fixed\",\n                    \"top\": \"45%\",\n                    \"left\": \"50%\",\n                    \"transform\": \"translate(-50%, -50%)\",\n                    \"width\": \"80%\",\n                    \"height\": \"70%\",\n                });\n                $(\".aplayer-lrc-contents\").css({\n                    \"margin-top\": \"20%\"\n                })\n                $(\".aplayer-played\").css({\n                    \"background\": \"rgb(20, 214, 214)\"\n                })\n            }\n        }, 100)\n    })\n</script>\n\n</html>"},{"title":"标签","type":"tags","top_img":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/cover/71.jpg","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ntype: \"tags\"\ntop_img: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/cover/71.jpg\n---\n","date":"2021-12-03T14:02:14.878Z","updated":"2021-12-03T14:02:14.878Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckwt958an0008asda7pfkahm5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/cover/default2.jpg","excerpt":"","more":""}],"Post":[{"title":"利用smtp协议实现命令行发送邮件","date":"2021-05-31T07:44:07.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/25.jpg","_content":"\n事实上只要知道邮件准确服务器的地址，即使没有邮箱也能给它发邮件，这里使用smtp协议演示使用电脑黑框发邮件。\n先介绍一下smtp协议，smtp协议是简单邮件传输协议，在本例中相当于中转服务器。\n\n## 任务\n用黑框给eyes7927@163.com发送邮件。\n## 思路\n   1. 找到这个email储存邮件的准确服务器\n   2. 连接该服务器，用smtp协议与之对话 \n## 步骤\n先找到这个email储存邮件的准确服务器，使用nslookup命令，nslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。\n\n这个指令是查询网页服务器地址，而不是邮箱服务器地址，故错误。\n```powershell\nnslookup 163.com\n```\n\n![展示](https://img-blog.csdnimg.cn/20210531143925418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)以下是正确指令：\n\n```powershell\nnslookup -q=mx 163.com\n```\n\n![展示](https://img-blog.csdnimg.cn/20210531144106280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)上面四个地址都是邮箱服务器地址，任选一个使用，以第一个为例。\n\n```powershell\n163mx01.mxmail.netease.com\n```\n\n使用telnet远程连接该邮箱服务器(25是端口号)：\n\n```powershell\ntelnet 163mx01.mxmail.netease.com 25\n```\n![展示](https://img-blog.csdnimg.cn/20210531144832617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)连接成功后出现下列现象\n![展示](https://img-blog.csdnimg.cn/20210531144330216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)用helo打个招呼，注意是helo不是hello\n![展示](https://img-blog.csdnimg.cn/20210531145140753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)以下为发送邮件的详细步骤，由于我在尝试发邮件时连接不稳定多次与163邮箱服务器断开连接，便以燕十八老师的成功案例截图，并加上注释。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210531152645388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210531152721951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 总结：\n个人认为这种方法了解就好，因为与服务器连接时很容易断开连接，用这种方法发邮件十分耗耐心。\n如果确实有发邮件相关的开发需要的话，可以看看我的另一篇博客：[使用PHPMailer-master发邮件](https://blog.csdn.net/tongkongyu/article/details/117414108?spm=1001.2014.3001.5501)，这种方法可以给任何邮箱发邮件，有兴趣的话还可以看看这一篇：[使用PHP的mail()函数发邮件](https://blog.csdn.net/tongkongyu/article/details/117427268?spm=1001.2014.3001.5501)，不过这篇博客里的方法如果要给任何邮箱发邮件的话需要一台匿名的邮箱服务器。\n\n","source":"_posts/other/smtp发邮件.md","raw":"---\ntitle: 利用smtp协议实现命令行发送邮件\ndate: 2021-05-31 15:44:07\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/25.jpg\ntags: \n  - smtp协议\n  - 命令行\n  - 邮件\ncategories: 其他\n---\n\n事实上只要知道邮件准确服务器的地址，即使没有邮箱也能给它发邮件，这里使用smtp协议演示使用电脑黑框发邮件。\n先介绍一下smtp协议，smtp协议是简单邮件传输协议，在本例中相当于中转服务器。\n\n## 任务\n用黑框给eyes7927@163.com发送邮件。\n## 思路\n   1. 找到这个email储存邮件的准确服务器\n   2. 连接该服务器，用smtp协议与之对话 \n## 步骤\n先找到这个email储存邮件的准确服务器，使用nslookup命令，nslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。\n\n这个指令是查询网页服务器地址，而不是邮箱服务器地址，故错误。\n```powershell\nnslookup 163.com\n```\n\n![展示](https://img-blog.csdnimg.cn/20210531143925418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)以下是正确指令：\n\n```powershell\nnslookup -q=mx 163.com\n```\n\n![展示](https://img-blog.csdnimg.cn/20210531144106280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)上面四个地址都是邮箱服务器地址，任选一个使用，以第一个为例。\n\n```powershell\n163mx01.mxmail.netease.com\n```\n\n使用telnet远程连接该邮箱服务器(25是端口号)：\n\n```powershell\ntelnet 163mx01.mxmail.netease.com 25\n```\n![展示](https://img-blog.csdnimg.cn/20210531144832617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)连接成功后出现下列现象\n![展示](https://img-blog.csdnimg.cn/20210531144330216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)用helo打个招呼，注意是helo不是hello\n![展示](https://img-blog.csdnimg.cn/20210531145140753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)以下为发送邮件的详细步骤，由于我在尝试发邮件时连接不稳定多次与163邮箱服务器断开连接，便以燕十八老师的成功案例截图，并加上注释。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210531152645388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210531152721951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 总结：\n个人认为这种方法了解就好，因为与服务器连接时很容易断开连接，用这种方法发邮件十分耗耐心。\n如果确实有发邮件相关的开发需要的话，可以看看我的另一篇博客：[使用PHPMailer-master发邮件](https://blog.csdn.net/tongkongyu/article/details/117414108?spm=1001.2014.3001.5501)，这种方法可以给任何邮箱发邮件，有兴趣的话还可以看看这一篇：[使用PHP的mail()函数发邮件](https://blog.csdn.net/tongkongyu/article/details/117427268?spm=1001.2014.3001.5501)，不过这篇博客里的方法如果要给任何邮箱发邮件的话需要一台匿名的邮箱服务器。\n\n","slug":"other/smtp发邮件","published":1,"updated":"2021-12-03T14:58:18.026Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958ae0001asda876h176f","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>事实上只要知道邮件准确服务器的地址，即使没有邮箱也能给它发邮件，这里使用smtp协议演示使用电脑黑框发邮件。<br>先介绍一下smtp协议，smtp协议是简单邮件传输协议，在本例中相当于中转服务器。</p>\n<h2 id=\"任务\"><a href=\"#任务\" class=\"headerlink\" title=\"任务\"></a>任务</h2><p>用黑框给<a href=\"mailto:&#x65;&#x79;&#x65;&#x73;&#55;&#57;&#50;&#55;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#x6f;&#109;\">&#x65;&#x79;&#x65;&#x73;&#55;&#57;&#50;&#55;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#x6f;&#109;</a>发送邮件。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><ol>\n<li>找到这个email储存邮件的准确服务器</li>\n<li>连接该服务器，用smtp协议与之对话 <h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2>先找到这个email储存邮件的准确服务器，使用nslookup命令，nslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。</li>\n</ol>\n<p>这个指令是查询网页服务器地址，而不是邮箱服务器地址，故错误。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nslookup <span class=\"number\">163</span>.com</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20210531143925418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">以下是正确指令：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nslookup <span class=\"literal\">-q</span>=mx <span class=\"number\">163</span>.com</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20210531144106280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">上面四个地址都是邮箱服务器地址，任选一个使用，以第一个为例。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">163</span>mx01.mxmail.netease.com</span><br></pre></td></tr></table></figure>\n\n<p>使用telnet远程连接该邮箱服务器(25是端口号)：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet <span class=\"number\">163</span>mx01.mxmail.netease.com <span class=\"number\">25</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210531144832617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">连接成功后出现下列现象<br><img src=\"https://img-blog.csdnimg.cn/20210531144330216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">用helo打个招呼，注意是helo不是hello<br><img src=\"https://img-blog.csdnimg.cn/20210531145140753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">以下为发送邮件的详细步骤，由于我在尝试发邮件时连接不稳定多次与163邮箱服务器断开连接，便以燕十八老师的成功案例截图，并加上注释。<br><img src=\"https://img-blog.csdnimg.cn/20210531152645388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/20210531152721951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><p>个人认为这种方法了解就好，因为与服务器连接时很容易断开连接，用这种方法发邮件十分耗耐心。<br>如果确实有发邮件相关的开发需要的话，可以看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117414108?spm=1001.2014.3001.5501\">使用PHPMailer-master发邮件</a>，这种方法可以给任何邮箱发邮件，有兴趣的话还可以看看这一篇：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117427268?spm=1001.2014.3001.5501\">使用PHP的mail()函数发邮件</a>，不过这篇博客里的方法如果要给任何邮箱发邮件的话需要一台匿名的邮箱服务器。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>事实上只要知道邮件准确服务器的地址，即使没有邮箱也能给它发邮件，这里使用smtp协议演示使用电脑黑框发邮件。<br>先介绍一下smtp协议，smtp协议是简单邮件传输协议，在本例中相当于中转服务器。</p>\n<h2 id=\"任务\"><a href=\"#任务\" class=\"headerlink\" title=\"任务\"></a>任务</h2><p>用黑框给<a href=\"mailto:&#x65;&#x79;&#x65;&#x73;&#55;&#57;&#50;&#55;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#x6f;&#109;\">&#x65;&#x79;&#x65;&#x73;&#55;&#57;&#50;&#55;&#x40;&#49;&#x36;&#51;&#46;&#x63;&#x6f;&#109;</a>发送邮件。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><ol>\n<li>找到这个email储存邮件的准确服务器</li>\n<li>连接该服务器，用smtp协议与之对话 <h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2>先找到这个email储存邮件的准确服务器，使用nslookup命令，nslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。</li>\n</ol>\n<p>这个指令是查询网页服务器地址，而不是邮箱服务器地址，故错误。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nslookup <span class=\"number\">163</span>.com</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20210531143925418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">以下是正确指令：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nslookup <span class=\"literal\">-q</span>=mx <span class=\"number\">163</span>.com</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20210531144106280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">上面四个地址都是邮箱服务器地址，任选一个使用，以第一个为例。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">163</span>mx01.mxmail.netease.com</span><br></pre></td></tr></table></figure>\n\n<p>使用telnet远程连接该邮箱服务器(25是端口号)：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet <span class=\"number\">163</span>mx01.mxmail.netease.com <span class=\"number\">25</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210531144832617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">连接成功后出现下列现象<br><img src=\"https://img-blog.csdnimg.cn/20210531144330216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">用helo打个招呼，注意是helo不是hello<br><img src=\"https://img-blog.csdnimg.cn/20210531145140753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">以下为发送邮件的详细步骤，由于我在尝试发邮件时连接不稳定多次与163邮箱服务器断开连接，便以燕十八老师的成功案例截图，并加上注释。<br><img src=\"https://img-blog.csdnimg.cn/20210531152645388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/20210531152721951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><p>个人认为这种方法了解就好，因为与服务器连接时很容易断开连接，用这种方法发邮件十分耗耐心。<br>如果确实有发邮件相关的开发需要的话，可以看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117414108?spm=1001.2014.3001.5501\">使用PHPMailer-master发邮件</a>，这种方法可以给任何邮箱发邮件，有兴趣的话还可以看看这一篇：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117427268?spm=1001.2014.3001.5501\">使用PHP的mail()函数发邮件</a>，不过这篇博客里的方法如果要给任何邮箱发邮件的话需要一台匿名的邮箱服务器。</p>\n"},{"title":"GD图像处理——缩略图的实现","date":"2021-07-28T16:28:00.000Z","updated":"2021-07-28T16:28:00.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/68.jpg","_content":"\n对PHP的GD库不熟悉的话可以先看看我的另一篇博客：[PHP之GD图像处理](https://blog.csdn.net/tongkongyu/article/details/119154930)\n\n**制作图片缩略图的原理**\n缩略图：通过原图得到一个较小的图（尺寸上）\n缩略图原理：将原图打开，然后放到另一个较小的图片资源中，最后进行保存。\n\n**实现固定宽高的缩略图**\na. 得到一张原图资源\nb. 得到一个缩略图资源（较小）\nc. 图片采样复制：GD提供了一个函数\nd. 保存缩略图\ne. 销毁所有资源（原图和缩略图）\n\n实际开发中，一般在上传图片时就需要对图片进行压缩操作，想要压缩图片可以使用 imagecopyresized() 或者 imagecopyresampled() 函数，这两个函数都可以将一幅图像中的一块矩形区域拷贝到另一个图像中，而 imagecopyresampled() 函数更是可以平滑地插入像素值，因此，在减小了图像的大小的同时仍然保持极大的清晰度，所以在进行图片压缩时可以优先使用 imagecopyresampled() 函数。\n\n```php\nimagecopyresized($dst_image, $src_image, $dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h);\n\nimagecopyresampled($dst_image, $src_image, $dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h);\n```\n两个函数的参数是完全一样的，说明如下：\n+ $dst_image：目标图象连接资源。\n+ $src_image：源图象连接资源。\n+ $dst_x：目标 X 坐标点。\n+ $dst_y：目标 Y 坐标点。\n+ $src_x：源的 X 坐标点。\n+ $src_y：源的 Y 坐标点。\n+ $dst_w：目标宽度。\n+ $dst_h：目标高度。\n+ $src_w：源图象的宽度。\n+ $src_h：源图象的高度。\n\n```php\n<?php\n\n// 制作固定尺寸缩略图：按照缩略图要求的大小制作，不管原图比例（可能失真）\n\n// 得到原图资源\n$src_image = 'https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif';\n$src = imagecreatefromgif($src_image);\n\n// 制作缩略图资源\n$dst = imagecreatetruecolor(100, 100);\n\n// 采样复制\nimagecopyresampled($dst, $src, 0, 0, 0, 0, 100, 100, imagesx($src), imagesy($src));\n\n// 保存缩略图\nheader('Content-type:image/png');\nimagepng($dst, 'dst.png');\nheader('Content-type:image/jpeg');\nimagepng($dst, 'dst.jpg');\n\n// 销毁资源\nimagedestroy($src);\nimagedestroy($dst);\n```\n\n![展示](https://img-blog.csdnimg.cn/3469c29f054d4fc4b73d2105c0c1bbf9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n但是我经过比对发现，这样做出来的缩略图体积不一定会小，由下图可见，原图是128*128px, 缩略图是100*100px，但生成的缩略图比原图还大好几倍，而且jpg格式和png格式大小一样，本人查询各类资料都没找到合理的解释，如果有大佬知道的话还请在留言区指点指点。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/593e2b9e7b8344b7a0fa4dd8986357f8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**实现等比例缩放的固定宽或高**\n优点：图片不会失真(变形)\n缺点：缩略图有些部分需要进行额外填充(白色填充：补白)\n\n等比例缩略图与固定缩略图的制作区别：在于需要通过计算来得出缩略图的宽和高\n算法原理：\n1. 计算缩略图宽高比\n2. 计算原图宽高比\n3. 比较：\n      如果缩略图宽高比大于原图宽高比，将缩略图中用原图的高尽可能填满：缩略图的高是完整的，宽度不够(补白)\n      如果缩略图宽高比小于原图宽高比，将缩略图中用原图的宽尽可能填满：缩略图的宽是完整的，高度不够(补白)\n\n```php\n<?php\n// 获得原图资源\n$src_image = 'https://www.runoob.com/images/pulpit.jpg';\n\n// 获得图片信息\n$src_info = getimagesize($src_image);\n\n// 创建画布资源\n$src = imagecreatefromjpeg($src_image);\n\n// 制作缩略图资源\n$dst = imagecreatetruecolor(100, 100);\n\n// 填充背景色\n$dst_color = imagecolorallocate($dst, 255, 255, 255);\nimagefill($dst, 0, 0, $dst_color);\n\n// 计算缩略图从原图采样的宽和高(缩略图到底是宽还是高被填满)\n$thumb_b = 100 / 100;\n$src_b = $src_info[0] / $src_info[1];\n\n// 声明缩略图宽高\n$thumb_x = $thumb_y = 0;  // 宽高\n$start_x = $start_y = 0;  // 起始位置\n\n// 比较缩略图和原图的宽高比\nif($thumb_b >= $src_b){\n    $thumb_y = 100;\n    $thumb_x = floor($thumb_y * $src_b);\n    $start_x = floor((100 - $thumb_x) / 2);\n} else{\n    $thumb_x = 100;\n    $thumb_y = floor($thumb_x / $src_b);\n    $start_y = floor((100 - $thumb_y) / 2);\n}\n\n// 采样复制\nimagecopyresampled($dst, $src, $start_x, $start_y, 0, 0, $thumb_x, $thumb_y, $src_info[0], $src_info[1]);\n\n// 保存缩略图\nheader('Content-type:image/png');\nimagepng($dst, 'dst.png');\n\n// 销毁资源\nimagedestroy($src);\nimagedestroy($dst);\n```\n\n![展示](https://img-blog.csdnimg.cn/7c10bfa131aa4c4c95263e45cb4c2e01.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n函数封装：\n\n```php\n<?php\n\n/*\n * @param  $file   要缩放的图片路径\n * @param  $width  缩放后的宽度\n * @param  $height 缩放后的高度\n * @param  $eq     是否等比缩放\n * @return [type]\n */\n\n// 函数封装\nfunction compress($file,$width,$height='',$eq=true){\n    $img_info = getimagesize($file);\n    switch ($img_info[2])\n    {\n        case 1:\n            $image = imagecreatefromgif($file);\n            break;\n        case 2:\n            $image = imagecreatefromjpeg($file);\n            break;\n        case 3:\n            $image = imagecreatefrompng($file);\n            break;\n        default:\n            die(\"暂不支持压缩该类型图片\");\n    }\n    if($eq) $height = $img_info[1]*($width/$img_info[0]);\n    $com_image = imagecreatetruecolor($width, $height);\n    imagecopyresampled($com_image, $image, 0, 0, 0, 0, $width, $height, $img_info[0], $img_info[1]);\n    header('Content-type:image/jpeg');\n    imagejpeg($com_image);\n    imagedestroy($com_image);\n}\n\n// 调用函数\n$file = 'https://www.runoob.com/images/pulpit.jpg';\ncompress($file,300);\n```\n![展示](https://img-blog.csdnimg.cn/7228ef3fef714233a93b6a35deca712e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n有兴趣的话还可以看看我的另外相关博客：\n[GD图像处理——验证码处理](https://blog.csdn.net/tongkongyu/article/details/119154877)\n[GD图像处理——水印图实现](https://blog.csdn.net/tongkongyu/article/details/119154901)\n","source":"_posts/PHP/GD缩略图.md","raw":"---\ntitle: GD图像处理——缩略图的实现\ndate: 2021-07-29 00:28:00\nupdated: 2021-07-29 00:28:00\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/68.jpg\ntags: \n  - GD库\n  - 缩略图\ncategories: PHP\n---\n\n对PHP的GD库不熟悉的话可以先看看我的另一篇博客：[PHP之GD图像处理](https://blog.csdn.net/tongkongyu/article/details/119154930)\n\n**制作图片缩略图的原理**\n缩略图：通过原图得到一个较小的图（尺寸上）\n缩略图原理：将原图打开，然后放到另一个较小的图片资源中，最后进行保存。\n\n**实现固定宽高的缩略图**\na. 得到一张原图资源\nb. 得到一个缩略图资源（较小）\nc. 图片采样复制：GD提供了一个函数\nd. 保存缩略图\ne. 销毁所有资源（原图和缩略图）\n\n实际开发中，一般在上传图片时就需要对图片进行压缩操作，想要压缩图片可以使用 imagecopyresized() 或者 imagecopyresampled() 函数，这两个函数都可以将一幅图像中的一块矩形区域拷贝到另一个图像中，而 imagecopyresampled() 函数更是可以平滑地插入像素值，因此，在减小了图像的大小的同时仍然保持极大的清晰度，所以在进行图片压缩时可以优先使用 imagecopyresampled() 函数。\n\n```php\nimagecopyresized($dst_image, $src_image, $dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h);\n\nimagecopyresampled($dst_image, $src_image, $dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h);\n```\n两个函数的参数是完全一样的，说明如下：\n+ $dst_image：目标图象连接资源。\n+ $src_image：源图象连接资源。\n+ $dst_x：目标 X 坐标点。\n+ $dst_y：目标 Y 坐标点。\n+ $src_x：源的 X 坐标点。\n+ $src_y：源的 Y 坐标点。\n+ $dst_w：目标宽度。\n+ $dst_h：目标高度。\n+ $src_w：源图象的宽度。\n+ $src_h：源图象的高度。\n\n```php\n<?php\n\n// 制作固定尺寸缩略图：按照缩略图要求的大小制作，不管原图比例（可能失真）\n\n// 得到原图资源\n$src_image = 'https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif';\n$src = imagecreatefromgif($src_image);\n\n// 制作缩略图资源\n$dst = imagecreatetruecolor(100, 100);\n\n// 采样复制\nimagecopyresampled($dst, $src, 0, 0, 0, 0, 100, 100, imagesx($src), imagesy($src));\n\n// 保存缩略图\nheader('Content-type:image/png');\nimagepng($dst, 'dst.png');\nheader('Content-type:image/jpeg');\nimagepng($dst, 'dst.jpg');\n\n// 销毁资源\nimagedestroy($src);\nimagedestroy($dst);\n```\n\n![展示](https://img-blog.csdnimg.cn/3469c29f054d4fc4b73d2105c0c1bbf9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n但是我经过比对发现，这样做出来的缩略图体积不一定会小，由下图可见，原图是128*128px, 缩略图是100*100px，但生成的缩略图比原图还大好几倍，而且jpg格式和png格式大小一样，本人查询各类资料都没找到合理的解释，如果有大佬知道的话还请在留言区指点指点。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/593e2b9e7b8344b7a0fa4dd8986357f8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**实现等比例缩放的固定宽或高**\n优点：图片不会失真(变形)\n缺点：缩略图有些部分需要进行额外填充(白色填充：补白)\n\n等比例缩略图与固定缩略图的制作区别：在于需要通过计算来得出缩略图的宽和高\n算法原理：\n1. 计算缩略图宽高比\n2. 计算原图宽高比\n3. 比较：\n      如果缩略图宽高比大于原图宽高比，将缩略图中用原图的高尽可能填满：缩略图的高是完整的，宽度不够(补白)\n      如果缩略图宽高比小于原图宽高比，将缩略图中用原图的宽尽可能填满：缩略图的宽是完整的，高度不够(补白)\n\n```php\n<?php\n// 获得原图资源\n$src_image = 'https://www.runoob.com/images/pulpit.jpg';\n\n// 获得图片信息\n$src_info = getimagesize($src_image);\n\n// 创建画布资源\n$src = imagecreatefromjpeg($src_image);\n\n// 制作缩略图资源\n$dst = imagecreatetruecolor(100, 100);\n\n// 填充背景色\n$dst_color = imagecolorallocate($dst, 255, 255, 255);\nimagefill($dst, 0, 0, $dst_color);\n\n// 计算缩略图从原图采样的宽和高(缩略图到底是宽还是高被填满)\n$thumb_b = 100 / 100;\n$src_b = $src_info[0] / $src_info[1];\n\n// 声明缩略图宽高\n$thumb_x = $thumb_y = 0;  // 宽高\n$start_x = $start_y = 0;  // 起始位置\n\n// 比较缩略图和原图的宽高比\nif($thumb_b >= $src_b){\n    $thumb_y = 100;\n    $thumb_x = floor($thumb_y * $src_b);\n    $start_x = floor((100 - $thumb_x) / 2);\n} else{\n    $thumb_x = 100;\n    $thumb_y = floor($thumb_x / $src_b);\n    $start_y = floor((100 - $thumb_y) / 2);\n}\n\n// 采样复制\nimagecopyresampled($dst, $src, $start_x, $start_y, 0, 0, $thumb_x, $thumb_y, $src_info[0], $src_info[1]);\n\n// 保存缩略图\nheader('Content-type:image/png');\nimagepng($dst, 'dst.png');\n\n// 销毁资源\nimagedestroy($src);\nimagedestroy($dst);\n```\n\n![展示](https://img-blog.csdnimg.cn/7c10bfa131aa4c4c95263e45cb4c2e01.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n函数封装：\n\n```php\n<?php\n\n/*\n * @param  $file   要缩放的图片路径\n * @param  $width  缩放后的宽度\n * @param  $height 缩放后的高度\n * @param  $eq     是否等比缩放\n * @return [type]\n */\n\n// 函数封装\nfunction compress($file,$width,$height='',$eq=true){\n    $img_info = getimagesize($file);\n    switch ($img_info[2])\n    {\n        case 1:\n            $image = imagecreatefromgif($file);\n            break;\n        case 2:\n            $image = imagecreatefromjpeg($file);\n            break;\n        case 3:\n            $image = imagecreatefrompng($file);\n            break;\n        default:\n            die(\"暂不支持压缩该类型图片\");\n    }\n    if($eq) $height = $img_info[1]*($width/$img_info[0]);\n    $com_image = imagecreatetruecolor($width, $height);\n    imagecopyresampled($com_image, $image, 0, 0, 0, 0, $width, $height, $img_info[0], $img_info[1]);\n    header('Content-type:image/jpeg');\n    imagejpeg($com_image);\n    imagedestroy($com_image);\n}\n\n// 调用函数\n$file = 'https://www.runoob.com/images/pulpit.jpg';\ncompress($file,300);\n```\n![展示](https://img-blog.csdnimg.cn/7228ef3fef714233a93b6a35deca712e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n有兴趣的话还可以看看我的另外相关博客：\n[GD图像处理——验证码处理](https://blog.csdn.net/tongkongyu/article/details/119154877)\n[GD图像处理——水印图实现](https://blog.csdn.net/tongkongyu/article/details/119154901)\n","slug":"PHP/GD缩略图","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958ah0003asdadh9696b7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>对PHP的GD库不熟悉的话可以先看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/119154930\">PHP之GD图像处理</a></p>\n<p><strong>制作图片缩略图的原理</strong><br>缩略图：通过原图得到一个较小的图（尺寸上）<br>缩略图原理：将原图打开，然后放到另一个较小的图片资源中，最后进行保存。</p>\n<p><strong>实现固定宽高的缩略图</strong><br>a. 得到一张原图资源<br>b. 得到一个缩略图资源（较小）<br>c. 图片采样复制：GD提供了一个函数<br>d. 保存缩略图<br>e. 销毁所有资源（原图和缩略图）</p>\n<p>实际开发中，一般在上传图片时就需要对图片进行压缩操作，想要压缩图片可以使用 imagecopyresized() 或者 imagecopyresampled() 函数，这两个函数都可以将一幅图像中的一块矩形区域拷贝到另一个图像中，而 imagecopyresampled() 函数更是可以平滑地插入像素值，因此，在减小了图像的大小的同时仍然保持极大的清晰度，所以在进行图片压缩时可以优先使用 imagecopyresampled() 函数。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagecopyresized(<span class=\"variable\">$dst_image</span>, <span class=\"variable\">$src_image</span>, <span class=\"variable\">$dst_x</span>, <span class=\"variable\">$dst_y</span>, <span class=\"variable\">$src_x</span>, <span class=\"variable\">$src_y</span>, <span class=\"variable\">$dst_w</span>, <span class=\"variable\">$dst_h</span>, <span class=\"variable\">$src_w</span>, <span class=\"variable\">$src_h</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagecopyresampled(<span class=\"variable\">$dst_image</span>, <span class=\"variable\">$src_image</span>, <span class=\"variable\">$dst_x</span>, <span class=\"variable\">$dst_y</span>, <span class=\"variable\">$src_x</span>, <span class=\"variable\">$src_y</span>, <span class=\"variable\">$dst_w</span>, <span class=\"variable\">$dst_h</span>, <span class=\"variable\">$src_w</span>, <span class=\"variable\">$src_h</span>);</span><br></pre></td></tr></table></figure>\n<p>两个函数的参数是完全一样的，说明如下：</p>\n<ul>\n<li>$dst_image：目标图象连接资源。</li>\n<li>$src_image：源图象连接资源。</li>\n<li>$dst_x：目标 X 坐标点。</li>\n<li>$dst_y：目标 Y 坐标点。</li>\n<li>$src_x：源的 X 坐标点。</li>\n<li>$src_y：源的 Y 坐标点。</li>\n<li>$dst_w：目标宽度。</li>\n<li>$dst_h：目标高度。</li>\n<li>$src_w：源图象的宽度。</li>\n<li>$src_h：源图象的高度。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 制作固定尺寸缩略图：按照缩略图要求的大小制作，不管原图比例（可能失真）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 得到原图资源</span></span><br><span class=\"line\"><span class=\"variable\">$src_image</span> = <span class=\"string\">&#x27;https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$src</span> = imagecreatefromgif(<span class=\"variable\">$src_image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 制作缩略图资源</span></span><br><span class=\"line\"><span class=\"variable\">$dst</span> = imagecreatetruecolor(<span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 采样复制</span></span><br><span class=\"line\">imagecopyresampled(<span class=\"variable\">$dst</span>, <span class=\"variable\">$src</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>, imagesx(<span class=\"variable\">$src</span>), imagesy(<span class=\"variable\">$src</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 保存缩略图</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/png&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$dst</span>, <span class=\"string\">&#x27;dst.png&#x27;</span>);</span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$dst</span>, <span class=\"string\">&#x27;dst.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 销毁资源</span></span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$src</span>);</span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$dst</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/3469c29f054d4fc4b73d2105c0c1bbf9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>但是我经过比对发现，这样做出来的缩略图体积不一定会小，由下图可见，原图是128<em>128px, 缩略图是100</em>100px，但生成的缩略图比原图还大好几倍，而且jpg格式和png格式大小一样，本人查询各类资料都没找到合理的解释，如果有大佬知道的话还请在留言区指点指点。<br><img src=\"https://img-blog.csdnimg.cn/593e2b9e7b8344b7a0fa4dd8986357f8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>实现等比例缩放的固定宽或高</strong><br>优点：图片不会失真(变形)<br>缺点：缩略图有些部分需要进行额外填充(白色填充：补白)</p>\n<p>等比例缩略图与固定缩略图的制作区别：在于需要通过计算来得出缩略图的宽和高<br>算法原理：</p>\n<ol>\n<li>计算缩略图宽高比</li>\n<li>计算原图宽高比</li>\n<li>比较：<br>   如果缩略图宽高比大于原图宽高比，将缩略图中用原图的高尽可能填满：缩略图的高是完整的，宽度不够(补白)<br>   如果缩略图宽高比小于原图宽高比，将缩略图中用原图的宽尽可能填满：缩略图的宽是完整的，高度不够(补白)</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 获得原图资源</span></span><br><span class=\"line\"><span class=\"variable\">$src_image</span> = <span class=\"string\">&#x27;https://www.runoob.com/images/pulpit.jpg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得图片信息</span></span><br><span class=\"line\"><span class=\"variable\">$src_info</span> = getimagesize(<span class=\"variable\">$src_image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建画布资源</span></span><br><span class=\"line\"><span class=\"variable\">$src</span> = imagecreatefromjpeg(<span class=\"variable\">$src_image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 制作缩略图资源</span></span><br><span class=\"line\"><span class=\"variable\">$dst</span> = imagecreatetruecolor(<span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 填充背景色</span></span><br><span class=\"line\"><span class=\"variable\">$dst_color</span> = imagecolorallocate(<span class=\"variable\">$dst</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>);</span><br><span class=\"line\">imagefill(<span class=\"variable\">$dst</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$dst_color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算缩略图从原图采样的宽和高(缩略图到底是宽还是高被填满)</span></span><br><span class=\"line\"><span class=\"variable\">$thumb_b</span> = <span class=\"number\">100</span> / <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"variable\">$src_b</span> = <span class=\"variable\">$src_info</span>[<span class=\"number\">0</span>] / <span class=\"variable\">$src_info</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明缩略图宽高</span></span><br><span class=\"line\"><span class=\"variable\">$thumb_x</span> = <span class=\"variable\">$thumb_y</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 宽高</span></span><br><span class=\"line\"><span class=\"variable\">$start_x</span> = <span class=\"variable\">$start_y</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 起始位置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 比较缩略图和原图的宽高比</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$thumb_b</span> &gt;= <span class=\"variable\">$src_b</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable\">$thumb_y</span> = <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"variable\">$thumb_x</span> = floor(<span class=\"variable\">$thumb_y</span> * <span class=\"variable\">$src_b</span>);</span><br><span class=\"line\">    <span class=\"variable\">$start_x</span> = floor((<span class=\"number\">100</span> - <span class=\"variable\">$thumb_x</span>) / <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$thumb_x</span> = <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"variable\">$thumb_y</span> = floor(<span class=\"variable\">$thumb_x</span> / <span class=\"variable\">$src_b</span>);</span><br><span class=\"line\">    <span class=\"variable\">$start_y</span> = floor((<span class=\"number\">100</span> - <span class=\"variable\">$thumb_y</span>) / <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 采样复制</span></span><br><span class=\"line\">imagecopyresampled(<span class=\"variable\">$dst</span>, <span class=\"variable\">$src</span>, <span class=\"variable\">$start_x</span>, <span class=\"variable\">$start_y</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$thumb_x</span>, <span class=\"variable\">$thumb_y</span>, <span class=\"variable\">$src_info</span>[<span class=\"number\">0</span>], <span class=\"variable\">$src_info</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 保存缩略图</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/png&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$dst</span>, <span class=\"string\">&#x27;dst.png&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 销毁资源</span></span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$src</span>);</span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$dst</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/7c10bfa131aa4c4c95263e45cb4c2e01.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>函数封装：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  $file   要缩放的图片路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  $width  缩放后的宽度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  $height 缩放后的高度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  $eq     是否等比缩放</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> [type]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数封装</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compress</span>(<span class=\"params\"><span class=\"variable\">$file</span>,<span class=\"variable\">$width</span>,<span class=\"variable\">$height</span>=<span class=\"string\">&#x27;&#x27;</span>,<span class=\"variable\">$eq</span>=<span class=\"literal\">true</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$img_info</span> = getimagesize(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$img_info</span>[<span class=\"number\">2</span>])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"variable\">$image</span> = imagecreatefromgif(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$image</span> = imagecreatefromjpeg(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$image</span> = imagecreatefrompng(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;暂不支持压缩该类型图片&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$eq</span>) <span class=\"variable\">$height</span> = <span class=\"variable\">$img_info</span>[<span class=\"number\">1</span>]*(<span class=\"variable\">$width</span>/<span class=\"variable\">$img_info</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$com_image</span> = imagecreatetruecolor(<span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>);</span><br><span class=\"line\">    imagecopyresampled(<span class=\"variable\">$com_image</span>, <span class=\"variable\">$image</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"variable\">$img_info</span>[<span class=\"number\">0</span>], <span class=\"variable\">$img_info</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\">    imagejpeg(<span class=\"variable\">$com_image</span>);</span><br><span class=\"line\">    imagedestroy(<span class=\"variable\">$com_image</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"string\">&#x27;https://www.runoob.com/images/pulpit.jpg&#x27;</span>;</span><br><span class=\"line\">compress(<span class=\"variable\">$file</span>,<span class=\"number\">300</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/7228ef3fef714233a93b6a35deca712e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>有兴趣的话还可以看看我的另外相关博客：<br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154877\">GD图像处理——验证码处理</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154901\">GD图像处理——水印图实现</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>对PHP的GD库不熟悉的话可以先看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/119154930\">PHP之GD图像处理</a></p>\n<p><strong>制作图片缩略图的原理</strong><br>缩略图：通过原图得到一个较小的图（尺寸上）<br>缩略图原理：将原图打开，然后放到另一个较小的图片资源中，最后进行保存。</p>\n<p><strong>实现固定宽高的缩略图</strong><br>a. 得到一张原图资源<br>b. 得到一个缩略图资源（较小）<br>c. 图片采样复制：GD提供了一个函数<br>d. 保存缩略图<br>e. 销毁所有资源（原图和缩略图）</p>\n<p>实际开发中，一般在上传图片时就需要对图片进行压缩操作，想要压缩图片可以使用 imagecopyresized() 或者 imagecopyresampled() 函数，这两个函数都可以将一幅图像中的一块矩形区域拷贝到另一个图像中，而 imagecopyresampled() 函数更是可以平滑地插入像素值，因此，在减小了图像的大小的同时仍然保持极大的清晰度，所以在进行图片压缩时可以优先使用 imagecopyresampled() 函数。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagecopyresized(<span class=\"variable\">$dst_image</span>, <span class=\"variable\">$src_image</span>, <span class=\"variable\">$dst_x</span>, <span class=\"variable\">$dst_y</span>, <span class=\"variable\">$src_x</span>, <span class=\"variable\">$src_y</span>, <span class=\"variable\">$dst_w</span>, <span class=\"variable\">$dst_h</span>, <span class=\"variable\">$src_w</span>, <span class=\"variable\">$src_h</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagecopyresampled(<span class=\"variable\">$dst_image</span>, <span class=\"variable\">$src_image</span>, <span class=\"variable\">$dst_x</span>, <span class=\"variable\">$dst_y</span>, <span class=\"variable\">$src_x</span>, <span class=\"variable\">$src_y</span>, <span class=\"variable\">$dst_w</span>, <span class=\"variable\">$dst_h</span>, <span class=\"variable\">$src_w</span>, <span class=\"variable\">$src_h</span>);</span><br></pre></td></tr></table></figure>\n<p>两个函数的参数是完全一样的，说明如下：</p>\n<ul>\n<li>$dst_image：目标图象连接资源。</li>\n<li>$src_image：源图象连接资源。</li>\n<li>$dst_x：目标 X 坐标点。</li>\n<li>$dst_y：目标 Y 坐标点。</li>\n<li>$src_x：源的 X 坐标点。</li>\n<li>$src_y：源的 Y 坐标点。</li>\n<li>$dst_w：目标宽度。</li>\n<li>$dst_h：目标高度。</li>\n<li>$src_w：源图象的宽度。</li>\n<li>$src_h：源图象的高度。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 制作固定尺寸缩略图：按照缩略图要求的大小制作，不管原图比例（可能失真）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 得到原图资源</span></span><br><span class=\"line\"><span class=\"variable\">$src_image</span> = <span class=\"string\">&#x27;https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$src</span> = imagecreatefromgif(<span class=\"variable\">$src_image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 制作缩略图资源</span></span><br><span class=\"line\"><span class=\"variable\">$dst</span> = imagecreatetruecolor(<span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 采样复制</span></span><br><span class=\"line\">imagecopyresampled(<span class=\"variable\">$dst</span>, <span class=\"variable\">$src</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>, imagesx(<span class=\"variable\">$src</span>), imagesy(<span class=\"variable\">$src</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 保存缩略图</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/png&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$dst</span>, <span class=\"string\">&#x27;dst.png&#x27;</span>);</span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$dst</span>, <span class=\"string\">&#x27;dst.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 销毁资源</span></span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$src</span>);</span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$dst</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/3469c29f054d4fc4b73d2105c0c1bbf9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>但是我经过比对发现，这样做出来的缩略图体积不一定会小，由下图可见，原图是128<em>128px, 缩略图是100</em>100px，但生成的缩略图比原图还大好几倍，而且jpg格式和png格式大小一样，本人查询各类资料都没找到合理的解释，如果有大佬知道的话还请在留言区指点指点。<br><img src=\"https://img-blog.csdnimg.cn/593e2b9e7b8344b7a0fa4dd8986357f8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>实现等比例缩放的固定宽或高</strong><br>优点：图片不会失真(变形)<br>缺点：缩略图有些部分需要进行额外填充(白色填充：补白)</p>\n<p>等比例缩略图与固定缩略图的制作区别：在于需要通过计算来得出缩略图的宽和高<br>算法原理：</p>\n<ol>\n<li>计算缩略图宽高比</li>\n<li>计算原图宽高比</li>\n<li>比较：<br>   如果缩略图宽高比大于原图宽高比，将缩略图中用原图的高尽可能填满：缩略图的高是完整的，宽度不够(补白)<br>   如果缩略图宽高比小于原图宽高比，将缩略图中用原图的宽尽可能填满：缩略图的宽是完整的，高度不够(补白)</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 获得原图资源</span></span><br><span class=\"line\"><span class=\"variable\">$src_image</span> = <span class=\"string\">&#x27;https://www.runoob.com/images/pulpit.jpg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得图片信息</span></span><br><span class=\"line\"><span class=\"variable\">$src_info</span> = getimagesize(<span class=\"variable\">$src_image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建画布资源</span></span><br><span class=\"line\"><span class=\"variable\">$src</span> = imagecreatefromjpeg(<span class=\"variable\">$src_image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 制作缩略图资源</span></span><br><span class=\"line\"><span class=\"variable\">$dst</span> = imagecreatetruecolor(<span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 填充背景色</span></span><br><span class=\"line\"><span class=\"variable\">$dst_color</span> = imagecolorallocate(<span class=\"variable\">$dst</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>);</span><br><span class=\"line\">imagefill(<span class=\"variable\">$dst</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$dst_color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算缩略图从原图采样的宽和高(缩略图到底是宽还是高被填满)</span></span><br><span class=\"line\"><span class=\"variable\">$thumb_b</span> = <span class=\"number\">100</span> / <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"variable\">$src_b</span> = <span class=\"variable\">$src_info</span>[<span class=\"number\">0</span>] / <span class=\"variable\">$src_info</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明缩略图宽高</span></span><br><span class=\"line\"><span class=\"variable\">$thumb_x</span> = <span class=\"variable\">$thumb_y</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 宽高</span></span><br><span class=\"line\"><span class=\"variable\">$start_x</span> = <span class=\"variable\">$start_y</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 起始位置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 比较缩略图和原图的宽高比</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$thumb_b</span> &gt;= <span class=\"variable\">$src_b</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable\">$thumb_y</span> = <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"variable\">$thumb_x</span> = floor(<span class=\"variable\">$thumb_y</span> * <span class=\"variable\">$src_b</span>);</span><br><span class=\"line\">    <span class=\"variable\">$start_x</span> = floor((<span class=\"number\">100</span> - <span class=\"variable\">$thumb_x</span>) / <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$thumb_x</span> = <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"variable\">$thumb_y</span> = floor(<span class=\"variable\">$thumb_x</span> / <span class=\"variable\">$src_b</span>);</span><br><span class=\"line\">    <span class=\"variable\">$start_y</span> = floor((<span class=\"number\">100</span> - <span class=\"variable\">$thumb_y</span>) / <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 采样复制</span></span><br><span class=\"line\">imagecopyresampled(<span class=\"variable\">$dst</span>, <span class=\"variable\">$src</span>, <span class=\"variable\">$start_x</span>, <span class=\"variable\">$start_y</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$thumb_x</span>, <span class=\"variable\">$thumb_y</span>, <span class=\"variable\">$src_info</span>[<span class=\"number\">0</span>], <span class=\"variable\">$src_info</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 保存缩略图</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/png&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$dst</span>, <span class=\"string\">&#x27;dst.png&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 销毁资源</span></span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$src</span>);</span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$dst</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/7c10bfa131aa4c4c95263e45cb4c2e01.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>函数封装：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  $file   要缩放的图片路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  $width  缩放后的宽度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  $height 缩放后的高度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  $eq     是否等比缩放</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> [type]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数封装</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compress</span>(<span class=\"params\"><span class=\"variable\">$file</span>,<span class=\"variable\">$width</span>,<span class=\"variable\">$height</span>=<span class=\"string\">&#x27;&#x27;</span>,<span class=\"variable\">$eq</span>=<span class=\"literal\">true</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$img_info</span> = getimagesize(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$img_info</span>[<span class=\"number\">2</span>])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"variable\">$image</span> = imagecreatefromgif(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$image</span> = imagecreatefromjpeg(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$image</span> = imagecreatefrompng(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;暂不支持压缩该类型图片&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$eq</span>) <span class=\"variable\">$height</span> = <span class=\"variable\">$img_info</span>[<span class=\"number\">1</span>]*(<span class=\"variable\">$width</span>/<span class=\"variable\">$img_info</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$com_image</span> = imagecreatetruecolor(<span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>);</span><br><span class=\"line\">    imagecopyresampled(<span class=\"variable\">$com_image</span>, <span class=\"variable\">$image</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"variable\">$img_info</span>[<span class=\"number\">0</span>], <span class=\"variable\">$img_info</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\">    imagejpeg(<span class=\"variable\">$com_image</span>);</span><br><span class=\"line\">    imagedestroy(<span class=\"variable\">$com_image</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"string\">&#x27;https://www.runoob.com/images/pulpit.jpg&#x27;</span>;</span><br><span class=\"line\">compress(<span class=\"variable\">$file</span>,<span class=\"number\">300</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/7228ef3fef714233a93b6a35deca712e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>有兴趣的话还可以看看我的另外相关博客：<br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154877\">GD图像处理——验证码处理</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154901\">GD图像处理——水印图实现</a></p>\n"},{"title":"PHP加密算法","date":"2021-09-19T12:39:55.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/102.jpg","_content":"\n# 零：密码外泄门\n2011年12月，CSDN的安全系统遭到黑客攻击，600万用户的登录名、密码及邮箱遭到泄漏。随后，CSDN\"密码外泄门\"持续发酵，天涯、世纪佳缘等网站相继被曝用户数据遭泄密。泄密就算了，更让人无语的是密码等信息都是明文存储，导致黑客直接拿到了信息而无需破解，这一系列事件发生后，密文存储用户信息的方式开始流行。\n\n# 一：前言\n这篇博客会介绍一些经典的加密算法，其中md5、sha1、sha256等加密算法虽然是单向散列算法，是不可逆的，但是由于其太经典了，因此很可能被暴力破解，就是他们会把常见字符进行组合使用这些经典加密算法后存到数据库中，需要解密时就把需要解密的字符串与数据库中的进行比对，因此都有被破解的风险，因此这类算法并不适合用在密码保护场景。\n\n破解网站如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/310c84133a2244cbbf5b22213b8845a8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/c4c97272b79946df84af1b8fdb9521e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n对于密码散列安全，php官方是这么说的：\n> 为什么需要把应用程序中用户的密码进行散列化\n\n当设计一个需要接受用户密码的应用时， 对密码进行散列是最基本的，也是必需的安全考虑。 如果不对密码进行散列处理，那么一旦应用的数据库受到攻击， 那么用户的密码将被窃取。 同时，窃取者也可以使用用户账号和密码去尝试其他的应用， 如果用户没有为每个应用单独设置密码，那么将面临风险。\n通过对密码进行散列处理，然后再保存到数据库中， 这样就使得攻击者无法直接获取原始密码， 同时还可以保证你的应用可以对原始密码进行相同的散列处理， 然后比对散列结果。\n需要着重提醒的是，密码散列只能保护密码 不会被从数据库中直接窃取， 但是无法保证注入到应用中的 恶意代码拦截到原始密码。\n\n> 为何诸如 md5() 和 sha1() 这样的常见散列函数不适合用在密码保护场景\n\nMD5，SHA1 以及 SHA256 这样的散列算法是面向快速、高效 进行散列处理而设计的。随着技术进步和计算机硬件的提升， 破解者可以使用“暴力”方式来寻找散列码 所对应的原始数据。\n因为现代化计算机可以快速的“反转”上述散列算法的散列值， 所以很多安全专家都强烈建议 不要在密码散列中使用这些散列算法。\n\n> 如果不建议使用常用散列函数保护密码， 那么我应该如何对密码进行散列处理\n\n我们可以在进行散列处理的过程中加入的一些数据，用来避免从已计算的散列值表 （被称作“彩虹表”）中 对比输出数据从而获取明文密码的风险。\n简单而言，“盐”就是为了提高散列值被破解的难度而加入的少量数据。 现在有很多在线服务都能够提供计算后的散列值以及其对应的原始输入的清单， 并且数据量极其庞大。 通过加“盐”就可以避免直接从清单中查找到对应明文的风险。\n如果不提供“盐”，password_hash() 函数会随机生成“盐”。 非常简单，行之有效。\n\n虽然这些算法都有可能被破解，但是这篇博客还是会介绍几种推荐保存的密码的算法的。\n\n# 二：Md5加密算法(不推荐保存密码)\n是单项散列加密算法，不可逆。MD5加密是php最常见的不可逆加密算法。来自 RFC 1321 的解释 - MD5 报文摘要算法：MD5 报文摘要算法将任意长度的信息作为输入值，并将其换算成一个 128 位长度的\"指纹信息\"或\"报文摘要\"值来代表这个输入值，并以换算后的值作为结果。MD5 算法主要是为数字签名应用程序而设计的；在这个数字签名应用程序中，较大的文件将在加密（这里的加密过程是通过在一个密码系统下[如：RSA]的公开密钥下设置私有密钥而完成的）之前以一种安全的方式进行压缩。\n\n语法如下：\n\n```php\nstring md5 ( string $str [, bool $raw_output = false ] )\n```\n参数一的`$str`是原始字符串\n参数二的`$raw_output`是可选值，默认为false，如果设置为true，则md5报文摘要将以16字节长度的原始二进制格式返回。返回以32位字符十六进制数字形式返回散列值。\n\n示例如下：\n\n```php\n<?php\n$str = \"eyes\";\necho md5($str);\necho \"<br>\";\necho md5($str, true);\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/65ac469513714024a532eb1875c0f83d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 三：Sha1加密算法(不推荐保存密码)\nsha1加密算法和MD5加密算法一样时不可逆的，有两个参数，一个是要加密的字符串，第二个是bool值，如果指定第二个参数为TRUE，则返回二进制格式的字符串，如果不指定则默认为FALSE，返回的是40位的16进制格式的字符串\n\n语法如下：\n\n```php\nstring sha1(string $str[, bool $raw_output=false])\n```\n参数一的`$str`是加密的字符串\n参数二的`$raw_output`：如果被设置为TRUE，那么sha1摘要将以20字符长度的原始格式返回，否则返回值是一个40字符长度的十六进制数字\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ba2fdc2374f94231bcf216083afac6fe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n# 四：Crypt加密算法(推荐保存密码)\ncrypt()加密算法是一种不可逆的加密算法，他有两个参数，一个是需要加密的字符串，另外一个是盐值（或者成为干扰字符串）。这个函数在不同的操作系统上的表现形式也是不一样的，会自动检测。该算法可以在PHP5.3及后续版本使用， 它支持多种散列算法。 针对每种受支持的散列算法，PHP 都提供了对应的原生实现， 所以在使用此函数的时候， 你需要保证所选的散列算法是你的系统所能够支持的。\n\n如果使用 crypt() 函数来进行密码验证， 那么你需要选择一种耗时恒定的字符串比较算法来避免时序攻击。就是说，字符串比较所消耗的时间恒定， 不随输入数据的多少变化而变化，PHP 中的 \\=\\=和\\=\\=\\= 操作符 和 strcmp() 函数都不是耗时恒定的字符串比较， 但是 password_verify() 可以帮你完成这项工作。 我们鼓励你尽可能的使用原生密码散列API。\n\n语法如下：\n\n```php\nstring crypt(string $str[, string $salt])\n```\n返回一个基于UNIX DES算法或系统上其他可用的替代算法的散列字符串。\n参数一的`str`: 需要加密的明文。\n参数二的`$salt`：加密时的干扰串，使编码更安全，一般是两个字符\n然而，如果没有salt的话，如果加密时没有加上这个`$salt`参数，则会随机生成一个干扰串，且crypt()创建出来的会是弱密码。 php 5.6及之后的版本会在没有它的情况下抛出一个 E_NOTICE 级别的错误。为了更好的安全性，所以需要确保指定一个足够强度的盐值。\n\n```php\n<?php\n$str = \"eyes\";\necho crypt($str);\necho \"<br>\";\necho crypt($str, \"eyes\");\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1bfb95fa8752494f9129d4cf9121ebde.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)图片中以\\$1开头，\\$结尾，中间不超过12个字符，是MD5的特色，这个在下面会提到。\n\n在 crypt() 函数支持多重散列的系统上，下面的常量根据相应的类型是否可用被设置为 0 或 1：\n+ CRYPT_STD_DES - 基于标准 DES 算法的散列使用 \"./0-9A-Za-z\" 字符中的两个字符作为盐值，即如果盐值超过2个字符，则截取前两个字符。在盐值中使用非法的字符将导致 crypt() 失败。  \n+ CRYPT_EXT_DES - 扩展的基于 DES 算法的散列。其盐值为 9 个字符的字符串，由 1 个下划线后面跟着 4 字节循环次数和 4 字节盐值组成。它们被编码成可打印字符，每个字符 6 位，有效位最少的优先。0 到 63 被编码为 \"./0-9A-Za-z\"。在盐值中使用非法的字符将导致 crypt() 失败。  \n+ CRYPT_MD5 - MD5 散列使用一个以 $1$ 开始的 12 字符的字符串盐值，注意盐值最多12个字符，超出则截取前8位。  \n+ CRYPT_BLOWFISH - Blowfish 算法使用如下盐值：\"\\$2a\\$\"，一个两位 cost 参数，\"\\$\" 以及 64 位由 \"./0-9A-Za-z\" 中的字符组合而成的字符串。在盐值中使用此范围之外的字符将导致 crypt() 返回一个空字符串。两位 cost 参数是循环次数以 2 为底的对数，它的范围是 04-31，超出这个范围将导致 crypt() 失败。 PHP 5.3.7 之前只支持 \"\\$2a\\$\" 作为盐值的前缀，PHP 5.3.7 开始引入了新的前缀来修正一个在Blowfish实现上的安全风险。可以参考» this document来了解关于这个修复的更多信息。总而言之，开发者如果仅针对 PHP 5.3.7及之后版本进行开发，那应该使用 \"\\$2y\\$\" 而非 \"\\$2a\\$\"  \n+ CRYPT_SHA256 - SHA-256 算法使用一个以\\$5\\$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 \"rounds=\\<N\\>\\$\" 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。  \n+ CRYPT_SHA512 - SHA-512 算法使用一个以 \\$6\\$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 \"rounds=\\<N\\>\\$\" 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。 \n\n```php\n<?php\n$str = \"eyes\";\necho crypt($str);\necho \"<br>\";\necho crypt($str, \"eyes\");\necho \"<hr>\";\nif (CRYPT_STD_DES) {\n    echo \"标准DES算法: \" . crypt($str, \"eyes\");\n    echo \"<br>\";\n    echo \"标准DES算法: \" . crypt($str, \"eyes\");\n}\necho \"<hr>\";\nif (CRYPT_MD5) {\n    echo \"MD5 散列: \" . crypt($str, '$1$abcd$');\n    echo \"<br>\";\n    echo \"MD5 散列: \" . crypt($str, '$1$abcd$');\n}\necho \"<hr>\";\nif (CRYPT_SHA256) {\n    echo \"SHA-256 算法: \" . crypt($str, '$6$1sas515');\n    echo \"<br>\";\n    echo \"SHA-256 算法: \" . crypt($str, '$6$1sas515');\n}\necho \"<hr>\";\nif (CRYPT_SHA512) {\n    echo \"SHA-512 算法: \" . crypt($str, '$6$1sa151acacsas515');\n    echo \"<br>\";\n    echo \"SHA-512 算法: \" . crypt($str, '$6$1sa151acacsas515');\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/edf3ab3ed8344e8ab8a399781fcedc06.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n<!--\n# 五：URL编码加密技术\n对称加密，是可逆的\n# 六：Base64编码加密技术\n对称加密，是可逆的\n# 七：自定义加密算法\n-->\n","source":"_posts/PHP/php加密.md","raw":"---\ntitle: PHP加密算法\ndate: 2021-09-19 20:39:55\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/102.jpg\ntags: \n  - 加密解密\ncategories: PHP\n---\n\n# 零：密码外泄门\n2011年12月，CSDN的安全系统遭到黑客攻击，600万用户的登录名、密码及邮箱遭到泄漏。随后，CSDN\"密码外泄门\"持续发酵，天涯、世纪佳缘等网站相继被曝用户数据遭泄密。泄密就算了，更让人无语的是密码等信息都是明文存储，导致黑客直接拿到了信息而无需破解，这一系列事件发生后，密文存储用户信息的方式开始流行。\n\n# 一：前言\n这篇博客会介绍一些经典的加密算法，其中md5、sha1、sha256等加密算法虽然是单向散列算法，是不可逆的，但是由于其太经典了，因此很可能被暴力破解，就是他们会把常见字符进行组合使用这些经典加密算法后存到数据库中，需要解密时就把需要解密的字符串与数据库中的进行比对，因此都有被破解的风险，因此这类算法并不适合用在密码保护场景。\n\n破解网站如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/310c84133a2244cbbf5b22213b8845a8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/c4c97272b79946df84af1b8fdb9521e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n对于密码散列安全，php官方是这么说的：\n> 为什么需要把应用程序中用户的密码进行散列化\n\n当设计一个需要接受用户密码的应用时， 对密码进行散列是最基本的，也是必需的安全考虑。 如果不对密码进行散列处理，那么一旦应用的数据库受到攻击， 那么用户的密码将被窃取。 同时，窃取者也可以使用用户账号和密码去尝试其他的应用， 如果用户没有为每个应用单独设置密码，那么将面临风险。\n通过对密码进行散列处理，然后再保存到数据库中， 这样就使得攻击者无法直接获取原始密码， 同时还可以保证你的应用可以对原始密码进行相同的散列处理， 然后比对散列结果。\n需要着重提醒的是，密码散列只能保护密码 不会被从数据库中直接窃取， 但是无法保证注入到应用中的 恶意代码拦截到原始密码。\n\n> 为何诸如 md5() 和 sha1() 这样的常见散列函数不适合用在密码保护场景\n\nMD5，SHA1 以及 SHA256 这样的散列算法是面向快速、高效 进行散列处理而设计的。随着技术进步和计算机硬件的提升， 破解者可以使用“暴力”方式来寻找散列码 所对应的原始数据。\n因为现代化计算机可以快速的“反转”上述散列算法的散列值， 所以很多安全专家都强烈建议 不要在密码散列中使用这些散列算法。\n\n> 如果不建议使用常用散列函数保护密码， 那么我应该如何对密码进行散列处理\n\n我们可以在进行散列处理的过程中加入的一些数据，用来避免从已计算的散列值表 （被称作“彩虹表”）中 对比输出数据从而获取明文密码的风险。\n简单而言，“盐”就是为了提高散列值被破解的难度而加入的少量数据。 现在有很多在线服务都能够提供计算后的散列值以及其对应的原始输入的清单， 并且数据量极其庞大。 通过加“盐”就可以避免直接从清单中查找到对应明文的风险。\n如果不提供“盐”，password_hash() 函数会随机生成“盐”。 非常简单，行之有效。\n\n虽然这些算法都有可能被破解，但是这篇博客还是会介绍几种推荐保存的密码的算法的。\n\n# 二：Md5加密算法(不推荐保存密码)\n是单项散列加密算法，不可逆。MD5加密是php最常见的不可逆加密算法。来自 RFC 1321 的解释 - MD5 报文摘要算法：MD5 报文摘要算法将任意长度的信息作为输入值，并将其换算成一个 128 位长度的\"指纹信息\"或\"报文摘要\"值来代表这个输入值，并以换算后的值作为结果。MD5 算法主要是为数字签名应用程序而设计的；在这个数字签名应用程序中，较大的文件将在加密（这里的加密过程是通过在一个密码系统下[如：RSA]的公开密钥下设置私有密钥而完成的）之前以一种安全的方式进行压缩。\n\n语法如下：\n\n```php\nstring md5 ( string $str [, bool $raw_output = false ] )\n```\n参数一的`$str`是原始字符串\n参数二的`$raw_output`是可选值，默认为false，如果设置为true，则md5报文摘要将以16字节长度的原始二进制格式返回。返回以32位字符十六进制数字形式返回散列值。\n\n示例如下：\n\n```php\n<?php\n$str = \"eyes\";\necho md5($str);\necho \"<br>\";\necho md5($str, true);\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/65ac469513714024a532eb1875c0f83d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 三：Sha1加密算法(不推荐保存密码)\nsha1加密算法和MD5加密算法一样时不可逆的，有两个参数，一个是要加密的字符串，第二个是bool值，如果指定第二个参数为TRUE，则返回二进制格式的字符串，如果不指定则默认为FALSE，返回的是40位的16进制格式的字符串\n\n语法如下：\n\n```php\nstring sha1(string $str[, bool $raw_output=false])\n```\n参数一的`$str`是加密的字符串\n参数二的`$raw_output`：如果被设置为TRUE，那么sha1摘要将以20字符长度的原始格式返回，否则返回值是一个40字符长度的十六进制数字\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ba2fdc2374f94231bcf216083afac6fe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n# 四：Crypt加密算法(推荐保存密码)\ncrypt()加密算法是一种不可逆的加密算法，他有两个参数，一个是需要加密的字符串，另外一个是盐值（或者成为干扰字符串）。这个函数在不同的操作系统上的表现形式也是不一样的，会自动检测。该算法可以在PHP5.3及后续版本使用， 它支持多种散列算法。 针对每种受支持的散列算法，PHP 都提供了对应的原生实现， 所以在使用此函数的时候， 你需要保证所选的散列算法是你的系统所能够支持的。\n\n如果使用 crypt() 函数来进行密码验证， 那么你需要选择一种耗时恒定的字符串比较算法来避免时序攻击。就是说，字符串比较所消耗的时间恒定， 不随输入数据的多少变化而变化，PHP 中的 \\=\\=和\\=\\=\\= 操作符 和 strcmp() 函数都不是耗时恒定的字符串比较， 但是 password_verify() 可以帮你完成这项工作。 我们鼓励你尽可能的使用原生密码散列API。\n\n语法如下：\n\n```php\nstring crypt(string $str[, string $salt])\n```\n返回一个基于UNIX DES算法或系统上其他可用的替代算法的散列字符串。\n参数一的`str`: 需要加密的明文。\n参数二的`$salt`：加密时的干扰串，使编码更安全，一般是两个字符\n然而，如果没有salt的话，如果加密时没有加上这个`$salt`参数，则会随机生成一个干扰串，且crypt()创建出来的会是弱密码。 php 5.6及之后的版本会在没有它的情况下抛出一个 E_NOTICE 级别的错误。为了更好的安全性，所以需要确保指定一个足够强度的盐值。\n\n```php\n<?php\n$str = \"eyes\";\necho crypt($str);\necho \"<br>\";\necho crypt($str, \"eyes\");\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1bfb95fa8752494f9129d4cf9121ebde.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)图片中以\\$1开头，\\$结尾，中间不超过12个字符，是MD5的特色，这个在下面会提到。\n\n在 crypt() 函数支持多重散列的系统上，下面的常量根据相应的类型是否可用被设置为 0 或 1：\n+ CRYPT_STD_DES - 基于标准 DES 算法的散列使用 \"./0-9A-Za-z\" 字符中的两个字符作为盐值，即如果盐值超过2个字符，则截取前两个字符。在盐值中使用非法的字符将导致 crypt() 失败。  \n+ CRYPT_EXT_DES - 扩展的基于 DES 算法的散列。其盐值为 9 个字符的字符串，由 1 个下划线后面跟着 4 字节循环次数和 4 字节盐值组成。它们被编码成可打印字符，每个字符 6 位，有效位最少的优先。0 到 63 被编码为 \"./0-9A-Za-z\"。在盐值中使用非法的字符将导致 crypt() 失败。  \n+ CRYPT_MD5 - MD5 散列使用一个以 $1$ 开始的 12 字符的字符串盐值，注意盐值最多12个字符，超出则截取前8位。  \n+ CRYPT_BLOWFISH - Blowfish 算法使用如下盐值：\"\\$2a\\$\"，一个两位 cost 参数，\"\\$\" 以及 64 位由 \"./0-9A-Za-z\" 中的字符组合而成的字符串。在盐值中使用此范围之外的字符将导致 crypt() 返回一个空字符串。两位 cost 参数是循环次数以 2 为底的对数，它的范围是 04-31，超出这个范围将导致 crypt() 失败。 PHP 5.3.7 之前只支持 \"\\$2a\\$\" 作为盐值的前缀，PHP 5.3.7 开始引入了新的前缀来修正一个在Blowfish实现上的安全风险。可以参考» this document来了解关于这个修复的更多信息。总而言之，开发者如果仅针对 PHP 5.3.7及之后版本进行开发，那应该使用 \"\\$2y\\$\" 而非 \"\\$2a\\$\"  \n+ CRYPT_SHA256 - SHA-256 算法使用一个以\\$5\\$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 \"rounds=\\<N\\>\\$\" 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。  \n+ CRYPT_SHA512 - SHA-512 算法使用一个以 \\$6\\$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 \"rounds=\\<N\\>\\$\" 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。 \n\n```php\n<?php\n$str = \"eyes\";\necho crypt($str);\necho \"<br>\";\necho crypt($str, \"eyes\");\necho \"<hr>\";\nif (CRYPT_STD_DES) {\n    echo \"标准DES算法: \" . crypt($str, \"eyes\");\n    echo \"<br>\";\n    echo \"标准DES算法: \" . crypt($str, \"eyes\");\n}\necho \"<hr>\";\nif (CRYPT_MD5) {\n    echo \"MD5 散列: \" . crypt($str, '$1$abcd$');\n    echo \"<br>\";\n    echo \"MD5 散列: \" . crypt($str, '$1$abcd$');\n}\necho \"<hr>\";\nif (CRYPT_SHA256) {\n    echo \"SHA-256 算法: \" . crypt($str, '$6$1sas515');\n    echo \"<br>\";\n    echo \"SHA-256 算法: \" . crypt($str, '$6$1sas515');\n}\necho \"<hr>\";\nif (CRYPT_SHA512) {\n    echo \"SHA-512 算法: \" . crypt($str, '$6$1sa151acacsas515');\n    echo \"<br>\";\n    echo \"SHA-512 算法: \" . crypt($str, '$6$1sa151acacsas515');\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/edf3ab3ed8344e8ab8a399781fcedc06.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n<!--\n# 五：URL编码加密技术\n对称加密，是可逆的\n# 六：Base64编码加密技术\n对称加密，是可逆的\n# 七：自定义加密算法\n-->\n","slug":"PHP/php加密","published":1,"updated":"2021-12-04T02:55:17.320Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958am0007asda03tm9p17","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"零：密码外泄门\"><a href=\"#零：密码外泄门\" class=\"headerlink\" title=\"零：密码外泄门\"></a>零：密码外泄门</h1><p>2011年12月，CSDN的安全系统遭到黑客攻击，600万用户的登录名、密码及邮箱遭到泄漏。随后，CSDN”密码外泄门”持续发酵，天涯、世纪佳缘等网站相继被曝用户数据遭泄密。泄密就算了，更让人无语的是密码等信息都是明文存储，导致黑客直接拿到了信息而无需破解，这一系列事件发生后，密文存储用户信息的方式开始流行。</p>\n<h1 id=\"一：前言\"><a href=\"#一：前言\" class=\"headerlink\" title=\"一：前言\"></a>一：前言</h1><p>这篇博客会介绍一些经典的加密算法，其中md5、sha1、sha256等加密算法虽然是单向散列算法，是不可逆的，但是由于其太经典了，因此很可能被暴力破解，就是他们会把常见字符进行组合使用这些经典加密算法后存到数据库中，需要解密时就把需要解密的字符串与数据库中的进行比对，因此都有被破解的风险，因此这类算法并不适合用在密码保护场景。</p>\n<p>破解网站如下：<br><img src=\"https://img-blog.csdnimg.cn/310c84133a2244cbbf5b22213b8845a8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/c4c97272b79946df84af1b8fdb9521e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>对于密码散列安全，php官方是这么说的：</p>\n<blockquote>\n<p>为什么需要把应用程序中用户的密码进行散列化</p>\n</blockquote>\n<p>当设计一个需要接受用户密码的应用时， 对密码进行散列是最基本的，也是必需的安全考虑。 如果不对密码进行散列处理，那么一旦应用的数据库受到攻击， 那么用户的密码将被窃取。 同时，窃取者也可以使用用户账号和密码去尝试其他的应用， 如果用户没有为每个应用单独设置密码，那么将面临风险。<br>通过对密码进行散列处理，然后再保存到数据库中， 这样就使得攻击者无法直接获取原始密码， 同时还可以保证你的应用可以对原始密码进行相同的散列处理， 然后比对散列结果。<br>需要着重提醒的是，密码散列只能保护密码 不会被从数据库中直接窃取， 但是无法保证注入到应用中的 恶意代码拦截到原始密码。</p>\n<blockquote>\n<p>为何诸如 md5() 和 sha1() 这样的常见散列函数不适合用在密码保护场景</p>\n</blockquote>\n<p>MD5，SHA1 以及 SHA256 这样的散列算法是面向快速、高效 进行散列处理而设计的。随着技术进步和计算机硬件的提升， 破解者可以使用“暴力”方式来寻找散列码 所对应的原始数据。<br>因为现代化计算机可以快速的“反转”上述散列算法的散列值， 所以很多安全专家都强烈建议 不要在密码散列中使用这些散列算法。</p>\n<blockquote>\n<p>如果不建议使用常用散列函数保护密码， 那么我应该如何对密码进行散列处理</p>\n</blockquote>\n<p>我们可以在进行散列处理的过程中加入的一些数据，用来避免从已计算的散列值表 （被称作“彩虹表”）中 对比输出数据从而获取明文密码的风险。<br>简单而言，“盐”就是为了提高散列值被破解的难度而加入的少量数据。 现在有很多在线服务都能够提供计算后的散列值以及其对应的原始输入的清单， 并且数据量极其庞大。 通过加“盐”就可以避免直接从清单中查找到对应明文的风险。<br>如果不提供“盐”，password_hash() 函数会随机生成“盐”。 非常简单，行之有效。</p>\n<p>虽然这些算法都有可能被破解，但是这篇博客还是会介绍几种推荐保存的密码的算法的。</p>\n<h1 id=\"二：Md5加密算法-不推荐保存密码\"><a href=\"#二：Md5加密算法-不推荐保存密码\" class=\"headerlink\" title=\"二：Md5加密算法(不推荐保存密码)\"></a>二：Md5加密算法(不推荐保存密码)</h1><p>是单项散列加密算法，不可逆。MD5加密是php最常见的不可逆加密算法。来自 RFC 1321 的解释 - MD5 报文摘要算法：MD5 报文摘要算法将任意长度的信息作为输入值，并将其换算成一个 128 位长度的”指纹信息”或”报文摘要”值来代表这个输入值，并以换算后的值作为结果。MD5 算法主要是为数字签名应用程序而设计的；在这个数字签名应用程序中，较大的文件将在加密（这里的加密过程是通过在一个密码系统下[如：RSA]的公开密钥下设置私有密钥而完成的）之前以一种安全的方式进行压缩。</p>\n<p>语法如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> md5 ( <span class=\"keyword\">string</span> <span class=\"variable\">$str</span> [, <span class=\"keyword\">bool</span> <span class=\"variable\">$raw_output</span> = <span class=\"literal\">false</span> ] )</span><br></pre></td></tr></table></figure>\n<p>参数一的<code>$str</code>是原始字符串<br>参数二的<code>$raw_output</code>是可选值，默认为false，如果设置为true，则md5报文摘要将以16字节长度的原始二进制格式返回。返回以32位字符十六进制数字形式返回散列值。</p>\n<p>示例如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&quot;eyes&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> md5(<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> md5(<span class=\"variable\">$str</span>, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/65ac469513714024a532eb1875c0f83d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：Sha1加密算法-不推荐保存密码\"><a href=\"#三：Sha1加密算法-不推荐保存密码\" class=\"headerlink\" title=\"三：Sha1加密算法(不推荐保存密码)\"></a>三：Sha1加密算法(不推荐保存密码)</h1><p>sha1加密算法和MD5加密算法一样时不可逆的，有两个参数，一个是要加密的字符串，第二个是bool值，如果指定第二个参数为TRUE，则返回二进制格式的字符串，如果不指定则默认为FALSE，返回的是40位的16进制格式的字符串</p>\n<p>语法如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> sha1(<span class=\"keyword\">string</span> <span class=\"variable\">$str</span>[, <span class=\"keyword\">bool</span> <span class=\"variable\">$raw_output</span>=<span class=\"literal\">false</span>])</span><br></pre></td></tr></table></figure>\n<p>参数一的<code>$str</code>是加密的字符串<br>参数二的<code>$raw_output</code>：如果被设置为TRUE，那么sha1摘要将以20字符长度的原始格式返回，否则返回值是一个40字符长度的十六进制数字<br><img src=\"https://img-blog.csdnimg.cn/ba2fdc2374f94231bcf216083afac6fe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：Crypt加密算法-推荐保存密码\"><a href=\"#四：Crypt加密算法-推荐保存密码\" class=\"headerlink\" title=\"四：Crypt加密算法(推荐保存密码)\"></a>四：Crypt加密算法(推荐保存密码)</h1><p>crypt()加密算法是一种不可逆的加密算法，他有两个参数，一个是需要加密的字符串，另外一个是盐值（或者成为干扰字符串）。这个函数在不同的操作系统上的表现形式也是不一样的，会自动检测。该算法可以在PHP5.3及后续版本使用， 它支持多种散列算法。 针对每种受支持的散列算法，PHP 都提供了对应的原生实现， 所以在使用此函数的时候， 你需要保证所选的散列算法是你的系统所能够支持的。</p>\n<p>如果使用 crypt() 函数来进行密码验证， 那么你需要选择一种耗时恒定的字符串比较算法来避免时序攻击。就是说，字符串比较所消耗的时间恒定， 不随输入数据的多少变化而变化，PHP 中的 ==和=== 操作符 和 strcmp() 函数都不是耗时恒定的字符串比较， 但是 password_verify() 可以帮你完成这项工作。 我们鼓励你尽可能的使用原生密码散列API。</p>\n<p>语法如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> crypt(<span class=\"keyword\">string</span> <span class=\"variable\">$str</span>[, <span class=\"keyword\">string</span> <span class=\"variable\">$salt</span>])</span><br></pre></td></tr></table></figure>\n<p>返回一个基于UNIX DES算法或系统上其他可用的替代算法的散列字符串。<br>参数一的<code>str</code>: 需要加密的明文。<br>参数二的<code>$salt</code>：加密时的干扰串，使编码更安全，一般是两个字符<br>然而，如果没有salt的话，如果加密时没有加上这个<code>$salt</code>参数，则会随机生成一个干扰串，且crypt()创建出来的会是弱密码。 php 5.6及之后的版本会在没有它的情况下抛出一个 E_NOTICE 级别的错误。为了更好的安全性，所以需要确保指定一个足够强度的盐值。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&quot;eyes&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> crypt(<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&quot;eyes&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/1bfb95fa8752494f9129d4cf9121ebde.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">图片中以$1开头，$结尾，中间不超过12个字符，是MD5的特色，这个在下面会提到。</p>\n<p>在 crypt() 函数支持多重散列的系统上，下面的常量根据相应的类型是否可用被设置为 0 或 1：</p>\n<ul>\n<li>CRYPT_STD_DES - 基于标准 DES 算法的散列使用 “./0-9A-Za-z” 字符中的两个字符作为盐值，即如果盐值超过2个字符，则截取前两个字符。在盐值中使用非法的字符将导致 crypt() 失败。  </li>\n<li>CRYPT_EXT_DES - 扩展的基于 DES 算法的散列。其盐值为 9 个字符的字符串，由 1 个下划线后面跟着 4 字节循环次数和 4 字节盐值组成。它们被编码成可打印字符，每个字符 6 位，有效位最少的优先。0 到 63 被编码为 “./0-9A-Za-z”。在盐值中使用非法的字符将导致 crypt() 失败。  </li>\n<li>CRYPT_MD5 - MD5 散列使用一个以 $1$ 开始的 12 字符的字符串盐值，注意盐值最多12个字符，超出则截取前8位。  </li>\n<li>CRYPT_BLOWFISH - Blowfish 算法使用如下盐值：”$2a$“，一个两位 cost 参数，”$“ 以及 64 位由 “./0-9A-Za-z” 中的字符组合而成的字符串。在盐值中使用此范围之外的字符将导致 crypt() 返回一个空字符串。两位 cost 参数是循环次数以 2 为底的对数，它的范围是 04-31，超出这个范围将导致 crypt() 失败。 PHP 5.3.7 之前只支持 “$2a$“ 作为盐值的前缀，PHP 5.3.7 开始引入了新的前缀来修正一个在Blowfish实现上的安全风险。可以参考» this document来了解关于这个修复的更多信息。总而言之，开发者如果仅针对 PHP 5.3.7及之后版本进行开发，那应该使用 “$2y$“ 而非 “$2a$“  </li>\n<li>CRYPT_SHA256 - SHA-256 算法使用一个以$5$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 “rounds=&lt;N&gt;$“ 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。  </li>\n<li>CRYPT_SHA512 - SHA-512 算法使用一个以 $6$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 “rounds=&lt;N&gt;$“ 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。 </li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&quot;eyes&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> crypt(<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&quot;eyes&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CRYPT_STD_DES) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;标准DES算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&quot;eyes&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;标准DES算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&quot;eyes&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CRYPT_MD5) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;MD5 散列: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$1$abcd$&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;MD5 散列: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$1$abcd$&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CRYPT_SHA256) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;SHA-256 算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$6$1sas515&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;SHA-256 算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$6$1sas515&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CRYPT_SHA512) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;SHA-512 算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$6$1sa151acacsas515&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;SHA-512 算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$6$1sa151acacsas515&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/edf3ab3ed8344e8ab8a399781fcedc06.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<!--\n# 五：URL编码加密技术\n对称加密，是可逆的\n# 六：Base64编码加密技术\n对称加密，是可逆的\n# 七：自定义加密算法\n-->\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"零：密码外泄门\"><a href=\"#零：密码外泄门\" class=\"headerlink\" title=\"零：密码外泄门\"></a>零：密码外泄门</h1><p>2011年12月，CSDN的安全系统遭到黑客攻击，600万用户的登录名、密码及邮箱遭到泄漏。随后，CSDN”密码外泄门”持续发酵，天涯、世纪佳缘等网站相继被曝用户数据遭泄密。泄密就算了，更让人无语的是密码等信息都是明文存储，导致黑客直接拿到了信息而无需破解，这一系列事件发生后，密文存储用户信息的方式开始流行。</p>\n<h1 id=\"一：前言\"><a href=\"#一：前言\" class=\"headerlink\" title=\"一：前言\"></a>一：前言</h1><p>这篇博客会介绍一些经典的加密算法，其中md5、sha1、sha256等加密算法虽然是单向散列算法，是不可逆的，但是由于其太经典了，因此很可能被暴力破解，就是他们会把常见字符进行组合使用这些经典加密算法后存到数据库中，需要解密时就把需要解密的字符串与数据库中的进行比对，因此都有被破解的风险，因此这类算法并不适合用在密码保护场景。</p>\n<p>破解网站如下：<br><img src=\"https://img-blog.csdnimg.cn/310c84133a2244cbbf5b22213b8845a8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/c4c97272b79946df84af1b8fdb9521e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>对于密码散列安全，php官方是这么说的：</p>\n<blockquote>\n<p>为什么需要把应用程序中用户的密码进行散列化</p>\n</blockquote>\n<p>当设计一个需要接受用户密码的应用时， 对密码进行散列是最基本的，也是必需的安全考虑。 如果不对密码进行散列处理，那么一旦应用的数据库受到攻击， 那么用户的密码将被窃取。 同时，窃取者也可以使用用户账号和密码去尝试其他的应用， 如果用户没有为每个应用单独设置密码，那么将面临风险。<br>通过对密码进行散列处理，然后再保存到数据库中， 这样就使得攻击者无法直接获取原始密码， 同时还可以保证你的应用可以对原始密码进行相同的散列处理， 然后比对散列结果。<br>需要着重提醒的是，密码散列只能保护密码 不会被从数据库中直接窃取， 但是无法保证注入到应用中的 恶意代码拦截到原始密码。</p>\n<blockquote>\n<p>为何诸如 md5() 和 sha1() 这样的常见散列函数不适合用在密码保护场景</p>\n</blockquote>\n<p>MD5，SHA1 以及 SHA256 这样的散列算法是面向快速、高效 进行散列处理而设计的。随着技术进步和计算机硬件的提升， 破解者可以使用“暴力”方式来寻找散列码 所对应的原始数据。<br>因为现代化计算机可以快速的“反转”上述散列算法的散列值， 所以很多安全专家都强烈建议 不要在密码散列中使用这些散列算法。</p>\n<blockquote>\n<p>如果不建议使用常用散列函数保护密码， 那么我应该如何对密码进行散列处理</p>\n</blockquote>\n<p>我们可以在进行散列处理的过程中加入的一些数据，用来避免从已计算的散列值表 （被称作“彩虹表”）中 对比输出数据从而获取明文密码的风险。<br>简单而言，“盐”就是为了提高散列值被破解的难度而加入的少量数据。 现在有很多在线服务都能够提供计算后的散列值以及其对应的原始输入的清单， 并且数据量极其庞大。 通过加“盐”就可以避免直接从清单中查找到对应明文的风险。<br>如果不提供“盐”，password_hash() 函数会随机生成“盐”。 非常简单，行之有效。</p>\n<p>虽然这些算法都有可能被破解，但是这篇博客还是会介绍几种推荐保存的密码的算法的。</p>\n<h1 id=\"二：Md5加密算法-不推荐保存密码\"><a href=\"#二：Md5加密算法-不推荐保存密码\" class=\"headerlink\" title=\"二：Md5加密算法(不推荐保存密码)\"></a>二：Md5加密算法(不推荐保存密码)</h1><p>是单项散列加密算法，不可逆。MD5加密是php最常见的不可逆加密算法。来自 RFC 1321 的解释 - MD5 报文摘要算法：MD5 报文摘要算法将任意长度的信息作为输入值，并将其换算成一个 128 位长度的”指纹信息”或”报文摘要”值来代表这个输入值，并以换算后的值作为结果。MD5 算法主要是为数字签名应用程序而设计的；在这个数字签名应用程序中，较大的文件将在加密（这里的加密过程是通过在一个密码系统下[如：RSA]的公开密钥下设置私有密钥而完成的）之前以一种安全的方式进行压缩。</p>\n<p>语法如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> md5 ( <span class=\"keyword\">string</span> <span class=\"variable\">$str</span> [, <span class=\"keyword\">bool</span> <span class=\"variable\">$raw_output</span> = <span class=\"literal\">false</span> ] )</span><br></pre></td></tr></table></figure>\n<p>参数一的<code>$str</code>是原始字符串<br>参数二的<code>$raw_output</code>是可选值，默认为false，如果设置为true，则md5报文摘要将以16字节长度的原始二进制格式返回。返回以32位字符十六进制数字形式返回散列值。</p>\n<p>示例如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&quot;eyes&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> md5(<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> md5(<span class=\"variable\">$str</span>, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/65ac469513714024a532eb1875c0f83d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：Sha1加密算法-不推荐保存密码\"><a href=\"#三：Sha1加密算法-不推荐保存密码\" class=\"headerlink\" title=\"三：Sha1加密算法(不推荐保存密码)\"></a>三：Sha1加密算法(不推荐保存密码)</h1><p>sha1加密算法和MD5加密算法一样时不可逆的，有两个参数，一个是要加密的字符串，第二个是bool值，如果指定第二个参数为TRUE，则返回二进制格式的字符串，如果不指定则默认为FALSE，返回的是40位的16进制格式的字符串</p>\n<p>语法如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> sha1(<span class=\"keyword\">string</span> <span class=\"variable\">$str</span>[, <span class=\"keyword\">bool</span> <span class=\"variable\">$raw_output</span>=<span class=\"literal\">false</span>])</span><br></pre></td></tr></table></figure>\n<p>参数一的<code>$str</code>是加密的字符串<br>参数二的<code>$raw_output</code>：如果被设置为TRUE，那么sha1摘要将以20字符长度的原始格式返回，否则返回值是一个40字符长度的十六进制数字<br><img src=\"https://img-blog.csdnimg.cn/ba2fdc2374f94231bcf216083afac6fe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：Crypt加密算法-推荐保存密码\"><a href=\"#四：Crypt加密算法-推荐保存密码\" class=\"headerlink\" title=\"四：Crypt加密算法(推荐保存密码)\"></a>四：Crypt加密算法(推荐保存密码)</h1><p>crypt()加密算法是一种不可逆的加密算法，他有两个参数，一个是需要加密的字符串，另外一个是盐值（或者成为干扰字符串）。这个函数在不同的操作系统上的表现形式也是不一样的，会自动检测。该算法可以在PHP5.3及后续版本使用， 它支持多种散列算法。 针对每种受支持的散列算法，PHP 都提供了对应的原生实现， 所以在使用此函数的时候， 你需要保证所选的散列算法是你的系统所能够支持的。</p>\n<p>如果使用 crypt() 函数来进行密码验证， 那么你需要选择一种耗时恒定的字符串比较算法来避免时序攻击。就是说，字符串比较所消耗的时间恒定， 不随输入数据的多少变化而变化，PHP 中的 ==和=== 操作符 和 strcmp() 函数都不是耗时恒定的字符串比较， 但是 password_verify() 可以帮你完成这项工作。 我们鼓励你尽可能的使用原生密码散列API。</p>\n<p>语法如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> crypt(<span class=\"keyword\">string</span> <span class=\"variable\">$str</span>[, <span class=\"keyword\">string</span> <span class=\"variable\">$salt</span>])</span><br></pre></td></tr></table></figure>\n<p>返回一个基于UNIX DES算法或系统上其他可用的替代算法的散列字符串。<br>参数一的<code>str</code>: 需要加密的明文。<br>参数二的<code>$salt</code>：加密时的干扰串，使编码更安全，一般是两个字符<br>然而，如果没有salt的话，如果加密时没有加上这个<code>$salt</code>参数，则会随机生成一个干扰串，且crypt()创建出来的会是弱密码。 php 5.6及之后的版本会在没有它的情况下抛出一个 E_NOTICE 级别的错误。为了更好的安全性，所以需要确保指定一个足够强度的盐值。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&quot;eyes&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> crypt(<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&quot;eyes&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/1bfb95fa8752494f9129d4cf9121ebde.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">图片中以$1开头，$结尾，中间不超过12个字符，是MD5的特色，这个在下面会提到。</p>\n<p>在 crypt() 函数支持多重散列的系统上，下面的常量根据相应的类型是否可用被设置为 0 或 1：</p>\n<ul>\n<li>CRYPT_STD_DES - 基于标准 DES 算法的散列使用 “./0-9A-Za-z” 字符中的两个字符作为盐值，即如果盐值超过2个字符，则截取前两个字符。在盐值中使用非法的字符将导致 crypt() 失败。  </li>\n<li>CRYPT_EXT_DES - 扩展的基于 DES 算法的散列。其盐值为 9 个字符的字符串，由 1 个下划线后面跟着 4 字节循环次数和 4 字节盐值组成。它们被编码成可打印字符，每个字符 6 位，有效位最少的优先。0 到 63 被编码为 “./0-9A-Za-z”。在盐值中使用非法的字符将导致 crypt() 失败。  </li>\n<li>CRYPT_MD5 - MD5 散列使用一个以 $1$ 开始的 12 字符的字符串盐值，注意盐值最多12个字符，超出则截取前8位。  </li>\n<li>CRYPT_BLOWFISH - Blowfish 算法使用如下盐值：”$2a$“，一个两位 cost 参数，”$“ 以及 64 位由 “./0-9A-Za-z” 中的字符组合而成的字符串。在盐值中使用此范围之外的字符将导致 crypt() 返回一个空字符串。两位 cost 参数是循环次数以 2 为底的对数，它的范围是 04-31，超出这个范围将导致 crypt() 失败。 PHP 5.3.7 之前只支持 “$2a$“ 作为盐值的前缀，PHP 5.3.7 开始引入了新的前缀来修正一个在Blowfish实现上的安全风险。可以参考» this document来了解关于这个修复的更多信息。总而言之，开发者如果仅针对 PHP 5.3.7及之后版本进行开发，那应该使用 “$2y$“ 而非 “$2a$“  </li>\n<li>CRYPT_SHA256 - SHA-256 算法使用一个以$5$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 “rounds=&lt;N&gt;$“ 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。  </li>\n<li>CRYPT_SHA512 - SHA-512 算法使用一个以 $6$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 “rounds=&lt;N&gt;$“ 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。 </li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&quot;eyes&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> crypt(<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&quot;eyes&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CRYPT_STD_DES) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;标准DES算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&quot;eyes&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;标准DES算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&quot;eyes&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CRYPT_MD5) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;MD5 散列: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$1$abcd$&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;MD5 散列: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$1$abcd$&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CRYPT_SHA256) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;SHA-256 算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$6$1sas515&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;SHA-256 算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$6$1sas515&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CRYPT_SHA512) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;SHA-512 算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$6$1sa151acacsas515&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;SHA-512 算法: &quot;</span> . crypt(<span class=\"variable\">$str</span>, <span class=\"string\">&#x27;$6$1sa151acacsas515&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/edf3ab3ed8344e8ab8a399781fcedc06.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<!--\n# 五：URL编码加密技术\n对称加密，是可逆的\n# 六：Base64编码加密技术\n对称加密，是可逆的\n# 七：自定义加密算法\n-->\n"},{"title":"GD图像处理——水印图实现","date":"2021-07-29T05:15:41.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/69.jpg","_content":"\n**水印图概念**\n照片水印主要指的是现代的数字照片上面留下的一些logo、信息、网址什么的，比如图像，声音，视频信号等等在里面加了一些数字信息，这样是为了版权保护，当然加入水印也是不能影响原始文件的可读性以及观瞻的，水印具有以下几个特征，首先是证明各位是这个照片的原始主人，或者有的商家为了做宣传用，也会在照片上增加自己的网址，品牌名字等等。\n\n\n**使用图片作水印**\n制作图片水印图原理：将一个带有明显标志的图片放到另外一张需要处理的图片之上\n制作流程：\na. 获得原图资源\nb. 获取水印图资源\nc. 合并图片(把水印图合到目标图上)\nd. 保存输出\ne. 清除资源\n\n使用该方法需要先了解一下PHP中的 imagecopy() 函数，该函数能复制图像的一部分，语法格式如下：\n\n```php\nimagecopy($dst_im, $src_im, $dst_x, $dst_y, $src_x, $src_y, $src_w, $src_h, $pct);\n```\n该函数可以将 \\$src_im 图像中坐标（\\$src_x，\\$src_y）的位置，拷贝一份宽度为 \\$src_w，高度为 \\$src_h 的矩形区域到 \\$dst_im 图像中坐标为 （\\$dst_x，\\$dst_y）的位置上，最后一个参数是设置\\$src_im的透明度。\n\n要使用图片水印的话，我们就需要明确水印图片的宽度和高度，除了可以使用 getimagesize() 函数外，还可以使用 PHP 中的 imagesx()、imagesy() 两个函数来分别获取图片的宽度和高度。\n\n```php\nimagesx($image)\nimagesy($image)\n```\n\n代码实现如下：\n\n```php\n<?php\n\n// 指定图片\n$src_image = 'https://i0.hdslb.com/bfs/album/548e17fdb10dca85d136040896d1e8384daeb4d7.jpg';\n$wat_image = 'https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif';\n\n// 获得原图资源\n$dst = imagecreatefromjpeg($src_image);\n$wat = imagecreatefromgif($wat_image);\n\n// 合并图片(水印制作)\n$res = imagecopymerge($dst, $wat, imagesx($dst) - imagesx($wat), imagesy($dst) - imagesy($wat),0, 0, imagesx($wat), imagesy($wat), 50);\n\n// 保存输出\nheader('Content-type:image/jpeg');\nimagejpeg($dst);\n\n// 清除资源\nimagedestroy($dst);\nimagedestroy($wat);\n```\n![展示](https://img-blog.csdnimg.cn/87d084e6f0ea4a5c9e8cd87942f23bc5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n封装版代码：\n\n```php\n<?php\nheader('Content-type:image/jpeg');\n/*\n * [watermark description]\n * @param  string  $img              [待加水印的图片地址]\n * @param  string  $watermark        [水印图片地址]\n * @param  integer $district         [水印的位置]\n * @param  integer $watermarkquality [图片水印的质量]\n * @return                           [添加水印的图片]\n */\nfunction watermark($img, $watermark, $district = 0,$watermarkquality = 95){\n    $imginfo = @getimagesize($img);\n    $watermarkinfo = @getimagesize($watermark);\n    $img_w = $imginfo[0];\n    $img_h = $imginfo[1];\n    $watermark_w = $watermarkinfo[0];\n    $watermark_h = $watermarkinfo[1];\n    if($district == 0) $district = rand(1,9);\n    if(!is_int($district) OR 1 > $district OR $district > 9) $district = 9;\n    switch($district){\n        case 1:\n            $x = +5;\n            $y = +5;\n            break;\n        case 2:\n            $x = ($img_w - $watermark_w) / 2;\n            $y = +5;\n            break;\n        case 3:\n            $x = $img_w - $watermark_w - 5;\n            $y = +5;\n            break;\n        case 4:\n            $x = +5;\n            $y = ($img_h - $watermark_h) / 2;\n            break;\n        case 5:\n            $x = ($img_w - $watermark_w) / 2;\n            $y = ($img_h - $watermark_h) / 2;\n            break;\n        case 6:\n            $x = $img_w - $watermark_w;\n            $y = ($img_h - $watermark_h) / 2;\n            break;\n        case 7:\n            $x = +5;\n            $y = $img_h - $watermark_h - 5;\n            break;\n        case 8:\n            $x = ($img_w - $watermark_w) / 2;\n            $y = $img_h - $watermark_h - 5;\n            break;\n        case 9:\n            $x = $img_w - $watermark_w - 5;\n            $y = $img_h - $watermark_h - 5;\n            break;\n    }\n    switch ($imginfo[2]) {\n        case 1:\n            $im = @imagecreatefromgif($img);\n            break;\n        case 2:\n            $im = @imagecreatefromjpeg($img);\n            break;\n        case 3:\n            $im = @imagecreatefrompng($img);\n            break;\n    }\n    switch ($watermarkinfo[2]) {\n        case 1:\n            $watermark_logo = @imagecreatefromgif($watermark);\n            break;\n        case 2:\n            $watermark_logo = @imagecreatefromjpeg($watermark);\n            break;\n        case 3:\n            $watermark_logo = @imagecreatefrompng($watermark);\n            break;\n    }\n    if(!$im or !$watermark_logo) return false;\n    $dim = @imagecreatetruecolor($img_w, $img_h);\n    if(@imagecopy($dim, $im, 0, 0, 0, 0,$img_w,$img_h )){\n        imagecopy($dim, $watermark_logo, $x, $y, 0, 0, $watermark_w, $watermark_h);\n    }\n    // 以下注释是为本地文件添加水印，可按需使用\n//    $file = dirname($img) . '/w' . basename($img);\n//    $result = imagejpeg ($dim,$file,$watermarkquality);\n    imagejpeg($dim); // 为了引用网络图片将注释代码换成了这个\n    imagedestroy($watermark_logo);\n    imagedestroy($dim);\n    imagedestroy($im);\n//    if($result){\n//        echo $img.' 水印添加成功';\n//        return;\n//    }\n//    else {\n//        return false;\n//    }\n}\n\n$file = 'https://i0.hdslb.com/bfs/album/548e17fdb10dca85d136040896d1e8384daeb4d7.jpg';   //待加水印的图片地址\n$water = 'https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif';  //水印图片的地址\nwatermark($file, $water);\n```\n\n使用文字作为水印图只需要在图片上画上一些文字即可。详情可见我的另一篇博客：[PHP之GD图像处理](https://blog.csdn.net/tongkongyu/article/details/119154930)\n\n有兴趣还可以看看我的其他相关博客：\n[GD图像处理——验证码处理](https://blog.csdn.net/tongkongyu/article/details/119154877)\n[GD图像处理——缩略图的实现](https://blog.csdn.net/tongkongyu/article/details/119154890)","source":"_posts/PHP/php水印.md","raw":"---\ntitle: GD图像处理——水印图实现\ndate: 2021-07-29 13:15:41\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/69.jpg\ntags: \n  - 水印图\n  - 图像\n  - GD库\ncategories: PHP\n---\n\n**水印图概念**\n照片水印主要指的是现代的数字照片上面留下的一些logo、信息、网址什么的，比如图像，声音，视频信号等等在里面加了一些数字信息，这样是为了版权保护，当然加入水印也是不能影响原始文件的可读性以及观瞻的，水印具有以下几个特征，首先是证明各位是这个照片的原始主人，或者有的商家为了做宣传用，也会在照片上增加自己的网址，品牌名字等等。\n\n\n**使用图片作水印**\n制作图片水印图原理：将一个带有明显标志的图片放到另外一张需要处理的图片之上\n制作流程：\na. 获得原图资源\nb. 获取水印图资源\nc. 合并图片(把水印图合到目标图上)\nd. 保存输出\ne. 清除资源\n\n使用该方法需要先了解一下PHP中的 imagecopy() 函数，该函数能复制图像的一部分，语法格式如下：\n\n```php\nimagecopy($dst_im, $src_im, $dst_x, $dst_y, $src_x, $src_y, $src_w, $src_h, $pct);\n```\n该函数可以将 \\$src_im 图像中坐标（\\$src_x，\\$src_y）的位置，拷贝一份宽度为 \\$src_w，高度为 \\$src_h 的矩形区域到 \\$dst_im 图像中坐标为 （\\$dst_x，\\$dst_y）的位置上，最后一个参数是设置\\$src_im的透明度。\n\n要使用图片水印的话，我们就需要明确水印图片的宽度和高度，除了可以使用 getimagesize() 函数外，还可以使用 PHP 中的 imagesx()、imagesy() 两个函数来分别获取图片的宽度和高度。\n\n```php\nimagesx($image)\nimagesy($image)\n```\n\n代码实现如下：\n\n```php\n<?php\n\n// 指定图片\n$src_image = 'https://i0.hdslb.com/bfs/album/548e17fdb10dca85d136040896d1e8384daeb4d7.jpg';\n$wat_image = 'https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif';\n\n// 获得原图资源\n$dst = imagecreatefromjpeg($src_image);\n$wat = imagecreatefromgif($wat_image);\n\n// 合并图片(水印制作)\n$res = imagecopymerge($dst, $wat, imagesx($dst) - imagesx($wat), imagesy($dst) - imagesy($wat),0, 0, imagesx($wat), imagesy($wat), 50);\n\n// 保存输出\nheader('Content-type:image/jpeg');\nimagejpeg($dst);\n\n// 清除资源\nimagedestroy($dst);\nimagedestroy($wat);\n```\n![展示](https://img-blog.csdnimg.cn/87d084e6f0ea4a5c9e8cd87942f23bc5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n封装版代码：\n\n```php\n<?php\nheader('Content-type:image/jpeg');\n/*\n * [watermark description]\n * @param  string  $img              [待加水印的图片地址]\n * @param  string  $watermark        [水印图片地址]\n * @param  integer $district         [水印的位置]\n * @param  integer $watermarkquality [图片水印的质量]\n * @return                           [添加水印的图片]\n */\nfunction watermark($img, $watermark, $district = 0,$watermarkquality = 95){\n    $imginfo = @getimagesize($img);\n    $watermarkinfo = @getimagesize($watermark);\n    $img_w = $imginfo[0];\n    $img_h = $imginfo[1];\n    $watermark_w = $watermarkinfo[0];\n    $watermark_h = $watermarkinfo[1];\n    if($district == 0) $district = rand(1,9);\n    if(!is_int($district) OR 1 > $district OR $district > 9) $district = 9;\n    switch($district){\n        case 1:\n            $x = +5;\n            $y = +5;\n            break;\n        case 2:\n            $x = ($img_w - $watermark_w) / 2;\n            $y = +5;\n            break;\n        case 3:\n            $x = $img_w - $watermark_w - 5;\n            $y = +5;\n            break;\n        case 4:\n            $x = +5;\n            $y = ($img_h - $watermark_h) / 2;\n            break;\n        case 5:\n            $x = ($img_w - $watermark_w) / 2;\n            $y = ($img_h - $watermark_h) / 2;\n            break;\n        case 6:\n            $x = $img_w - $watermark_w;\n            $y = ($img_h - $watermark_h) / 2;\n            break;\n        case 7:\n            $x = +5;\n            $y = $img_h - $watermark_h - 5;\n            break;\n        case 8:\n            $x = ($img_w - $watermark_w) / 2;\n            $y = $img_h - $watermark_h - 5;\n            break;\n        case 9:\n            $x = $img_w - $watermark_w - 5;\n            $y = $img_h - $watermark_h - 5;\n            break;\n    }\n    switch ($imginfo[2]) {\n        case 1:\n            $im = @imagecreatefromgif($img);\n            break;\n        case 2:\n            $im = @imagecreatefromjpeg($img);\n            break;\n        case 3:\n            $im = @imagecreatefrompng($img);\n            break;\n    }\n    switch ($watermarkinfo[2]) {\n        case 1:\n            $watermark_logo = @imagecreatefromgif($watermark);\n            break;\n        case 2:\n            $watermark_logo = @imagecreatefromjpeg($watermark);\n            break;\n        case 3:\n            $watermark_logo = @imagecreatefrompng($watermark);\n            break;\n    }\n    if(!$im or !$watermark_logo) return false;\n    $dim = @imagecreatetruecolor($img_w, $img_h);\n    if(@imagecopy($dim, $im, 0, 0, 0, 0,$img_w,$img_h )){\n        imagecopy($dim, $watermark_logo, $x, $y, 0, 0, $watermark_w, $watermark_h);\n    }\n    // 以下注释是为本地文件添加水印，可按需使用\n//    $file = dirname($img) . '/w' . basename($img);\n//    $result = imagejpeg ($dim,$file,$watermarkquality);\n    imagejpeg($dim); // 为了引用网络图片将注释代码换成了这个\n    imagedestroy($watermark_logo);\n    imagedestroy($dim);\n    imagedestroy($im);\n//    if($result){\n//        echo $img.' 水印添加成功';\n//        return;\n//    }\n//    else {\n//        return false;\n//    }\n}\n\n$file = 'https://i0.hdslb.com/bfs/album/548e17fdb10dca85d136040896d1e8384daeb4d7.jpg';   //待加水印的图片地址\n$water = 'https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif';  //水印图片的地址\nwatermark($file, $water);\n```\n\n使用文字作为水印图只需要在图片上画上一些文字即可。详情可见我的另一篇博客：[PHP之GD图像处理](https://blog.csdn.net/tongkongyu/article/details/119154930)\n\n有兴趣还可以看看我的其他相关博客：\n[GD图像处理——验证码处理](https://blog.csdn.net/tongkongyu/article/details/119154877)\n[GD图像处理——缩略图的实现](https://blog.csdn.net/tongkongyu/article/details/119154890)","slug":"PHP/php水印","published":1,"updated":"2021-12-03T14:58:52.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958an0009asdac7wi9bzf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>水印图概念</strong><br>照片水印主要指的是现代的数字照片上面留下的一些logo、信息、网址什么的，比如图像，声音，视频信号等等在里面加了一些数字信息，这样是为了版权保护，当然加入水印也是不能影响原始文件的可读性以及观瞻的，水印具有以下几个特征，首先是证明各位是这个照片的原始主人，或者有的商家为了做宣传用，也会在照片上增加自己的网址，品牌名字等等。</p>\n<p><strong>使用图片作水印</strong><br>制作图片水印图原理：将一个带有明显标志的图片放到另外一张需要处理的图片之上<br>制作流程：<br>a. 获得原图资源<br>b. 获取水印图资源<br>c. 合并图片(把水印图合到目标图上)<br>d. 保存输出<br>e. 清除资源</p>\n<p>使用该方法需要先了解一下PHP中的 imagecopy() 函数，该函数能复制图像的一部分，语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagecopy(<span class=\"variable\">$dst_im</span>, <span class=\"variable\">$src_im</span>, <span class=\"variable\">$dst_x</span>, <span class=\"variable\">$dst_y</span>, <span class=\"variable\">$src_x</span>, <span class=\"variable\">$src_y</span>, <span class=\"variable\">$src_w</span>, <span class=\"variable\">$src_h</span>, <span class=\"variable\">$pct</span>);</span><br></pre></td></tr></table></figure>\n<p>该函数可以将 $src_im 图像中坐标（$src_x，$src_y）的位置，拷贝一份宽度为 $src_w，高度为 $src_h 的矩形区域到 $dst_im 图像中坐标为 （$dst_x，$dst_y）的位置上，最后一个参数是设置$src_im的透明度。</p>\n<p>要使用图片水印的话，我们就需要明确水印图片的宽度和高度，除了可以使用 getimagesize() 函数外，还可以使用 PHP 中的 imagesx()、imagesy() 两个函数来分别获取图片的宽度和高度。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagesx(<span class=\"variable\">$image</span>)</span><br><span class=\"line\">imagesy(<span class=\"variable\">$image</span>)</span><br></pre></td></tr></table></figure>\n\n<p>代码实现如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指定图片</span></span><br><span class=\"line\"><span class=\"variable\">$src_image</span> = <span class=\"string\">&#x27;https://i0.hdslb.com/bfs/album/548e17fdb10dca85d136040896d1e8384daeb4d7.jpg&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$wat_image</span> = <span class=\"string\">&#x27;https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得原图资源</span></span><br><span class=\"line\"><span class=\"variable\">$dst</span> = imagecreatefromjpeg(<span class=\"variable\">$src_image</span>);</span><br><span class=\"line\"><span class=\"variable\">$wat</span> = imagecreatefromgif(<span class=\"variable\">$wat_image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 合并图片(水印制作)</span></span><br><span class=\"line\"><span class=\"variable\">$res</span> = imagecopymerge(<span class=\"variable\">$dst</span>, <span class=\"variable\">$wat</span>, imagesx(<span class=\"variable\">$dst</span>) - imagesx(<span class=\"variable\">$wat</span>), imagesy(<span class=\"variable\">$dst</span>) - imagesy(<span class=\"variable\">$wat</span>),<span class=\"number\">0</span>, <span class=\"number\">0</span>, imagesx(<span class=\"variable\">$wat</span>), imagesy(<span class=\"variable\">$wat</span>), <span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 保存输出</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\">imagejpeg(<span class=\"variable\">$dst</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清除资源</span></span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$dst</span>);</span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$wat</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/87d084e6f0ea4a5c9e8cd87942f23bc5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>封装版代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * [watermark description]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  string  $img              [待加水印的图片地址]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  string  $watermark        [水印图片地址]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  integer $district         [水印的位置]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  integer $watermarkquality [图片水印的质量]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span>                           [添加水印的图片]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">watermark</span>(<span class=\"params\"><span class=\"variable\">$img</span>, <span class=\"variable\">$watermark</span>, <span class=\"variable\">$district</span> = <span class=\"number\">0</span>,<span class=\"variable\">$watermarkquality</span> = <span class=\"number\">95</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$imginfo</span> = @getimagesize(<span class=\"variable\">$img</span>);</span><br><span class=\"line\">    <span class=\"variable\">$watermarkinfo</span> = @getimagesize(<span class=\"variable\">$watermark</span>);</span><br><span class=\"line\">    <span class=\"variable\">$img_w</span> = <span class=\"variable\">$imginfo</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"variable\">$img_h</span> = <span class=\"variable\">$imginfo</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"variable\">$watermark_w</span> = <span class=\"variable\">$watermarkinfo</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"variable\">$watermark_h</span> = <span class=\"variable\">$watermarkinfo</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$district</span> == <span class=\"number\">0</span>) <span class=\"variable\">$district</span> = rand(<span class=\"number\">1</span>,<span class=\"number\">9</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!is_int(<span class=\"variable\">$district</span>) <span class=\"keyword\">OR</span> <span class=\"number\">1</span> &gt; <span class=\"variable\">$district</span> <span class=\"keyword\">OR</span> <span class=\"variable\">$district</span> &gt; <span class=\"number\">9</span>) <span class=\"variable\">$district</span> = <span class=\"number\">9</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(<span class=\"variable\">$district</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = (<span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = <span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = (<span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = (<span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = (<span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = <span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = (<span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = <span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">8</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = (<span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = <span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">9</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = <span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = <span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$imginfo</span>[<span class=\"number\">2</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"variable\">$im</span> = @imagecreatefromgif(<span class=\"variable\">$img</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$im</span> = @imagecreatefromjpeg(<span class=\"variable\">$img</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$im</span> = @imagecreatefrompng(<span class=\"variable\">$img</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$watermarkinfo</span>[<span class=\"number\">2</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"variable\">$watermark_logo</span> = @imagecreatefromgif(<span class=\"variable\">$watermark</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$watermark_logo</span> = @imagecreatefromjpeg(<span class=\"variable\">$watermark</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$watermark_logo</span> = @imagecreatefrompng(<span class=\"variable\">$watermark</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"variable\">$im</span> <span class=\"keyword\">or</span> !<span class=\"variable\">$watermark_logo</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"variable\">$dim</span> = @imagecreatetruecolor(<span class=\"variable\">$img_w</span>, <span class=\"variable\">$img_h</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(@imagecopy(<span class=\"variable\">$dim</span>, <span class=\"variable\">$im</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>,<span class=\"variable\">$img_w</span>,<span class=\"variable\">$img_h</span> ))&#123;</span><br><span class=\"line\">        imagecopy(<span class=\"variable\">$dim</span>, <span class=\"variable\">$watermark_logo</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$watermark_w</span>, <span class=\"variable\">$watermark_h</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 以下注释是为本地文件添加水印，可按需使用</span></span><br><span class=\"line\"><span class=\"comment\">//    $file = dirname($img) . &#x27;/w&#x27; . basename($img);</span></span><br><span class=\"line\"><span class=\"comment\">//    $result = imagejpeg ($dim,$file,$watermarkquality);</span></span><br><span class=\"line\">    imagejpeg(<span class=\"variable\">$dim</span>); <span class=\"comment\">// 为了引用网络图片将注释代码换成了这个</span></span><br><span class=\"line\">    imagedestroy(<span class=\"variable\">$watermark_logo</span>);</span><br><span class=\"line\">    imagedestroy(<span class=\"variable\">$dim</span>);</span><br><span class=\"line\">    imagedestroy(<span class=\"variable\">$im</span>);</span><br><span class=\"line\"><span class=\"comment\">//    if($result)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        echo $img.&#x27; 水印添加成功&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">//        return;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//    else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        return false;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"string\">&#x27;https://i0.hdslb.com/bfs/album/548e17fdb10dca85d136040896d1e8384daeb4d7.jpg&#x27;</span>;   <span class=\"comment\">//待加水印的图片地址</span></span><br><span class=\"line\"><span class=\"variable\">$water</span> = <span class=\"string\">&#x27;https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif&#x27;</span>;  <span class=\"comment\">//水印图片的地址</span></span><br><span class=\"line\">watermark(<span class=\"variable\">$file</span>, <span class=\"variable\">$water</span>);</span><br></pre></td></tr></table></figure>\n\n<p>使用文字作为水印图只需要在图片上画上一些文字即可。详情可见我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/119154930\">PHP之GD图像处理</a></p>\n<p>有兴趣还可以看看我的其他相关博客：<br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154877\">GD图像处理——验证码处理</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154890\">GD图像处理——缩略图的实现</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>水印图概念</strong><br>照片水印主要指的是现代的数字照片上面留下的一些logo、信息、网址什么的，比如图像，声音，视频信号等等在里面加了一些数字信息，这样是为了版权保护，当然加入水印也是不能影响原始文件的可读性以及观瞻的，水印具有以下几个特征，首先是证明各位是这个照片的原始主人，或者有的商家为了做宣传用，也会在照片上增加自己的网址，品牌名字等等。</p>\n<p><strong>使用图片作水印</strong><br>制作图片水印图原理：将一个带有明显标志的图片放到另外一张需要处理的图片之上<br>制作流程：<br>a. 获得原图资源<br>b. 获取水印图资源<br>c. 合并图片(把水印图合到目标图上)<br>d. 保存输出<br>e. 清除资源</p>\n<p>使用该方法需要先了解一下PHP中的 imagecopy() 函数，该函数能复制图像的一部分，语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagecopy(<span class=\"variable\">$dst_im</span>, <span class=\"variable\">$src_im</span>, <span class=\"variable\">$dst_x</span>, <span class=\"variable\">$dst_y</span>, <span class=\"variable\">$src_x</span>, <span class=\"variable\">$src_y</span>, <span class=\"variable\">$src_w</span>, <span class=\"variable\">$src_h</span>, <span class=\"variable\">$pct</span>);</span><br></pre></td></tr></table></figure>\n<p>该函数可以将 $src_im 图像中坐标（$src_x，$src_y）的位置，拷贝一份宽度为 $src_w，高度为 $src_h 的矩形区域到 $dst_im 图像中坐标为 （$dst_x，$dst_y）的位置上，最后一个参数是设置$src_im的透明度。</p>\n<p>要使用图片水印的话，我们就需要明确水印图片的宽度和高度，除了可以使用 getimagesize() 函数外，还可以使用 PHP 中的 imagesx()、imagesy() 两个函数来分别获取图片的宽度和高度。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagesx(<span class=\"variable\">$image</span>)</span><br><span class=\"line\">imagesy(<span class=\"variable\">$image</span>)</span><br></pre></td></tr></table></figure>\n\n<p>代码实现如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指定图片</span></span><br><span class=\"line\"><span class=\"variable\">$src_image</span> = <span class=\"string\">&#x27;https://i0.hdslb.com/bfs/album/548e17fdb10dca85d136040896d1e8384daeb4d7.jpg&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$wat_image</span> = <span class=\"string\">&#x27;https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得原图资源</span></span><br><span class=\"line\"><span class=\"variable\">$dst</span> = imagecreatefromjpeg(<span class=\"variable\">$src_image</span>);</span><br><span class=\"line\"><span class=\"variable\">$wat</span> = imagecreatefromgif(<span class=\"variable\">$wat_image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 合并图片(水印制作)</span></span><br><span class=\"line\"><span class=\"variable\">$res</span> = imagecopymerge(<span class=\"variable\">$dst</span>, <span class=\"variable\">$wat</span>, imagesx(<span class=\"variable\">$dst</span>) - imagesx(<span class=\"variable\">$wat</span>), imagesy(<span class=\"variable\">$dst</span>) - imagesy(<span class=\"variable\">$wat</span>),<span class=\"number\">0</span>, <span class=\"number\">0</span>, imagesx(<span class=\"variable\">$wat</span>), imagesy(<span class=\"variable\">$wat</span>), <span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 保存输出</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\">imagejpeg(<span class=\"variable\">$dst</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清除资源</span></span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$dst</span>);</span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$wat</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/87d084e6f0ea4a5c9e8cd87942f23bc5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>封装版代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * [watermark description]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  string  $img              [待加水印的图片地址]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  string  $watermark        [水印图片地址]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  integer $district         [水印的位置]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  integer $watermarkquality [图片水印的质量]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span>                           [添加水印的图片]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">watermark</span>(<span class=\"params\"><span class=\"variable\">$img</span>, <span class=\"variable\">$watermark</span>, <span class=\"variable\">$district</span> = <span class=\"number\">0</span>,<span class=\"variable\">$watermarkquality</span> = <span class=\"number\">95</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$imginfo</span> = @getimagesize(<span class=\"variable\">$img</span>);</span><br><span class=\"line\">    <span class=\"variable\">$watermarkinfo</span> = @getimagesize(<span class=\"variable\">$watermark</span>);</span><br><span class=\"line\">    <span class=\"variable\">$img_w</span> = <span class=\"variable\">$imginfo</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"variable\">$img_h</span> = <span class=\"variable\">$imginfo</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"variable\">$watermark_w</span> = <span class=\"variable\">$watermarkinfo</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"variable\">$watermark_h</span> = <span class=\"variable\">$watermarkinfo</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$district</span> == <span class=\"number\">0</span>) <span class=\"variable\">$district</span> = rand(<span class=\"number\">1</span>,<span class=\"number\">9</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!is_int(<span class=\"variable\">$district</span>) <span class=\"keyword\">OR</span> <span class=\"number\">1</span> &gt; <span class=\"variable\">$district</span> <span class=\"keyword\">OR</span> <span class=\"variable\">$district</span> &gt; <span class=\"number\">9</span>) <span class=\"variable\">$district</span> = <span class=\"number\">9</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(<span class=\"variable\">$district</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = (<span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = <span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = (<span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = (<span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = (<span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = <span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = (<span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = +<span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = <span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">8</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = (<span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = <span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">9</span>:</span><br><span class=\"line\">            <span class=\"variable\">$x</span> = <span class=\"variable\">$img_w</span> - <span class=\"variable\">$watermark_w</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"variable\">$y</span> = <span class=\"variable\">$img_h</span> - <span class=\"variable\">$watermark_h</span> - <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$imginfo</span>[<span class=\"number\">2</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"variable\">$im</span> = @imagecreatefromgif(<span class=\"variable\">$img</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$im</span> = @imagecreatefromjpeg(<span class=\"variable\">$img</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$im</span> = @imagecreatefrompng(<span class=\"variable\">$img</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$watermarkinfo</span>[<span class=\"number\">2</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"variable\">$watermark_logo</span> = @imagecreatefromgif(<span class=\"variable\">$watermark</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$watermark_logo</span> = @imagecreatefromjpeg(<span class=\"variable\">$watermark</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$watermark_logo</span> = @imagecreatefrompng(<span class=\"variable\">$watermark</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"variable\">$im</span> <span class=\"keyword\">or</span> !<span class=\"variable\">$watermark_logo</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"variable\">$dim</span> = @imagecreatetruecolor(<span class=\"variable\">$img_w</span>, <span class=\"variable\">$img_h</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(@imagecopy(<span class=\"variable\">$dim</span>, <span class=\"variable\">$im</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>,<span class=\"variable\">$img_w</span>,<span class=\"variable\">$img_h</span> ))&#123;</span><br><span class=\"line\">        imagecopy(<span class=\"variable\">$dim</span>, <span class=\"variable\">$watermark_logo</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$watermark_w</span>, <span class=\"variable\">$watermark_h</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 以下注释是为本地文件添加水印，可按需使用</span></span><br><span class=\"line\"><span class=\"comment\">//    $file = dirname($img) . &#x27;/w&#x27; . basename($img);</span></span><br><span class=\"line\"><span class=\"comment\">//    $result = imagejpeg ($dim,$file,$watermarkquality);</span></span><br><span class=\"line\">    imagejpeg(<span class=\"variable\">$dim</span>); <span class=\"comment\">// 为了引用网络图片将注释代码换成了这个</span></span><br><span class=\"line\">    imagedestroy(<span class=\"variable\">$watermark_logo</span>);</span><br><span class=\"line\">    imagedestroy(<span class=\"variable\">$dim</span>);</span><br><span class=\"line\">    imagedestroy(<span class=\"variable\">$im</span>);</span><br><span class=\"line\"><span class=\"comment\">//    if($result)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        echo $img.&#x27; 水印添加成功&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">//        return;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//    else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        return false;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"string\">&#x27;https://i0.hdslb.com/bfs/album/548e17fdb10dca85d136040896d1e8384daeb4d7.jpg&#x27;</span>;   <span class=\"comment\">//待加水印的图片地址</span></span><br><span class=\"line\"><span class=\"variable\">$water</span> = <span class=\"string\">&#x27;https://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif&#x27;</span>;  <span class=\"comment\">//水印图片的地址</span></span><br><span class=\"line\">watermark(<span class=\"variable\">$file</span>, <span class=\"variable\">$water</span>);</span><br></pre></td></tr></table></figure>\n\n<p>使用文字作为水印图只需要在图片上画上一些文字即可。详情可见我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/119154930\">PHP之GD图像处理</a></p>\n<p>有兴趣还可以看看我的其他相关博客：<br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154877\">GD图像处理——验证码处理</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154890\">GD图像处理——缩略图的实现</a></p>\n"},{"title":"利用php的mail函数发送邮件","date":"2021-06-01T04:30:39.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/24.jpg","_content":"\n\n```\n   利用PHP的mail函数发送邮件\n   mail()函数的作用：连接到邮件服务器，利用smtp协议，与该服务器交互并投邮件\n   注意：\n       1.mail函数不支持esmtp协议，即只能直投不能登录\n       2.由上条知，我们只能直投至最终的收件服务器地址，而该地址需要在php.ini中指定\n```\n此处以网易邮箱为例，先找到服务器地址：\n![展示](https://img-blog.csdnimg.cn/20210531195902561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n再把该地址写到php.ini中，打开php.ini，找到mail function，将其中一个地址填进去，并开启发件人设置：\n![展示](https://img-blog.csdnimg.cn/20210601122616885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n再重启apache,以管理员身份打开命令提示符:\n\n```powershell\nhttpd -k restart\n```\n![展示](https://img-blog.csdnimg.cn/20210531200407783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)此时php.ini修改生效。现在开始使用mail函数：\n语法：mail(to,subject,message,headers,parameters) \n|参数|  \t描述 |\n|--|--|\n| to | 必需。规定 email 接收者。 |\n| subject | 必需。规定 email 的主题。注释：该参数不能包含任何新行字符。 |\n| message | 必需。定义要发送的消息。应使用 LF (\\n) 来分隔各行。每行应该限制在 70 个字符内。 |\n| headers |  \t可选。规定附加的标题，比如 From、Cc 和 Bcc。应当使用 CRLF (\\r\\n) 分隔附加的标题。 |\n| parameters | 可选。对邮件发送程序规定额外的参数。 |\n以下为代码部分：\n\n```php\n<?php\n$to = 'eyes7927@163.com';\n$sub = 'say hello';\n$msg = 'hello, php!';\n$from = \"From: <eyes>\";\nmail($to,$sub,$msg,$from);\n```\n效果展示：\n![展示](https://img-blog.csdnimg.cn/20210601123223421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210601123257664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n注：因为上面演示时是用了网易邮箱的服务器地址，而其不提供转发服务，因此只能给网易邮箱发邮件，如果想要给QQ邮箱发邮件，需要在php.ini设置QQ邮箱服务器地址，如果需要给任何邮箱都能发邮件，就需要安装一台匿名的smtp服务器作为中转，或许我以后会在这篇博客里更新出相关内容。如果确实有小伙伴现在就需要往任何邮箱发邮件的话，可以看看我的另一篇博客：[使用PHPMailer-master发送邮件](https://blog.csdn.net/tongkongyu/article/details/117414108?spm=1001.2014.3001.5501)，这是另一种发邮件的思路。如果想要了解一些有趣的东西，也可以看看这篇博客：[利用smtp协议实现命令行发送邮件](https://blog.csdn.net/tongkongyu/article/details/117416246?spm=1001.2014.3001.5501)，这种方式就有点涉及原理了。\n","source":"_posts/PHP/php的mail.md","raw":"---\ntitle: 利用php的mail函数发送邮件\ndate: 2021-06-01 12:30:39\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/24.jpg\ntags: \n  - 邮件\n  - PHP\ncategories: PHP\n---\n\n\n```\n   利用PHP的mail函数发送邮件\n   mail()函数的作用：连接到邮件服务器，利用smtp协议，与该服务器交互并投邮件\n   注意：\n       1.mail函数不支持esmtp协议，即只能直投不能登录\n       2.由上条知，我们只能直投至最终的收件服务器地址，而该地址需要在php.ini中指定\n```\n此处以网易邮箱为例，先找到服务器地址：\n![展示](https://img-blog.csdnimg.cn/20210531195902561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n再把该地址写到php.ini中，打开php.ini，找到mail function，将其中一个地址填进去，并开启发件人设置：\n![展示](https://img-blog.csdnimg.cn/20210601122616885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n再重启apache,以管理员身份打开命令提示符:\n\n```powershell\nhttpd -k restart\n```\n![展示](https://img-blog.csdnimg.cn/20210531200407783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)此时php.ini修改生效。现在开始使用mail函数：\n语法：mail(to,subject,message,headers,parameters) \n|参数|  \t描述 |\n|--|--|\n| to | 必需。规定 email 接收者。 |\n| subject | 必需。规定 email 的主题。注释：该参数不能包含任何新行字符。 |\n| message | 必需。定义要发送的消息。应使用 LF (\\n) 来分隔各行。每行应该限制在 70 个字符内。 |\n| headers |  \t可选。规定附加的标题，比如 From、Cc 和 Bcc。应当使用 CRLF (\\r\\n) 分隔附加的标题。 |\n| parameters | 可选。对邮件发送程序规定额外的参数。 |\n以下为代码部分：\n\n```php\n<?php\n$to = 'eyes7927@163.com';\n$sub = 'say hello';\n$msg = 'hello, php!';\n$from = \"From: <eyes>\";\nmail($to,$sub,$msg,$from);\n```\n效果展示：\n![展示](https://img-blog.csdnimg.cn/20210601123223421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210601123257664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n注：因为上面演示时是用了网易邮箱的服务器地址，而其不提供转发服务，因此只能给网易邮箱发邮件，如果想要给QQ邮箱发邮件，需要在php.ini设置QQ邮箱服务器地址，如果需要给任何邮箱都能发邮件，就需要安装一台匿名的smtp服务器作为中转，或许我以后会在这篇博客里更新出相关内容。如果确实有小伙伴现在就需要往任何邮箱发邮件的话，可以看看我的另一篇博客：[使用PHPMailer-master发送邮件](https://blog.csdn.net/tongkongyu/article/details/117414108?spm=1001.2014.3001.5501)，这是另一种发邮件的思路。如果想要了解一些有趣的东西，也可以看看这篇博客：[利用smtp协议实现命令行发送邮件](https://blog.csdn.net/tongkongyu/article/details/117416246?spm=1001.2014.3001.5501)，这种方式就有点涉及原理了。\n","slug":"PHP/php的mail","published":1,"updated":"2021-12-04T02:55:06.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958ao000aasdaec61dg3u","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用PHP的mail函数发送邮件</span><br><span class=\"line\">mail()函数的作用：连接到邮件服务器，利用smtp协议，与该服务器交互并投邮件</span><br><span class=\"line\">注意：</span><br><span class=\"line\">    1.mail函数不支持esmtp协议，即只能直投不能登录</span><br><span class=\"line\">    2.由上条知，我们只能直投至最终的收件服务器地址，而该地址需要在php.ini中指定</span><br></pre></td></tr></table></figure>\n<p>此处以网易邮箱为例，先找到服务器地址：<br><img src=\"https://img-blog.csdnimg.cn/20210531195902561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>再把该地址写到php.ini中，打开php.ini，找到mail function，将其中一个地址填进去，并开启发件人设置：<br><img src=\"https://img-blog.csdnimg.cn/20210601122616885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>再重启apache,以管理员身份打开命令提示符:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">httpd <span class=\"literal\">-k</span> restart</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210531200407783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">此时php.ini修改生效。现在开始使用mail函数：<br>语法：mail(to,subject,message,headers,parameters)<br>|参数|      描述 |<br>|–|–|<br>| to | 必需。规定 email 接收者。 |<br>| subject | 必需。规定 email 的主题。注释：该参数不能包含任何新行字符。 |<br>| message | 必需。定义要发送的消息。应使用 LF (\\n) 来分隔各行。每行应该限制在 70 个字符内。 |<br>| headers |      可选。规定附加的标题，比如 From、Cc 和 Bcc。应当使用 CRLF (\\r\\n) 分隔附加的标题。 |<br>| parameters | 可选。对邮件发送程序规定额外的参数。 |<br>以下为代码部分：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$to</span> = <span class=\"string\">&#x27;eyes7927@163.com&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$sub</span> = <span class=\"string\">&#x27;say hello&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;hello, php!&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$from</span> = <span class=\"string\">&quot;From: &lt;eyes&gt;&quot;</span>;</span><br><span class=\"line\">mail(<span class=\"variable\">$to</span>,<span class=\"variable\">$sub</span>,<span class=\"variable\">$msg</span>,<span class=\"variable\">$from</span>);</span><br></pre></td></tr></table></figure>\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/20210601123223421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/20210601123257664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>注：因为上面演示时是用了网易邮箱的服务器地址，而其不提供转发服务，因此只能给网易邮箱发邮件，如果想要给QQ邮箱发邮件，需要在php.ini设置QQ邮箱服务器地址，如果需要给任何邮箱都能发邮件，就需要安装一台匿名的smtp服务器作为中转，或许我以后会在这篇博客里更新出相关内容。如果确实有小伙伴现在就需要往任何邮箱发邮件的话，可以看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117414108?spm=1001.2014.3001.5501\">使用PHPMailer-master发送邮件</a>，这是另一种发邮件的思路。如果想要了解一些有趣的东西，也可以看看这篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117416246?spm=1001.2014.3001.5501\">利用smtp协议实现命令行发送邮件</a>，这种方式就有点涉及原理了。</p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用PHP的mail函数发送邮件</span><br><span class=\"line\">mail()函数的作用：连接到邮件服务器，利用smtp协议，与该服务器交互并投邮件</span><br><span class=\"line\">注意：</span><br><span class=\"line\">    1.mail函数不支持esmtp协议，即只能直投不能登录</span><br><span class=\"line\">    2.由上条知，我们只能直投至最终的收件服务器地址，而该地址需要在php.ini中指定</span><br></pre></td></tr></table></figure>\n<p>此处以网易邮箱为例，先找到服务器地址：<br><img src=\"https://img-blog.csdnimg.cn/20210531195902561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>再把该地址写到php.ini中，打开php.ini，找到mail function，将其中一个地址填进去，并开启发件人设置：<br><img src=\"https://img-blog.csdnimg.cn/20210601122616885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>再重启apache,以管理员身份打开命令提示符:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">httpd <span class=\"literal\">-k</span> restart</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210531200407783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">此时php.ini修改生效。现在开始使用mail函数：<br>语法：mail(to,subject,message,headers,parameters)<br>|参数|      描述 |<br>|–|–|<br>| to | 必需。规定 email 接收者。 |<br>| subject | 必需。规定 email 的主题。注释：该参数不能包含任何新行字符。 |<br>| message | 必需。定义要发送的消息。应使用 LF (\\n) 来分隔各行。每行应该限制在 70 个字符内。 |<br>| headers |      可选。规定附加的标题，比如 From、Cc 和 Bcc。应当使用 CRLF (\\r\\n) 分隔附加的标题。 |<br>| parameters | 可选。对邮件发送程序规定额外的参数。 |<br>以下为代码部分：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$to</span> = <span class=\"string\">&#x27;eyes7927@163.com&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$sub</span> = <span class=\"string\">&#x27;say hello&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;hello, php!&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$from</span> = <span class=\"string\">&quot;From: &lt;eyes&gt;&quot;</span>;</span><br><span class=\"line\">mail(<span class=\"variable\">$to</span>,<span class=\"variable\">$sub</span>,<span class=\"variable\">$msg</span>,<span class=\"variable\">$from</span>);</span><br></pre></td></tr></table></figure>\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/20210601123223421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/20210601123257664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>注：因为上面演示时是用了网易邮箱的服务器地址，而其不提供转发服务，因此只能给网易邮箱发邮件，如果想要给QQ邮箱发邮件，需要在php.ini设置QQ邮箱服务器地址，如果需要给任何邮箱都能发邮件，就需要安装一台匿名的smtp服务器作为中转，或许我以后会在这篇博客里更新出相关内容。如果确实有小伙伴现在就需要往任何邮箱发邮件的话，可以看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117414108?spm=1001.2014.3001.5501\">使用PHPMailer-master发送邮件</a>，这是另一种发邮件的思路。如果想要了解一些有趣的东西，也可以看看这篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117416246?spm=1001.2014.3001.5501\">利用smtp协议实现命令行发送邮件</a>，这种方式就有点涉及原理了。</p>\n"},{"title":"PHP表单汇总","date":"2021-07-23T12:52:54.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/27.jpg","_content":"\n### PHP 表单\n#### (1). PHP表单处理\nPHP 中的 $_GET 和 $_POST 变量用于检索表单中的信息，比如用户输入。有一点很重要的事情值得注意，当处理 HTML 表单时，PHP 能把来自 HTML 页面中的表单元素自动变成可供 PHP 脚本使用。\n\nbase.html 文件代码：\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<form action=\"base.php\" method=\"post\">\n    名字: <input type=\"text\" name=\"fname\">\n    年龄: <input type=\"text\" name=\"age\">\n    <input type=\"submit\" value=\"提交\">\n</form>\n</body>\n</html>\n```\nbase.php 文件代码：\n\n```php\n欢迎<?php echo $_POST[\"fname\"]; ?>!<br>\n你的年龄是 <?php echo $_POST[\"age\"]; ?>  岁。\n```\n![展示](https://img-blog.csdnimg.cn/7b8c7bdd6e9a46049667346aac6ebf89.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### (2). PHP获取下拉菜单的数据\n**PHP下拉菜单单选**\n\n```php\n<?php\n$q = isset($_GET['q']) ? htmlspecialchars($_GET['q']) : '';\nif ($q) {\n    if ($q == 'RUNOOB') {\n        echo '菜鸟教程<br>http://www.runoob.com';\n    } else if ($q == 'GOOGLE') {\n        echo 'Google 搜索<br>http://www.google.com';\n    } else if ($q == 'TAOBAO') {\n        echo '淘宝<br>http://www.taobao.com';\n    }\n} else {\n    ?>.\n    <form action=\"\" method=\"get\">  <!--action 属性值为空表示提交到当前脚本-->\n        <select name=\"q\">\n            <option value=\"\">选择一个站点:</option>\n            <option value=\"RUNOOB\">Runoob</option>\n            <option value=\"GOOGLE\">Google</option>\n            <option value=\"TAOBAO\">Taobao</option>\n        </select>\n        <input type=\"submit\" value=\"提交\">\n    </form>\n    <?php\n}\n?>\n```\n现对代码第二行做解释：\n\n```php\n$q = isset($_GET['q']) ? htmlspecialchars($_GET['q']) : '';\n```\nisset ()函数是用于确定变量是否已设置且不为空；换句话说，仅当变量不为null时才返回true。因此如果$_GET['q']为空，则\\$q为空，那么直接回到else的语句中，即返回空表单。如果不为空，则\\$q被赋值htmlspecialchars($_GET['q'])， htmlspecialchars()函数能把预定义的字符转换为 HTML 实体，用以绕过XSS攻击。XSS又叫 CSS (Cross-Site Script) ,跨站脚本攻击。恶意攻击者往Web页面里插入恶意html代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行，从而达到恶意用户的特殊目的。 如需进一步了解，可查看大佬博客：[XSS绕过之PHP htmlspecialchars() 函数](https://blog.csdn.net/Yoo_666/article/details/107319239)\n\n**PHP下拉菜单多选**\n如果下拉菜单是多选的（ multiple=\"multiple\"），我们可以通过将设置 select name=\"q[]\" 以数组的方式获取。\n```php\n<?php\n$q = isset($_POST['q'])? $_POST['q'] : '';\nif(is_array($q)) {\n    $sites = array(\n        'RUNOOB' => '菜鸟教程: http://www.runoob.com',\n        'GOOGLE' => 'Google 搜索: http://www.google.com',\n        'TAOBAO' => '淘宝: http://www.taobao.com',\n    );\n    foreach($q as $val) {\n        // PHP_EOL 为常量，用于换行\n        echo $sites[$val] . \"<br>\";\n    }\n\n} else {\n    ?>\n    <form action=\"\" method=\"post\">\n        <select multiple=\"multiple\" name=\"q[]\">\n            <option value=\"\">选择一个站点:</option>\n            <option value=\"RUNOOB\">Runoob</option>\n            <option value=\"GOOGLE\">Google</option>\n            <option value=\"TAOBAO\">Taobao</option>\n        </select>\n        <input type=\"submit\" value=\"提交\">\n    </form>\n    <?php\n}\n?>\n```\n#### (3). 单选按钮表单\nPHP 单选按钮表单中 name 属性的值是一致的，value 值是不同的\n\n```php\n<?php\n$q = isset($_GET['q'])? htmlspecialchars($_GET['q']) : '';\nif($q) {\n        if($q =='RUNOOB') {\n                echo '菜鸟教程<br>http://www.runoob.com';\n        } else if($q =='GOOGLE') {\n                echo 'Google 搜索<br>http://www.google.com';\n        } else if($q =='TAOBAO') {\n                echo '淘宝<br>http://www.taobao.com';\n        }\n} else {\n?><form action=\"\" method=\"get\"> \n    <input type=\"radio\" name=\"q\" value=\"RUNOOB\" />Runoob\n    <input type=\"radio\" name=\"q\" value=\"GOOGLE\" />Google\n    <input type=\"radio\" name=\"q\" value=\"TAOBAO\" />Taobao\n    <input type=\"submit\" value=\"提交\">\n</form>\n<?php\n}\n?>\n```\n#### (4). checkbox复选框\n```php\n<?php\n$q = isset($_POST['q'])? $_POST['q'] : '';\nif(is_array($q)) {\n    $sites = array(\n            'RUNOOB' => '菜鸟教程: http://www.runoob.com',\n            'GOOGLE' => 'Google 搜索: http://www.google.com',\n            'TAOBAO' => '淘宝: http://www.taobao.com',\n    );\n    foreach($q as $val) {\n        echo $sites[$val] . \"<br>\";\n    }\n      \n} else {\n?><form action=\"\" method=\"post\"> \n    <input type=\"checkbox\" name=\"q[]\" value=\"RUNOOB\"> Runoob<br> \n    <input type=\"checkbox\" name=\"q[]\" value=\"GOOGLE\"> Google<br> \n    <input type=\"checkbox\" name=\"q[]\" value=\"TAOBAO\"> Taobao<br>\n    <input type=\"submit\" value=\"提交\">\n</form>\n<?php\n}\n?>\n```\n\n### PHP 表单验证\n我们应该尽可能的对用户的输入进行验证（通过客户端脚本）。浏览器验证速度更快，并且可以减轻服务器的压力。如果用户输入需要插入数据库，就应该考虑使用服务器验证。在服务器验证表单的一种好的方式是，把表单的数据传给当前页面（异步提交的方式更好），而不是跳转到不同的页面。这样用户就可以在同一张表单页面得到错误信息。用户也就更容易发现错误了。\n\n```php\n<!DOCTYPE HTML>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>demo</title>\n</head>\n<body>\n\n<?php\n// 定义变量并默认设置为空值\n$nameErr = $emailErr = $genderErr = $websiteErr = \"\";\n$name = $email = $gender = $comment = $website = \"\";\n\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\")\n{\n    if (empty($_POST[\"name\"]))\n    {\n        $nameErr = \"名字是必需的\";\n    }\n    else\n    {\n        $name = test_input($_POST[\"name\"]);\n        // 检测名字是否只包含字母跟空格\n        if (!preg_match(\"/^[a-zA-Z ]*$/\",$name))\n        {\n            $nameErr = \"只允许字母和空格\";\n        }\n    }\n\n    if (empty($_POST[\"email\"]))\n    {\n        $emailErr = \"邮箱是必需的\";\n    }\n    else\n    {\n        $email = test_input($_POST[\"email\"]);\n        // 检测邮箱是否合法\n        if (!preg_match(\"/([\\w\\-]+\\@[\\w\\-]+\\.[\\w\\-]+)/\",$email))\n        {\n            $emailErr = \"非法邮箱格式\";\n        }\n    }\n\n    if (empty($_POST[\"website\"]))\n    {\n        $website = \"\";\n    }\n    else\n    {\n        $website = test_input($_POST[\"website\"]);\n        // 检测 URL 地址是否合法\n        if (!preg_match(\"/\\b(?:(?:https?|ftp):\\/\\/|www\\.)[-a-z0-9+&@#\\/%?=~_|!:,.;]*[-a-z0-9+&@#\\/%=~_|]/i\",$website))\n        {\n            $websiteErr = \"非法的 URL 的地址\";\n        }\n    }\n\n    if (empty($_POST[\"comment\"]))\n    {\n        $comment = \"\";\n    }\n    else\n    {\n        $comment = test_input($_POST[\"comment\"]);\n    }\n\n    if (empty($_POST[\"gender\"]))\n    {\n        $genderErr = \"性别是必需的\";\n    }\n    else\n    {\n        $gender = test_input($_POST[\"gender\"]);\n    }\n}\n\nfunction test_input($data)\n{\n    $data = trim($data);\n    $data = stripslashes($data);\n    $data = htmlspecialchars($data);\n    return $data;\n}\n?>\n\n<h2>PHP 表单验证实例</h2>\n<p><span style=\"color: red\">* 必需字段。</span></p>\n<form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]);?>\">\n\n    名字: <input type=\"text\" name=\"name\" value=\"<?php echo $name;?>\">\n    <span class=\"error\">* <?php echo $nameErr;?></span>\n    <br><br>\n\n    E-mail: <input type=\"text\" name=\"email\" value=\"<?php echo $email;?>\">\n    <span class=\"error\">* <?php echo $emailErr;?></span>\n    <br><br>\n\n    网址: <input type=\"text\" name=\"website\" value=\"<?php echo $website;?>\">\n    <span class=\"error\"><?php echo $websiteErr;?></span>\n    <br><br>\n\n    备注: <textarea name=\"comment\" rows=\"5\" cols=\"40\"><?php echo $comment;?></textarea>\n    <br><br>\n\n    性别:\n    <input type=\"radio\" name=\"gender\" <?php if (isset($gender) && $gender==\"female\") echo \"checked\";?>  value=\"female\">女\n    <input type=\"radio\" name=\"gender\" <?php if (isset($gender) && $gender==\"male\") echo \"checked\";?>  value=\"male\">男\n    <span class=\"error\">* <?php echo $genderErr;?></span>\n\n    <br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\">\n\n</form>\n\n<?php\necho \"<h2>您输入的内容是:</h2>\";\necho $name;\necho \"<br>\";\necho $email;\necho \"<br>\";\necho $website;\necho \"<br>\";\necho $comment;\necho \"<br>\";\necho $gender;\n?>\n\n</body>\n</html>\n```\n<table class=\"reference\">\n  <tbody><tr>\n    <th style=\"width:25%\">字段</th>\n    <th style=\"width:75%\">验证规则</th>\n  </tr>\n  <tr>\n    <td>名字</td>\n    <td>必须。 只能包含字母和空格</td>\n  </tr>\n  <tr>\n    <td>E-mail</td>\n    <td>必须。  必须是一个有效的电子邮件地址（包含'@'和'.'）</td>\n  </tr>\n  <tr>\n    <td>网址</td>\n    <td>可选。如果存在，它必须包含一个有效的URL</td>\n  </tr>\n  <tr>\n    <td>备注</td>\n    <td>可选。多行输入字段（文本域）</td>\n  </tr>\n  <tr>\n    <td>性别</td>\n    <td>必须。 必须选择一个</td>\n  </tr>\n  </tbody></table>\n  \n![展示](https://img-blog.csdnimg.cn/18662a27148b44f5bbc6218d984e5554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/2897a22f073a41a8b4893d7ba4f454ee.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### $_GET 变量\n在 PHP 中，预定义的 $_GET 变量用于收集来自 method=\"get\" 的表单中的值。从带有 GET 方法的表单发送的信息，对任何人都是可见的（会显示在浏览器的地址栏），并且对发送信息的量也有限制。\n\nbase.html文件代码：\n```html\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>demo</title>\n</head>\n<body>\n\n<form action=\"base.php\" method=\"get\">\n名字: <input type=\"text\" name=\"fname\">\n年龄: <input type=\"text\" name=\"age\">\n<input type=\"submit\" value=\"提交\">\n</form>\n\n</body>\n</html>\n```\n\nbase.php文件代码如下：\n\n```php\n<?php\necho $_GET['fname'] . '<br>' . $_GET['age'];\n```\n\n![展示](https://img-blog.csdnimg.cn/d5743dfb6ca043deb7ddcd9f5f70c9d4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/670d7a1aae514075aef89e7c77ae68e0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n当用户点击 \"Submit\" 按钮时，发送到服务器的 URL 如下所示：\n\n```cpp\nhttp://localhost:63342/web/review/base.php?fname=小王&age=18\n```\n\n在 HTML 表单中使用 method=\"get\" 时，所有的变量名和值都会显示在 URL 中。所以在发送密码或其他敏感信息时，不应该使用这个方法！然而，正因为变量显示在 URL 中，因此可以在收藏夹中收藏该页面。在某些情况下，这是很有用的。\n另外，HTTP GET 方法不适合大型的变量值。它的值是不能超过 2000 个字符的。\n\n### $_POST 变量\n预定义的 $_POST 变量用于收集来自 method=\"post\" 的表单中的值。从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）。\n\n```html\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>demo</title>\n</head>\n<body>\n\n<form action=\"base.php\" method=\"post\">\n名字: <input type=\"text\" name=\"fname\">\n年龄: <input type=\"text\" name=\"age\">\n<input type=\"submit\" value=\"提交\">\n</form>\n\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/4789e2214f514175a32576b92c1df785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n![展示](https://img-blog.csdnimg.cn/c33249aa311f4dbc8b2cef184a25ab2d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。然而，由于变量不显示在 URL 中，所以无法把页面加入书签。","source":"_posts/PHP/php表单.md","raw":"---\ntitle: PHP表单汇总\ndate: 2021-07-23 20:52:54\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/27.jpg\ntags: \n  - 表单\ncategories: PHP\n---\n\n### PHP 表单\n#### (1). PHP表单处理\nPHP 中的 $_GET 和 $_POST 变量用于检索表单中的信息，比如用户输入。有一点很重要的事情值得注意，当处理 HTML 表单时，PHP 能把来自 HTML 页面中的表单元素自动变成可供 PHP 脚本使用。\n\nbase.html 文件代码：\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<form action=\"base.php\" method=\"post\">\n    名字: <input type=\"text\" name=\"fname\">\n    年龄: <input type=\"text\" name=\"age\">\n    <input type=\"submit\" value=\"提交\">\n</form>\n</body>\n</html>\n```\nbase.php 文件代码：\n\n```php\n欢迎<?php echo $_POST[\"fname\"]; ?>!<br>\n你的年龄是 <?php echo $_POST[\"age\"]; ?>  岁。\n```\n![展示](https://img-blog.csdnimg.cn/7b8c7bdd6e9a46049667346aac6ebf89.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### (2). PHP获取下拉菜单的数据\n**PHP下拉菜单单选**\n\n```php\n<?php\n$q = isset($_GET['q']) ? htmlspecialchars($_GET['q']) : '';\nif ($q) {\n    if ($q == 'RUNOOB') {\n        echo '菜鸟教程<br>http://www.runoob.com';\n    } else if ($q == 'GOOGLE') {\n        echo 'Google 搜索<br>http://www.google.com';\n    } else if ($q == 'TAOBAO') {\n        echo '淘宝<br>http://www.taobao.com';\n    }\n} else {\n    ?>.\n    <form action=\"\" method=\"get\">  <!--action 属性值为空表示提交到当前脚本-->\n        <select name=\"q\">\n            <option value=\"\">选择一个站点:</option>\n            <option value=\"RUNOOB\">Runoob</option>\n            <option value=\"GOOGLE\">Google</option>\n            <option value=\"TAOBAO\">Taobao</option>\n        </select>\n        <input type=\"submit\" value=\"提交\">\n    </form>\n    <?php\n}\n?>\n```\n现对代码第二行做解释：\n\n```php\n$q = isset($_GET['q']) ? htmlspecialchars($_GET['q']) : '';\n```\nisset ()函数是用于确定变量是否已设置且不为空；换句话说，仅当变量不为null时才返回true。因此如果$_GET['q']为空，则\\$q为空，那么直接回到else的语句中，即返回空表单。如果不为空，则\\$q被赋值htmlspecialchars($_GET['q'])， htmlspecialchars()函数能把预定义的字符转换为 HTML 实体，用以绕过XSS攻击。XSS又叫 CSS (Cross-Site Script) ,跨站脚本攻击。恶意攻击者往Web页面里插入恶意html代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行，从而达到恶意用户的特殊目的。 如需进一步了解，可查看大佬博客：[XSS绕过之PHP htmlspecialchars() 函数](https://blog.csdn.net/Yoo_666/article/details/107319239)\n\n**PHP下拉菜单多选**\n如果下拉菜单是多选的（ multiple=\"multiple\"），我们可以通过将设置 select name=\"q[]\" 以数组的方式获取。\n```php\n<?php\n$q = isset($_POST['q'])? $_POST['q'] : '';\nif(is_array($q)) {\n    $sites = array(\n        'RUNOOB' => '菜鸟教程: http://www.runoob.com',\n        'GOOGLE' => 'Google 搜索: http://www.google.com',\n        'TAOBAO' => '淘宝: http://www.taobao.com',\n    );\n    foreach($q as $val) {\n        // PHP_EOL 为常量，用于换行\n        echo $sites[$val] . \"<br>\";\n    }\n\n} else {\n    ?>\n    <form action=\"\" method=\"post\">\n        <select multiple=\"multiple\" name=\"q[]\">\n            <option value=\"\">选择一个站点:</option>\n            <option value=\"RUNOOB\">Runoob</option>\n            <option value=\"GOOGLE\">Google</option>\n            <option value=\"TAOBAO\">Taobao</option>\n        </select>\n        <input type=\"submit\" value=\"提交\">\n    </form>\n    <?php\n}\n?>\n```\n#### (3). 单选按钮表单\nPHP 单选按钮表单中 name 属性的值是一致的，value 值是不同的\n\n```php\n<?php\n$q = isset($_GET['q'])? htmlspecialchars($_GET['q']) : '';\nif($q) {\n        if($q =='RUNOOB') {\n                echo '菜鸟教程<br>http://www.runoob.com';\n        } else if($q =='GOOGLE') {\n                echo 'Google 搜索<br>http://www.google.com';\n        } else if($q =='TAOBAO') {\n                echo '淘宝<br>http://www.taobao.com';\n        }\n} else {\n?><form action=\"\" method=\"get\"> \n    <input type=\"radio\" name=\"q\" value=\"RUNOOB\" />Runoob\n    <input type=\"radio\" name=\"q\" value=\"GOOGLE\" />Google\n    <input type=\"radio\" name=\"q\" value=\"TAOBAO\" />Taobao\n    <input type=\"submit\" value=\"提交\">\n</form>\n<?php\n}\n?>\n```\n#### (4). checkbox复选框\n```php\n<?php\n$q = isset($_POST['q'])? $_POST['q'] : '';\nif(is_array($q)) {\n    $sites = array(\n            'RUNOOB' => '菜鸟教程: http://www.runoob.com',\n            'GOOGLE' => 'Google 搜索: http://www.google.com',\n            'TAOBAO' => '淘宝: http://www.taobao.com',\n    );\n    foreach($q as $val) {\n        echo $sites[$val] . \"<br>\";\n    }\n      \n} else {\n?><form action=\"\" method=\"post\"> \n    <input type=\"checkbox\" name=\"q[]\" value=\"RUNOOB\"> Runoob<br> \n    <input type=\"checkbox\" name=\"q[]\" value=\"GOOGLE\"> Google<br> \n    <input type=\"checkbox\" name=\"q[]\" value=\"TAOBAO\"> Taobao<br>\n    <input type=\"submit\" value=\"提交\">\n</form>\n<?php\n}\n?>\n```\n\n### PHP 表单验证\n我们应该尽可能的对用户的输入进行验证（通过客户端脚本）。浏览器验证速度更快，并且可以减轻服务器的压力。如果用户输入需要插入数据库，就应该考虑使用服务器验证。在服务器验证表单的一种好的方式是，把表单的数据传给当前页面（异步提交的方式更好），而不是跳转到不同的页面。这样用户就可以在同一张表单页面得到错误信息。用户也就更容易发现错误了。\n\n```php\n<!DOCTYPE HTML>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>demo</title>\n</head>\n<body>\n\n<?php\n// 定义变量并默认设置为空值\n$nameErr = $emailErr = $genderErr = $websiteErr = \"\";\n$name = $email = $gender = $comment = $website = \"\";\n\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\")\n{\n    if (empty($_POST[\"name\"]))\n    {\n        $nameErr = \"名字是必需的\";\n    }\n    else\n    {\n        $name = test_input($_POST[\"name\"]);\n        // 检测名字是否只包含字母跟空格\n        if (!preg_match(\"/^[a-zA-Z ]*$/\",$name))\n        {\n            $nameErr = \"只允许字母和空格\";\n        }\n    }\n\n    if (empty($_POST[\"email\"]))\n    {\n        $emailErr = \"邮箱是必需的\";\n    }\n    else\n    {\n        $email = test_input($_POST[\"email\"]);\n        // 检测邮箱是否合法\n        if (!preg_match(\"/([\\w\\-]+\\@[\\w\\-]+\\.[\\w\\-]+)/\",$email))\n        {\n            $emailErr = \"非法邮箱格式\";\n        }\n    }\n\n    if (empty($_POST[\"website\"]))\n    {\n        $website = \"\";\n    }\n    else\n    {\n        $website = test_input($_POST[\"website\"]);\n        // 检测 URL 地址是否合法\n        if (!preg_match(\"/\\b(?:(?:https?|ftp):\\/\\/|www\\.)[-a-z0-9+&@#\\/%?=~_|!:,.;]*[-a-z0-9+&@#\\/%=~_|]/i\",$website))\n        {\n            $websiteErr = \"非法的 URL 的地址\";\n        }\n    }\n\n    if (empty($_POST[\"comment\"]))\n    {\n        $comment = \"\";\n    }\n    else\n    {\n        $comment = test_input($_POST[\"comment\"]);\n    }\n\n    if (empty($_POST[\"gender\"]))\n    {\n        $genderErr = \"性别是必需的\";\n    }\n    else\n    {\n        $gender = test_input($_POST[\"gender\"]);\n    }\n}\n\nfunction test_input($data)\n{\n    $data = trim($data);\n    $data = stripslashes($data);\n    $data = htmlspecialchars($data);\n    return $data;\n}\n?>\n\n<h2>PHP 表单验证实例</h2>\n<p><span style=\"color: red\">* 必需字段。</span></p>\n<form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]);?>\">\n\n    名字: <input type=\"text\" name=\"name\" value=\"<?php echo $name;?>\">\n    <span class=\"error\">* <?php echo $nameErr;?></span>\n    <br><br>\n\n    E-mail: <input type=\"text\" name=\"email\" value=\"<?php echo $email;?>\">\n    <span class=\"error\">* <?php echo $emailErr;?></span>\n    <br><br>\n\n    网址: <input type=\"text\" name=\"website\" value=\"<?php echo $website;?>\">\n    <span class=\"error\"><?php echo $websiteErr;?></span>\n    <br><br>\n\n    备注: <textarea name=\"comment\" rows=\"5\" cols=\"40\"><?php echo $comment;?></textarea>\n    <br><br>\n\n    性别:\n    <input type=\"radio\" name=\"gender\" <?php if (isset($gender) && $gender==\"female\") echo \"checked\";?>  value=\"female\">女\n    <input type=\"radio\" name=\"gender\" <?php if (isset($gender) && $gender==\"male\") echo \"checked\";?>  value=\"male\">男\n    <span class=\"error\">* <?php echo $genderErr;?></span>\n\n    <br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\">\n\n</form>\n\n<?php\necho \"<h2>您输入的内容是:</h2>\";\necho $name;\necho \"<br>\";\necho $email;\necho \"<br>\";\necho $website;\necho \"<br>\";\necho $comment;\necho \"<br>\";\necho $gender;\n?>\n\n</body>\n</html>\n```\n<table class=\"reference\">\n  <tbody><tr>\n    <th style=\"width:25%\">字段</th>\n    <th style=\"width:75%\">验证规则</th>\n  </tr>\n  <tr>\n    <td>名字</td>\n    <td>必须。 只能包含字母和空格</td>\n  </tr>\n  <tr>\n    <td>E-mail</td>\n    <td>必须。  必须是一个有效的电子邮件地址（包含'@'和'.'）</td>\n  </tr>\n  <tr>\n    <td>网址</td>\n    <td>可选。如果存在，它必须包含一个有效的URL</td>\n  </tr>\n  <tr>\n    <td>备注</td>\n    <td>可选。多行输入字段（文本域）</td>\n  </tr>\n  <tr>\n    <td>性别</td>\n    <td>必须。 必须选择一个</td>\n  </tr>\n  </tbody></table>\n  \n![展示](https://img-blog.csdnimg.cn/18662a27148b44f5bbc6218d984e5554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/2897a22f073a41a8b4893d7ba4f454ee.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### $_GET 变量\n在 PHP 中，预定义的 $_GET 变量用于收集来自 method=\"get\" 的表单中的值。从带有 GET 方法的表单发送的信息，对任何人都是可见的（会显示在浏览器的地址栏），并且对发送信息的量也有限制。\n\nbase.html文件代码：\n```html\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>demo</title>\n</head>\n<body>\n\n<form action=\"base.php\" method=\"get\">\n名字: <input type=\"text\" name=\"fname\">\n年龄: <input type=\"text\" name=\"age\">\n<input type=\"submit\" value=\"提交\">\n</form>\n\n</body>\n</html>\n```\n\nbase.php文件代码如下：\n\n```php\n<?php\necho $_GET['fname'] . '<br>' . $_GET['age'];\n```\n\n![展示](https://img-blog.csdnimg.cn/d5743dfb6ca043deb7ddcd9f5f70c9d4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/670d7a1aae514075aef89e7c77ae68e0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n当用户点击 \"Submit\" 按钮时，发送到服务器的 URL 如下所示：\n\n```cpp\nhttp://localhost:63342/web/review/base.php?fname=小王&age=18\n```\n\n在 HTML 表单中使用 method=\"get\" 时，所有的变量名和值都会显示在 URL 中。所以在发送密码或其他敏感信息时，不应该使用这个方法！然而，正因为变量显示在 URL 中，因此可以在收藏夹中收藏该页面。在某些情况下，这是很有用的。\n另外，HTTP GET 方法不适合大型的变量值。它的值是不能超过 2000 个字符的。\n\n### $_POST 变量\n预定义的 $_POST 变量用于收集来自 method=\"post\" 的表单中的值。从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）。\n\n```html\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>demo</title>\n</head>\n<body>\n\n<form action=\"base.php\" method=\"post\">\n名字: <input type=\"text\" name=\"fname\">\n年龄: <input type=\"text\" name=\"age\">\n<input type=\"submit\" value=\"提交\">\n</form>\n\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/4789e2214f514175a32576b92c1df785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n![展示](https://img-blog.csdnimg.cn/c33249aa311f4dbc8b2cef184a25ab2d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。然而，由于变量不显示在 URL 中，所以无法把页面加入书签。","slug":"PHP/php表单","published":1,"updated":"2021-12-03T14:58:40.673Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958aq000dasda4um78pup","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"PHP-表单\"><a href=\"#PHP-表单\" class=\"headerlink\" title=\"PHP 表单\"></a>PHP 表单</h3><h4 id=\"1-PHP表单处理\"><a href=\"#1-PHP表单处理\" class=\"headerlink\" title=\"(1). PHP表单处理\"></a>(1). PHP表单处理</h4><p>PHP 中的 $_GET 和 $_POST 变量用于检索表单中的信息，比如用户输入。有一点很重要的事情值得注意，当处理 HTML 表单时，PHP 能把来自 HTML 页面中的表单元素自动变成可供 PHP 脚本使用。</p>\n<p>base.html 文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;base.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">    名字: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fname&quot;</span>&gt;</span></span><br><span class=\"line\">    年龄: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>base.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">欢迎<span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> <span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;fname&quot;</span>]; <span class=\"meta\">?&gt;</span>!&lt;br&gt;</span><br><span class=\"line\">你的年龄是 <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> <span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;age&quot;</span>]; <span class=\"meta\">?&gt;</span>  岁。</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/7b8c7bdd6e9a46049667346aac6ebf89.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h4 id=\"2-PHP获取下拉菜单的数据\"><a href=\"#2-PHP获取下拉菜单的数据\" class=\"headerlink\" title=\"(2). PHP获取下拉菜单的数据\"></a>(2). PHP获取下拉菜单的数据</h4><p><strong>PHP下拉菜单单选</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) ? htmlspecialchars(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$q</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$q</span> == <span class=\"string\">&#x27;RUNOOB&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;菜鸟教程&lt;br&gt;http://www.runoob.com&#x27;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable\">$q</span> == <span class=\"string\">&#x27;GOOGLE&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Google 搜索&lt;br&gt;http://www.google.com&#x27;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable\">$q</span> == <span class=\"string\">&#x27;TAOBAO&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;淘宝&lt;br&gt;http://www.taobao.com&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">?&gt;</span>.</span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;get&quot;</span>&gt;  &lt;!--action 属性值为空表示提交到当前脚本--&gt;</span><br><span class=\"line\">        &lt;select name=<span class=\"string\">&quot;q&quot;</span>&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;&quot;</span>&gt;选择一个站点:&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;RUNOOB&quot;</span>&gt;Runoob&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;GOOGLE&quot;</span>&gt;Google&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;TAOBAO&quot;</span>&gt;Taobao&lt;/option&gt;</span><br><span class=\"line\">        &lt;/select&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">    <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>现对代码第二行做解释：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) ? htmlspecialchars(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) : <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>isset ()函数是用于确定变量是否已设置且不为空；换句话说，仅当变量不为null时才返回true。因此如果$_GET[‘q’]为空，则$q为空，那么直接回到else的语句中，即返回空表单。如果不为空，则$q被赋值htmlspecialchars($_GET[‘q’])， htmlspecialchars()函数能把预定义的字符转换为 HTML 实体，用以绕过XSS攻击。XSS又叫 CSS (Cross-Site Script) ,跨站脚本攻击。恶意攻击者往Web页面里插入恶意html代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行，从而达到恶意用户的特殊目的。 如需进一步了解，可查看大佬博客：<a href=\"https://blog.csdn.net/Yoo_666/article/details/107319239\">XSS绕过之PHP htmlspecialchars() 函数</a></p>\n<p><strong>PHP下拉菜单多选</strong><br>如果下拉菜单是多选的（ multiple=”multiple”），我们可以通过将设置 select name=”q[]” 以数组的方式获取。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;q&#x27;</span>])? <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;q&#x27;</span>] : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(is_array(<span class=\"variable\">$q</span>)) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$sites</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;RUNOOB&#x27;</span> =&gt; <span class=\"string\">&#x27;菜鸟教程: http://www.runoob.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;GOOGLE&#x27;</span> =&gt; <span class=\"string\">&#x27;Google 搜索: http://www.google.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;TAOBAO&#x27;</span> =&gt; <span class=\"string\">&#x27;淘宝: http://www.taobao.com&#x27;</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>(<span class=\"variable\">$q</span> <span class=\"keyword\">as</span> <span class=\"variable\">$val</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// PHP_EOL 为常量，用于换行</span></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$sites</span>[<span class=\"variable\">$val</span>] . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">        &lt;select multiple=<span class=\"string\">&quot;multiple&quot;</span> name=<span class=\"string\">&quot;q[]&quot;</span>&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;&quot;</span>&gt;选择一个站点:&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;RUNOOB&quot;</span>&gt;Runoob&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;GOOGLE&quot;</span>&gt;Google&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;TAOBAO&quot;</span>&gt;Taobao&lt;/option&gt;</span><br><span class=\"line\">        &lt;/select&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">    <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-单选按钮表单\"><a href=\"#3-单选按钮表单\" class=\"headerlink\" title=\"(3). 单选按钮表单\"></a>(3). 单选按钮表单</h4><p>PHP 单选按钮表单中 name 属性的值是一致的，value 值是不同的</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>])? htmlspecialchars(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$q</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$q</span> ==<span class=\"string\">&#x27;RUNOOB&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;菜鸟教程&lt;br&gt;http://www.runoob.com&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable\">$q</span> ==<span class=\"string\">&#x27;GOOGLE&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Google 搜索&lt;br&gt;http://www.google.com&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable\">$q</span> ==<span class=\"string\">&#x27;TAOBAO&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;淘宝&lt;br&gt;http://www.taobao.com&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>&lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;get&quot;</span>&gt; </span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;q&quot;</span> value=<span class=\"string\">&quot;RUNOOB&quot;</span> /&gt;Runoob</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;q&quot;</span> value=<span class=\"string\">&quot;GOOGLE&quot;</span> /&gt;Google</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;q&quot;</span> value=<span class=\"string\">&quot;TAOBAO&quot;</span> /&gt;Taobao</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-checkbox复选框\"><a href=\"#4-checkbox复选框\" class=\"headerlink\" title=\"(4). checkbox复选框\"></a>(4). checkbox复选框</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;q&#x27;</span>])? <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;q&#x27;</span>] : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(is_array(<span class=\"variable\">$q</span>)) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$sites</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">&#x27;RUNOOB&#x27;</span> =&gt; <span class=\"string\">&#x27;菜鸟教程: http://www.runoob.com&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;GOOGLE&#x27;</span> =&gt; <span class=\"string\">&#x27;Google 搜索: http://www.google.com&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;TAOBAO&#x27;</span> =&gt; <span class=\"string\">&#x27;淘宝: http://www.taobao.com&#x27;</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>(<span class=\"variable\">$q</span> <span class=\"keyword\">as</span> <span class=\"variable\">$val</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$sites</span>[<span class=\"variable\">$val</span>] . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>&lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt; </span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;q[]&quot;</span> value=<span class=\"string\">&quot;RUNOOB&quot;</span>&gt; Runoob&lt;br&gt; </span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;q[]&quot;</span> value=<span class=\"string\">&quot;GOOGLE&quot;</span>&gt; Google&lt;br&gt; </span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;q[]&quot;</span> value=<span class=\"string\">&quot;TAOBAO&quot;</span>&gt; Taobao&lt;br&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PHP-表单验证\"><a href=\"#PHP-表单验证\" class=\"headerlink\" title=\"PHP 表单验证\"></a>PHP 表单验证</h3><p>我们应该尽可能的对用户的输入进行验证（通过客户端脚本）。浏览器验证速度更快，并且可以减轻服务器的压力。如果用户输入需要插入数据库，就应该考虑使用服务器验证。在服务器验证表单的一种好的方式是，把表单的数据传给当前页面（异步提交的方式更好），而不是跳转到不同的页面。这样用户就可以在同一张表单页面得到错误信息。用户也就更容易发现错误了。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;demo&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 定义变量并默认设置为空值</span></span><br><span class=\"line\"><span class=\"variable\">$nameErr</span> = <span class=\"variable\">$emailErr</span> = <span class=\"variable\">$genderErr</span> = <span class=\"variable\">$websiteErr</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$name</span> = <span class=\"variable\">$email</span> = <span class=\"variable\">$gender</span> = <span class=\"variable\">$comment</span> = <span class=\"variable\">$website</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$_SERVER</span>[<span class=\"string\">&quot;REQUEST_METHOD&quot;</span>] == <span class=\"string\">&quot;POST&quot;</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;name&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$nameErr</span> = <span class=\"string\">&quot;名字是必需的&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$name</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;name&quot;</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 检测名字是否只包含字母跟空格</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">&quot;/^[a-zA-Z ]*$/&quot;</span>,<span class=\"variable\">$name</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"variable\">$nameErr</span> = <span class=\"string\">&quot;只允许字母和空格&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;email&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$emailErr</span> = <span class=\"string\">&quot;邮箱是必需的&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$email</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;email&quot;</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 检测邮箱是否合法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">&quot;/([\\w\\-]+\\@[\\w\\-]+\\.[\\w\\-]+)/&quot;</span>,<span class=\"variable\">$email</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"variable\">$emailErr</span> = <span class=\"string\">&quot;非法邮箱格式&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;website&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$website</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$website</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;website&quot;</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 检测 URL 地址是否合法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">&quot;/\\b(?:(?:https?|ftp):\\/\\/|www\\.)[-a-z0-9+&amp;@#\\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\\/%=~_|]/i&quot;</span>,<span class=\"variable\">$website</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"variable\">$websiteErr</span> = <span class=\"string\">&quot;非法的 URL 的地址&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;comment&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$comment</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$comment</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;comment&quot;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;gender&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$genderErr</span> = <span class=\"string\">&quot;性别是必需的&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$gender</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;gender&quot;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test_input</span>(<span class=\"params\"><span class=\"variable\">$data</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$data</span> = trim(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    <span class=\"variable\">$data</span> = stripslashes(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    <span class=\"variable\">$data</span> = htmlspecialchars(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h2&gt;PHP 表单验证实例&lt;/h2&gt;</span><br><span class=\"line\">&lt;p&gt;&lt;span style=<span class=\"string\">&quot;color: red&quot;</span>&gt;* 必需字段。&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">&lt;form method=<span class=\"string\">&quot;post&quot;</span> action=<span class=\"string\">&quot;&lt;?php echo htmlspecialchars(<span class=\"subst\">$_SERVER</span>[&quot;</span>PHP_SELF<span class=\"string\">&quot;]);?&gt;&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    名字: &lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;name&quot;</span> value=<span class=\"string\">&quot;&lt;?php echo <span class=\"subst\">$name</span>;?&gt;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;span <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">error</span>&quot;&gt;* &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">nameErr</span>;?&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">E</span>-<span class=\"title\">mail</span>: &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">text</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">email</span>&quot; <span class=\"title\">value</span>=&quot;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">email</span>;?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">error</span>&quot;&gt;* &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">emailErr</span>;?&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    网址: &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">text</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">website</span>&quot; <span class=\"title\">value</span>=&quot;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">website</span>;?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">error</span>&quot;&gt;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">websiteErr</span>;?&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    备注: &lt;<span class=\"title\">textarea</span> <span class=\"title\">name</span>=&quot;<span class=\"title\">comment</span>&quot; <span class=\"title\">rows</span>=&quot;5&quot; <span class=\"title\">cols</span>=&quot;40&quot;&gt;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">comment</span>;?&gt;&lt;/<span class=\"title\">textarea</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    性别:</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">radio</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">gender</span>&quot; &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span> (<span class=\"title\">isset</span>($<span class=\"title\">gender</span>) &amp;&amp; $<span class=\"title\">gender</span>==&quot;<span class=\"title\">female</span>&quot;) <span class=\"title\">echo</span> &quot;<span class=\"title\">checked</span>&quot;;?&gt;  <span class=\"title\">value</span>=&quot;<span class=\"title\">female</span>&quot;&gt;女</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">radio</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">gender</span>&quot; &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span> (<span class=\"title\">isset</span>($<span class=\"title\">gender</span>) &amp;&amp; $<span class=\"title\">gender</span>==&quot;<span class=\"title\">male</span>&quot;) <span class=\"title\">echo</span> &quot;<span class=\"title\">checked</span>&quot;;?&gt;  <span class=\"title\">value</span>=&quot;<span class=\"title\">male</span>&quot;&gt;男</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">error</span>&quot;&gt;* &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">genderErr</span>;?&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">submit</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">submit</span>&quot; <span class=\"title\">value</span>=&quot;<span class=\"title\">Submit</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&lt;?<span class=\"title\">php</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">h2</span>&gt;您输入的内容是:&lt;/<span class=\"title\">h2</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">name</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">email</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">website</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">comment</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">gender</span>;</span></span><br><span class=\"line\"><span class=\"class\">?&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table class=\"reference\">\n  <tbody><tr>\n    <th style=\"width:25%\">字段</th>\n    <th style=\"width:75%\">验证规则</th>\n  </tr>\n  <tr>\n    <td>名字</td>\n    <td>必须。 只能包含字母和空格</td>\n  </tr>\n  <tr>\n    <td>E-mail</td>\n    <td>必须。  必须是一个有效的电子邮件地址（包含'@'和'.'）</td>\n  </tr>\n  <tr>\n    <td>网址</td>\n    <td>可选。如果存在，它必须包含一个有效的URL</td>\n  </tr>\n  <tr>\n    <td>备注</td>\n    <td>可选。多行输入字段（文本域）</td>\n  </tr>\n  <tr>\n    <td>性别</td>\n    <td>必须。 必须选择一个</td>\n  </tr>\n  </tbody></table>\n  \n<p><img src=\"https://img-blog.csdnimg.cn/18662a27148b44f5bbc6218d984e5554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/2897a22f073a41a8b4893d7ba4f454ee.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"GET-变量\"><a href=\"#GET-变量\" class=\"headerlink\" title=\"$_GET 变量\"></a>$_GET 变量</h3><p>在 PHP 中，预定义的 $_GET 变量用于收集来自 method=”get” 的表单中的值。从带有 GET 方法的表单发送的信息，对任何人都是可见的（会显示在浏览器的地址栏），并且对发送信息的量也有限制。</p>\n<p>base.html文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;base.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;get&quot;</span>&gt;</span></span><br><span class=\"line\">名字: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fname&quot;</span>&gt;</span></span><br><span class=\"line\">年龄: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>base.php文件代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fname&#x27;</span>] . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span> . <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;age&#x27;</span>];</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/d5743dfb6ca043deb7ddcd9f5f70c9d4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/670d7a1aae514075aef89e7c77ae68e0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>当用户点击 “Submit” 按钮时，发送到服务器的 URL 如下所示：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost:63342/web/review/base.php?fname=小王&amp;age=18</span></span><br></pre></td></tr></table></figure>\n\n<p>在 HTML 表单中使用 method=”get” 时，所有的变量名和值都会显示在 URL 中。所以在发送密码或其他敏感信息时，不应该使用这个方法！然而，正因为变量显示在 URL 中，因此可以在收藏夹中收藏该页面。在某些情况下，这是很有用的。<br>另外，HTTP GET 方法不适合大型的变量值。它的值是不能超过 2000 个字符的。</p>\n<h3 id=\"POST-变量\"><a href=\"#POST-变量\" class=\"headerlink\" title=\"$_POST 变量\"></a>$_POST 变量</h3><p>预定义的 $_POST 变量用于收集来自 method=”post” 的表单中的值。从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;base.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">名字: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fname&quot;</span>&gt;</span></span><br><span class=\"line\">年龄: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/4789e2214f514175a32576b92c1df785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br><img src=\"https://img-blog.csdnimg.cn/c33249aa311f4dbc8b2cef184a25ab2d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。然而，由于变量不显示在 URL 中，所以无法把页面加入书签。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"PHP-表单\"><a href=\"#PHP-表单\" class=\"headerlink\" title=\"PHP 表单\"></a>PHP 表单</h3><h4 id=\"1-PHP表单处理\"><a href=\"#1-PHP表单处理\" class=\"headerlink\" title=\"(1). PHP表单处理\"></a>(1). PHP表单处理</h4><p>PHP 中的 $_GET 和 $_POST 变量用于检索表单中的信息，比如用户输入。有一点很重要的事情值得注意，当处理 HTML 表单时，PHP 能把来自 HTML 页面中的表单元素自动变成可供 PHP 脚本使用。</p>\n<p>base.html 文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;base.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">    名字: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fname&quot;</span>&gt;</span></span><br><span class=\"line\">    年龄: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>base.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">欢迎<span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> <span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;fname&quot;</span>]; <span class=\"meta\">?&gt;</span>!&lt;br&gt;</span><br><span class=\"line\">你的年龄是 <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> <span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;age&quot;</span>]; <span class=\"meta\">?&gt;</span>  岁。</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/7b8c7bdd6e9a46049667346aac6ebf89.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h4 id=\"2-PHP获取下拉菜单的数据\"><a href=\"#2-PHP获取下拉菜单的数据\" class=\"headerlink\" title=\"(2). PHP获取下拉菜单的数据\"></a>(2). PHP获取下拉菜单的数据</h4><p><strong>PHP下拉菜单单选</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) ? htmlspecialchars(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$q</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$q</span> == <span class=\"string\">&#x27;RUNOOB&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;菜鸟教程&lt;br&gt;http://www.runoob.com&#x27;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable\">$q</span> == <span class=\"string\">&#x27;GOOGLE&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Google 搜索&lt;br&gt;http://www.google.com&#x27;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable\">$q</span> == <span class=\"string\">&#x27;TAOBAO&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;淘宝&lt;br&gt;http://www.taobao.com&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">?&gt;</span>.</span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;get&quot;</span>&gt;  &lt;!--action 属性值为空表示提交到当前脚本--&gt;</span><br><span class=\"line\">        &lt;select name=<span class=\"string\">&quot;q&quot;</span>&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;&quot;</span>&gt;选择一个站点:&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;RUNOOB&quot;</span>&gt;Runoob&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;GOOGLE&quot;</span>&gt;Google&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;TAOBAO&quot;</span>&gt;Taobao&lt;/option&gt;</span><br><span class=\"line\">        &lt;/select&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">    <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>现对代码第二行做解释：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) ? htmlspecialchars(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) : <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>isset ()函数是用于确定变量是否已设置且不为空；换句话说，仅当变量不为null时才返回true。因此如果$_GET[‘q’]为空，则$q为空，那么直接回到else的语句中，即返回空表单。如果不为空，则$q被赋值htmlspecialchars($_GET[‘q’])， htmlspecialchars()函数能把预定义的字符转换为 HTML 实体，用以绕过XSS攻击。XSS又叫 CSS (Cross-Site Script) ,跨站脚本攻击。恶意攻击者往Web页面里插入恶意html代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行，从而达到恶意用户的特殊目的。 如需进一步了解，可查看大佬博客：<a href=\"https://blog.csdn.net/Yoo_666/article/details/107319239\">XSS绕过之PHP htmlspecialchars() 函数</a></p>\n<p><strong>PHP下拉菜单多选</strong><br>如果下拉菜单是多选的（ multiple=”multiple”），我们可以通过将设置 select name=”q[]” 以数组的方式获取。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;q&#x27;</span>])? <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;q&#x27;</span>] : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(is_array(<span class=\"variable\">$q</span>)) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$sites</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;RUNOOB&#x27;</span> =&gt; <span class=\"string\">&#x27;菜鸟教程: http://www.runoob.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;GOOGLE&#x27;</span> =&gt; <span class=\"string\">&#x27;Google 搜索: http://www.google.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;TAOBAO&#x27;</span> =&gt; <span class=\"string\">&#x27;淘宝: http://www.taobao.com&#x27;</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>(<span class=\"variable\">$q</span> <span class=\"keyword\">as</span> <span class=\"variable\">$val</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// PHP_EOL 为常量，用于换行</span></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$sites</span>[<span class=\"variable\">$val</span>] . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">        &lt;select multiple=<span class=\"string\">&quot;multiple&quot;</span> name=<span class=\"string\">&quot;q[]&quot;</span>&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;&quot;</span>&gt;选择一个站点:&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;RUNOOB&quot;</span>&gt;Runoob&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;GOOGLE&quot;</span>&gt;Google&lt;/option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">&quot;TAOBAO&quot;</span>&gt;Taobao&lt;/option&gt;</span><br><span class=\"line\">        &lt;/select&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">    <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-单选按钮表单\"><a href=\"#3-单选按钮表单\" class=\"headerlink\" title=\"(3). 单选按钮表单\"></a>(3). 单选按钮表单</h4><p>PHP 单选按钮表单中 name 属性的值是一致的，value 值是不同的</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>])? htmlspecialchars(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;q&#x27;</span>]) : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$q</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$q</span> ==<span class=\"string\">&#x27;RUNOOB&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;菜鸟教程&lt;br&gt;http://www.runoob.com&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable\">$q</span> ==<span class=\"string\">&#x27;GOOGLE&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Google 搜索&lt;br&gt;http://www.google.com&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable\">$q</span> ==<span class=\"string\">&#x27;TAOBAO&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;淘宝&lt;br&gt;http://www.taobao.com&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>&lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;get&quot;</span>&gt; </span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;q&quot;</span> value=<span class=\"string\">&quot;RUNOOB&quot;</span> /&gt;Runoob</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;q&quot;</span> value=<span class=\"string\">&quot;GOOGLE&quot;</span> /&gt;Google</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;q&quot;</span> value=<span class=\"string\">&quot;TAOBAO&quot;</span> /&gt;Taobao</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-checkbox复选框\"><a href=\"#4-checkbox复选框\" class=\"headerlink\" title=\"(4). checkbox复选框\"></a>(4). checkbox复选框</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$q</span> = <span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;q&#x27;</span>])? <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;q&#x27;</span>] : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(is_array(<span class=\"variable\">$q</span>)) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$sites</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">&#x27;RUNOOB&#x27;</span> =&gt; <span class=\"string\">&#x27;菜鸟教程: http://www.runoob.com&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;GOOGLE&#x27;</span> =&gt; <span class=\"string\">&#x27;Google 搜索: http://www.google.com&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;TAOBAO&#x27;</span> =&gt; <span class=\"string\">&#x27;淘宝: http://www.taobao.com&#x27;</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>(<span class=\"variable\">$q</span> <span class=\"keyword\">as</span> <span class=\"variable\">$val</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$sites</span>[<span class=\"variable\">$val</span>] . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>&lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt; </span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;q[]&quot;</span> value=<span class=\"string\">&quot;RUNOOB&quot;</span>&gt; Runoob&lt;br&gt; </span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;q[]&quot;</span> value=<span class=\"string\">&quot;GOOGLE&quot;</span>&gt; Google&lt;br&gt; </span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;q[]&quot;</span> value=<span class=\"string\">&quot;TAOBAO&quot;</span>&gt; Taobao&lt;br&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PHP-表单验证\"><a href=\"#PHP-表单验证\" class=\"headerlink\" title=\"PHP 表单验证\"></a>PHP 表单验证</h3><p>我们应该尽可能的对用户的输入进行验证（通过客户端脚本）。浏览器验证速度更快，并且可以减轻服务器的压力。如果用户输入需要插入数据库，就应该考虑使用服务器验证。在服务器验证表单的一种好的方式是，把表单的数据传给当前页面（异步提交的方式更好），而不是跳转到不同的页面。这样用户就可以在同一张表单页面得到错误信息。用户也就更容易发现错误了。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;demo&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 定义变量并默认设置为空值</span></span><br><span class=\"line\"><span class=\"variable\">$nameErr</span> = <span class=\"variable\">$emailErr</span> = <span class=\"variable\">$genderErr</span> = <span class=\"variable\">$websiteErr</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$name</span> = <span class=\"variable\">$email</span> = <span class=\"variable\">$gender</span> = <span class=\"variable\">$comment</span> = <span class=\"variable\">$website</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$_SERVER</span>[<span class=\"string\">&quot;REQUEST_METHOD&quot;</span>] == <span class=\"string\">&quot;POST&quot;</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;name&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$nameErr</span> = <span class=\"string\">&quot;名字是必需的&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$name</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;name&quot;</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 检测名字是否只包含字母跟空格</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">&quot;/^[a-zA-Z ]*$/&quot;</span>,<span class=\"variable\">$name</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"variable\">$nameErr</span> = <span class=\"string\">&quot;只允许字母和空格&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;email&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$emailErr</span> = <span class=\"string\">&quot;邮箱是必需的&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$email</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;email&quot;</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 检测邮箱是否合法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">&quot;/([\\w\\-]+\\@[\\w\\-]+\\.[\\w\\-]+)/&quot;</span>,<span class=\"variable\">$email</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"variable\">$emailErr</span> = <span class=\"string\">&quot;非法邮箱格式&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;website&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$website</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$website</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;website&quot;</span>]);</span><br><span class=\"line\">        <span class=\"comment\">// 检测 URL 地址是否合法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">&quot;/\\b(?:(?:https?|ftp):\\/\\/|www\\.)[-a-z0-9+&amp;@#\\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\\/%=~_|]/i&quot;</span>,<span class=\"variable\">$website</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"variable\">$websiteErr</span> = <span class=\"string\">&quot;非法的 URL 的地址&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;comment&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$comment</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$comment</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;comment&quot;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;gender&quot;</span>]))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$genderErr</span> = <span class=\"string\">&quot;性别是必需的&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable\">$gender</span> = test_input(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;gender&quot;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test_input</span>(<span class=\"params\"><span class=\"variable\">$data</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$data</span> = trim(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    <span class=\"variable\">$data</span> = stripslashes(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    <span class=\"variable\">$data</span> = htmlspecialchars(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h2&gt;PHP 表单验证实例&lt;/h2&gt;</span><br><span class=\"line\">&lt;p&gt;&lt;span style=<span class=\"string\">&quot;color: red&quot;</span>&gt;* 必需字段。&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">&lt;form method=<span class=\"string\">&quot;post&quot;</span> action=<span class=\"string\">&quot;&lt;?php echo htmlspecialchars(<span class=\"subst\">$_SERVER</span>[&quot;</span>PHP_SELF<span class=\"string\">&quot;]);?&gt;&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    名字: &lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;name&quot;</span> value=<span class=\"string\">&quot;&lt;?php echo <span class=\"subst\">$name</span>;?&gt;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;span <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">error</span>&quot;&gt;* &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">nameErr</span>;?&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">E</span>-<span class=\"title\">mail</span>: &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">text</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">email</span>&quot; <span class=\"title\">value</span>=&quot;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">email</span>;?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">error</span>&quot;&gt;* &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">emailErr</span>;?&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    网址: &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">text</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">website</span>&quot; <span class=\"title\">value</span>=&quot;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">website</span>;?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">error</span>&quot;&gt;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">websiteErr</span>;?&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    备注: &lt;<span class=\"title\">textarea</span> <span class=\"title\">name</span>=&quot;<span class=\"title\">comment</span>&quot; <span class=\"title\">rows</span>=&quot;5&quot; <span class=\"title\">cols</span>=&quot;40&quot;&gt;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">comment</span>;?&gt;&lt;/<span class=\"title\">textarea</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    性别:</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">radio</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">gender</span>&quot; &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span> (<span class=\"title\">isset</span>($<span class=\"title\">gender</span>) &amp;&amp; $<span class=\"title\">gender</span>==&quot;<span class=\"title\">female</span>&quot;) <span class=\"title\">echo</span> &quot;<span class=\"title\">checked</span>&quot;;?&gt;  <span class=\"title\">value</span>=&quot;<span class=\"title\">female</span>&quot;&gt;女</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">radio</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">gender</span>&quot; &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span> (<span class=\"title\">isset</span>($<span class=\"title\">gender</span>) &amp;&amp; $<span class=\"title\">gender</span>==&quot;<span class=\"title\">male</span>&quot;) <span class=\"title\">echo</span> &quot;<span class=\"title\">checked</span>&quot;;?&gt;  <span class=\"title\">value</span>=&quot;<span class=\"title\">male</span>&quot;&gt;男</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">error</span>&quot;&gt;* &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">genderErr</span>;?&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">br</span>&gt;&lt;<span class=\"title\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">input</span> <span class=\"title\">type</span>=&quot;<span class=\"title\">submit</span>&quot; <span class=\"title\">name</span>=&quot;<span class=\"title\">submit</span>&quot; <span class=\"title\">value</span>=&quot;<span class=\"title\">Submit</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&lt;?<span class=\"title\">php</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">h2</span>&gt;您输入的内容是:&lt;/<span class=\"title\">h2</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">name</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">email</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">website</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">comment</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> &quot;&lt;<span class=\"title\">br</span>&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> $<span class=\"title\">gender</span>;</span></span><br><span class=\"line\"><span class=\"class\">?&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<table class=\"reference\">\n  <tbody><tr>\n    <th style=\"width:25%\">字段</th>\n    <th style=\"width:75%\">验证规则</th>\n  </tr>\n  <tr>\n    <td>名字</td>\n    <td>必须。 只能包含字母和空格</td>\n  </tr>\n  <tr>\n    <td>E-mail</td>\n    <td>必须。  必须是一个有效的电子邮件地址（包含'@'和'.'）</td>\n  </tr>\n  <tr>\n    <td>网址</td>\n    <td>可选。如果存在，它必须包含一个有效的URL</td>\n  </tr>\n  <tr>\n    <td>备注</td>\n    <td>可选。多行输入字段（文本域）</td>\n  </tr>\n  <tr>\n    <td>性别</td>\n    <td>必须。 必须选择一个</td>\n  </tr>\n  </tbody></table>\n  \n<p><img src=\"https://img-blog.csdnimg.cn/18662a27148b44f5bbc6218d984e5554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/2897a22f073a41a8b4893d7ba4f454ee.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"GET-变量\"><a href=\"#GET-变量\" class=\"headerlink\" title=\"$_GET 变量\"></a>$_GET 变量</h3><p>在 PHP 中，预定义的 $_GET 变量用于收集来自 method=”get” 的表单中的值。从带有 GET 方法的表单发送的信息，对任何人都是可见的（会显示在浏览器的地址栏），并且对发送信息的量也有限制。</p>\n<p>base.html文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;base.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;get&quot;</span>&gt;</span></span><br><span class=\"line\">名字: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fname&quot;</span>&gt;</span></span><br><span class=\"line\">年龄: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>base.php文件代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fname&#x27;</span>] . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span> . <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;age&#x27;</span>];</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/d5743dfb6ca043deb7ddcd9f5f70c9d4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/670d7a1aae514075aef89e7c77ae68e0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>当用户点击 “Submit” 按钮时，发送到服务器的 URL 如下所示：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost:63342/web/review/base.php?fname=小王&amp;age=18</span></span><br></pre></td></tr></table></figure>\n\n<p>在 HTML 表单中使用 method=”get” 时，所有的变量名和值都会显示在 URL 中。所以在发送密码或其他敏感信息时，不应该使用这个方法！然而，正因为变量显示在 URL 中，因此可以在收藏夹中收藏该页面。在某些情况下，这是很有用的。<br>另外，HTTP GET 方法不适合大型的变量值。它的值是不能超过 2000 个字符的。</p>\n<h3 id=\"POST-变量\"><a href=\"#POST-变量\" class=\"headerlink\" title=\"$_POST 变量\"></a>$_POST 变量</h3><p>预定义的 $_POST 变量用于收集来自 method=”post” 的表单中的值。从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;base.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">名字: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fname&quot;</span>&gt;</span></span><br><span class=\"line\">年龄: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/4789e2214f514175a32576b92c1df785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br><img src=\"https://img-blog.csdnimg.cn/c33249aa311f4dbc8b2cef184a25ab2d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。然而，由于变量不显示在 URL 中，所以无法把页面加入书签。</p>\n"},{"title":"GD图像处理——验证码处理","date":"2021-07-28T11:23:05.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/3.jpg","_content":"\n## 验证码的概念\n验证码（CAPTCHA）是“Completely Automated Public Turingeest to tell Computers and Humans Apart”（全自动区分 计算机 和人类的 图灵测试 ）的缩写，是一种区分用户是计算机还是人的公共全自动 程序 。 可以防止：恶意破解密码、 刷票 、论坛灌水，有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试，实际上用验证码是现在很多网站通行的方式，我们利用比较简易的方式实现了这个功能。 这个问题可以由计算机生成并评判，但是必须只有人类才能解答。 由于计算机无法解答CAPTCHA的问题，所以回答出问题的用户就可以被认为是人类。\n\n中文名: 验证码\n作用: 防止恶意破解密码、论坛灌水等\n具体: 区分用户是计算机或人的程序\n外文名: CAPTCHA\n\n## 生成验证码\n这篇博客使用的是PHP的GD库实现相关操作，对GD库不熟悉的话可以先看看我的另一篇博客：[PHP之图像处理](https://blog.csdn.net/tongkongyu/article/details/119154930)\n\n图形验证码：计算机将拿到的验证码存放到图片中，然后用户看到然后识别，再提交给服务器，服务器再根据用户提交的和服务器之前生成的进行比较。\n\n1). 实现验证码图片的展示\n2). 实现验证码文字的随机变化\n3). 实现验证码文字颜色的随机变化\n4). 实现验证码背景或干扰噪点\n5). 实现点击刷新验证码功能\n\n**随机汉字的验证码：**\n\ngd_demo.php文件代码：\n```php\n<?php\n\n// 创建图片资源\n$img = imagecreatetruecolor(200, 50);\n\n// 背景色处理\n$bg_color = imagecolorallocate($img, 220, 220, 220);\nimagefill($img, 0, 0, $bg_color);\n\n// 获得随机文字\n$str = '验证码是一种区分用户是计算机还是人的公共全自动程序可以防止恶意破解密码刷票论坛灌水有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试';\n\n// 获得字符串长度\n$len = strlen($str);  // 字节长度\n// 当前所有的内容都是中文，因此每个字必定占三个字节\n$c_len = $len / 3;\n\n// 随机取汉字\n$char1 = substr($str, mt_rand(0, $c_len -1) * 3, 3);\n$char2 = substr($str, mt_rand(0, $c_len -1) * 3, 3);\n$char3 = substr($str, mt_rand(0, $c_len -1) * 3, 3);\n$char4 = substr($str, mt_rand(0, $c_len -1) * 3, 3);\n\n// 选择字体\n$font = 'C:\\Windows\\Fonts\\simhei.ttf';\n\n// 随机颜色\n$str_color1 = imagecolorallocate($img, mt_rand(0, 100), mt_rand(0, 100), mt_rand(0, 100));\n$str_color2 = imagecolorallocate($img, mt_rand(0, 100), mt_rand(0, 100), mt_rand(0, 100));\n$str_color3 = imagecolorallocate($img, mt_rand(0, 100), mt_rand(0, 100), mt_rand(0, 100));\n$str_color4 = imagecolorallocate($img, mt_rand(0, 100), mt_rand(0, 100), mt_rand(0, 100));\n\n// 写入文字\nimagettftext($img, mt_rand(20, 30), mt_rand(-45, 45), mt_rand(0, 30), mt_rand(30, 40), $str_color1, $font, $char1);\nimagettftext($img, mt_rand(20, 30), mt_rand(-45, 45), mt_rand(50, 70), mt_rand(30, 40), $str_color2, $font, $char2);\nimagettftext($img, mt_rand(20, 30), mt_rand(-45, 45), mt_rand(90, 120), mt_rand(30, 40), $str_color3, $font, $char3);\nimagettftext($img, mt_rand(20, 30), mt_rand(-45, 45), mt_rand(140, 170), mt_rand(30, 40), $str_color4, $font, $char4);\n\n// 设置干扰\nfor($i = 0; $i < 50; $i++){  // 干扰点\n    $dot_color = imagecolorallocate($img, mt_rand(150, 250), mt_rand(150, 250), mt_rand(150, 250)); // 设置点的颜色\n    imagestring($img, mt_rand(1, 5), mt_rand(0, 200), mt_rand(1, 50), '*', $dot_color);\n}\nfor($i = 0; $i < 10; $i++){  // 干扰线\n    $line_color = imagecolorallocate($img, mt_rand(150, 250), mt_rand(150, 250), mt_rand(150, 250)); // 设置线的颜色\n    imageline($img, mt_rand(0, 200), mt_rand(0, 50), mt_rand(0, 200), mt_rand(0, 50), $line_color);\n}\n\n// 输出图片\nheader('Content-type:image/png');\nimagepng($img);\n\n// 关闭资源\nimagedestroy($img);\n```\ngd_demo.html文件代码：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<!--实现点击图片可自动更新验证码-->\n<div style=\"width: 400px; height: 200px; margin: 100px auto\">\n    <img src=\"gd_demo.php\" onclick=\"this.src = 'gd_demo.php?captcha=' + Math.random()\"/>\n</div>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/9fe36d3377774cd5bc70d4b0f6ce3225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**随机数字字母的验证码(封装版代码)：**\n\ndemo.php文件代码：\n```php\n<?php\nfunction rand_str($length) {\n    // 验证码中所需要的字符\n    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    $str = '';\n    for($i = 0; $i < $length; $i++)\n    {\n        // 随机截取 $chars 中的任意一位字符；\n        $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1);\n    }\n    return $str;\n}\n\nfunction rand_color($image){\n    // 生成随机颜色\n    return imagecolorallocate($image, rand(127, 255), rand(127, 255), rand(127, 255));\n}\n\n$image = imagecreate(200, 100);\nimagecolorallocate($image, 0, 0, 0);\nfor ($i=0; $i <= 9; $i++) {\n    // 绘制随机的干扰线条\n    imageline($image, rand(0, 200), rand(0, 100), rand(0, 200), rand(0, 100), rand_color($image));\n}\nfor ($i=0; $i <= 100; $i++) {\n    // 绘制随机的干扰点\n    imagesetpixel($image, rand(0, 200), rand(0, 100), rand_color($image));\n}\n$length = 4;//验证码长度\n$str = rand_str($length);//获取验证码\n$font = 'C:\\Windows\\Fonts\\simhei.ttf';\nfor ($i=0; $i < $length; $i++) {\n    // 逐个绘制验证码中的字符\n    imagettftext($image, rand(20, 38), rand(0, 60), $i*50+25, rand(30,70), rand_color($image), $font, $str[$i]);\n}\n\nheader('Content-type:image/jpeg');\nimagejpeg($image);\nimagedestroy($image);\n```\ndemo.html文件代码：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<!--实现点击图片切换验证码-->\n<div style=\"width: 400px; height: 200px; margin: 100px auto\">\n    <img src=\"demo.php\" onclick=\"this.src = 'demo.php?captcha=' + Math.random()\"/>\n</div>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/03dd9d15b5e1407db21db921b1dbed93.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n有兴趣的话还可以看看我的其他相关博客：\n[GD图像处理——水印图实现](https://blog.csdn.net/tongkongyu/article/details/119154901)\n[GD图像处理——缩略图实现](https://blog.csdn.net/tongkongyu/article/details/119154890)","source":"_posts/PHP/php验证码.md","raw":"---\ntitle: GD图像处理——验证码处理\ndate: 2021-07-28 19:23:05\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/3.jpg\ntags: \n  - 验证码\n  - 图像\n  - GD库\ncategories: PHP\n---\n\n## 验证码的概念\n验证码（CAPTCHA）是“Completely Automated Public Turingeest to tell Computers and Humans Apart”（全自动区分 计算机 和人类的 图灵测试 ）的缩写，是一种区分用户是计算机还是人的公共全自动 程序 。 可以防止：恶意破解密码、 刷票 、论坛灌水，有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试，实际上用验证码是现在很多网站通行的方式，我们利用比较简易的方式实现了这个功能。 这个问题可以由计算机生成并评判，但是必须只有人类才能解答。 由于计算机无法解答CAPTCHA的问题，所以回答出问题的用户就可以被认为是人类。\n\n中文名: 验证码\n作用: 防止恶意破解密码、论坛灌水等\n具体: 区分用户是计算机或人的程序\n外文名: CAPTCHA\n\n## 生成验证码\n这篇博客使用的是PHP的GD库实现相关操作，对GD库不熟悉的话可以先看看我的另一篇博客：[PHP之图像处理](https://blog.csdn.net/tongkongyu/article/details/119154930)\n\n图形验证码：计算机将拿到的验证码存放到图片中，然后用户看到然后识别，再提交给服务器，服务器再根据用户提交的和服务器之前生成的进行比较。\n\n1). 实现验证码图片的展示\n2). 实现验证码文字的随机变化\n3). 实现验证码文字颜色的随机变化\n4). 实现验证码背景或干扰噪点\n5). 实现点击刷新验证码功能\n\n**随机汉字的验证码：**\n\ngd_demo.php文件代码：\n```php\n<?php\n\n// 创建图片资源\n$img = imagecreatetruecolor(200, 50);\n\n// 背景色处理\n$bg_color = imagecolorallocate($img, 220, 220, 220);\nimagefill($img, 0, 0, $bg_color);\n\n// 获得随机文字\n$str = '验证码是一种区分用户是计算机还是人的公共全自动程序可以防止恶意破解密码刷票论坛灌水有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试';\n\n// 获得字符串长度\n$len = strlen($str);  // 字节长度\n// 当前所有的内容都是中文，因此每个字必定占三个字节\n$c_len = $len / 3;\n\n// 随机取汉字\n$char1 = substr($str, mt_rand(0, $c_len -1) * 3, 3);\n$char2 = substr($str, mt_rand(0, $c_len -1) * 3, 3);\n$char3 = substr($str, mt_rand(0, $c_len -1) * 3, 3);\n$char4 = substr($str, mt_rand(0, $c_len -1) * 3, 3);\n\n// 选择字体\n$font = 'C:\\Windows\\Fonts\\simhei.ttf';\n\n// 随机颜色\n$str_color1 = imagecolorallocate($img, mt_rand(0, 100), mt_rand(0, 100), mt_rand(0, 100));\n$str_color2 = imagecolorallocate($img, mt_rand(0, 100), mt_rand(0, 100), mt_rand(0, 100));\n$str_color3 = imagecolorallocate($img, mt_rand(0, 100), mt_rand(0, 100), mt_rand(0, 100));\n$str_color4 = imagecolorallocate($img, mt_rand(0, 100), mt_rand(0, 100), mt_rand(0, 100));\n\n// 写入文字\nimagettftext($img, mt_rand(20, 30), mt_rand(-45, 45), mt_rand(0, 30), mt_rand(30, 40), $str_color1, $font, $char1);\nimagettftext($img, mt_rand(20, 30), mt_rand(-45, 45), mt_rand(50, 70), mt_rand(30, 40), $str_color2, $font, $char2);\nimagettftext($img, mt_rand(20, 30), mt_rand(-45, 45), mt_rand(90, 120), mt_rand(30, 40), $str_color3, $font, $char3);\nimagettftext($img, mt_rand(20, 30), mt_rand(-45, 45), mt_rand(140, 170), mt_rand(30, 40), $str_color4, $font, $char4);\n\n// 设置干扰\nfor($i = 0; $i < 50; $i++){  // 干扰点\n    $dot_color = imagecolorallocate($img, mt_rand(150, 250), mt_rand(150, 250), mt_rand(150, 250)); // 设置点的颜色\n    imagestring($img, mt_rand(1, 5), mt_rand(0, 200), mt_rand(1, 50), '*', $dot_color);\n}\nfor($i = 0; $i < 10; $i++){  // 干扰线\n    $line_color = imagecolorallocate($img, mt_rand(150, 250), mt_rand(150, 250), mt_rand(150, 250)); // 设置线的颜色\n    imageline($img, mt_rand(0, 200), mt_rand(0, 50), mt_rand(0, 200), mt_rand(0, 50), $line_color);\n}\n\n// 输出图片\nheader('Content-type:image/png');\nimagepng($img);\n\n// 关闭资源\nimagedestroy($img);\n```\ngd_demo.html文件代码：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<!--实现点击图片可自动更新验证码-->\n<div style=\"width: 400px; height: 200px; margin: 100px auto\">\n    <img src=\"gd_demo.php\" onclick=\"this.src = 'gd_demo.php?captcha=' + Math.random()\"/>\n</div>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/9fe36d3377774cd5bc70d4b0f6ce3225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**随机数字字母的验证码(封装版代码)：**\n\ndemo.php文件代码：\n```php\n<?php\nfunction rand_str($length) {\n    // 验证码中所需要的字符\n    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    $str = '';\n    for($i = 0; $i < $length; $i++)\n    {\n        // 随机截取 $chars 中的任意一位字符；\n        $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1);\n    }\n    return $str;\n}\n\nfunction rand_color($image){\n    // 生成随机颜色\n    return imagecolorallocate($image, rand(127, 255), rand(127, 255), rand(127, 255));\n}\n\n$image = imagecreate(200, 100);\nimagecolorallocate($image, 0, 0, 0);\nfor ($i=0; $i <= 9; $i++) {\n    // 绘制随机的干扰线条\n    imageline($image, rand(0, 200), rand(0, 100), rand(0, 200), rand(0, 100), rand_color($image));\n}\nfor ($i=0; $i <= 100; $i++) {\n    // 绘制随机的干扰点\n    imagesetpixel($image, rand(0, 200), rand(0, 100), rand_color($image));\n}\n$length = 4;//验证码长度\n$str = rand_str($length);//获取验证码\n$font = 'C:\\Windows\\Fonts\\simhei.ttf';\nfor ($i=0; $i < $length; $i++) {\n    // 逐个绘制验证码中的字符\n    imagettftext($image, rand(20, 38), rand(0, 60), $i*50+25, rand(30,70), rand_color($image), $font, $str[$i]);\n}\n\nheader('Content-type:image/jpeg');\nimagejpeg($image);\nimagedestroy($image);\n```\ndemo.html文件代码：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<!--实现点击图片切换验证码-->\n<div style=\"width: 400px; height: 200px; margin: 100px auto\">\n    <img src=\"demo.php\" onclick=\"this.src = 'demo.php?captcha=' + Math.random()\"/>\n</div>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/03dd9d15b5e1407db21db921b1dbed93.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n有兴趣的话还可以看看我的其他相关博客：\n[GD图像处理——水印图实现](https://blog.csdn.net/tongkongyu/article/details/119154901)\n[GD图像处理——缩略图实现](https://blog.csdn.net/tongkongyu/article/details/119154890)","slug":"PHP/php验证码","published":1,"updated":"2021-12-03T14:59:43.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958ar000easda1ditc2re","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"验证码的概念\"><a href=\"#验证码的概念\" class=\"headerlink\" title=\"验证码的概念\"></a>验证码的概念</h2><p>验证码（CAPTCHA）是“Completely Automated Public Turingeest to tell Computers and Humans Apart”（全自动区分 计算机 和人类的 图灵测试 ）的缩写，是一种区分用户是计算机还是人的公共全自动 程序 。 可以防止：恶意破解密码、 刷票 、论坛灌水，有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试，实际上用验证码是现在很多网站通行的方式，我们利用比较简易的方式实现了这个功能。 这个问题可以由计算机生成并评判，但是必须只有人类才能解答。 由于计算机无法解答CAPTCHA的问题，所以回答出问题的用户就可以被认为是人类。</p>\n<p>中文名: 验证码<br>作用: 防止恶意破解密码、论坛灌水等<br>具体: 区分用户是计算机或人的程序<br>外文名: CAPTCHA</p>\n<h2 id=\"生成验证码\"><a href=\"#生成验证码\" class=\"headerlink\" title=\"生成验证码\"></a>生成验证码</h2><p>这篇博客使用的是PHP的GD库实现相关操作，对GD库不熟悉的话可以先看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/119154930\">PHP之图像处理</a></p>\n<p>图形验证码：计算机将拿到的验证码存放到图片中，然后用户看到然后识别，再提交给服务器，服务器再根据用户提交的和服务器之前生成的进行比较。</p>\n<p>1). 实现验证码图片的展示<br>2). 实现验证码文字的随机变化<br>3). 实现验证码文字颜色的随机变化<br>4). 实现验证码背景或干扰噪点<br>5). 实现点击刷新验证码功能</p>\n<p><strong>随机汉字的验证码：</strong></p>\n<p>gd_demo.php文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建图片资源</span></span><br><span class=\"line\"><span class=\"variable\">$img</span> = imagecreatetruecolor(<span class=\"number\">200</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 背景色处理</span></span><br><span class=\"line\"><span class=\"variable\">$bg_color</span> = imagecolorallocate(<span class=\"variable\">$img</span>, <span class=\"number\">220</span>, <span class=\"number\">220</span>, <span class=\"number\">220</span>);</span><br><span class=\"line\">imagefill(<span class=\"variable\">$img</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$bg_color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得随机文字</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&#x27;验证码是一种区分用户是计算机还是人的公共全自动程序可以防止恶意破解密码刷票论坛灌水有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得字符串长度</span></span><br><span class=\"line\"><span class=\"variable\">$len</span> = strlen(<span class=\"variable\">$str</span>);  <span class=\"comment\">// 字节长度</span></span><br><span class=\"line\"><span class=\"comment\">// 当前所有的内容都是中文，因此每个字必定占三个字节</span></span><br><span class=\"line\"><span class=\"variable\">$c_len</span> = <span class=\"variable\">$len</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机取汉字</span></span><br><span class=\"line\"><span class=\"variable\">$char1</span> = substr(<span class=\"variable\">$str</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"variable\">$c_len</span> -<span class=\"number\">1</span>) * <span class=\"number\">3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$char2</span> = substr(<span class=\"variable\">$str</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"variable\">$c_len</span> -<span class=\"number\">1</span>) * <span class=\"number\">3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$char3</span> = substr(<span class=\"variable\">$str</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"variable\">$c_len</span> -<span class=\"number\">1</span>) * <span class=\"number\">3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$char4</span> = substr(<span class=\"variable\">$str</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"variable\">$c_len</span> -<span class=\"number\">1</span>) * <span class=\"number\">3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 选择字体</span></span><br><span class=\"line\"><span class=\"variable\">$font</span> = <span class=\"string\">&#x27;C:\\Windows\\Fonts\\simhei.ttf&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机颜色</span></span><br><span class=\"line\"><span class=\"variable\">$str_color1</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"><span class=\"variable\">$str_color2</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"><span class=\"variable\">$str_color3</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"><span class=\"variable\">$str_color4</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写入文字</span></span><br><span class=\"line\">imagettftext(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">20</span>, <span class=\"number\">30</span>), mt_rand(-<span class=\"number\">45</span>, <span class=\"number\">45</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">30</span>), mt_rand(<span class=\"number\">30</span>, <span class=\"number\">40</span>), <span class=\"variable\">$str_color1</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$char1</span>);</span><br><span class=\"line\">imagettftext(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">20</span>, <span class=\"number\">30</span>), mt_rand(-<span class=\"number\">45</span>, <span class=\"number\">45</span>), mt_rand(<span class=\"number\">50</span>, <span class=\"number\">70</span>), mt_rand(<span class=\"number\">30</span>, <span class=\"number\">40</span>), <span class=\"variable\">$str_color2</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$char2</span>);</span><br><span class=\"line\">imagettftext(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">20</span>, <span class=\"number\">30</span>), mt_rand(-<span class=\"number\">45</span>, <span class=\"number\">45</span>), mt_rand(<span class=\"number\">90</span>, <span class=\"number\">120</span>), mt_rand(<span class=\"number\">30</span>, <span class=\"number\">40</span>), <span class=\"variable\">$str_color3</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$char3</span>);</span><br><span class=\"line\">imagettftext(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">20</span>, <span class=\"number\">30</span>), mt_rand(-<span class=\"number\">45</span>, <span class=\"number\">45</span>), mt_rand(<span class=\"number\">140</span>, <span class=\"number\">170</span>), mt_rand(<span class=\"number\">30</span>, <span class=\"number\">40</span>), <span class=\"variable\">$str_color4</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$char4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置干扰</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">50</span>; <span class=\"variable\">$i</span>++)&#123;  <span class=\"comment\">// 干扰点</span></span><br><span class=\"line\">    <span class=\"variable\">$dot_color</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>), mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>), mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>)); <span class=\"comment\">// 设置点的颜色</span></span><br><span class=\"line\">    imagestring(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">1</span>, <span class=\"number\">5</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), mt_rand(<span class=\"number\">1</span>, <span class=\"number\">50</span>), <span class=\"string\">&#x27;*&#x27;</span>, <span class=\"variable\">$dot_color</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">10</span>; <span class=\"variable\">$i</span>++)&#123;  <span class=\"comment\">// 干扰线</span></span><br><span class=\"line\">    <span class=\"variable\">$line_color</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>), mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>), mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>)); <span class=\"comment\">// 设置线的颜色</span></span><br><span class=\"line\">    imageline(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">50</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">50</span>), <span class=\"variable\">$line_color</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出图片</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/png&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$img</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$img</span>);</span><br></pre></td></tr></table></figure>\n<p>gd_demo.html文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--实现点击图片可自动更新验证码--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 400px; height: 200px; margin: 100px auto&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;gd_demo.php&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;this.src = &#x27;gd_demo.php?captcha=&#x27; + Math.random()&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/9fe36d3377774cd5bc70d4b0f6ce3225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br><strong>随机数字字母的验证码(封装版代码)：</strong></p>\n<p>demo.php文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rand_str</span>(<span class=\"params\"><span class=\"variable\">$length</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 验证码中所需要的字符</span></span><br><span class=\"line\">    <span class=\"variable\">$chars</span> = <span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$str</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$length</span>; <span class=\"variable\">$i</span>++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 随机截取 $chars 中的任意一位字符；</span></span><br><span class=\"line\">        <span class=\"variable\">$str</span> .= substr(<span class=\"variable\">$chars</span>, mt_rand(<span class=\"number\">0</span>, strlen(<span class=\"variable\">$chars</span>) - <span class=\"number\">1</span>), <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$str</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rand_color</span>(<span class=\"params\"><span class=\"variable\">$image</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 生成随机颜色</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> imagecolorallocate(<span class=\"variable\">$image</span>, rand(<span class=\"number\">127</span>, <span class=\"number\">255</span>), rand(<span class=\"number\">127</span>, <span class=\"number\">255</span>), rand(<span class=\"number\">127</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$image</span> = imagecreate(<span class=\"number\">200</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">imagecolorallocate(<span class=\"variable\">$image</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt;= <span class=\"number\">9</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 绘制随机的干扰线条</span></span><br><span class=\"line\">    imageline(<span class=\"variable\">$image</span>, rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), rand_color(<span class=\"variable\">$image</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt;= <span class=\"number\">100</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 绘制随机的干扰点</span></span><br><span class=\"line\">    imagesetpixel(<span class=\"variable\">$image</span>, rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), rand_color(<span class=\"variable\">$image</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$length</span> = <span class=\"number\">4</span>;<span class=\"comment\">//验证码长度</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = rand_str(<span class=\"variable\">$length</span>);<span class=\"comment\">//获取验证码</span></span><br><span class=\"line\"><span class=\"variable\">$font</span> = <span class=\"string\">&#x27;C:\\Windows\\Fonts\\simhei.ttf&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$length</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 逐个绘制验证码中的字符</span></span><br><span class=\"line\">    imagettftext(<span class=\"variable\">$image</span>, rand(<span class=\"number\">20</span>, <span class=\"number\">38</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">60</span>), <span class=\"variable\">$i</span>*<span class=\"number\">50</span>+<span class=\"number\">25</span>, rand(<span class=\"number\">30</span>,<span class=\"number\">70</span>), rand_color(<span class=\"variable\">$image</span>), <span class=\"variable\">$font</span>, <span class=\"variable\">$str</span>[<span class=\"variable\">$i</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\">imagejpeg(<span class=\"variable\">$image</span>);</span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$image</span>);</span><br></pre></td></tr></table></figure>\n<p>demo.html文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--实现点击图片切换验证码--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 400px; height: 200px; margin: 100px auto&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;demo.php&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;this.src = &#x27;demo.php?captcha=&#x27; + Math.random()&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/03dd9d15b5e1407db21db921b1dbed93.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>有兴趣的话还可以看看我的其他相关博客：<br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154901\">GD图像处理——水印图实现</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154890\">GD图像处理——缩略图实现</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"验证码的概念\"><a href=\"#验证码的概念\" class=\"headerlink\" title=\"验证码的概念\"></a>验证码的概念</h2><p>验证码（CAPTCHA）是“Completely Automated Public Turingeest to tell Computers and Humans Apart”（全自动区分 计算机 和人类的 图灵测试 ）的缩写，是一种区分用户是计算机还是人的公共全自动 程序 。 可以防止：恶意破解密码、 刷票 、论坛灌水，有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试，实际上用验证码是现在很多网站通行的方式，我们利用比较简易的方式实现了这个功能。 这个问题可以由计算机生成并评判，但是必须只有人类才能解答。 由于计算机无法解答CAPTCHA的问题，所以回答出问题的用户就可以被认为是人类。</p>\n<p>中文名: 验证码<br>作用: 防止恶意破解密码、论坛灌水等<br>具体: 区分用户是计算机或人的程序<br>外文名: CAPTCHA</p>\n<h2 id=\"生成验证码\"><a href=\"#生成验证码\" class=\"headerlink\" title=\"生成验证码\"></a>生成验证码</h2><p>这篇博客使用的是PHP的GD库实现相关操作，对GD库不熟悉的话可以先看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/119154930\">PHP之图像处理</a></p>\n<p>图形验证码：计算机将拿到的验证码存放到图片中，然后用户看到然后识别，再提交给服务器，服务器再根据用户提交的和服务器之前生成的进行比较。</p>\n<p>1). 实现验证码图片的展示<br>2). 实现验证码文字的随机变化<br>3). 实现验证码文字颜色的随机变化<br>4). 实现验证码背景或干扰噪点<br>5). 实现点击刷新验证码功能</p>\n<p><strong>随机汉字的验证码：</strong></p>\n<p>gd_demo.php文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建图片资源</span></span><br><span class=\"line\"><span class=\"variable\">$img</span> = imagecreatetruecolor(<span class=\"number\">200</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 背景色处理</span></span><br><span class=\"line\"><span class=\"variable\">$bg_color</span> = imagecolorallocate(<span class=\"variable\">$img</span>, <span class=\"number\">220</span>, <span class=\"number\">220</span>, <span class=\"number\">220</span>);</span><br><span class=\"line\">imagefill(<span class=\"variable\">$img</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$bg_color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得随机文字</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&#x27;验证码是一种区分用户是计算机还是人的公共全自动程序可以防止恶意破解密码刷票论坛灌水有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得字符串长度</span></span><br><span class=\"line\"><span class=\"variable\">$len</span> = strlen(<span class=\"variable\">$str</span>);  <span class=\"comment\">// 字节长度</span></span><br><span class=\"line\"><span class=\"comment\">// 当前所有的内容都是中文，因此每个字必定占三个字节</span></span><br><span class=\"line\"><span class=\"variable\">$c_len</span> = <span class=\"variable\">$len</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机取汉字</span></span><br><span class=\"line\"><span class=\"variable\">$char1</span> = substr(<span class=\"variable\">$str</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"variable\">$c_len</span> -<span class=\"number\">1</span>) * <span class=\"number\">3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$char2</span> = substr(<span class=\"variable\">$str</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"variable\">$c_len</span> -<span class=\"number\">1</span>) * <span class=\"number\">3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$char3</span> = substr(<span class=\"variable\">$str</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"variable\">$c_len</span> -<span class=\"number\">1</span>) * <span class=\"number\">3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable\">$char4</span> = substr(<span class=\"variable\">$str</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"variable\">$c_len</span> -<span class=\"number\">1</span>) * <span class=\"number\">3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 选择字体</span></span><br><span class=\"line\"><span class=\"variable\">$font</span> = <span class=\"string\">&#x27;C:\\Windows\\Fonts\\simhei.ttf&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机颜色</span></span><br><span class=\"line\"><span class=\"variable\">$str_color1</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"><span class=\"variable\">$str_color2</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"><span class=\"variable\">$str_color3</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"><span class=\"variable\">$str_color4</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写入文字</span></span><br><span class=\"line\">imagettftext(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">20</span>, <span class=\"number\">30</span>), mt_rand(-<span class=\"number\">45</span>, <span class=\"number\">45</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">30</span>), mt_rand(<span class=\"number\">30</span>, <span class=\"number\">40</span>), <span class=\"variable\">$str_color1</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$char1</span>);</span><br><span class=\"line\">imagettftext(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">20</span>, <span class=\"number\">30</span>), mt_rand(-<span class=\"number\">45</span>, <span class=\"number\">45</span>), mt_rand(<span class=\"number\">50</span>, <span class=\"number\">70</span>), mt_rand(<span class=\"number\">30</span>, <span class=\"number\">40</span>), <span class=\"variable\">$str_color2</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$char2</span>);</span><br><span class=\"line\">imagettftext(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">20</span>, <span class=\"number\">30</span>), mt_rand(-<span class=\"number\">45</span>, <span class=\"number\">45</span>), mt_rand(<span class=\"number\">90</span>, <span class=\"number\">120</span>), mt_rand(<span class=\"number\">30</span>, <span class=\"number\">40</span>), <span class=\"variable\">$str_color3</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$char3</span>);</span><br><span class=\"line\">imagettftext(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">20</span>, <span class=\"number\">30</span>), mt_rand(-<span class=\"number\">45</span>, <span class=\"number\">45</span>), mt_rand(<span class=\"number\">140</span>, <span class=\"number\">170</span>), mt_rand(<span class=\"number\">30</span>, <span class=\"number\">40</span>), <span class=\"variable\">$str_color4</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$char4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置干扰</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">50</span>; <span class=\"variable\">$i</span>++)&#123;  <span class=\"comment\">// 干扰点</span></span><br><span class=\"line\">    <span class=\"variable\">$dot_color</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>), mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>), mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>)); <span class=\"comment\">// 设置点的颜色</span></span><br><span class=\"line\">    imagestring(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">1</span>, <span class=\"number\">5</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), mt_rand(<span class=\"number\">1</span>, <span class=\"number\">50</span>), <span class=\"string\">&#x27;*&#x27;</span>, <span class=\"variable\">$dot_color</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">10</span>; <span class=\"variable\">$i</span>++)&#123;  <span class=\"comment\">// 干扰线</span></span><br><span class=\"line\">    <span class=\"variable\">$line_color</span> = imagecolorallocate(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>), mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>), mt_rand(<span class=\"number\">150</span>, <span class=\"number\">250</span>)); <span class=\"comment\">// 设置线的颜色</span></span><br><span class=\"line\">    imageline(<span class=\"variable\">$img</span>, mt_rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">50</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), mt_rand(<span class=\"number\">0</span>, <span class=\"number\">50</span>), <span class=\"variable\">$line_color</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出图片</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/png&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$img</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$img</span>);</span><br></pre></td></tr></table></figure>\n<p>gd_demo.html文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--实现点击图片可自动更新验证码--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 400px; height: 200px; margin: 100px auto&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;gd_demo.php&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;this.src = &#x27;gd_demo.php?captcha=&#x27; + Math.random()&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/9fe36d3377774cd5bc70d4b0f6ce3225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br><strong>随机数字字母的验证码(封装版代码)：</strong></p>\n<p>demo.php文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rand_str</span>(<span class=\"params\"><span class=\"variable\">$length</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 验证码中所需要的字符</span></span><br><span class=\"line\">    <span class=\"variable\">$chars</span> = <span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$str</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$length</span>; <span class=\"variable\">$i</span>++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 随机截取 $chars 中的任意一位字符；</span></span><br><span class=\"line\">        <span class=\"variable\">$str</span> .= substr(<span class=\"variable\">$chars</span>, mt_rand(<span class=\"number\">0</span>, strlen(<span class=\"variable\">$chars</span>) - <span class=\"number\">1</span>), <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$str</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rand_color</span>(<span class=\"params\"><span class=\"variable\">$image</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 生成随机颜色</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> imagecolorallocate(<span class=\"variable\">$image</span>, rand(<span class=\"number\">127</span>, <span class=\"number\">255</span>), rand(<span class=\"number\">127</span>, <span class=\"number\">255</span>), rand(<span class=\"number\">127</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$image</span> = imagecreate(<span class=\"number\">200</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">imagecolorallocate(<span class=\"variable\">$image</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt;= <span class=\"number\">9</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 绘制随机的干扰线条</span></span><br><span class=\"line\">    imageline(<span class=\"variable\">$image</span>, rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), rand_color(<span class=\"variable\">$image</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt;= <span class=\"number\">100</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 绘制随机的干扰点</span></span><br><span class=\"line\">    imagesetpixel(<span class=\"variable\">$image</span>, rand(<span class=\"number\">0</span>, <span class=\"number\">200</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">100</span>), rand_color(<span class=\"variable\">$image</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$length</span> = <span class=\"number\">4</span>;<span class=\"comment\">//验证码长度</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = rand_str(<span class=\"variable\">$length</span>);<span class=\"comment\">//获取验证码</span></span><br><span class=\"line\"><span class=\"variable\">$font</span> = <span class=\"string\">&#x27;C:\\Windows\\Fonts\\simhei.ttf&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$length</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 逐个绘制验证码中的字符</span></span><br><span class=\"line\">    imagettftext(<span class=\"variable\">$image</span>, rand(<span class=\"number\">20</span>, <span class=\"number\">38</span>), rand(<span class=\"number\">0</span>, <span class=\"number\">60</span>), <span class=\"variable\">$i</span>*<span class=\"number\">50</span>+<span class=\"number\">25</span>, rand(<span class=\"number\">30</span>,<span class=\"number\">70</span>), rand_color(<span class=\"variable\">$image</span>), <span class=\"variable\">$font</span>, <span class=\"variable\">$str</span>[<span class=\"variable\">$i</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class=\"line\">imagejpeg(<span class=\"variable\">$image</span>);</span><br><span class=\"line\">imagedestroy(<span class=\"variable\">$image</span>);</span><br></pre></td></tr></table></figure>\n<p>demo.html文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--实现点击图片切换验证码--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 400px; height: 200px; margin: 100px auto&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;demo.php&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;this.src = &#x27;demo.php?captcha=&#x27; + Math.random()&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/03dd9d15b5e1407db21db921b1dbed93.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>有兴趣的话还可以看看我的其他相关博客：<br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154901\">GD图像处理——水印图实现</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154890\">GD图像处理——缩略图实现</a></p>\n"},{"title":"thinkphp控制器","date":"2021-08-26T11:56:48.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/17.jpg","_content":"# 一：控制器定义\n控制器，即 `controller`，控制器文件存放在 controller 目录下。\n\n控制器有以下若干知识点：\n+ 控制器下的每一个php类文件一般只有一个类，每个类必须有一个index函数，否则报错。\n+ 如果想改变系统默认的控制器文件目录，可以在 config 目录下的 `route.php` 配置：` 'controller_layer' => '修改后的名称'`。\n+ 类名和文件名大小写保持一致，并采用驼峰式（首字母大写）\n+ 如果使用的是单应用模式，那么控制器的类的定义如下，控制器类文件的实际位置是`app\\controller\\HelloWorld.php`，在没有定义路由的情况下访问的URL地址是：`http://localhost/index.php/HelloWorld/hello`\n，对于路径中的大写可以使用_换成小写，如`http://localhost/hello_world/hello`，事实上`http://localhost/index.php/helloworld/hello`也可以，但不推荐。\n\n```php\n<?php\nnamespace app\\controller;\n\nclass HelloWorld \n{\n    public function hello()\n    {\n        return 'hello，world！';\n    }\n}\n```\n+ 如果希望避免引入同名模型类的时候冲突，可以在`route.php`配置文件中设置`'controller_suffix'     => true`，那样的话就意味着使用控制器后缀，于是类名就需要添加Controller后缀，如下，相应的类文件也要改为`app\\controller\\HelloWorldController.php`\n\n```php\n<?php\nnamespace app\\controller;\n\nclass HelloWorldController\n{\n    public function login()\n    {\n        return 'login';\n    }\n}\n```\n+ 控制器一般不需要任何输出，直接return即可。并且控制器在json请求会自动转换为json格式输出。也可以调用`json($data)`手动转化为json格式。\n+ 不要在控制器中使用包括die、exit在内的中断代码。如果你需要调试并中止执行，可以使用系统提供的halt助手函数：`halt('输出测试')`\n\n# 二：基础控制器\n大多数情况下，官方建议给你的控制器继承一个基础控制器。默认安装后，系统提供了一个`app\\BaseController`基础控制器类，你可以对该基础控制器进行修改。该基础控制器仅仅提供了控制器验证功能，并注入了`think\\App`和`think\\Request`对象，因此你可以直接在控制器中使用app和request属性调用think\\App和think\\Request对象实例。至于控制器验证我水平有限，可能在以后的博客中添加相关内容。。。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4f76b564cc35407f8b829ef067c0bd2c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 三：空控制器\n空控制器的概念是指当系统找不到指定的控制器名称的时候，系统会尝试定位当前应用下的空控制器(Error)类，利用这个机制我们可以用来定制错误页面和进行URL的优化。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/263e3a1f5cde48568780257790107cfb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 四：多级控制器\n所谓多级控制器，就是在控制器 controller 目录下再建立目录并创建控制器，我们在 controller 目录下建立 group 目录，并创建 Blog.php 控制器，而此时，我们需要访问的地址为：`http://localhost:8000/group.blog`，这样可能有点别扭，但是可以使用路由的知识改变该路径。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b5bcce7f53404ece8d050ccb03262bf1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)由于URL访问不能访问默认的多级控制器（可能会把多级控制器名误识别为URL后缀），因此建议所有的多级控制器都通过路由定义后访问，如果要在路由定义中使用多级控制器，可以使用`Route::get('group/blog','group.blog/index')`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/27674e8a52a049368533bdbced3938ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 五：资源控制器\n资源控制器可以让你轻松的创建RESTFul资源控制器，可以通过命令行生成需要的资源控制器，例如生成index应用的Blog资源控制器使用：\n\n> php think make:controller index@Blog\n\n如果不想新建一个文件夹而是在原本的controller下创建，可以使用以下命令：\n\n> php think make:controller Blog\n\n或者使用完整的命名空间生成：\n\n> php think make:controller app\\index\\controller\\Blog\n\n如果只是用于接口开发，可以使用：\n\n> php think make:controller index@Blog --api\n\n然后你只需要为资源控制器注册一个资源路由：\n\n> Route::resource('blog', 'Blog');\n\n这个资源路由表示注册了一个名称为blog的资源路由到Blog控制器，系统会自动注册7个路由规则，如下：\n<table><thead><tr><th>标识</th><th>请求类型</th><th>生成路由规则</th><th>对应操作方法（默认）</th></tr></thead><tbody><tr><td>index</td><td>GET</td><td><code>blog</code></td><td>index</td></tr><tr><td>create</td><td>GET</td><td><code>blog/create</code></td><td>create</td></tr><tr><td>save</td><td>POST</td><td><code>blog</code></td><td>save</td></tr><tr><td>read</td><td>GET</td><td><code>blog/:id</code></td><td>read</td></tr><tr><td>edit</td><td>GET</td><td><code>blog/:id/edit</code></td><td>edit</td></tr><tr><td>update</td><td>PUT</td><td><code>blog/:id</code></td><td>update</td></tr><tr><td>delete</td><td>DELETE</td><td><code>blog/:id</code></td><td>delete</td></tr></tbody></table>\n\n关于资源路由的相关介绍将会在后续博客内展开。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/271a9f5dd7c84efe80186955bb5a3d5e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","source":"_posts/PHP/thinkphp控制器.md","raw":"---\ntitle: thinkphp控制器\ndate: 2021-08-26 19:56:48\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/17.jpg\ntags: \n  - thinkphp\n  - 控制器\ncategories: PHP\n---\n# 一：控制器定义\n控制器，即 `controller`，控制器文件存放在 controller 目录下。\n\n控制器有以下若干知识点：\n+ 控制器下的每一个php类文件一般只有一个类，每个类必须有一个index函数，否则报错。\n+ 如果想改变系统默认的控制器文件目录，可以在 config 目录下的 `route.php` 配置：` 'controller_layer' => '修改后的名称'`。\n+ 类名和文件名大小写保持一致，并采用驼峰式（首字母大写）\n+ 如果使用的是单应用模式，那么控制器的类的定义如下，控制器类文件的实际位置是`app\\controller\\HelloWorld.php`，在没有定义路由的情况下访问的URL地址是：`http://localhost/index.php/HelloWorld/hello`\n，对于路径中的大写可以使用_换成小写，如`http://localhost/hello_world/hello`，事实上`http://localhost/index.php/helloworld/hello`也可以，但不推荐。\n\n```php\n<?php\nnamespace app\\controller;\n\nclass HelloWorld \n{\n    public function hello()\n    {\n        return 'hello，world！';\n    }\n}\n```\n+ 如果希望避免引入同名模型类的时候冲突，可以在`route.php`配置文件中设置`'controller_suffix'     => true`，那样的话就意味着使用控制器后缀，于是类名就需要添加Controller后缀，如下，相应的类文件也要改为`app\\controller\\HelloWorldController.php`\n\n```php\n<?php\nnamespace app\\controller;\n\nclass HelloWorldController\n{\n    public function login()\n    {\n        return 'login';\n    }\n}\n```\n+ 控制器一般不需要任何输出，直接return即可。并且控制器在json请求会自动转换为json格式输出。也可以调用`json($data)`手动转化为json格式。\n+ 不要在控制器中使用包括die、exit在内的中断代码。如果你需要调试并中止执行，可以使用系统提供的halt助手函数：`halt('输出测试')`\n\n# 二：基础控制器\n大多数情况下，官方建议给你的控制器继承一个基础控制器。默认安装后，系统提供了一个`app\\BaseController`基础控制器类，你可以对该基础控制器进行修改。该基础控制器仅仅提供了控制器验证功能，并注入了`think\\App`和`think\\Request`对象，因此你可以直接在控制器中使用app和request属性调用think\\App和think\\Request对象实例。至于控制器验证我水平有限，可能在以后的博客中添加相关内容。。。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4f76b564cc35407f8b829ef067c0bd2c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 三：空控制器\n空控制器的概念是指当系统找不到指定的控制器名称的时候，系统会尝试定位当前应用下的空控制器(Error)类，利用这个机制我们可以用来定制错误页面和进行URL的优化。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/263e3a1f5cde48568780257790107cfb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 四：多级控制器\n所谓多级控制器，就是在控制器 controller 目录下再建立目录并创建控制器，我们在 controller 目录下建立 group 目录，并创建 Blog.php 控制器，而此时，我们需要访问的地址为：`http://localhost:8000/group.blog`，这样可能有点别扭，但是可以使用路由的知识改变该路径。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b5bcce7f53404ece8d050ccb03262bf1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)由于URL访问不能访问默认的多级控制器（可能会把多级控制器名误识别为URL后缀），因此建议所有的多级控制器都通过路由定义后访问，如果要在路由定义中使用多级控制器，可以使用`Route::get('group/blog','group.blog/index')`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/27674e8a52a049368533bdbced3938ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 五：资源控制器\n资源控制器可以让你轻松的创建RESTFul资源控制器，可以通过命令行生成需要的资源控制器，例如生成index应用的Blog资源控制器使用：\n\n> php think make:controller index@Blog\n\n如果不想新建一个文件夹而是在原本的controller下创建，可以使用以下命令：\n\n> php think make:controller Blog\n\n或者使用完整的命名空间生成：\n\n> php think make:controller app\\index\\controller\\Blog\n\n如果只是用于接口开发，可以使用：\n\n> php think make:controller index@Blog --api\n\n然后你只需要为资源控制器注册一个资源路由：\n\n> Route::resource('blog', 'Blog');\n\n这个资源路由表示注册了一个名称为blog的资源路由到Blog控制器，系统会自动注册7个路由规则，如下：\n<table><thead><tr><th>标识</th><th>请求类型</th><th>生成路由规则</th><th>对应操作方法（默认）</th></tr></thead><tbody><tr><td>index</td><td>GET</td><td><code>blog</code></td><td>index</td></tr><tr><td>create</td><td>GET</td><td><code>blog/create</code></td><td>create</td></tr><tr><td>save</td><td>POST</td><td><code>blog</code></td><td>save</td></tr><tr><td>read</td><td>GET</td><td><code>blog/:id</code></td><td>read</td></tr><tr><td>edit</td><td>GET</td><td><code>blog/:id/edit</code></td><td>edit</td></tr><tr><td>update</td><td>PUT</td><td><code>blog/:id</code></td><td>update</td></tr><tr><td>delete</td><td>DELETE</td><td><code>blog/:id</code></td><td>delete</td></tr></tbody></table>\n\n关于资源路由的相关介绍将会在后续博客内展开。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/271a9f5dd7c84efe80186955bb5a3d5e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","slug":"PHP/thinkphp控制器","published":1,"updated":"2021-12-03T14:59:52.151Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958at000iasda0hrpgyi2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：控制器定义\"><a href=\"#一：控制器定义\" class=\"headerlink\" title=\"一：控制器定义\"></a>一：控制器定义</h1><p>控制器，即 <code>controller</code>，控制器文件存放在 controller 目录下。</p>\n<p>控制器有以下若干知识点：</p>\n<ul>\n<li>控制器下的每一个php类文件一般只有一个类，每个类必须有一个index函数，否则报错。</li>\n<li>如果想改变系统默认的控制器文件目录，可以在 config 目录下的 <code>route.php</code> 配置：<code> &#39;controller_layer&#39; =&gt; &#39;修改后的名称&#39;</code>。</li>\n<li>类名和文件名大小写保持一致，并采用驼峰式（首字母大写）</li>\n<li>如果使用的是单应用模式，那么控制器的类的定义如下，控制器类文件的实际位置是<code>app\\controller\\HelloWorld.php</code>，在没有定义路由的情况下访问的URL地址是：<code>http://localhost/index.php/HelloWorld/hello</code><br>，对于路径中的大写可以使用_换成小写，如<code>http://localhost/hello_world/hello</code>，事实上<code>http://localhost/index.php/helloworld/hello</code>也可以，但不推荐。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;hello，world！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果希望避免引入同名模型类的时候冲突，可以在<code>route.php</code>配置文件中设置<code>&#39;controller_suffix&#39;     =&gt; true</code>，那样的话就意味着使用控制器后缀，于是类名就需要添加Controller后缀，如下，相应的类文件也要改为<code>app\\controller\\HelloWorldController.php</code></li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorldController</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;login&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>控制器一般不需要任何输出，直接return即可。并且控制器在json请求会自动转换为json格式输出。也可以调用<code>json($data)</code>手动转化为json格式。</li>\n<li>不要在控制器中使用包括die、exit在内的中断代码。如果你需要调试并中止执行，可以使用系统提供的halt助手函数：<code>halt(&#39;输出测试&#39;)</code></li>\n</ul>\n<h1 id=\"二：基础控制器\"><a href=\"#二：基础控制器\" class=\"headerlink\" title=\"二：基础控制器\"></a>二：基础控制器</h1><p>大多数情况下，官方建议给你的控制器继承一个基础控制器。默认安装后，系统提供了一个<code>app\\BaseController</code>基础控制器类，你可以对该基础控制器进行修改。该基础控制器仅仅提供了控制器验证功能，并注入了<code>think\\App</code>和<code>think\\Request</code>对象，因此你可以直接在控制器中使用app和request属性调用think\\App和think\\Request对象实例。至于控制器验证我水平有限，可能在以后的博客中添加相关内容。。。<br><img src=\"https://img-blog.csdnimg.cn/4f76b564cc35407f8b829ef067c0bd2c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：空控制器\"><a href=\"#三：空控制器\" class=\"headerlink\" title=\"三：空控制器\"></a>三：空控制器</h1><p>空控制器的概念是指当系统找不到指定的控制器名称的时候，系统会尝试定位当前应用下的空控制器(Error)类，利用这个机制我们可以用来定制错误页面和进行URL的优化。<br><img src=\"https://img-blog.csdnimg.cn/263e3a1f5cde48568780257790107cfb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：多级控制器\"><a href=\"#四：多级控制器\" class=\"headerlink\" title=\"四：多级控制器\"></a>四：多级控制器</h1><p>所谓多级控制器，就是在控制器 controller 目录下再建立目录并创建控制器，我们在 controller 目录下建立 group 目录，并创建 Blog.php 控制器，而此时，我们需要访问的地址为：<code>http://localhost:8000/group.blog</code>，这样可能有点别扭，但是可以使用路由的知识改变该路径。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/b5bcce7f53404ece8d050ccb03262bf1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">由于URL访问不能访问默认的多级控制器（可能会把多级控制器名误识别为URL后缀），因此建议所有的多级控制器都通过路由定义后访问，如果要在路由定义中使用多级控制器，可以使用<code>Route::get(&#39;group/blog&#39;,&#39;group.blog/index&#39;)</code><br><img src=\"https://img-blog.csdnimg.cn/27674e8a52a049368533bdbced3938ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"五：资源控制器\"><a href=\"#五：资源控制器\" class=\"headerlink\" title=\"五：资源控制器\"></a>五：资源控制器</h1><p>资源控制器可以让你轻松的创建RESTFul资源控制器，可以通过命令行生成需要的资源控制器，例如生成index应用的Blog资源控制器使用：</p>\n<blockquote>\n<p>php think make:controller index@Blog</p>\n</blockquote>\n<p>如果不想新建一个文件夹而是在原本的controller下创建，可以使用以下命令：</p>\n<blockquote>\n<p>php think make:controller Blog</p>\n</blockquote>\n<p>或者使用完整的命名空间生成：</p>\n<blockquote>\n<p>php think make:controller app\\index\\controller\\Blog</p>\n</blockquote>\n<p>如果只是用于接口开发，可以使用：</p>\n<blockquote>\n<p>php think make:controller index@Blog –api</p>\n</blockquote>\n<p>然后你只需要为资源控制器注册一个资源路由：</p>\n<blockquote>\n<p>Route::resource(‘blog’, ‘Blog’);</p>\n</blockquote>\n<p>这个资源路由表示注册了一个名称为blog的资源路由到Blog控制器，系统会自动注册7个路由规则，如下：</p>\n<table><thead><tr><th>标识</th><th>请求类型</th><th>生成路由规则</th><th>对应操作方法（默认）</th></tr></thead><tbody><tr><td>index</td><td>GET</td><td><code>blog</code></td><td>index</td></tr><tr><td>create</td><td>GET</td><td><code>blog/create</code></td><td>create</td></tr><tr><td>save</td><td>POST</td><td><code>blog</code></td><td>save</td></tr><tr><td>read</td><td>GET</td><td><code>blog/:id</code></td><td>read</td></tr><tr><td>edit</td><td>GET</td><td><code>blog/:id/edit</code></td><td>edit</td></tr><tr><td>update</td><td>PUT</td><td><code>blog/:id</code></td><td>update</td></tr><tr><td>delete</td><td>DELETE</td><td><code>blog/:id</code></td><td>delete</td></tr></tbody></table>\n\n<p>关于资源路由的相关介绍将会在后续博客内展开。<br><img src=\"https://img-blog.csdnimg.cn/271a9f5dd7c84efe80186955bb5a3d5e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：控制器定义\"><a href=\"#一：控制器定义\" class=\"headerlink\" title=\"一：控制器定义\"></a>一：控制器定义</h1><p>控制器，即 <code>controller</code>，控制器文件存放在 controller 目录下。</p>\n<p>控制器有以下若干知识点：</p>\n<ul>\n<li>控制器下的每一个php类文件一般只有一个类，每个类必须有一个index函数，否则报错。</li>\n<li>如果想改变系统默认的控制器文件目录，可以在 config 目录下的 <code>route.php</code> 配置：<code> &#39;controller_layer&#39; =&gt; &#39;修改后的名称&#39;</code>。</li>\n<li>类名和文件名大小写保持一致，并采用驼峰式（首字母大写）</li>\n<li>如果使用的是单应用模式，那么控制器的类的定义如下，控制器类文件的实际位置是<code>app\\controller\\HelloWorld.php</code>，在没有定义路由的情况下访问的URL地址是：<code>http://localhost/index.php/HelloWorld/hello</code><br>，对于路径中的大写可以使用_换成小写，如<code>http://localhost/hello_world/hello</code>，事实上<code>http://localhost/index.php/helloworld/hello</code>也可以，但不推荐。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;hello，world！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果希望避免引入同名模型类的时候冲突，可以在<code>route.php</code>配置文件中设置<code>&#39;controller_suffix&#39;     =&gt; true</code>，那样的话就意味着使用控制器后缀，于是类名就需要添加Controller后缀，如下，相应的类文件也要改为<code>app\\controller\\HelloWorldController.php</code></li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorldController</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;login&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>控制器一般不需要任何输出，直接return即可。并且控制器在json请求会自动转换为json格式输出。也可以调用<code>json($data)</code>手动转化为json格式。</li>\n<li>不要在控制器中使用包括die、exit在内的中断代码。如果你需要调试并中止执行，可以使用系统提供的halt助手函数：<code>halt(&#39;输出测试&#39;)</code></li>\n</ul>\n<h1 id=\"二：基础控制器\"><a href=\"#二：基础控制器\" class=\"headerlink\" title=\"二：基础控制器\"></a>二：基础控制器</h1><p>大多数情况下，官方建议给你的控制器继承一个基础控制器。默认安装后，系统提供了一个<code>app\\BaseController</code>基础控制器类，你可以对该基础控制器进行修改。该基础控制器仅仅提供了控制器验证功能，并注入了<code>think\\App</code>和<code>think\\Request</code>对象，因此你可以直接在控制器中使用app和request属性调用think\\App和think\\Request对象实例。至于控制器验证我水平有限，可能在以后的博客中添加相关内容。。。<br><img src=\"https://img-blog.csdnimg.cn/4f76b564cc35407f8b829ef067c0bd2c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：空控制器\"><a href=\"#三：空控制器\" class=\"headerlink\" title=\"三：空控制器\"></a>三：空控制器</h1><p>空控制器的概念是指当系统找不到指定的控制器名称的时候，系统会尝试定位当前应用下的空控制器(Error)类，利用这个机制我们可以用来定制错误页面和进行URL的优化。<br><img src=\"https://img-blog.csdnimg.cn/263e3a1f5cde48568780257790107cfb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：多级控制器\"><a href=\"#四：多级控制器\" class=\"headerlink\" title=\"四：多级控制器\"></a>四：多级控制器</h1><p>所谓多级控制器，就是在控制器 controller 目录下再建立目录并创建控制器，我们在 controller 目录下建立 group 目录，并创建 Blog.php 控制器，而此时，我们需要访问的地址为：<code>http://localhost:8000/group.blog</code>，这样可能有点别扭，但是可以使用路由的知识改变该路径。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/b5bcce7f53404ece8d050ccb03262bf1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">由于URL访问不能访问默认的多级控制器（可能会把多级控制器名误识别为URL后缀），因此建议所有的多级控制器都通过路由定义后访问，如果要在路由定义中使用多级控制器，可以使用<code>Route::get(&#39;group/blog&#39;,&#39;group.blog/index&#39;)</code><br><img src=\"https://img-blog.csdnimg.cn/27674e8a52a049368533bdbced3938ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"五：资源控制器\"><a href=\"#五：资源控制器\" class=\"headerlink\" title=\"五：资源控制器\"></a>五：资源控制器</h1><p>资源控制器可以让你轻松的创建RESTFul资源控制器，可以通过命令行生成需要的资源控制器，例如生成index应用的Blog资源控制器使用：</p>\n<blockquote>\n<p>php think make:controller index@Blog</p>\n</blockquote>\n<p>如果不想新建一个文件夹而是在原本的controller下创建，可以使用以下命令：</p>\n<blockquote>\n<p>php think make:controller Blog</p>\n</blockquote>\n<p>或者使用完整的命名空间生成：</p>\n<blockquote>\n<p>php think make:controller app\\index\\controller\\Blog</p>\n</blockquote>\n<p>如果只是用于接口开发，可以使用：</p>\n<blockquote>\n<p>php think make:controller index@Blog –api</p>\n</blockquote>\n<p>然后你只需要为资源控制器注册一个资源路由：</p>\n<blockquote>\n<p>Route::resource(‘blog’, ‘Blog’);</p>\n</blockquote>\n<p>这个资源路由表示注册了一个名称为blog的资源路由到Blog控制器，系统会自动注册7个路由规则，如下：</p>\n<table><thead><tr><th>标识</th><th>请求类型</th><th>生成路由规则</th><th>对应操作方法（默认）</th></tr></thead><tbody><tr><td>index</td><td>GET</td><td><code>blog</code></td><td>index</td></tr><tr><td>create</td><td>GET</td><td><code>blog/create</code></td><td>create</td></tr><tr><td>save</td><td>POST</td><td><code>blog</code></td><td>save</td></tr><tr><td>read</td><td>GET</td><td><code>blog/:id</code></td><td>read</td></tr><tr><td>edit</td><td>GET</td><td><code>blog/:id/edit</code></td><td>edit</td></tr><tr><td>update</td><td>PUT</td><td><code>blog/:id</code></td><td>update</td></tr><tr><td>delete</td><td>DELETE</td><td><code>blog/:id</code></td><td>delete</td></tr></tbody></table>\n\n<p>关于资源路由的相关介绍将会在后续博客内展开。<br><img src=\"https://img-blog.csdnimg.cn/271a9f5dd7c84efe80186955bb5a3d5e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"Commonjs基于服务器端(node)的运用","date":"2021-05-28T12:29:52.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/18.jpg","_content":"\n    node是完全遵循CommonJS规范的\n    CommonJS说明：\n        每个文件都可以当作一个模块\n        在服务端：模块的加载是运行时同步加载的\n        在浏览器端：模块需要提前编译打包处理\n    基本语法：\n        暴露模块：\n            module.exports = value\n            exports.xxx = value\n        引入模块：require(xxx) （其中第三方模块时xxx为模块名，自定义模块时为模块文件路径）\n    实现：\n        服务器端实现：Node.js\n        浏览器端实现：Browserify（也称CommonJS的浏览器端的打包工具）\n 大家还可以看看我的另一篇博文：[CommonJS基于浏览器端运用](https://blog.csdn.net/tongkongyu/article/details/117381504?spm=1001.2014.3001.5501)\n 以下是代码部分：\n 文件目录：\n ![目录](https://img-blog.csdnimg.cn/20210528202237452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n先通过命令行初始化环境，方便下包：\n\n```javascript\nnpm init --yes\n```\n下载uniq包：\n\n```javascript\nnpm i uniq --save\n```\nmodules目录下文件：\nmodule1.js\n\n```javascript\n// module.exports = value 暴露一个对象\nmodule.exports = {\n    msg: 'module1',\n    foo(){\n        console.log(this.msg);\n    }\n};\n```\nmodule2.js\n\n```javascript\n// 暴露一个函数 module.exports = function()\nmodule.exports = function() {\n    console.log('module2');\n}\n```\nmodule3.js\n\n```javascript\n// exports.xxx = value\nexports.foo = function() {\n    console.log('foo() module3');\n};\n\nexports.bar = function() {\n    console.log('bar() module3');\n};\n\nexports.arr = [6,2,5,2,8,10];\n```\napp.js\n\n```javascript\n// 将其他模块汇集到主模块\nlet uniq = require('uniq'); // 第三方库应该放到自定义模板上方，这个库可以给数组排序并且去重\n\nlet module1 = require('./modules/module1');\nlet module2 = require('./modules/module2');\nlet module3 = require('./modules/module3');\n\n// module1是对象，所以调用方式如下：\nmodule1.foo();\n// module2是函数，所以调用方式如下：\nmodule2();\n// module3有多个函数，所以调用方式如下：\nmodule3.foo();\nmodule3.bar();\nconsole.log(module3.arr);\n// 取出module3中的数组,该方法会自动给数组元素去重和排序，根据数字第一位编码排序\nlet result = uniq(module3.arr);\nconsole.log(result);\n```\nnode运行：\n\n![运行结果](https://img-blog.csdnimg.cn/20210528202900396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","source":"_posts/javascript/CommonJS服务端.md","raw":"---\ntitle: Commonjs基于服务器端(node)的运用\ndate: 2021-05-28 20:29:52\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/18.jpg\ntags: \n  - CommonJS\n  - 模块化\n  - node.js\ncategories: 'javascript'\n---\n\n    node是完全遵循CommonJS规范的\n    CommonJS说明：\n        每个文件都可以当作一个模块\n        在服务端：模块的加载是运行时同步加载的\n        在浏览器端：模块需要提前编译打包处理\n    基本语法：\n        暴露模块：\n            module.exports = value\n            exports.xxx = value\n        引入模块：require(xxx) （其中第三方模块时xxx为模块名，自定义模块时为模块文件路径）\n    实现：\n        服务器端实现：Node.js\n        浏览器端实现：Browserify（也称CommonJS的浏览器端的打包工具）\n 大家还可以看看我的另一篇博文：[CommonJS基于浏览器端运用](https://blog.csdn.net/tongkongyu/article/details/117381504?spm=1001.2014.3001.5501)\n 以下是代码部分：\n 文件目录：\n ![目录](https://img-blog.csdnimg.cn/20210528202237452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n先通过命令行初始化环境，方便下包：\n\n```javascript\nnpm init --yes\n```\n下载uniq包：\n\n```javascript\nnpm i uniq --save\n```\nmodules目录下文件：\nmodule1.js\n\n```javascript\n// module.exports = value 暴露一个对象\nmodule.exports = {\n    msg: 'module1',\n    foo(){\n        console.log(this.msg);\n    }\n};\n```\nmodule2.js\n\n```javascript\n// 暴露一个函数 module.exports = function()\nmodule.exports = function() {\n    console.log('module2');\n}\n```\nmodule3.js\n\n```javascript\n// exports.xxx = value\nexports.foo = function() {\n    console.log('foo() module3');\n};\n\nexports.bar = function() {\n    console.log('bar() module3');\n};\n\nexports.arr = [6,2,5,2,8,10];\n```\napp.js\n\n```javascript\n// 将其他模块汇集到主模块\nlet uniq = require('uniq'); // 第三方库应该放到自定义模板上方，这个库可以给数组排序并且去重\n\nlet module1 = require('./modules/module1');\nlet module2 = require('./modules/module2');\nlet module3 = require('./modules/module3');\n\n// module1是对象，所以调用方式如下：\nmodule1.foo();\n// module2是函数，所以调用方式如下：\nmodule2();\n// module3有多个函数，所以调用方式如下：\nmodule3.foo();\nmodule3.bar();\nconsole.log(module3.arr);\n// 取出module3中的数组,该方法会自动给数组元素去重和排序，根据数字第一位编码排序\nlet result = uniq(module3.arr);\nconsole.log(result);\n```\nnode运行：\n\n![运行结果](https://img-blog.csdnimg.cn/20210528202900396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","slug":"javascript/CommonJS服务端","published":1,"updated":"2021-12-03T14:57:37.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958av000jasdab9uteimk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><pre><code>node是完全遵循CommonJS规范的\nCommonJS说明：\n    每个文件都可以当作一个模块\n    在服务端：模块的加载是运行时同步加载的\n    在浏览器端：模块需要提前编译打包处理\n基本语法：\n    暴露模块：\n        module.exports = value\n        exports.xxx = value\n    引入模块：require(xxx) （其中第三方模块时xxx为模块名，自定义模块时为模块文件路径）\n实现：\n    服务器端实现：Node.js\n    浏览器端实现：Browserify（也称CommonJS的浏览器端的打包工具）\n</code></pre>\n<p> 大家还可以看看我的另一篇博文：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117381504?spm=1001.2014.3001.5501\">CommonJS基于浏览器端运用</a><br> 以下是代码部分：<br> 文件目录：<br> <img src=\"https://img-blog.csdnimg.cn/20210528202237452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"目录\"><br>先通过命令行初始化环境，方便下包：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init --yes</span><br></pre></td></tr></table></figure>\n<p>下载uniq包：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i uniq --save</span><br></pre></td></tr></table></figure>\n<p>modules目录下文件：<br>module1.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// module.exports = value 暴露一个对象</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;module1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.msg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>module2.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 暴露一个函数 module.exports = function()</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module2&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>module3.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// exports.xxx = value</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;foo() module3&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;bar() module3&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.arr = [<span class=\"number\">6</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>];</span><br></pre></td></tr></table></figure>\n<p>app.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将其他模块汇集到主模块</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> uniq = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;uniq&#x27;</span>); <span class=\"comment\">// 第三方库应该放到自定义模板上方，这个库可以给数组排序并且去重</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> module1 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./modules/module1&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> module2 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./modules/module2&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> module3 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./modules/module3&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// module1是对象，所以调用方式如下：</span></span><br><span class=\"line\">module1.foo();</span><br><span class=\"line\"><span class=\"comment\">// module2是函数，所以调用方式如下：</span></span><br><span class=\"line\">module2();</span><br><span class=\"line\"><span class=\"comment\">// module3有多个函数，所以调用方式如下：</span></span><br><span class=\"line\">module3.foo();</span><br><span class=\"line\">module3.bar();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(module3.arr);</span><br><span class=\"line\"><span class=\"comment\">// 取出module3中的数组,该方法会自动给数组元素去重和排序，根据数字第一位编码排序</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = uniq(module3.arr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result);</span><br></pre></td></tr></table></figure>\n<p>node运行：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210528202900396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"运行结果\"></p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>node是完全遵循CommonJS规范的\nCommonJS说明：\n    每个文件都可以当作一个模块\n    在服务端：模块的加载是运行时同步加载的\n    在浏览器端：模块需要提前编译打包处理\n基本语法：\n    暴露模块：\n        module.exports = value\n        exports.xxx = value\n    引入模块：require(xxx) （其中第三方模块时xxx为模块名，自定义模块时为模块文件路径）\n实现：\n    服务器端实现：Node.js\n    浏览器端实现：Browserify（也称CommonJS的浏览器端的打包工具）\n</code></pre>\n<p> 大家还可以看看我的另一篇博文：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117381504?spm=1001.2014.3001.5501\">CommonJS基于浏览器端运用</a><br> 以下是代码部分：<br> 文件目录：<br> <img src=\"https://img-blog.csdnimg.cn/20210528202237452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"目录\"><br>先通过命令行初始化环境，方便下包：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init --yes</span><br></pre></td></tr></table></figure>\n<p>下载uniq包：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i uniq --save</span><br></pre></td></tr></table></figure>\n<p>modules目录下文件：<br>module1.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// module.exports = value 暴露一个对象</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;module1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.msg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>module2.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 暴露一个函数 module.exports = function()</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module2&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>module3.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// exports.xxx = value</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;foo() module3&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;bar() module3&#x27;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.arr = [<span class=\"number\">6</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>];</span><br></pre></td></tr></table></figure>\n<p>app.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将其他模块汇集到主模块</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> uniq = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;uniq&#x27;</span>); <span class=\"comment\">// 第三方库应该放到自定义模板上方，这个库可以给数组排序并且去重</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> module1 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./modules/module1&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> module2 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./modules/module2&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> module3 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./modules/module3&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// module1是对象，所以调用方式如下：</span></span><br><span class=\"line\">module1.foo();</span><br><span class=\"line\"><span class=\"comment\">// module2是函数，所以调用方式如下：</span></span><br><span class=\"line\">module2();</span><br><span class=\"line\"><span class=\"comment\">// module3有多个函数，所以调用方式如下：</span></span><br><span class=\"line\">module3.foo();</span><br><span class=\"line\">module3.bar();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(module3.arr);</span><br><span class=\"line\"><span class=\"comment\">// 取出module3中的数组,该方法会自动给数组元素去重和排序，根据数字第一位编码排序</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = uniq(module3.arr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result);</span><br></pre></td></tr></table></figure>\n<p>node运行：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210528202900396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"运行结果\"></p>\n"},{"title":"ES6模块化编程","date":"2021-05-29T13:23:59.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/2.jpg","_content":"\n```\nES6依赖模块需要编译打包处理\n语法：\n    导出模块： export\n    引入模块： import\n实现(浏览器端)：\n    使用Babel将ES6编译为ES5代码\n    使用Browserify编译打包js\n```\n先预览一下文件目录：\n![文件目录](https://img-blog.csdnimg.cn/20210529205746354.png)\n因为在实现时需要使用npm下载一些包，所以先初始化环境：\n\n```javascript\nnpm init --yes\n```\n手动创建src文件放自己写的代码，module文件夹下的三个文件对应ES6三种暴露方式，main为根模块，也是打包入口。\n\nmodule1.js:\n\n```javascript\n// 暴露模块  分别暴露\n\nexport function foo() {\n    console.log(\"foo() module1\");\n}\n\nexport function bar() {\n    console.log(\"bar() module1\");\n}\n\nexport let arr = [1, 2, 3, 4, 5];\n```\nmodule2.js:\n\n```javascript\n// 统一暴露\n\nfunction fun1() {\n    console.log(\"fun1() module2\");\n}\n\nfunction fun2() {\n    console.log(\"fun2() module2\");\n}\n\nexport {fun1, fun2};\n```\nmodule3.js:\n\n```javascript\n// 默认暴露 可以暴露任何数据类型，暴露什么数据接收到的就是什么数据\n// export default value;\nexport default {\n    msg: '我是默认暴露的对象',\n    foo: function(){\n        console.log(this.msg);\n    },\n    bar() {\n        console.log('我是默认暴露的函数');\n    }\n}\n```\nmain.js:\n\n```javascript\n// 引入其他模块\n// 语法： import xxx from '路径';\nimport $ from 'jquery'; // 引入第三方库默认放最上面\n\nimport {foo, bar, arr} from './module/module1'; //引入时是灰色，使用后变成正常亮色\nimport {fun1, fun2} from './module/module2';\nimport module3 from './module/module3';\n\nfoo();\nbar();\nconsole.log(arr);\nfun1();\nfun2();\nmodule3.foo();\nmodule3.bar();\n```\n代码全局预览：\n![全局预览](https://img-blog.csdnimg.cn/2021052921222877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n此时原始代码有很多ES6语法以及require等接口无法被多数浏览器识别，因此需要对其进行处理\n先使用babel将ES6语法转为ES5语法，需要先全局安装babel-cli, 局部安装babel-preset-es2015,安装完后新增babel命令。\n    - preset 预设(将es6转换成es5的所有插件打包)\n    - cli (command line interface 命令行接口)\n\n```powershell\nnpm i babel-cli -g\n```\n\n```powershell\nnpm i babel-preset-es2015 --save-dev\n```\n安装好后还不能开始转换操作，babel工作前先需要读取 .babelrc 文件内的配置，因此在根目录创建.babelrc文件夹，该文件代码格式为json格式，里面储存配置信息,代码如下，意思是让babel转成ES5语法\n\n```json\n{\n    \"presets\": [\"es2015\"]\n}\n```\n准备工作做好后便可进行翻译操作：\n\n```powershell\nbabel src -d build\n```\n翻译不会改变目录结构\n如图：\n![目录展示](https://img-blog.csdnimg.cn/20210529211313102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n但是require语句无法翻译，此时需要browserify进行打包处理，先配置browserify环境，配置完后新增browserify命令。\n\n```powershell\nnpm i browserify -g\n```\n开始打包输出到dist文件夹下：\n\n```powershell\nbrowserify build/main.js -o dist/bundle.js\n```\n\n打包成功后dist文件夹下新增bundle.js文件，该文件可以正常使用。\nindex.html：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script src=\"./dist/bundle.js\"></script>\n</body>\n</html>\n```\n效果展示：\n![效果展示](https://img-blog.csdnimg.cn/20210529212056736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n","source":"_posts/javascript/ES6模块化编程.md","raw":"---\ntitle: ES6模块化编程\ndate:  2021-05-29 21:23:59\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/2.jpg\ntags: \n  - ES6\n  - 模块化\ncategories: javascript\n---\n\n```\nES6依赖模块需要编译打包处理\n语法：\n    导出模块： export\n    引入模块： import\n实现(浏览器端)：\n    使用Babel将ES6编译为ES5代码\n    使用Browserify编译打包js\n```\n先预览一下文件目录：\n![文件目录](https://img-blog.csdnimg.cn/20210529205746354.png)\n因为在实现时需要使用npm下载一些包，所以先初始化环境：\n\n```javascript\nnpm init --yes\n```\n手动创建src文件放自己写的代码，module文件夹下的三个文件对应ES6三种暴露方式，main为根模块，也是打包入口。\n\nmodule1.js:\n\n```javascript\n// 暴露模块  分别暴露\n\nexport function foo() {\n    console.log(\"foo() module1\");\n}\n\nexport function bar() {\n    console.log(\"bar() module1\");\n}\n\nexport let arr = [1, 2, 3, 4, 5];\n```\nmodule2.js:\n\n```javascript\n// 统一暴露\n\nfunction fun1() {\n    console.log(\"fun1() module2\");\n}\n\nfunction fun2() {\n    console.log(\"fun2() module2\");\n}\n\nexport {fun1, fun2};\n```\nmodule3.js:\n\n```javascript\n// 默认暴露 可以暴露任何数据类型，暴露什么数据接收到的就是什么数据\n// export default value;\nexport default {\n    msg: '我是默认暴露的对象',\n    foo: function(){\n        console.log(this.msg);\n    },\n    bar() {\n        console.log('我是默认暴露的函数');\n    }\n}\n```\nmain.js:\n\n```javascript\n// 引入其他模块\n// 语法： import xxx from '路径';\nimport $ from 'jquery'; // 引入第三方库默认放最上面\n\nimport {foo, bar, arr} from './module/module1'; //引入时是灰色，使用后变成正常亮色\nimport {fun1, fun2} from './module/module2';\nimport module3 from './module/module3';\n\nfoo();\nbar();\nconsole.log(arr);\nfun1();\nfun2();\nmodule3.foo();\nmodule3.bar();\n```\n代码全局预览：\n![全局预览](https://img-blog.csdnimg.cn/2021052921222877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n此时原始代码有很多ES6语法以及require等接口无法被多数浏览器识别，因此需要对其进行处理\n先使用babel将ES6语法转为ES5语法，需要先全局安装babel-cli, 局部安装babel-preset-es2015,安装完后新增babel命令。\n    - preset 预设(将es6转换成es5的所有插件打包)\n    - cli (command line interface 命令行接口)\n\n```powershell\nnpm i babel-cli -g\n```\n\n```powershell\nnpm i babel-preset-es2015 --save-dev\n```\n安装好后还不能开始转换操作，babel工作前先需要读取 .babelrc 文件内的配置，因此在根目录创建.babelrc文件夹，该文件代码格式为json格式，里面储存配置信息,代码如下，意思是让babel转成ES5语法\n\n```json\n{\n    \"presets\": [\"es2015\"]\n}\n```\n准备工作做好后便可进行翻译操作：\n\n```powershell\nbabel src -d build\n```\n翻译不会改变目录结构\n如图：\n![目录展示](https://img-blog.csdnimg.cn/20210529211313102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n但是require语句无法翻译，此时需要browserify进行打包处理，先配置browserify环境，配置完后新增browserify命令。\n\n```powershell\nnpm i browserify -g\n```\n开始打包输出到dist文件夹下：\n\n```powershell\nbrowserify build/main.js -o dist/bundle.js\n```\n\n打包成功后dist文件夹下新增bundle.js文件，该文件可以正常使用。\nindex.html：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script src=\"./dist/bundle.js\"></script>\n</body>\n</html>\n```\n效果展示：\n![效果展示](https://img-blog.csdnimg.cn/20210529212056736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n","slug":"javascript/ES6模块化编程","published":1,"updated":"2021-12-03T14:57:43.867Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958ay000nasdabw9v9pk4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES6依赖模块需要编译打包处理</span><br><span class=\"line\">语法：</span><br><span class=\"line\">    导出模块： export</span><br><span class=\"line\">    引入模块： import</span><br><span class=\"line\">实现(浏览器端)：</span><br><span class=\"line\">    使用Babel将ES6编译为ES5代码</span><br><span class=\"line\">    使用Browserify编译打包js</span><br></pre></td></tr></table></figure>\n<p>先预览一下文件目录：<br><img src=\"https://img-blog.csdnimg.cn/20210529205746354.png\" alt=\"文件目录\"><br>因为在实现时需要使用npm下载一些包，所以先初始化环境：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init --yes</span><br></pre></td></tr></table></figure>\n<p>手动创建src文件放自己写的代码，module文件夹下的三个文件对应ES6三种暴露方式，main为根模块，也是打包入口。</p>\n<p>module1.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 暴露模块  分别暴露</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;foo() module1&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;bar() module1&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br></pre></td></tr></table></figure>\n<p>module2.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 统一暴露</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun1</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;fun1() module2&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun2</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;fun2() module2&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;fun1, fun2&#125;;</span><br></pre></td></tr></table></figure>\n<p>module3.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认暴露 可以暴露任何数据类型，暴露什么数据接收到的就是什么数据</span></span><br><span class=\"line\"><span class=\"comment\">// export default value;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;我是默认暴露的对象&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">foo</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.msg);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">bar</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;我是默认暴露的函数&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>main.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入其他模块</span></span><br><span class=\"line\"><span class=\"comment\">// 语法： import xxx from &#x27;路径&#x27;;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jquery&#x27;</span>; <span class=\"comment\">// 引入第三方库默认放最上面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;foo, bar, arr&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module/module1&#x27;</span>; <span class=\"comment\">//引入时是灰色，使用后变成正常亮色</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;fun1, fun2&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module/module2&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> module3 <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module/module3&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">foo();</span><br><span class=\"line\">bar();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);</span><br><span class=\"line\">fun1();</span><br><span class=\"line\">fun2();</span><br><span class=\"line\">module3.foo();</span><br><span class=\"line\">module3.bar();</span><br></pre></td></tr></table></figure>\n<p>代码全局预览：<br><img src=\"https://img-blog.csdnimg.cn/2021052921222877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"全局预览\"></p>\n<p>此时原始代码有很多ES6语法以及require等接口无法被多数浏览器识别，因此需要对其进行处理<br>先使用babel将ES6语法转为ES5语法，需要先全局安装babel-cli, 局部安装babel-preset-es2015,安装完后新增babel命令。<br>    - preset 预设(将es6转换成es5的所有插件打包)<br>    - cli (command line interface 命令行接口)</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i babel<span class=\"literal\">-cli</span> <span class=\"literal\">-g</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i babel<span class=\"literal\">-preset</span><span class=\"literal\">-es2015</span> -<span class=\"literal\">-save</span><span class=\"literal\">-dev</span></span><br></pre></td></tr></table></figure>\n<p>安装好后还不能开始转换操作，babel工作前先需要读取 .babelrc 文件内的配置，因此在根目录创建.babelrc文件夹，该文件代码格式为json格式，里面储存配置信息,代码如下，意思是让babel转成ES5语法</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;presets&quot;</span>: [<span class=\"string\">&quot;es2015&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>准备工作做好后便可进行翻译操作：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">babel src <span class=\"literal\">-d</span> build</span><br></pre></td></tr></table></figure>\n<p>翻译不会改变目录结构<br>如图：<br><img src=\"https://img-blog.csdnimg.cn/20210529211313102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"目录展示\"><br>但是require语句无法翻译，此时需要browserify进行打包处理，先配置browserify环境，配置完后新增browserify命令。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i browserify <span class=\"literal\">-g</span></span><br></pre></td></tr></table></figure>\n<p>开始打包输出到dist文件夹下：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">browserify build/main.js <span class=\"literal\">-o</span> dist/bundle.js</span><br></pre></td></tr></table></figure>\n\n<p>打包成功后dist文件夹下新增bundle.js文件，该文件可以正常使用。<br>index.html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./dist/bundle.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/20210529212056736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"效果展示\"></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES6依赖模块需要编译打包处理</span><br><span class=\"line\">语法：</span><br><span class=\"line\">    导出模块： export</span><br><span class=\"line\">    引入模块： import</span><br><span class=\"line\">实现(浏览器端)：</span><br><span class=\"line\">    使用Babel将ES6编译为ES5代码</span><br><span class=\"line\">    使用Browserify编译打包js</span><br></pre></td></tr></table></figure>\n<p>先预览一下文件目录：<br><img src=\"https://img-blog.csdnimg.cn/20210529205746354.png\" alt=\"文件目录\"><br>因为在实现时需要使用npm下载一些包，所以先初始化环境：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init --yes</span><br></pre></td></tr></table></figure>\n<p>手动创建src文件放自己写的代码，module文件夹下的三个文件对应ES6三种暴露方式，main为根模块，也是打包入口。</p>\n<p>module1.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 暴露模块  分别暴露</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;foo() module1&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;bar() module1&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br></pre></td></tr></table></figure>\n<p>module2.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 统一暴露</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun1</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;fun1() module2&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun2</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;fun2() module2&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;fun1, fun2&#125;;</span><br></pre></td></tr></table></figure>\n<p>module3.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认暴露 可以暴露任何数据类型，暴露什么数据接收到的就是什么数据</span></span><br><span class=\"line\"><span class=\"comment\">// export default value;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;我是默认暴露的对象&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">foo</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.msg);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">bar</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;我是默认暴露的函数&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>main.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入其他模块</span></span><br><span class=\"line\"><span class=\"comment\">// 语法： import xxx from &#x27;路径&#x27;;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jquery&#x27;</span>; <span class=\"comment\">// 引入第三方库默认放最上面</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;foo, bar, arr&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module/module1&#x27;</span>; <span class=\"comment\">//引入时是灰色，使用后变成正常亮色</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;fun1, fun2&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module/module2&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> module3 <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module/module3&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">foo();</span><br><span class=\"line\">bar();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);</span><br><span class=\"line\">fun1();</span><br><span class=\"line\">fun2();</span><br><span class=\"line\">module3.foo();</span><br><span class=\"line\">module3.bar();</span><br></pre></td></tr></table></figure>\n<p>代码全局预览：<br><img src=\"https://img-blog.csdnimg.cn/2021052921222877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"全局预览\"></p>\n<p>此时原始代码有很多ES6语法以及require等接口无法被多数浏览器识别，因此需要对其进行处理<br>先使用babel将ES6语法转为ES5语法，需要先全局安装babel-cli, 局部安装babel-preset-es2015,安装完后新增babel命令。<br>    - preset 预设(将es6转换成es5的所有插件打包)<br>    - cli (command line interface 命令行接口)</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i babel<span class=\"literal\">-cli</span> <span class=\"literal\">-g</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i babel<span class=\"literal\">-preset</span><span class=\"literal\">-es2015</span> -<span class=\"literal\">-save</span><span class=\"literal\">-dev</span></span><br></pre></td></tr></table></figure>\n<p>安装好后还不能开始转换操作，babel工作前先需要读取 .babelrc 文件内的配置，因此在根目录创建.babelrc文件夹，该文件代码格式为json格式，里面储存配置信息,代码如下，意思是让babel转成ES5语法</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;presets&quot;</span>: [<span class=\"string\">&quot;es2015&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>准备工作做好后便可进行翻译操作：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">babel src <span class=\"literal\">-d</span> build</span><br></pre></td></tr></table></figure>\n<p>翻译不会改变目录结构<br>如图：<br><img src=\"https://img-blog.csdnimg.cn/20210529211313102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"目录展示\"><br>但是require语句无法翻译，此时需要browserify进行打包处理，先配置browserify环境，配置完后新增browserify命令。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i browserify <span class=\"literal\">-g</span></span><br></pre></td></tr></table></figure>\n<p>开始打包输出到dist文件夹下：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">browserify build/main.js <span class=\"literal\">-o</span> dist/bundle.js</span><br></pre></td></tr></table></figure>\n\n<p>打包成功后dist文件夹下新增bundle.js文件，该文件可以正常使用。<br>index.html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./dist/bundle.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/20210529212056736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"效果展示\"></p>\n"},{"title":"CommonJS基于浏览器端的运用","date":"2021-05-29T04:00:59.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/20.jpg","_content":"\n我之前还有一篇CommonJS基于node环境运用，大家有兴趣可以去看看，放链接：[CommonJS基于服务端(node运用)](https://blog.csdn.net/tongkongyu/article/details/117373698?spm=1001.2014.3001.5501)\n先放文件目录：dist文件夹放打包生成的代码，src文件夹放自己写的代码\n![目录](https://img-blog.csdnimg.cn/20210529114237440.png)\n先初始化环境，方便下包：\n\n```javascript\nnpm init\n```\n之所以不用 npm init --yes是因为我根目录叫browserify,后续下browserify包时不允许同名，当然也可以npm init --yes后再package.json手动更改name值。\nsrc文件目录：\n\n![src目录](https://img-blog.csdnimg.cn/20210529114731954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)module1.js:\n```javascript\n// 暴露一个对象\nmodule.exports = {\n    foo() {\n        console.log('module1 foo()');\n    }\n}\n```\nmodule2.js:\n\n```javascript\n// 暴露一个函数\nmodule.exports = function() {\n    console.log('module2()');\n}\n```\nmodule3.js:\n\n```javascript\n// 分别暴露函数\nexports.foo = function() {\n    console.log('module3 foo()');\n}\nexports.bar = function() {\n    console.log('module3 bar()')\n}\n```\napp.js:\n\n```javascript\n// 引入模块\nlet module1 = require('./module1');\nlet module2 = require('./module2');\nlet module3 = require('./module3');\n\nmodule1.foo();\nmodule2();\nmodule3.foo();\nmodule3.bar();\n\n```\n通过index.html测试模块代码\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script src=\"./src/app.js\"></script>\n</body>\n</html>\n```\n浏览器效果：\n![浏览器效果](https://img-blog.csdnimg.cn/20210529115107155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)可见浏览器无法识别require，因此需要使用browserify对代码经行打包成浏览器能识别的代码\n安装browserify:（browserify要求全局和局部都得安装）\n\n全局安装：\n```javascript\nnpm install -g browserify\n```\n\n局部安装：\n```javascript\nnpm install browserify --save-dev\n```\n安装后生成node_modules文件夹和package-lock.json文件\n现在经行打包处理：(安装后新增browserify命令)\n\n```javascript\nbrowserify src/app.js -o dist/bundle.js\n```\n打包完成后dist文件夹下生成bundle.js文件，可直接引用\n修改index.html引用：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script src=\"./dist/bundle.js\"></script>\n</body>\n</html>\n```\n效果展示：\n![效果展示](https://img-blog.csdnimg.cn/20210529115951492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","source":"_posts/javascript/CommonJS浏览器端.md","raw":"---\ntitle: CommonJS基于浏览器端的运用\ndate: 2021-05-29 12:00:59\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/20.jpg\ntags: \n  - CommonJS\n  - 模块化\ncategories: javascript\n---\n\n我之前还有一篇CommonJS基于node环境运用，大家有兴趣可以去看看，放链接：[CommonJS基于服务端(node运用)](https://blog.csdn.net/tongkongyu/article/details/117373698?spm=1001.2014.3001.5501)\n先放文件目录：dist文件夹放打包生成的代码，src文件夹放自己写的代码\n![目录](https://img-blog.csdnimg.cn/20210529114237440.png)\n先初始化环境，方便下包：\n\n```javascript\nnpm init\n```\n之所以不用 npm init --yes是因为我根目录叫browserify,后续下browserify包时不允许同名，当然也可以npm init --yes后再package.json手动更改name值。\nsrc文件目录：\n\n![src目录](https://img-blog.csdnimg.cn/20210529114731954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)module1.js:\n```javascript\n// 暴露一个对象\nmodule.exports = {\n    foo() {\n        console.log('module1 foo()');\n    }\n}\n```\nmodule2.js:\n\n```javascript\n// 暴露一个函数\nmodule.exports = function() {\n    console.log('module2()');\n}\n```\nmodule3.js:\n\n```javascript\n// 分别暴露函数\nexports.foo = function() {\n    console.log('module3 foo()');\n}\nexports.bar = function() {\n    console.log('module3 bar()')\n}\n```\napp.js:\n\n```javascript\n// 引入模块\nlet module1 = require('./module1');\nlet module2 = require('./module2');\nlet module3 = require('./module3');\n\nmodule1.foo();\nmodule2();\nmodule3.foo();\nmodule3.bar();\n\n```\n通过index.html测试模块代码\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script src=\"./src/app.js\"></script>\n</body>\n</html>\n```\n浏览器效果：\n![浏览器效果](https://img-blog.csdnimg.cn/20210529115107155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)可见浏览器无法识别require，因此需要使用browserify对代码经行打包成浏览器能识别的代码\n安装browserify:（browserify要求全局和局部都得安装）\n\n全局安装：\n```javascript\nnpm install -g browserify\n```\n\n局部安装：\n```javascript\nnpm install browserify --save-dev\n```\n安装后生成node_modules文件夹和package-lock.json文件\n现在经行打包处理：(安装后新增browserify命令)\n\n```javascript\nbrowserify src/app.js -o dist/bundle.js\n```\n打包完成后dist文件夹下生成bundle.js文件，可直接引用\n修改index.html引用：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script src=\"./dist/bundle.js\"></script>\n</body>\n</html>\n```\n效果展示：\n![效果展示](https://img-blog.csdnimg.cn/20210529115951492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","slug":"javascript/CommonJS浏览器端","published":1,"updated":"2021-12-03T14:57:40.769Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958az000qasdaglcc0a6f","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>我之前还有一篇CommonJS基于node环境运用，大家有兴趣可以去看看，放链接：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117373698?spm=1001.2014.3001.5501\">CommonJS基于服务端(node运用)</a><br>先放文件目录：dist文件夹放打包生成的代码，src文件夹放自己写的代码<br><img src=\"https://img-blog.csdnimg.cn/20210529114237440.png\" alt=\"目录\"><br>先初始化环境，方便下包：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<p>之所以不用 npm init –yes是因为我根目录叫browserify,后续下browserify包时不允许同名，当然也可以npm init –yes后再package.json手动更改name值。<br>src文件目录：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210529114731954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"src目录\">module1.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 暴露一个对象</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">foo</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module1 foo()&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>module2.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 暴露一个函数</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module2()&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>module3.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 分别暴露函数</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module3 foo()&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">exports</span>.bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module3 bar()&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>app.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入模块</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> module1 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./module1&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> module2 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./module2&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> module3 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./module3&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">module1.foo();</span><br><span class=\"line\">module2();</span><br><span class=\"line\">module3.foo();</span><br><span class=\"line\">module3.bar();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>通过index.html测试模块代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./src/app.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>浏览器效果：<br><img src=\"https://img-blog.csdnimg.cn/20210529115107155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"浏览器效果\">可见浏览器无法识别require，因此需要使用browserify对代码经行打包成浏览器能识别的代码<br>安装browserify:（browserify要求全局和局部都得安装）</p>\n<p>全局安装：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g browserify</span><br></pre></td></tr></table></figure>\n\n<p>局部安装：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install browserify --save-dev</span><br></pre></td></tr></table></figure>\n<p>安装后生成node_modules文件夹和package-lock.json文件<br>现在经行打包处理：(安装后新增browserify命令)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">browserify src/app.js -o dist/bundle.js</span><br></pre></td></tr></table></figure>\n<p>打包完成后dist文件夹下生成bundle.js文件，可直接引用<br>修改index.html引用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./dist/bundle.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/20210529115951492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"效果展示\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我之前还有一篇CommonJS基于node环境运用，大家有兴趣可以去看看，放链接：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117373698?spm=1001.2014.3001.5501\">CommonJS基于服务端(node运用)</a><br>先放文件目录：dist文件夹放打包生成的代码，src文件夹放自己写的代码<br><img src=\"https://img-blog.csdnimg.cn/20210529114237440.png\" alt=\"目录\"><br>先初始化环境，方便下包：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<p>之所以不用 npm init –yes是因为我根目录叫browserify,后续下browserify包时不允许同名，当然也可以npm init –yes后再package.json手动更改name值。<br>src文件目录：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210529114731954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"src目录\">module1.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 暴露一个对象</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">foo</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module1 foo()&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>module2.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 暴露一个函数</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module2()&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>module3.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 分别暴露函数</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module3 foo()&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">exports</span>.bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;module3 bar()&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>app.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入模块</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> module1 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./module1&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> module2 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./module2&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> module3 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./module3&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">module1.foo();</span><br><span class=\"line\">module2();</span><br><span class=\"line\">module3.foo();</span><br><span class=\"line\">module3.bar();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>通过index.html测试模块代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./src/app.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>浏览器效果：<br><img src=\"https://img-blog.csdnimg.cn/20210529115107155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"浏览器效果\">可见浏览器无法识别require，因此需要使用browserify对代码经行打包成浏览器能识别的代码<br>安装browserify:（browserify要求全局和局部都得安装）</p>\n<p>全局安装：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g browserify</span><br></pre></td></tr></table></figure>\n\n<p>局部安装：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install browserify --save-dev</span><br></pre></td></tr></table></figure>\n<p>安装后生成node_modules文件夹和package-lock.json文件<br>现在经行打包处理：(安装后新增browserify命令)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">browserify src/app.js -o dist/bundle.js</span><br></pre></td></tr></table></figure>\n<p>打包完成后dist文件夹下生成bundle.js文件，可直接引用<br>修改index.html引用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./dist/bundle.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/20210529115951492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"效果展示\"></p>\n"},{"title":"File Reader文件操作","date":"2021-06-11T10:23:56.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/4.jpg","_content":"\n        文件File对象\n        该对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用File或Blob对象指定要读取的文件或数据。\n        其中File对象可以是来自用户在一个<input/>元素上选择文件后返回的FileList对象，也可以是来自拖拽操作生成的DataTransfer对象，\n        还可以是来自一个HTMLCanvasElement上执行 mozGetAsFile()方法后返回的结果；\n        Blob对象表示一个不可变、原始数据的类文件对象，它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream来用于数据操作，\n        Blob表示的不一定是JavaScript原生格式的数据，File接口基于Blob，继承了Blob的功能并将其扩展使其支持用户系统上的文件。\n        操作：\n            创建一个FileReader对象\n                var fReader = new FileReader();\n            方法：\n                abort()  终止该读取操作\n                开始读取指定的Blob对象或File对象中的内容\n                readAsDataURL()  URL格式的字符串表示的内容\n                readAsArrayBuffer()  ArrayBuffer对象表示的内容\n                readAsBinaryString()  原始二进制数据\n                readAsText()  字符串以表示的内容\n            属性：\n                error ： 在读取文件时发生的错误\n                readyState ： 表明FileReader对象的当前状态\n                result ： 读取到的文件内容\n                onabort ： 当读取操作被终止时调用\n                onerror ： 当读取操作发生错误时调用\n                onload ： 当读取操作成功完成时调用\n                onloadend ： 当读取操作完成时调用，不管是成功或者失败，该处理程序在onload或onerror之后调用\n                onloadstart ： 当读取操作将要开始之前调用\n                onprogress ： 在读取数据过程中周期性调用\n以下是基本操作代码：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n  \n    <input type=\"file\" onchange=\"getInfo(this)\">\n    <script>\n        function getInfo(node){\n            console.log(node.files[0]);\n\n            // 创建一个FileReader对象\n            var fr = new FileReader();\n\n            // 读取文件\n            fr.readAsText(node.files[0]);\n\n            // 监听读取成功\n            fr.onload = function(e){\n                console.log(e);\n                // 用选择的格式表示该文件\n                console.log(e.target.result);\n            }\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611172406286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)其中1.txt内容为：\n![展示](https://img-blog.csdnimg.cn/20210611172457651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)下面做一个多图片文件读取显示案例：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <input type=\"file\" multiple id=\"myfile\" onchange=\"loadfile()\">\n    <div id=\"content\"></div>\n    <script>\n        var myfile = document.getElementById(\"myfile\");\n        var fReader = new FileReader();\n        var con = document.getElementById('content');\n        var n = 0;  // 文件个数\n        var len;  // 文件的个数\n\n        // 需要等前一个文件读完才能读下一个，因此不能直接for循环读取所有文件\n        function loadfile(){\n            // 文件提交的时候，设置读取文件的个数\n            len = myfile.files.length;\n            fReader.readAsDataURL(myfile.files[0]);\n        }\n\n        fReader.onload = function(e){\n            // 以图片形式放到div中\n            var str = '<img src=\"' + e.target.result + '\">';\n            con.innerHTML += str;\n            n++;\n            if(n < len){\n                readfile(n);\n            }\n        }\n\n        function readfile(n){\n            fReader.readAsDataURL(myfile.files[n]);\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611181040938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)        在我们的页面当中，经常会上传一些文件，同时在上传之前还需要立即展示以下文件内容，使用FileReader API来读取本地文件，可以保存在本地，可快速展示，例如：上传头像，提交完图片立刻显示，还可以做裁剪，或拖拽文件，预览文件内容。\n拓展：window.URL.createObjectURL()方法可以返回一个文件对象的url\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <input type=\"file\" multiple id=\"myfile\" onchange=\"loadfile()\">\n    <div id=\"content\"></div>\n    <script>\n        var myfile = document.getElementById(\"myfile\");\n        var con = document.getElementById('content');\n\n        function loadfile(){\n            // 返回url数据结果\n            var url = window.URL.createObjectURL(myfile.files[0]);\n            // 放到页面上\n            var str = '<img src=\"' + url + '\">';\n            con.innerHTML += str;\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611182204427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)可见用这种方法图片返回的是url地址，之前读取文件的是返回base64编码，见下：\n![展示](https://img-blog.csdnimg.cn/20210611182318727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","source":"_posts/javascript/FileReader.md","raw":"---\ntitle: File Reader文件操作\ndate: 2021-06-11 18:23:56\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/4.jpg\ntags: \n  - 文件\ncategories: javascript\n---\n\n        文件File对象\n        该对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用File或Blob对象指定要读取的文件或数据。\n        其中File对象可以是来自用户在一个<input/>元素上选择文件后返回的FileList对象，也可以是来自拖拽操作生成的DataTransfer对象，\n        还可以是来自一个HTMLCanvasElement上执行 mozGetAsFile()方法后返回的结果；\n        Blob对象表示一个不可变、原始数据的类文件对象，它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream来用于数据操作，\n        Blob表示的不一定是JavaScript原生格式的数据，File接口基于Blob，继承了Blob的功能并将其扩展使其支持用户系统上的文件。\n        操作：\n            创建一个FileReader对象\n                var fReader = new FileReader();\n            方法：\n                abort()  终止该读取操作\n                开始读取指定的Blob对象或File对象中的内容\n                readAsDataURL()  URL格式的字符串表示的内容\n                readAsArrayBuffer()  ArrayBuffer对象表示的内容\n                readAsBinaryString()  原始二进制数据\n                readAsText()  字符串以表示的内容\n            属性：\n                error ： 在读取文件时发生的错误\n                readyState ： 表明FileReader对象的当前状态\n                result ： 读取到的文件内容\n                onabort ： 当读取操作被终止时调用\n                onerror ： 当读取操作发生错误时调用\n                onload ： 当读取操作成功完成时调用\n                onloadend ： 当读取操作完成时调用，不管是成功或者失败，该处理程序在onload或onerror之后调用\n                onloadstart ： 当读取操作将要开始之前调用\n                onprogress ： 在读取数据过程中周期性调用\n以下是基本操作代码：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n  \n    <input type=\"file\" onchange=\"getInfo(this)\">\n    <script>\n        function getInfo(node){\n            console.log(node.files[0]);\n\n            // 创建一个FileReader对象\n            var fr = new FileReader();\n\n            // 读取文件\n            fr.readAsText(node.files[0]);\n\n            // 监听读取成功\n            fr.onload = function(e){\n                console.log(e);\n                // 用选择的格式表示该文件\n                console.log(e.target.result);\n            }\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611172406286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)其中1.txt内容为：\n![展示](https://img-blog.csdnimg.cn/20210611172457651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)下面做一个多图片文件读取显示案例：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <input type=\"file\" multiple id=\"myfile\" onchange=\"loadfile()\">\n    <div id=\"content\"></div>\n    <script>\n        var myfile = document.getElementById(\"myfile\");\n        var fReader = new FileReader();\n        var con = document.getElementById('content');\n        var n = 0;  // 文件个数\n        var len;  // 文件的个数\n\n        // 需要等前一个文件读完才能读下一个，因此不能直接for循环读取所有文件\n        function loadfile(){\n            // 文件提交的时候，设置读取文件的个数\n            len = myfile.files.length;\n            fReader.readAsDataURL(myfile.files[0]);\n        }\n\n        fReader.onload = function(e){\n            // 以图片形式放到div中\n            var str = '<img src=\"' + e.target.result + '\">';\n            con.innerHTML += str;\n            n++;\n            if(n < len){\n                readfile(n);\n            }\n        }\n\n        function readfile(n){\n            fReader.readAsDataURL(myfile.files[n]);\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611181040938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)        在我们的页面当中，经常会上传一些文件，同时在上传之前还需要立即展示以下文件内容，使用FileReader API来读取本地文件，可以保存在本地，可快速展示，例如：上传头像，提交完图片立刻显示，还可以做裁剪，或拖拽文件，预览文件内容。\n拓展：window.URL.createObjectURL()方法可以返回一个文件对象的url\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <input type=\"file\" multiple id=\"myfile\" onchange=\"loadfile()\">\n    <div id=\"content\"></div>\n    <script>\n        var myfile = document.getElementById(\"myfile\");\n        var con = document.getElementById('content');\n\n        function loadfile(){\n            // 返回url数据结果\n            var url = window.URL.createObjectURL(myfile.files[0]);\n            // 放到页面上\n            var str = '<img src=\"' + url + '\">';\n            con.innerHTML += str;\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611182204427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)可见用这种方法图片返回的是url地址，之前读取文件的是返回base64编码，见下：\n![展示](https://img-blog.csdnimg.cn/20210611182318727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","slug":"javascript/FileReader","published":1,"updated":"2021-12-03T14:57:47.273Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b1000vasda8uk4fk9t","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><pre><code>    文件File对象\n    该对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用File或Blob对象指定要读取的文件或数据。\n    其中File对象可以是来自用户在一个&lt;input/&gt;元素上选择文件后返回的FileList对象，也可以是来自拖拽操作生成的DataTransfer对象，\n    还可以是来自一个HTMLCanvasElement上执行 mozGetAsFile()方法后返回的结果；\n    Blob对象表示一个不可变、原始数据的类文件对象，它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream来用于数据操作，\n    Blob表示的不一定是JavaScript原生格式的数据，File接口基于Blob，继承了Blob的功能并将其扩展使其支持用户系统上的文件。\n    操作：\n        创建一个FileReader对象\n            var fReader = new FileReader();\n        方法：\n            abort()  终止该读取操作\n            开始读取指定的Blob对象或File对象中的内容\n            readAsDataURL()  URL格式的字符串表示的内容\n            readAsArrayBuffer()  ArrayBuffer对象表示的内容\n            readAsBinaryString()  原始二进制数据\n            readAsText()  字符串以表示的内容\n        属性：\n            error ： 在读取文件时发生的错误\n            readyState ： 表明FileReader对象的当前状态\n            result ： 读取到的文件内容\n            onabort ： 当读取操作被终止时调用\n            onerror ： 当读取操作发生错误时调用\n            onload ： 当读取操作成功完成时调用\n            onloadend ： 当读取操作完成时调用，不管是成功或者失败，该处理程序在onload或onerror之后调用\n            onloadstart ： 当读取操作将要开始之前调用\n            onprogress ： 在读取数据过程中周期性调用\n</code></pre>\n<p>以下是基本操作代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">onchange</span>=<span class=\"string\">&quot;getInfo(this)&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfo</span>(<span class=\"params\">node</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(node.files[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 创建一个FileReader对象</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> fr = <span class=\"keyword\">new</span> FileReader();</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 读取文件</span></span></span><br><span class=\"line\"><span class=\"javascript\">            fr.readAsText(node.files[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 监听读取成功</span></span></span><br><span class=\"line\"><span class=\"javascript\">            fr.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(e);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 用选择的格式表示该文件</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(e.target.result);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611172406286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">其中1.txt内容为：<br><img src=\"https://img-blog.csdnimg.cn/20210611172457651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">下面做一个多图片文件读取显示案例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">multiple</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myfile&quot;</span> <span class=\"attr\">onchange</span>=<span class=\"string\">&quot;loadfile()&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> myfile = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myfile&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> fReader = <span class=\"keyword\">new</span> FileReader();</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> con = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;content&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> n = <span class=\"number\">0</span>;  <span class=\"comment\">// 文件个数</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> len;  <span class=\"comment\">// 文件的个数</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 需要等前一个文件读完才能读下一个，因此不能直接for循环读取所有文件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadfile</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 文件提交的时候，设置读取文件的个数</span></span></span><br><span class=\"line\"><span class=\"javascript\">            len = myfile.files.length;</span></span><br><span class=\"line\"><span class=\"javascript\">            fReader.readAsDataURL(myfile.files[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        fReader.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 以图片形式放到div中</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;&lt;img src=&quot;&#x27;</span> + e.target.result + <span class=\"string\">&#x27;&quot;&gt;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            con.innerHTML += str;</span></span><br><span class=\"line\"><span class=\"javascript\">            n++;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span>(n &lt; len)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                readfile(n);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readfile</span>(<span class=\"params\">n</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            fReader.readAsDataURL(myfile.files[n]);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611181040938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">        在我们的页面当中，经常会上传一些文件，同时在上传之前还需要立即展示以下文件内容，使用FileReader API来读取本地文件，可以保存在本地，可快速展示，例如：上传头像，提交完图片立刻显示，还可以做裁剪，或拖拽文件，预览文件内容。<br>拓展：window.URL.createObjectURL()方法可以返回一个文件对象的url</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">multiple</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myfile&quot;</span> <span class=\"attr\">onchange</span>=<span class=\"string\">&quot;loadfile()&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> myfile = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myfile&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> con = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;content&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadfile</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 返回url数据结果</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> url = <span class=\"built_in\">window</span>.URL.createObjectURL(myfile.files[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 放到页面上</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;&lt;img src=&quot;&#x27;</span> + url + <span class=\"string\">&#x27;&quot;&gt;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            con.innerHTML += str;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611182204427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">可见用这种方法图片返回的是url地址，之前读取文件的是返回base64编码，见下：<br><img src=\"https://img-blog.csdnimg.cn/20210611182318727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>    文件File对象\n    该对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用File或Blob对象指定要读取的文件或数据。\n    其中File对象可以是来自用户在一个&lt;input/&gt;元素上选择文件后返回的FileList对象，也可以是来自拖拽操作生成的DataTransfer对象，\n    还可以是来自一个HTMLCanvasElement上执行 mozGetAsFile()方法后返回的结果；\n    Blob对象表示一个不可变、原始数据的类文件对象，它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream来用于数据操作，\n    Blob表示的不一定是JavaScript原生格式的数据，File接口基于Blob，继承了Blob的功能并将其扩展使其支持用户系统上的文件。\n    操作：\n        创建一个FileReader对象\n            var fReader = new FileReader();\n        方法：\n            abort()  终止该读取操作\n            开始读取指定的Blob对象或File对象中的内容\n            readAsDataURL()  URL格式的字符串表示的内容\n            readAsArrayBuffer()  ArrayBuffer对象表示的内容\n            readAsBinaryString()  原始二进制数据\n            readAsText()  字符串以表示的内容\n        属性：\n            error ： 在读取文件时发生的错误\n            readyState ： 表明FileReader对象的当前状态\n            result ： 读取到的文件内容\n            onabort ： 当读取操作被终止时调用\n            onerror ： 当读取操作发生错误时调用\n            onload ： 当读取操作成功完成时调用\n            onloadend ： 当读取操作完成时调用，不管是成功或者失败，该处理程序在onload或onerror之后调用\n            onloadstart ： 当读取操作将要开始之前调用\n            onprogress ： 在读取数据过程中周期性调用\n</code></pre>\n<p>以下是基本操作代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">onchange</span>=<span class=\"string\">&quot;getInfo(this)&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfo</span>(<span class=\"params\">node</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(node.files[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 创建一个FileReader对象</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> fr = <span class=\"keyword\">new</span> FileReader();</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 读取文件</span></span></span><br><span class=\"line\"><span class=\"javascript\">            fr.readAsText(node.files[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 监听读取成功</span></span></span><br><span class=\"line\"><span class=\"javascript\">            fr.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(e);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 用选择的格式表示该文件</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(e.target.result);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611172406286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">其中1.txt内容为：<br><img src=\"https://img-blog.csdnimg.cn/20210611172457651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">下面做一个多图片文件读取显示案例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">multiple</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myfile&quot;</span> <span class=\"attr\">onchange</span>=<span class=\"string\">&quot;loadfile()&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> myfile = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myfile&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> fReader = <span class=\"keyword\">new</span> FileReader();</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> con = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;content&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> n = <span class=\"number\">0</span>;  <span class=\"comment\">// 文件个数</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> len;  <span class=\"comment\">// 文件的个数</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 需要等前一个文件读完才能读下一个，因此不能直接for循环读取所有文件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadfile</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 文件提交的时候，设置读取文件的个数</span></span></span><br><span class=\"line\"><span class=\"javascript\">            len = myfile.files.length;</span></span><br><span class=\"line\"><span class=\"javascript\">            fReader.readAsDataURL(myfile.files[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        fReader.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 以图片形式放到div中</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;&lt;img src=&quot;&#x27;</span> + e.target.result + <span class=\"string\">&#x27;&quot;&gt;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            con.innerHTML += str;</span></span><br><span class=\"line\"><span class=\"javascript\">            n++;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span>(n &lt; len)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                readfile(n);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readfile</span>(<span class=\"params\">n</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            fReader.readAsDataURL(myfile.files[n]);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611181040938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">        在我们的页面当中，经常会上传一些文件，同时在上传之前还需要立即展示以下文件内容，使用FileReader API来读取本地文件，可以保存在本地，可快速展示，例如：上传头像，提交完图片立刻显示，还可以做裁剪，或拖拽文件，预览文件内容。<br>拓展：window.URL.createObjectURL()方法可以返回一个文件对象的url</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">multiple</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myfile&quot;</span> <span class=\"attr\">onchange</span>=<span class=\"string\">&quot;loadfile()&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> myfile = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myfile&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> con = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;content&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadfile</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 返回url数据结果</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> url = <span class=\"built_in\">window</span>.URL.createObjectURL(myfile.files[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 放到页面上</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;&lt;img src=&quot;&#x27;</span> + url + <span class=\"string\">&#x27;&quot;&gt;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            con.innerHTML += str;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611182204427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">可见用这种方法图片返回的是url地址，之前读取文件的是返回base64编码，见下：<br><img src=\"https://img-blog.csdnimg.cn/20210611182318727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n"},{"title":"JS模块化之AMD规范","date":"2021-05-29T09:26:11.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/65.jpg","_content":"\n  ## AMD概述\n    \n    AMD说明：\n        AMD：Asynchronous Module Definition(异步模块定义)\n        专门用于浏览器端，模块的加载是异步的\n    基本语法：\n        定义暴露模块：\n            1. 没有依赖的模块：\n                define(function(){\n                    return 模块\n                })\n            2. 定义有依赖的模块：\n                define(['module1','module2'],function(m1,m2){\n                    return 模块\n                })\n        引入使用模块：\n            require(['module1','module2'],function(m1,m2){\n                使用m1/m2\n            })\n    实现(浏览器端)：\n        使用库： Require.js\n## 没有AMD之前的模块化编程\n![目录结构](https://img-blog.csdnimg.cn/20210529171242108.png)\ndataService.js：(用于提供数据)\n\n```javascript\n// 定义一个没有依赖的模块\n(function(window){\n    let name = 'dataService.js';\n    function getName(){\n        return name;\n    }\n    window.dataService = {getName};\n})(window)\n```\nalerter.js: (用于使用数据)\n\n```javascript\n// 定义一个有依赖的模块\n(function (window, dataService) {\n    let msg = 'alerter.js';\n    function showMsg() {\n        console.log(msg,dataService.getName());\n    }\n    window.alerter = {showMsg};\n})(window, dataService)\n```\napp.js: (作为根模板)\n\n```javascript\n(function(alerter){\n    alerter.showMsg();\n})(alerter)\n```\nindex.html: （在浏览器端展示,引用顺序不能乱）\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script src=\"./js/dataService.js\"></script>\n    <script src=\"./js/alerter.js\"></script>\n    <script src=\"./app.js\"></script>\n</body>\n</html>\n```\n代码总览：\n![代码总览](https://img-blog.csdnimg.cn/20210529171747840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)这种方法虽然可以有效避免变量名污染，但各模板间的依赖关系有可能极为复杂，导致js文件引入出现问题。\n## 使用AMD的模块化\nRequireJS是一个非常小巧的JavaScript模块载入框架，是AMD规范最好的实现者之一,因此以下使用RequireJS展示。\n目录结构：\n![目录展示](https://img-blog.csdnimg.cn/20210529172033614.png)\ndataService.js:\n\n```javascript\n// 定义没有依赖的模板\ndefine(function() {\n    let name = 'dataService.js';\n    function getName() {\n        return name;\n    }\n    // 暴露模块\n    return {getName};\n});\n```\nalerter.js:\n\n```javascript\n// 定义有依赖的模块\ndefine(['dataService','jquery'], function(dataService, $) {\n    let msg = 'alerter.js';\n    function showMsg() {\n        console.log(msg, dataService.getName());\n    }\n    $('body').css('background', 'pink');\n    // 暴露模块\n    return {showMsg};\n});\n```\napp.js:\n\n```javascript\n(function(){\n    requirejs.config({ // 参数配置\n        // baseURL: 'js/', 基本路径，若开启，则路径为baseURL+paths\n        paths: { // 配置路径,用以寻找模块\n            dataService: './modules/dataService', // 此处不加.js后缀，因为运行时默认会加上\n            alerter: './modules/alerter',\n            jquery: './libs/jquery-2.2.4.min'\n        }\n    })\n\n    requirejs(['alerter'], function(alerter){\n        alerter.showMsg();\n    })\n})()\n```\nindex.html:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <!-- data-main引入入口js文件，src引入require.js库 -->\n    <script data-main=\"./js/app.js\" src=\"./js/libs/require.min.js\"></script>\n</body>\n</html>\n```\n代码总览：\n![代码总览](https://img-blog.csdnimg.cn/20210529172758776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","source":"_posts/javascript/JS模块化之AMD规范.md","raw":"---\ntitle: JS模块化之AMD规范\ndate:  2021-05-29 17:26:11\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/65.jpg\ntags: \n  - 模块化\n  - AMD规范\ncategories: javascript\n---\n\n  ## AMD概述\n    \n    AMD说明：\n        AMD：Asynchronous Module Definition(异步模块定义)\n        专门用于浏览器端，模块的加载是异步的\n    基本语法：\n        定义暴露模块：\n            1. 没有依赖的模块：\n                define(function(){\n                    return 模块\n                })\n            2. 定义有依赖的模块：\n                define(['module1','module2'],function(m1,m2){\n                    return 模块\n                })\n        引入使用模块：\n            require(['module1','module2'],function(m1,m2){\n                使用m1/m2\n            })\n    实现(浏览器端)：\n        使用库： Require.js\n## 没有AMD之前的模块化编程\n![目录结构](https://img-blog.csdnimg.cn/20210529171242108.png)\ndataService.js：(用于提供数据)\n\n```javascript\n// 定义一个没有依赖的模块\n(function(window){\n    let name = 'dataService.js';\n    function getName(){\n        return name;\n    }\n    window.dataService = {getName};\n})(window)\n```\nalerter.js: (用于使用数据)\n\n```javascript\n// 定义一个有依赖的模块\n(function (window, dataService) {\n    let msg = 'alerter.js';\n    function showMsg() {\n        console.log(msg,dataService.getName());\n    }\n    window.alerter = {showMsg};\n})(window, dataService)\n```\napp.js: (作为根模板)\n\n```javascript\n(function(alerter){\n    alerter.showMsg();\n})(alerter)\n```\nindex.html: （在浏览器端展示,引用顺序不能乱）\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script src=\"./js/dataService.js\"></script>\n    <script src=\"./js/alerter.js\"></script>\n    <script src=\"./app.js\"></script>\n</body>\n</html>\n```\n代码总览：\n![代码总览](https://img-blog.csdnimg.cn/20210529171747840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)这种方法虽然可以有效避免变量名污染，但各模板间的依赖关系有可能极为复杂，导致js文件引入出现问题。\n## 使用AMD的模块化\nRequireJS是一个非常小巧的JavaScript模块载入框架，是AMD规范最好的实现者之一,因此以下使用RequireJS展示。\n目录结构：\n![目录展示](https://img-blog.csdnimg.cn/20210529172033614.png)\ndataService.js:\n\n```javascript\n// 定义没有依赖的模板\ndefine(function() {\n    let name = 'dataService.js';\n    function getName() {\n        return name;\n    }\n    // 暴露模块\n    return {getName};\n});\n```\nalerter.js:\n\n```javascript\n// 定义有依赖的模块\ndefine(['dataService','jquery'], function(dataService, $) {\n    let msg = 'alerter.js';\n    function showMsg() {\n        console.log(msg, dataService.getName());\n    }\n    $('body').css('background', 'pink');\n    // 暴露模块\n    return {showMsg};\n});\n```\napp.js:\n\n```javascript\n(function(){\n    requirejs.config({ // 参数配置\n        // baseURL: 'js/', 基本路径，若开启，则路径为baseURL+paths\n        paths: { // 配置路径,用以寻找模块\n            dataService: './modules/dataService', // 此处不加.js后缀，因为运行时默认会加上\n            alerter: './modules/alerter',\n            jquery: './libs/jquery-2.2.4.min'\n        }\n    })\n\n    requirejs(['alerter'], function(alerter){\n        alerter.showMsg();\n    })\n})()\n```\nindex.html:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <!-- data-main引入入口js文件，src引入require.js库 -->\n    <script data-main=\"./js/app.js\" src=\"./js/libs/require.min.js\"></script>\n</body>\n</html>\n```\n代码总览：\n![代码总览](https://img-blog.csdnimg.cn/20210529172758776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","slug":"javascript/JS模块化之AMD规范","published":1,"updated":"2021-12-03T14:57:53.368Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b2000yasda61ewc2e9","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"AMD概述\"><a href=\"#AMD概述\" class=\"headerlink\" title=\"AMD概述\"></a>AMD概述</h2><pre><code>AMD说明：\n    AMD：Asynchronous Module Definition(异步模块定义)\n    专门用于浏览器端，模块的加载是异步的\n基本语法：\n    定义暴露模块：\n        1. 没有依赖的模块：\n            define(function()&#123;\n                return 模块\n            &#125;)\n        2. 定义有依赖的模块：\n            define([&#39;module1&#39;,&#39;module2&#39;],function(m1,m2)&#123;\n                return 模块\n            &#125;)\n    引入使用模块：\n        require([&#39;module1&#39;,&#39;module2&#39;],function(m1,m2)&#123;\n            使用m1/m2\n        &#125;)\n实现(浏览器端)：\n    使用库： Require.js\n</code></pre>\n<h2 id=\"没有AMD之前的模块化编程\"><a href=\"#没有AMD之前的模块化编程\" class=\"headerlink\" title=\"没有AMD之前的模块化编程\"></a>没有AMD之前的模块化编程</h2><p><img src=\"https://img-blog.csdnimg.cn/20210529171242108.png\" alt=\"目录结构\"><br>dataService.js：(用于提供数据)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义一个没有依赖的模块</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"built_in\">window</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;dataService.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.dataService = &#123;getName&#125;;</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>)</span><br></pre></td></tr></table></figure>\n<p>alerter.js: (用于使用数据)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义一个有依赖的模块</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"built_in\">window</span>, dataService</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> msg = <span class=\"string\">&#x27;alerter.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showMsg</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(msg,dataService.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.alerter = &#123;showMsg&#125;;</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>, dataService)</span><br></pre></td></tr></table></figure>\n<p>app.js: (作为根模板)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">alerter</span>)</span>&#123;</span><br><span class=\"line\">    alerter.showMsg();</span><br><span class=\"line\">&#125;)(alerter)</span><br></pre></td></tr></table></figure>\n<p>index.html: （在浏览器端展示,引用顺序不能乱）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./js/dataService.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./js/alerter.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./app.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>代码总览：<br><img src=\"https://img-blog.csdnimg.cn/20210529171747840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"代码总览\">这种方法虽然可以有效避免变量名污染，但各模板间的依赖关系有可能极为复杂，导致js文件引入出现问题。</p>\n<h2 id=\"使用AMD的模块化\"><a href=\"#使用AMD的模块化\" class=\"headerlink\" title=\"使用AMD的模块化\"></a>使用AMD的模块化</h2><p>RequireJS是一个非常小巧的JavaScript模块载入框架，是AMD规范最好的实现者之一,因此以下使用RequireJS展示。<br>目录结构：<br><img src=\"https://img-blog.csdnimg.cn/20210529172033614.png\" alt=\"目录展示\"><br>dataService.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义没有依赖的模板</span></span><br><span class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;dataService.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 暴露模块</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;getName&#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>alerter.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义有依赖的模块</span></span><br><span class=\"line\">define([<span class=\"string\">&#x27;dataService&#x27;</span>,<span class=\"string\">&#x27;jquery&#x27;</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">dataService, $</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> msg = <span class=\"string\">&#x27;alerter.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showMsg</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(msg, dataService.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;body&#x27;</span>).css(<span class=\"string\">&#x27;background&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 暴露模块</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;showMsg&#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>app.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    requirejs.config(&#123; <span class=\"comment\">// 参数配置</span></span><br><span class=\"line\">        <span class=\"comment\">// baseURL: &#x27;js/&#x27;, 基本路径，若开启，则路径为baseURL+paths</span></span><br><span class=\"line\">        <span class=\"attr\">paths</span>: &#123; <span class=\"comment\">// 配置路径,用以寻找模块</span></span><br><span class=\"line\">            <span class=\"attr\">dataService</span>: <span class=\"string\">&#x27;./modules/dataService&#x27;</span>, <span class=\"comment\">// 此处不加.js后缀，因为运行时默认会加上</span></span><br><span class=\"line\">            <span class=\"attr\">alerter</span>: <span class=\"string\">&#x27;./modules/alerter&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">jquery</span>: <span class=\"string\">&#x27;./libs/jquery-2.2.4.min&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    requirejs([<span class=\"string\">&#x27;alerter&#x27;</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">alerter</span>)</span>&#123;</span><br><span class=\"line\">        alerter.showMsg();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure>\n<p>index.html:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- data-main引入入口js文件，src引入require.js库 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">data-main</span>=<span class=\"string\">&quot;./js/app.js&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./js/libs/require.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>代码总览：<br><img src=\"https://img-blog.csdnimg.cn/20210529172758776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"代码总览\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"AMD概述\"><a href=\"#AMD概述\" class=\"headerlink\" title=\"AMD概述\"></a>AMD概述</h2><pre><code>AMD说明：\n    AMD：Asynchronous Module Definition(异步模块定义)\n    专门用于浏览器端，模块的加载是异步的\n基本语法：\n    定义暴露模块：\n        1. 没有依赖的模块：\n            define(function()&#123;\n                return 模块\n            &#125;)\n        2. 定义有依赖的模块：\n            define([&#39;module1&#39;,&#39;module2&#39;],function(m1,m2)&#123;\n                return 模块\n            &#125;)\n    引入使用模块：\n        require([&#39;module1&#39;,&#39;module2&#39;],function(m1,m2)&#123;\n            使用m1/m2\n        &#125;)\n实现(浏览器端)：\n    使用库： Require.js\n</code></pre>\n<h2 id=\"没有AMD之前的模块化编程\"><a href=\"#没有AMD之前的模块化编程\" class=\"headerlink\" title=\"没有AMD之前的模块化编程\"></a>没有AMD之前的模块化编程</h2><p><img src=\"https://img-blog.csdnimg.cn/20210529171242108.png\" alt=\"目录结构\"><br>dataService.js：(用于提供数据)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义一个没有依赖的模块</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"built_in\">window</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;dataService.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.dataService = &#123;getName&#125;;</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>)</span><br></pre></td></tr></table></figure>\n<p>alerter.js: (用于使用数据)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义一个有依赖的模块</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"built_in\">window</span>, dataService</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> msg = <span class=\"string\">&#x27;alerter.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showMsg</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(msg,dataService.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.alerter = &#123;showMsg&#125;;</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>, dataService)</span><br></pre></td></tr></table></figure>\n<p>app.js: (作为根模板)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">alerter</span>)</span>&#123;</span><br><span class=\"line\">    alerter.showMsg();</span><br><span class=\"line\">&#125;)(alerter)</span><br></pre></td></tr></table></figure>\n<p>index.html: （在浏览器端展示,引用顺序不能乱）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./js/dataService.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./js/alerter.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./app.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>代码总览：<br><img src=\"https://img-blog.csdnimg.cn/20210529171747840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"代码总览\">这种方法虽然可以有效避免变量名污染，但各模板间的依赖关系有可能极为复杂，导致js文件引入出现问题。</p>\n<h2 id=\"使用AMD的模块化\"><a href=\"#使用AMD的模块化\" class=\"headerlink\" title=\"使用AMD的模块化\"></a>使用AMD的模块化</h2><p>RequireJS是一个非常小巧的JavaScript模块载入框架，是AMD规范最好的实现者之一,因此以下使用RequireJS展示。<br>目录结构：<br><img src=\"https://img-blog.csdnimg.cn/20210529172033614.png\" alt=\"目录展示\"><br>dataService.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义没有依赖的模板</span></span><br><span class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;dataService.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 暴露模块</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;getName&#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>alerter.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义有依赖的模块</span></span><br><span class=\"line\">define([<span class=\"string\">&#x27;dataService&#x27;</span>,<span class=\"string\">&#x27;jquery&#x27;</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">dataService, $</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> msg = <span class=\"string\">&#x27;alerter.js&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showMsg</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(msg, dataService.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;body&#x27;</span>).css(<span class=\"string\">&#x27;background&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 暴露模块</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;showMsg&#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>app.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    requirejs.config(&#123; <span class=\"comment\">// 参数配置</span></span><br><span class=\"line\">        <span class=\"comment\">// baseURL: &#x27;js/&#x27;, 基本路径，若开启，则路径为baseURL+paths</span></span><br><span class=\"line\">        <span class=\"attr\">paths</span>: &#123; <span class=\"comment\">// 配置路径,用以寻找模块</span></span><br><span class=\"line\">            <span class=\"attr\">dataService</span>: <span class=\"string\">&#x27;./modules/dataService&#x27;</span>, <span class=\"comment\">// 此处不加.js后缀，因为运行时默认会加上</span></span><br><span class=\"line\">            <span class=\"attr\">alerter</span>: <span class=\"string\">&#x27;./modules/alerter&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">jquery</span>: <span class=\"string\">&#x27;./libs/jquery-2.2.4.min&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    requirejs([<span class=\"string\">&#x27;alerter&#x27;</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">alerter</span>)</span>&#123;</span><br><span class=\"line\">        alerter.showMsg();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure>\n<p>index.html:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- data-main引入入口js文件，src引入require.js库 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">data-main</span>=<span class=\"string\">&quot;./js/app.js&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./js/libs/require.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>代码总览：<br><img src=\"https://img-blog.csdnimg.cn/20210529172758776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"代码总览\"></p>\n"},{"title":"js防抖和节流","date":"2021-05-20T12:24:53.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/007.jpg","_content":"\n防抖和节流都是限制函数的执行次数\n\n防抖:\n    概念：通过setTimeout方法，在一定时间间隔内，将多次触发变成一次触发\n    实现原理：触发高频事件后n秒内函数只会执行一次，如果n秒内高频事件再次被触发，则重新计算时间。\n节流：\n    概念：减少一段时间的触发频率\n    实现原理：高频事件触发，但在n秒内只会执行一次，所以节流会稀释函数的执行频率。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n\n    <!-- 防抖 -->\n    <input type=\"text\" id=\"input1\">\n    <br>\n    <input type=\"text\" id=\"input2\">\n    <script>\n        // 介绍版\n        const input1 = document.querySelector(\"#input1\");\n        let timer = null;\n        input1.onkeyup = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            timer = setTimeout(() => {\n                console.log(input1.value);\n            }, 500)\n        }\n\n        // 封装版\n        let debounce = (fn, delay = 300) => {\n            let timer;\n            return function () {\n                if (timer) {\n                    clearTimeout(timer);\n                }\n                timer = setTimeout(() => {\n                    fn();\n                }, delay)\n            }\n        }\n        let ajax = () => {\n            console.log('服务器响应');\n        }\n        const input2 = document.querySelector(\"#input2\");\n        input2.onkeyup = debounce(ajax, 500);\n    </script>\n\n    <!-- 节流 -->\n    <style>\n        #box1,#box2 {\n            width: 100px;\n            height: 100px;\n        }\n        #box1{background-color: royalblue;}\n        #box2{background-color: red;}\n    </style>\n    <div id=\"box1\" draggable=\"true\"></div>\n    <div id=\"box2\" draggable=\"true\"></div>\n    <script>\n        // 介绍版\n        const box1 = document.querySelector('#box1');\n        let time = null;\n        box1.ondrag = (e) => {\n            if (time) {\n                return;\n            }\n            time = setTimeout(() => {\n                console.log(e.offsetX, e.offsetY);  // 火狐不兼容\n                time = null;\n            }, 300)\n        }\n\n        // 封装版 \n        let throttle = (fn,delay) => {\n            let timer;\n            return function(){\n                if(timer){\n                    return;\n                }\n                timer = setTimeout(() => {\n                    fn();\n                    timer = null;\n                },delay)\n            }\n        }\n        let response = () => {\n            console.log('节流');\n        } \n        const box2 = document.querySelector('#box2');\n        box2.ondrag = throttle(throttle(response),300);\n    </script>\n</body>\n\n</html>\n```","source":"_posts/javascript/js防抖和节流.md","raw":"---\ntitle: js防抖和节流\ndate: 2021-05-20 20:24:53\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/007.jpg\ntags: \n  - 防抖节流\n  - 效率\ncategories: javascript\n---\n\n防抖和节流都是限制函数的执行次数\n\n防抖:\n    概念：通过setTimeout方法，在一定时间间隔内，将多次触发变成一次触发\n    实现原理：触发高频事件后n秒内函数只会执行一次，如果n秒内高频事件再次被触发，则重新计算时间。\n节流：\n    概念：减少一段时间的触发频率\n    实现原理：高频事件触发，但在n秒内只会执行一次，所以节流会稀释函数的执行频率。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n\n    <!-- 防抖 -->\n    <input type=\"text\" id=\"input1\">\n    <br>\n    <input type=\"text\" id=\"input2\">\n    <script>\n        // 介绍版\n        const input1 = document.querySelector(\"#input1\");\n        let timer = null;\n        input1.onkeyup = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            timer = setTimeout(() => {\n                console.log(input1.value);\n            }, 500)\n        }\n\n        // 封装版\n        let debounce = (fn, delay = 300) => {\n            let timer;\n            return function () {\n                if (timer) {\n                    clearTimeout(timer);\n                }\n                timer = setTimeout(() => {\n                    fn();\n                }, delay)\n            }\n        }\n        let ajax = () => {\n            console.log('服务器响应');\n        }\n        const input2 = document.querySelector(\"#input2\");\n        input2.onkeyup = debounce(ajax, 500);\n    </script>\n\n    <!-- 节流 -->\n    <style>\n        #box1,#box2 {\n            width: 100px;\n            height: 100px;\n        }\n        #box1{background-color: royalblue;}\n        #box2{background-color: red;}\n    </style>\n    <div id=\"box1\" draggable=\"true\"></div>\n    <div id=\"box2\" draggable=\"true\"></div>\n    <script>\n        // 介绍版\n        const box1 = document.querySelector('#box1');\n        let time = null;\n        box1.ondrag = (e) => {\n            if (time) {\n                return;\n            }\n            time = setTimeout(() => {\n                console.log(e.offsetX, e.offsetY);  // 火狐不兼容\n                time = null;\n            }, 300)\n        }\n\n        // 封装版 \n        let throttle = (fn,delay) => {\n            let timer;\n            return function(){\n                if(timer){\n                    return;\n                }\n                timer = setTimeout(() => {\n                    fn();\n                    timer = null;\n                },delay)\n            }\n        }\n        let response = () => {\n            console.log('节流');\n        } \n        const box2 = document.querySelector('#box2');\n        box2.ondrag = throttle(throttle(response),300);\n    </script>\n</body>\n\n</html>\n```","slug":"javascript/js防抖和节流","published":1,"updated":"2021-12-03T14:57:50.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b30011asdaaw9gc1c2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>防抖和节流都是限制函数的执行次数</p>\n<p>防抖:<br>    概念：通过setTimeout方法，在一定时间间隔内，将多次触发变成一次触发<br>    实现原理：触发高频事件后n秒内函数只会执行一次，如果n秒内高频事件再次被触发，则重新计算时间。<br>节流：<br>    概念：减少一段时间的触发频率<br>    实现原理：高频事件触发，但在n秒内只会执行一次，所以节流会稀释函数的执行频率。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 防抖 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input2&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 介绍版</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> input1 = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;#input1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> timer = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        input1.onkeyup = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (timer) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">clearTimeout</span>(timer);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(input1.value);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;, <span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 封装版</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> debounce = <span class=\"function\">(<span class=\"params\">fn, delay = <span class=\"number\">300</span></span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> timer;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">if</span> (timer) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">clearTimeout</span>(timer);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    fn();</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;, delay)</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> ajax = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;服务器响应&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> input2 = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;#input2&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        input2.onkeyup = debounce(ajax, <span class=\"number\">500</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 节流 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#box1</span>,<span class=\"selector-id\">#box2</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#box1</span>&#123;<span class=\"attribute\">background-color</span>: royalblue;&#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#box2</span>&#123;<span class=\"attribute\">background-color</span>: red;&#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box2&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 介绍版</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> box1 = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;#box1&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> time = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        box1.ondrag = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (time) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            time = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(e.offsetX, e.offsetY);  <span class=\"comment\">// 火狐不兼容</span></span></span><br><span class=\"line\"><span class=\"javascript\">                time = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;, <span class=\"number\">300</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 封装版 </span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> throttle = <span class=\"function\">(<span class=\"params\">fn,delay</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> timer;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">if</span>(timer)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    fn();</span></span><br><span class=\"line\"><span class=\"javascript\">                    timer = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,delay)</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> response = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;节流&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; </span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> box2 = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;#box2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        box2.ondrag = throttle(throttle(response),<span class=\"number\">300</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>防抖和节流都是限制函数的执行次数</p>\n<p>防抖:<br>    概念：通过setTimeout方法，在一定时间间隔内，将多次触发变成一次触发<br>    实现原理：触发高频事件后n秒内函数只会执行一次，如果n秒内高频事件再次被触发，则重新计算时间。<br>节流：<br>    概念：减少一段时间的触发频率<br>    实现原理：高频事件触发，但在n秒内只会执行一次，所以节流会稀释函数的执行频率。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 防抖 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input2&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 介绍版</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> input1 = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;#input1&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> timer = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        input1.onkeyup = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (timer) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">clearTimeout</span>(timer);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(input1.value);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;, <span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 封装版</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> debounce = <span class=\"function\">(<span class=\"params\">fn, delay = <span class=\"number\">300</span></span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> timer;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">if</span> (timer) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">clearTimeout</span>(timer);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    fn();</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;, delay)</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> ajax = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;服务器响应&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> input2 = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;#input2&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        input2.onkeyup = debounce(ajax, <span class=\"number\">500</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 节流 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#box1</span>,<span class=\"selector-id\">#box2</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#box1</span>&#123;<span class=\"attribute\">background-color</span>: royalblue;&#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#box2</span>&#123;<span class=\"attribute\">background-color</span>: red;&#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box1&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box2&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 介绍版</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> box1 = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;#box1&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> time = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        box1.ondrag = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (time) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            time = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(e.offsetX, e.offsetY);  <span class=\"comment\">// 火狐不兼容</span></span></span><br><span class=\"line\"><span class=\"javascript\">                time = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;, <span class=\"number\">300</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 封装版 </span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> throttle = <span class=\"function\">(<span class=\"params\">fn,delay</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> timer;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">if</span>(timer)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    fn();</span></span><br><span class=\"line\"><span class=\"javascript\">                    timer = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,delay)</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> response = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;节流&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; </span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> box2 = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;#box2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        box2.ondrag = throttle(throttle(response),<span class=\"number\">300</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"uniCloud初体验","date":"2021-10-01T03:54:32.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/7.jpg","_content":"\n# uniCloud是什么\nuniCloud是DCloud在阿里云和腾讯云的serverless服务上封装而成的。\n它包含IaaS层（由阿里云和腾讯云提供硬件和网络）和PaaS层（由DCloud提供开发环境）。\n开发者可以自主选择uniCloud的硬件和网络资源的供应商，在阿里云版和腾讯云版之间切换。\n开户和付费虽然通过DCloud渠道，但实际上开发者自动在云厂商处建立了账户和充值了余额。DCloud只获取云服务厂商的返佣。\n开发时虽使用DCloud的工具，但应用上线时，手机端是直连阿里云或腾讯云的serverless，不经由DCloud的服务器。\n\n# uniCloud通讯录案例\n首先使用HbuilderX新建项目：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f95475b2929c4dd99069e20b9469c3fd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)注意勾选启用uniCloud，个人推荐使用阿里云，因为使用阿里云的话可以免费使用云存储：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9753bcaa8f934e3e84dfe2deeda900b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)创建好后会出现以下目录，其中uniCloud是跟数据库和云函数有关的文件夹，项目打包的前端页面里不会将其打包进去。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e8154b42e86848c3bf4ea22469e2cb8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_15,color_FFFFFF,t_70,g_se,x_16)\n然后就可以创建一下云服务空间，就可以使用云服务了，直接选中uniCloud文件夹右击，点击打开uniCloud web控制台，就可以创建云空间了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/64ae74ca8dc14263ae3a3bcff2f83802.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)创建好云服务空间后就可以直接创建一个数据表，然后再加两条数据：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/58304184617c46e9a069b1e25ed2620f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n然后回到编译器，创建以下目录：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/72293fe3043d43518905d50551d141f0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_14,color_FFFFFF,t_70,g_se,x_16)\n引入uni-ui，实现代码如下：\n\nlist.vue代码：\n```vue\n<template>\n\t<view>\n\t\t<!-- 列表展示与删除 -->\n\t\t<unicloud-db ref=\"udb\" v-slot:default=\"{data, loading, error, options}\" collection=\"test\">\n\t\t\t<view v-if=\"error\">{{error.message}}</view>\n\t\t\t<view v-else>\n\t\t\t\t<uni-list>\n\t\t\t\t\t<uni-list-item \n\t\t\t\t\t    v-for=\"item in data\"\n\t\t\t\t\t\t@longpress.native=\"rmItem(item._id)\"\n\t\t\t\t\t\t@click.native=\"update(item)\"\n\t\t\t\t\t\t:key=\"item._id\" \n\t\t\t\t\t\t:title=\"item.name\"\n\t\t\t\t\t\t:note=\"item.phone\"\n\t\t\t\t\t\tlink\n\t\t\t\t\t>\n\t\t\t\t\t</uni-list-item>\n\t\t\t\t</uni-list>\n\t\t\t</view>\n\t\t</unicloud-db>\n\t\t\n\t\t<!-- 新增数据 -->\n\t\t<uni-easyinput v-model=\"item.name\" placeholder=\"name\"></uni-easyinput>\n\t\t<uni-easyinput v-model=\"item.phone\" placeholder=\"phone\"></uni-easyinput>\n\t\t<button type=\"default\" @click=\"submit\">submit</button>\n\t\t\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"phone\": \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t// 删除功能\n\t\t\trmItem(id) {\n\t\t\t\tthis.$refs.udb.remove(id);\n\t\t\t},\n\t\t\t\n\t\t\t// 新增功能\n\t\t\tsubmit() {\n\t\t\t\tconst db = uniCloud.database();\n\t\t\t\tdb.collection('test').add(this.item).then(e=>{\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 修改数据\n\t\t\tupdate(item) {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '../update/update?item=' + JSON.stringify(item),\n\t\t\t\t\tsuccess: res => {},\n\t\t\t\t\tfail: () => {},\n\t\t\t\t\tcomplete: () => {}\n\t\t\t\t});\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style>\n\n</style>\n```\n\nupdate代码：\n\n```vue\n<template>\n\t<view>\n\t\t<!-- 修改数据 -->\n\t\t<uni-easyinput v-model=\"item.name\" placeholder=\"name\"></uni-easyinput>\n\t\t<uni-easyinput v-model=\"item.phone\" placeholder=\"phone\"></uni-easyinput>\n\t\t<button type=\"default\" @click=\"update()\">submit</button>\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\t\"_id\": \"\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"phone\": \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonLoad({item}) {\n\t\t\tthis.item = JSON.parse(item);\n\t\t},\n\t\tmethods: {\n\t\t\t// 修改数据\n\t\t\tupdate() {\n\t\t\t\tconst db = uniCloud.database();\n\t\t\t\tlet item = {...this.item}\n\t\t\t\tdelete item._id\n\t\t\t\tdb.collection('test').doc(this.item._id).update(item).then(e=>{\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style>\n</style>\n```\ntest.schema.json如下：\n\n```json\n{\n\t\"bsonType\": \"object\",\n\t\"required\": [],\n\t\"permission\": {\n\t\t\"read\": true,\n\t\t\"create\": true,\n\t\t\"update\": true,\n\t\t\"delete\": true\n\t},\n\t\"properties\": {\n\t\t\"_id\": {\n\t\t\t\"description\": \"ID，系统自动生成\"\n\t\t},\n\t\t\"name\": {\n\t\t\t\n\t\t},\n\t\t\"phone\": {\n\t\t\t\n\t\t}\n\t}\n}\n```\n效果如下，点击列表即可修改，长按即可删除，输入即可新增，相较于传统前后端开发模式，使用uniCloud确实可以大大简化流程。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ba18b2e3014d4a04892a83a1e22e85b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","source":"_posts/javascript/uniCloud初体验.md","raw":"---\ntitle: uniCloud初体验\ndate: 2021-10-01 11:54:32\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/7.jpg\ntags:\n  - uniCloud\ncategories: javascript\n---\n\n# uniCloud是什么\nuniCloud是DCloud在阿里云和腾讯云的serverless服务上封装而成的。\n它包含IaaS层（由阿里云和腾讯云提供硬件和网络）和PaaS层（由DCloud提供开发环境）。\n开发者可以自主选择uniCloud的硬件和网络资源的供应商，在阿里云版和腾讯云版之间切换。\n开户和付费虽然通过DCloud渠道，但实际上开发者自动在云厂商处建立了账户和充值了余额。DCloud只获取云服务厂商的返佣。\n开发时虽使用DCloud的工具，但应用上线时，手机端是直连阿里云或腾讯云的serverless，不经由DCloud的服务器。\n\n# uniCloud通讯录案例\n首先使用HbuilderX新建项目：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f95475b2929c4dd99069e20b9469c3fd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)注意勾选启用uniCloud，个人推荐使用阿里云，因为使用阿里云的话可以免费使用云存储：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9753bcaa8f934e3e84dfe2deeda900b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)创建好后会出现以下目录，其中uniCloud是跟数据库和云函数有关的文件夹，项目打包的前端页面里不会将其打包进去。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e8154b42e86848c3bf4ea22469e2cb8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_15,color_FFFFFF,t_70,g_se,x_16)\n然后就可以创建一下云服务空间，就可以使用云服务了，直接选中uniCloud文件夹右击，点击打开uniCloud web控制台，就可以创建云空间了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/64ae74ca8dc14263ae3a3bcff2f83802.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)创建好云服务空间后就可以直接创建一个数据表，然后再加两条数据：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/58304184617c46e9a069b1e25ed2620f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n然后回到编译器，创建以下目录：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/72293fe3043d43518905d50551d141f0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_14,color_FFFFFF,t_70,g_se,x_16)\n引入uni-ui，实现代码如下：\n\nlist.vue代码：\n```vue\n<template>\n\t<view>\n\t\t<!-- 列表展示与删除 -->\n\t\t<unicloud-db ref=\"udb\" v-slot:default=\"{data, loading, error, options}\" collection=\"test\">\n\t\t\t<view v-if=\"error\">{{error.message}}</view>\n\t\t\t<view v-else>\n\t\t\t\t<uni-list>\n\t\t\t\t\t<uni-list-item \n\t\t\t\t\t    v-for=\"item in data\"\n\t\t\t\t\t\t@longpress.native=\"rmItem(item._id)\"\n\t\t\t\t\t\t@click.native=\"update(item)\"\n\t\t\t\t\t\t:key=\"item._id\" \n\t\t\t\t\t\t:title=\"item.name\"\n\t\t\t\t\t\t:note=\"item.phone\"\n\t\t\t\t\t\tlink\n\t\t\t\t\t>\n\t\t\t\t\t</uni-list-item>\n\t\t\t\t</uni-list>\n\t\t\t</view>\n\t\t</unicloud-db>\n\t\t\n\t\t<!-- 新增数据 -->\n\t\t<uni-easyinput v-model=\"item.name\" placeholder=\"name\"></uni-easyinput>\n\t\t<uni-easyinput v-model=\"item.phone\" placeholder=\"phone\"></uni-easyinput>\n\t\t<button type=\"default\" @click=\"submit\">submit</button>\n\t\t\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"phone\": \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t// 删除功能\n\t\t\trmItem(id) {\n\t\t\t\tthis.$refs.udb.remove(id);\n\t\t\t},\n\t\t\t\n\t\t\t// 新增功能\n\t\t\tsubmit() {\n\t\t\t\tconst db = uniCloud.database();\n\t\t\t\tdb.collection('test').add(this.item).then(e=>{\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 修改数据\n\t\t\tupdate(item) {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '../update/update?item=' + JSON.stringify(item),\n\t\t\t\t\tsuccess: res => {},\n\t\t\t\t\tfail: () => {},\n\t\t\t\t\tcomplete: () => {}\n\t\t\t\t});\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style>\n\n</style>\n```\n\nupdate代码：\n\n```vue\n<template>\n\t<view>\n\t\t<!-- 修改数据 -->\n\t\t<uni-easyinput v-model=\"item.name\" placeholder=\"name\"></uni-easyinput>\n\t\t<uni-easyinput v-model=\"item.phone\" placeholder=\"phone\"></uni-easyinput>\n\t\t<button type=\"default\" @click=\"update()\">submit</button>\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\t\"_id\": \"\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"phone\": \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonLoad({item}) {\n\t\t\tthis.item = JSON.parse(item);\n\t\t},\n\t\tmethods: {\n\t\t\t// 修改数据\n\t\t\tupdate() {\n\t\t\t\tconst db = uniCloud.database();\n\t\t\t\tlet item = {...this.item}\n\t\t\t\tdelete item._id\n\t\t\t\tdb.collection('test').doc(this.item._id).update(item).then(e=>{\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style>\n</style>\n```\ntest.schema.json如下：\n\n```json\n{\n\t\"bsonType\": \"object\",\n\t\"required\": [],\n\t\"permission\": {\n\t\t\"read\": true,\n\t\t\"create\": true,\n\t\t\"update\": true,\n\t\t\"delete\": true\n\t},\n\t\"properties\": {\n\t\t\"_id\": {\n\t\t\t\"description\": \"ID，系统自动生成\"\n\t\t},\n\t\t\"name\": {\n\t\t\t\n\t\t},\n\t\t\"phone\": {\n\t\t\t\n\t\t}\n\t}\n}\n```\n效果如下，点击列表即可修改，长按即可删除，输入即可新增，相较于传统前后端开发模式，使用uniCloud确实可以大大简化流程。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ba18b2e3014d4a04892a83a1e22e85b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","slug":"javascript/uniCloud初体验","published":1,"updated":"2021-12-03T14:57:59.603Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b40015asda85e60pyk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"uniCloud是什么\"><a href=\"#uniCloud是什么\" class=\"headerlink\" title=\"uniCloud是什么\"></a>uniCloud是什么</h1><p>uniCloud是DCloud在阿里云和腾讯云的serverless服务上封装而成的。<br>它包含IaaS层（由阿里云和腾讯云提供硬件和网络）和PaaS层（由DCloud提供开发环境）。<br>开发者可以自主选择uniCloud的硬件和网络资源的供应商，在阿里云版和腾讯云版之间切换。<br>开户和付费虽然通过DCloud渠道，但实际上开发者自动在云厂商处建立了账户和充值了余额。DCloud只获取云服务厂商的返佣。<br>开发时虽使用DCloud的工具，但应用上线时，手机端是直连阿里云或腾讯云的serverless，不经由DCloud的服务器。</p>\n<h1 id=\"uniCloud通讯录案例\"><a href=\"#uniCloud通讯录案例\" class=\"headerlink\" title=\"uniCloud通讯录案例\"></a>uniCloud通讯录案例</h1><p>首先使用HbuilderX新建项目：<br><img src=\"https://img-blog.csdnimg.cn/f95475b2929c4dd99069e20b9469c3fd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">注意勾选启用uniCloud，个人推荐使用阿里云，因为使用阿里云的话可以免费使用云存储：<br><img src=\"https://img-blog.csdnimg.cn/9753bcaa8f934e3e84dfe2deeda900b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">创建好后会出现以下目录，其中uniCloud是跟数据库和云函数有关的文件夹，项目打包的前端页面里不会将其打包进去。<br><img src=\"https://img-blog.csdnimg.cn/e8154b42e86848c3bf4ea22469e2cb8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_15,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>然后就可以创建一下云服务空间，就可以使用云服务了，直接选中uniCloud文件夹右击，点击打开uniCloud web控制台，就可以创建云空间了：<br><img src=\"https://img-blog.csdnimg.cn/64ae74ca8dc14263ae3a3bcff2f83802.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">创建好云服务空间后就可以直接创建一个数据表，然后再加两条数据：<br><img src=\"https://img-blog.csdnimg.cn/58304184617c46e9a069b1e25ed2620f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>然后回到编译器，创建以下目录：<br><img src=\"https://img-blog.csdnimg.cn/72293fe3043d43518905d50551d141f0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_14,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>引入uni-ui，实现代码如下：</p>\n<p>list.vue代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;view&gt;</span><br><span class=\"line\">\t\t&lt;!-- 列表展示与删除 --&gt;</span><br><span class=\"line\">\t\t&lt;unicloud-db ref=&quot;udb&quot; v-slot:default=&quot;&#123;data, loading, error, options&#125;&quot; collection=&quot;test&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;view v-if=&quot;error&quot;&gt;&#123;&#123;error.message&#125;&#125;&lt;/view&gt;</span><br><span class=\"line\">\t\t\t&lt;view v-else&gt;</span><br><span class=\"line\">\t\t\t\t&lt;uni-list&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;uni-list-item </span><br><span class=\"line\">\t\t\t\t\t    v-for=&quot;item in data&quot;</span><br><span class=\"line\">\t\t\t\t\t\t@longpress.native=&quot;rmItem(item._id)&quot;</span><br><span class=\"line\">\t\t\t\t\t\t@click.native=&quot;update(item)&quot;</span><br><span class=\"line\">\t\t\t\t\t\t:key=&quot;item._id&quot; </span><br><span class=\"line\">\t\t\t\t\t\t:title=&quot;item.name&quot;</span><br><span class=\"line\">\t\t\t\t\t\t:note=&quot;item.phone&quot;</span><br><span class=\"line\">\t\t\t\t\t\tlink</span><br><span class=\"line\">\t\t\t\t\t&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;/uni-list-item&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/uni-list&gt;</span><br><span class=\"line\">\t\t\t&lt;/view&gt;</span><br><span class=\"line\">\t\t&lt;/unicloud-db&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;!-- 新增数据 --&gt;</span><br><span class=\"line\">\t\t&lt;uni-easyinput v-model=&quot;item.name&quot; placeholder=&quot;name&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class=\"line\">\t\t&lt;uni-easyinput v-model=&quot;item.phone&quot; placeholder=&quot;phone&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class=\"line\">\t\t&lt;button type=&quot;default&quot; @click=&quot;submit&quot;&gt;submit&lt;/button&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\texport default &#123;</span><br><span class=\"line\">\t\tdata() &#123;</span><br><span class=\"line\">\t\t\treturn &#123;</span><br><span class=\"line\">\t\t\t\titem: &#123;</span><br><span class=\"line\">\t\t\t\t\t&quot;name&quot;: &quot;&quot;,</span><br><span class=\"line\">\t\t\t\t\t&quot;phone&quot;: &quot;&quot;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tmethods: &#123;</span><br><span class=\"line\">\t\t\t// 删除功能</span><br><span class=\"line\">\t\t\trmItem(id) &#123;</span><br><span class=\"line\">\t\t\t\tthis.$refs.udb.remove(id);</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// 新增功能</span><br><span class=\"line\">\t\t\tsubmit() &#123;</span><br><span class=\"line\">\t\t\t\tconst db = uniCloud.database();</span><br><span class=\"line\">\t\t\t\tdb.collection(&#x27;test&#x27;).add(this.item).then(e=&gt;&#123;</span><br><span class=\"line\">\t\t\t\t\tconsole.log(e);</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// 修改数据</span><br><span class=\"line\">\t\t\tupdate(item) &#123;</span><br><span class=\"line\">\t\t\t\tuni.navigateTo(&#123;</span><br><span class=\"line\">\t\t\t\t\turl: &#x27;../update/update?item=&#x27; + JSON.stringify(item),</span><br><span class=\"line\">\t\t\t\t\tsuccess: res =&gt; &#123;&#125;,</span><br><span class=\"line\">\t\t\t\t\tfail: () =&gt; &#123;&#125;,</span><br><span class=\"line\">\t\t\t\t\tcomplete: () =&gt; &#123;&#125;</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>update代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;view&gt;</span><br><span class=\"line\">\t\t&lt;!-- 修改数据 --&gt;</span><br><span class=\"line\">\t\t&lt;uni-easyinput v-model=&quot;item.name&quot; placeholder=&quot;name&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class=\"line\">\t\t&lt;uni-easyinput v-model=&quot;item.phone&quot; placeholder=&quot;phone&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class=\"line\">\t\t&lt;button type=&quot;default&quot; @click=&quot;update()&quot;&gt;submit&lt;/button&gt;</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\texport default &#123;</span><br><span class=\"line\">\t\tdata() &#123;</span><br><span class=\"line\">\t\t\treturn &#123;</span><br><span class=\"line\">\t\t\t\titem: &#123;</span><br><span class=\"line\">\t\t\t\t\t&quot;_id&quot;: &quot;&quot;,</span><br><span class=\"line\">\t\t\t\t\t&quot;name&quot;: &quot;&quot;,</span><br><span class=\"line\">\t\t\t\t\t&quot;phone&quot;: &quot;&quot;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tonLoad(&#123;item&#125;) &#123;</span><br><span class=\"line\">\t\t\tthis.item = JSON.parse(item);</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tmethods: &#123;</span><br><span class=\"line\">\t\t\t// 修改数据</span><br><span class=\"line\">\t\t\tupdate() &#123;</span><br><span class=\"line\">\t\t\t\tconst db = uniCloud.database();</span><br><span class=\"line\">\t\t\t\tlet item = &#123;...this.item&#125;</span><br><span class=\"line\">\t\t\t\tdelete item._id</span><br><span class=\"line\">\t\t\t\tdb.collection(&#x27;test&#x27;).doc(this.item._id).update(item).then(e=&gt;&#123;</span><br><span class=\"line\">\t\t\t\t\tconsole.log(e);</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>test.schema.json如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;bsonType&quot;</span>: <span class=\"string\">&quot;object&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;required&quot;</span>: [],</span><br><span class=\"line\">\t<span class=\"attr\">&quot;permission&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;read&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;create&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;update&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;delete&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;_id&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;description&quot;</span>: <span class=\"string\">&quot;ID，系统自动生成&quot;</span></span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;phone&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下，点击列表即可修改，长按即可删除，输入即可新增，相较于传统前后端开发模式，使用uniCloud确实可以大大简化流程。<br><img src=\"https://img-blog.csdnimg.cn/ba18b2e3014d4a04892a83a1e22e85b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"uniCloud是什么\"><a href=\"#uniCloud是什么\" class=\"headerlink\" title=\"uniCloud是什么\"></a>uniCloud是什么</h1><p>uniCloud是DCloud在阿里云和腾讯云的serverless服务上封装而成的。<br>它包含IaaS层（由阿里云和腾讯云提供硬件和网络）和PaaS层（由DCloud提供开发环境）。<br>开发者可以自主选择uniCloud的硬件和网络资源的供应商，在阿里云版和腾讯云版之间切换。<br>开户和付费虽然通过DCloud渠道，但实际上开发者自动在云厂商处建立了账户和充值了余额。DCloud只获取云服务厂商的返佣。<br>开发时虽使用DCloud的工具，但应用上线时，手机端是直连阿里云或腾讯云的serverless，不经由DCloud的服务器。</p>\n<h1 id=\"uniCloud通讯录案例\"><a href=\"#uniCloud通讯录案例\" class=\"headerlink\" title=\"uniCloud通讯录案例\"></a>uniCloud通讯录案例</h1><p>首先使用HbuilderX新建项目：<br><img src=\"https://img-blog.csdnimg.cn/f95475b2929c4dd99069e20b9469c3fd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">注意勾选启用uniCloud，个人推荐使用阿里云，因为使用阿里云的话可以免费使用云存储：<br><img src=\"https://img-blog.csdnimg.cn/9753bcaa8f934e3e84dfe2deeda900b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">创建好后会出现以下目录，其中uniCloud是跟数据库和云函数有关的文件夹，项目打包的前端页面里不会将其打包进去。<br><img src=\"https://img-blog.csdnimg.cn/e8154b42e86848c3bf4ea22469e2cb8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_15,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>然后就可以创建一下云服务空间，就可以使用云服务了，直接选中uniCloud文件夹右击，点击打开uniCloud web控制台，就可以创建云空间了：<br><img src=\"https://img-blog.csdnimg.cn/64ae74ca8dc14263ae3a3bcff2f83802.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">创建好云服务空间后就可以直接创建一个数据表，然后再加两条数据：<br><img src=\"https://img-blog.csdnimg.cn/58304184617c46e9a069b1e25ed2620f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>然后回到编译器，创建以下目录：<br><img src=\"https://img-blog.csdnimg.cn/72293fe3043d43518905d50551d141f0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_14,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>引入uni-ui，实现代码如下：</p>\n<p>list.vue代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;view&gt;</span><br><span class=\"line\">\t\t&lt;!-- 列表展示与删除 --&gt;</span><br><span class=\"line\">\t\t&lt;unicloud-db ref=&quot;udb&quot; v-slot:default=&quot;&#123;data, loading, error, options&#125;&quot; collection=&quot;test&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;view v-if=&quot;error&quot;&gt;&#123;&#123;error.message&#125;&#125;&lt;/view&gt;</span><br><span class=\"line\">\t\t\t&lt;view v-else&gt;</span><br><span class=\"line\">\t\t\t\t&lt;uni-list&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;uni-list-item </span><br><span class=\"line\">\t\t\t\t\t    v-for=&quot;item in data&quot;</span><br><span class=\"line\">\t\t\t\t\t\t@longpress.native=&quot;rmItem(item._id)&quot;</span><br><span class=\"line\">\t\t\t\t\t\t@click.native=&quot;update(item)&quot;</span><br><span class=\"line\">\t\t\t\t\t\t:key=&quot;item._id&quot; </span><br><span class=\"line\">\t\t\t\t\t\t:title=&quot;item.name&quot;</span><br><span class=\"line\">\t\t\t\t\t\t:note=&quot;item.phone&quot;</span><br><span class=\"line\">\t\t\t\t\t\tlink</span><br><span class=\"line\">\t\t\t\t\t&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;/uni-list-item&gt;</span><br><span class=\"line\">\t\t\t\t&lt;/uni-list&gt;</span><br><span class=\"line\">\t\t\t&lt;/view&gt;</span><br><span class=\"line\">\t\t&lt;/unicloud-db&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;!-- 新增数据 --&gt;</span><br><span class=\"line\">\t\t&lt;uni-easyinput v-model=&quot;item.name&quot; placeholder=&quot;name&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class=\"line\">\t\t&lt;uni-easyinput v-model=&quot;item.phone&quot; placeholder=&quot;phone&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class=\"line\">\t\t&lt;button type=&quot;default&quot; @click=&quot;submit&quot;&gt;submit&lt;/button&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\texport default &#123;</span><br><span class=\"line\">\t\tdata() &#123;</span><br><span class=\"line\">\t\t\treturn &#123;</span><br><span class=\"line\">\t\t\t\titem: &#123;</span><br><span class=\"line\">\t\t\t\t\t&quot;name&quot;: &quot;&quot;,</span><br><span class=\"line\">\t\t\t\t\t&quot;phone&quot;: &quot;&quot;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tmethods: &#123;</span><br><span class=\"line\">\t\t\t// 删除功能</span><br><span class=\"line\">\t\t\trmItem(id) &#123;</span><br><span class=\"line\">\t\t\t\tthis.$refs.udb.remove(id);</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// 新增功能</span><br><span class=\"line\">\t\t\tsubmit() &#123;</span><br><span class=\"line\">\t\t\t\tconst db = uniCloud.database();</span><br><span class=\"line\">\t\t\t\tdb.collection(&#x27;test&#x27;).add(this.item).then(e=&gt;&#123;</span><br><span class=\"line\">\t\t\t\t\tconsole.log(e);</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t// 修改数据</span><br><span class=\"line\">\t\t\tupdate(item) &#123;</span><br><span class=\"line\">\t\t\t\tuni.navigateTo(&#123;</span><br><span class=\"line\">\t\t\t\t\turl: &#x27;../update/update?item=&#x27; + JSON.stringify(item),</span><br><span class=\"line\">\t\t\t\t\tsuccess: res =&gt; &#123;&#125;,</span><br><span class=\"line\">\t\t\t\t\tfail: () =&gt; &#123;&#125;,</span><br><span class=\"line\">\t\t\t\t\tcomplete: () =&gt; &#123;&#125;</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>update代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;view&gt;</span><br><span class=\"line\">\t\t&lt;!-- 修改数据 --&gt;</span><br><span class=\"line\">\t\t&lt;uni-easyinput v-model=&quot;item.name&quot; placeholder=&quot;name&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class=\"line\">\t\t&lt;uni-easyinput v-model=&quot;item.phone&quot; placeholder=&quot;phone&quot;&gt;&lt;/uni-easyinput&gt;</span><br><span class=\"line\">\t\t&lt;button type=&quot;default&quot; @click=&quot;update()&quot;&gt;submit&lt;/button&gt;</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\texport default &#123;</span><br><span class=\"line\">\t\tdata() &#123;</span><br><span class=\"line\">\t\t\treturn &#123;</span><br><span class=\"line\">\t\t\t\titem: &#123;</span><br><span class=\"line\">\t\t\t\t\t&quot;_id&quot;: &quot;&quot;,</span><br><span class=\"line\">\t\t\t\t\t&quot;name&quot;: &quot;&quot;,</span><br><span class=\"line\">\t\t\t\t\t&quot;phone&quot;: &quot;&quot;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tonLoad(&#123;item&#125;) &#123;</span><br><span class=\"line\">\t\t\tthis.item = JSON.parse(item);</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tmethods: &#123;</span><br><span class=\"line\">\t\t\t// 修改数据</span><br><span class=\"line\">\t\t\tupdate() &#123;</span><br><span class=\"line\">\t\t\t\tconst db = uniCloud.database();</span><br><span class=\"line\">\t\t\t\tlet item = &#123;...this.item&#125;</span><br><span class=\"line\">\t\t\t\tdelete item._id</span><br><span class=\"line\">\t\t\t\tdb.collection(&#x27;test&#x27;).doc(this.item._id).update(item).then(e=&gt;&#123;</span><br><span class=\"line\">\t\t\t\t\tconsole.log(e);</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>test.schema.json如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;bsonType&quot;</span>: <span class=\"string\">&quot;object&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;required&quot;</span>: [],</span><br><span class=\"line\">\t<span class=\"attr\">&quot;permission&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;read&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;create&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;update&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;delete&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;_id&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;description&quot;</span>: <span class=\"string\">&quot;ID，系统自动生成&quot;</span></span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;phone&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下，点击列表即可修改，长按即可删除，输入即可新增，相较于传统前后端开发模式，使用uniCloud确实可以大大简化流程。<br><img src=\"https://img-blog.csdnimg.cn/ba18b2e3014d4a04892a83a1e22e85b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"Promise的一些使用","date":"2021-08-17T07:25:46.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/1.jpg","_content":"\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7a52cf65d09340d1aa60832bbadf3ffb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### 1). 封装AJAX GET请求\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 封装一个函数sendAJAX发送ajax GET请求\n        function sendAJAX(url) {\n            return new Promise((resolve, reject)=>{\n                const xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url);\n                xhr.send();\n                xhr.onreadystatechange = ()=>{\n                    if(xhr.status >= 200 && xhr.status < 300) {\n                        resolve(xhr.response);\n                    } else {\n                        reject(xhr.status);\n                    }\n                };\n            });\n        }\n\n        // 使用该封装函数\n        sendAJAX('https://api.apiopen.top/getJoke')\n        .then(value => {\n            console.log(value);\n        }, reason => {\n            console.log(reason);\n        })\n    </script>\n</body>\n</html>\n```\n\n### 2).抽奖案例\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <h2>Promise 抽奖模拟</h2>\n    <button id=\"btn\">点击抽奖</button>\n    <script>\n        // 生成从m到n的随机数\n        let rand = (m, n) => {\n            return Math.ceil(Math.random() * (n - m + 1)) + m - 1;\n        }\n\n        // 获取元素对象\n        const btn = document.querySelector('#btn');\n        btn.addEventListener('click', () => {\n            const p = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    let n = rand(1, 100);\n                    if (n <= 30) {\n                        resolve(n);\n                    } else {\n                        reject(n);\n                    }\n                }, 500);\n            });\n            // 调用then方法\n            p.then(value => {\n                alert(`您中奖了！您的号码是：${value}`);\n            }, reason => {\n                alert(`谢谢惠顾！您的号码是：${reason}`);\n            });\n        })\n    </script>\n</body>\n\n</html>\n```\n\n### 3). 解决回调地狱\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <script>\n        const p = new Promise((resolve, reject) => {\n            resolve(1);\n        }).then(value => { \n            console.log(value); // 1\n            return value * 2;\n        }).then(value => { \n            console.log(value); // 2\n        }).then(value => { \n            console.log(value); // undefined\n            return Promise.resolve('resolve');\n        }).then(value => {\n            console.log(value); // resolve\n            return Promise.reject('reject');\n        }).then(value => {\n            console.log('resolve:' + value); //reject:reject\n        }, err => {\n            console.log('reject:' + err);\n        });\n    </script>\n</body>\n\n</html>\n```\n\n### 4). async与await\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <script>\n        function testAwait() {\n            return new Promise((resolve) => {\n                setTimeout(function () {\n                    console.log(\"testAwait\");\n                    resolve();\n                }, 1000);\n            });\n        }\n\n        async function helloAsync() {\n            await testAwait();\n            console.log(\"helloAsync\");\n        }\n        helloAsync();\n        // testAwait\n        // helloAsync\n    </script>\n</body>\n\n</html>\n```\n\n\n","source":"_posts/javascript/promise.md","raw":"---\ntitle: Promise的一些使用\ndate:  2021-08-17 15:25:46\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/1.jpg\ntags: \n  - promise\n  - ES6\ncategories: javascript\n---\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7a52cf65d09340d1aa60832bbadf3ffb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### 1). 封装AJAX GET请求\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 封装一个函数sendAJAX发送ajax GET请求\n        function sendAJAX(url) {\n            return new Promise((resolve, reject)=>{\n                const xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url);\n                xhr.send();\n                xhr.onreadystatechange = ()=>{\n                    if(xhr.status >= 200 && xhr.status < 300) {\n                        resolve(xhr.response);\n                    } else {\n                        reject(xhr.status);\n                    }\n                };\n            });\n        }\n\n        // 使用该封装函数\n        sendAJAX('https://api.apiopen.top/getJoke')\n        .then(value => {\n            console.log(value);\n        }, reason => {\n            console.log(reason);\n        })\n    </script>\n</body>\n</html>\n```\n\n### 2).抽奖案例\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <h2>Promise 抽奖模拟</h2>\n    <button id=\"btn\">点击抽奖</button>\n    <script>\n        // 生成从m到n的随机数\n        let rand = (m, n) => {\n            return Math.ceil(Math.random() * (n - m + 1)) + m - 1;\n        }\n\n        // 获取元素对象\n        const btn = document.querySelector('#btn');\n        btn.addEventListener('click', () => {\n            const p = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    let n = rand(1, 100);\n                    if (n <= 30) {\n                        resolve(n);\n                    } else {\n                        reject(n);\n                    }\n                }, 500);\n            });\n            // 调用then方法\n            p.then(value => {\n                alert(`您中奖了！您的号码是：${value}`);\n            }, reason => {\n                alert(`谢谢惠顾！您的号码是：${reason}`);\n            });\n        })\n    </script>\n</body>\n\n</html>\n```\n\n### 3). 解决回调地狱\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <script>\n        const p = new Promise((resolve, reject) => {\n            resolve(1);\n        }).then(value => { \n            console.log(value); // 1\n            return value * 2;\n        }).then(value => { \n            console.log(value); // 2\n        }).then(value => { \n            console.log(value); // undefined\n            return Promise.resolve('resolve');\n        }).then(value => {\n            console.log(value); // resolve\n            return Promise.reject('reject');\n        }).then(value => {\n            console.log('resolve:' + value); //reject:reject\n        }, err => {\n            console.log('reject:' + err);\n        });\n    </script>\n</body>\n\n</html>\n```\n\n### 4). async与await\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <script>\n        function testAwait() {\n            return new Promise((resolve) => {\n                setTimeout(function () {\n                    console.log(\"testAwait\");\n                    resolve();\n                }, 1000);\n            });\n        }\n\n        async function helloAsync() {\n            await testAwait();\n            console.log(\"helloAsync\");\n        }\n        helloAsync();\n        // testAwait\n        // helloAsync\n    </script>\n</body>\n\n</html>\n```\n\n\n","slug":"javascript/promise","published":1,"updated":"2021-12-03T14:57:56.131Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b60019asdacvb14i18","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><img src=\"https://img-blog.csdnimg.cn/7a52cf65d09340d1aa60832bbadf3ffb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-封装AJAX-GET请求\"><a href=\"#1-封装AJAX-GET请求\" class=\"headerlink\" title=\"1). 封装AJAX GET请求\"></a>1). 封装AJAX GET请求</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 封装一个函数sendAJAX发送ajax GET请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sendAJAX</span>(<span class=\"params\">url</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">const</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span></span><br><span class=\"line\"><span class=\"javascript\">                xhr.open(<span class=\"string\">&quot;GET&quot;</span>, url);</span></span><br><span class=\"line\"><span class=\"javascript\">                xhr.send();</span></span><br><span class=\"line\"><span class=\"javascript\">                xhr.onreadystatechange = <span class=\"function\">()=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span>(xhr.status &gt;= <span class=\"number\">200</span> &amp;&amp; xhr.status &lt; <span class=\"number\">300</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        resolve(xhr.response);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        reject(xhr.status);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 使用该封装函数</span></span></span><br><span class=\"line\"><span class=\"javascript\">        sendAJAX(<span class=\"string\">&#x27;https://api.apiopen.top/getJoke&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        .then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;, <span class=\"function\"><span class=\"params\">reason</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(reason);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-抽奖案例\"><a href=\"#2-抽奖案例\" class=\"headerlink\" title=\"2).抽奖案例\"></a>2).抽奖案例</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Promise 抽奖模拟<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>点击抽奖<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 生成从m到n的随机数</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> rand = <span class=\"function\">(<span class=\"params\">m, n</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.ceil(<span class=\"built_in\">Math</span>.random() * (n - m + <span class=\"number\">1</span>)) + m - <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获取元素对象</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;#btn&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        btn.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">const</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">let</span> n = rand(<span class=\"number\">1</span>, <span class=\"number\">100</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">30</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        resolve(n);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        reject(n);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;, <span class=\"number\">500</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 调用then方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">            p.then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                alert(<span class=\"string\">`您中奖了！您的号码是：<span class=\"subst\">$&#123;value&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;, <span class=\"function\"><span class=\"params\">reason</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                alert(<span class=\"string\">`谢谢惠顾！您的号码是：<span class=\"subst\">$&#123;reason&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-解决回调地狱\"><a href=\"#3-解决回调地狱\" class=\"headerlink\" title=\"3). 解决回调地狱\"></a>3). 解决回调地狱</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            resolve(<span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123; </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value); <span class=\"comment\">// 1</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> value * <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123; </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value); <span class=\"comment\">// 2</span></span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123; </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value); <span class=\"comment\">// undefined</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"string\">&#x27;resolve&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value); <span class=\"comment\">// resolve</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"string\">&#x27;reject&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;resolve:&#x27;</span> + value); <span class=\"comment\">//reject:reject</span></span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;reject:&#x27;</span> + err);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-async与await\"><a href=\"#4-async与await\" class=\"headerlink\" title=\"4). async与await\"></a>4). async与await</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">testAwait</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;testAwait&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    resolve();</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;, <span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">helloAsync</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">await</span> testAwait();</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;helloAsync&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        helloAsync();</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// testAwait</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// helloAsync</span></span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://img-blog.csdnimg.cn/7a52cf65d09340d1aa60832bbadf3ffb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-封装AJAX-GET请求\"><a href=\"#1-封装AJAX-GET请求\" class=\"headerlink\" title=\"1). 封装AJAX GET请求\"></a>1). 封装AJAX GET请求</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 封装一个函数sendAJAX发送ajax GET请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sendAJAX</span>(<span class=\"params\">url</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">const</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span></span><br><span class=\"line\"><span class=\"javascript\">                xhr.open(<span class=\"string\">&quot;GET&quot;</span>, url);</span></span><br><span class=\"line\"><span class=\"javascript\">                xhr.send();</span></span><br><span class=\"line\"><span class=\"javascript\">                xhr.onreadystatechange = <span class=\"function\">()=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span>(xhr.status &gt;= <span class=\"number\">200</span> &amp;&amp; xhr.status &lt; <span class=\"number\">300</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        resolve(xhr.response);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        reject(xhr.status);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 使用该封装函数</span></span></span><br><span class=\"line\"><span class=\"javascript\">        sendAJAX(<span class=\"string\">&#x27;https://api.apiopen.top/getJoke&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        .then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;, <span class=\"function\"><span class=\"params\">reason</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(reason);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-抽奖案例\"><a href=\"#2-抽奖案例\" class=\"headerlink\" title=\"2).抽奖案例\"></a>2).抽奖案例</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Promise 抽奖模拟<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>点击抽奖<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 生成从m到n的随机数</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> rand = <span class=\"function\">(<span class=\"params\">m, n</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.ceil(<span class=\"built_in\">Math</span>.random() * (n - m + <span class=\"number\">1</span>)) + m - <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获取元素对象</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;#btn&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        btn.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">const</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">let</span> n = rand(<span class=\"number\">1</span>, <span class=\"number\">100</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">30</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        resolve(n);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        reject(n);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;, <span class=\"number\">500</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 调用then方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">            p.then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                alert(<span class=\"string\">`您中奖了！您的号码是：<span class=\"subst\">$&#123;value&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;, <span class=\"function\"><span class=\"params\">reason</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                alert(<span class=\"string\">`谢谢惠顾！您的号码是：<span class=\"subst\">$&#123;reason&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-解决回调地狱\"><a href=\"#3-解决回调地狱\" class=\"headerlink\" title=\"3). 解决回调地狱\"></a>3). 解决回调地狱</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            resolve(<span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123; </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value); <span class=\"comment\">// 1</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> value * <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123; </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value); <span class=\"comment\">// 2</span></span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123; </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value); <span class=\"comment\">// undefined</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"string\">&#x27;resolve&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(value); <span class=\"comment\">// resolve</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"string\">&#x27;reject&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).then(<span class=\"function\"><span class=\"params\">value</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;resolve:&#x27;</span> + value); <span class=\"comment\">//reject:reject</span></span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;reject:&#x27;</span> + err);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-async与await\"><a href=\"#4-async与await\" class=\"headerlink\" title=\"4). async与await\"></a>4). async与await</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">testAwait</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;testAwait&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    resolve();</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;, <span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">helloAsync</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">await</span> testAwait();</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;helloAsync&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        helloAsync();</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// testAwait</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// helloAsync</span></span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"axios + json-server用法演示","date":"2021-08-17T08:59:31.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/11.jpg","_content":"\njson-server可以在前端模拟服务器返回json格式数据，使用时需要全局安装json-server包\n\n```\nnpm i -g json-server\n```\n使用时需要开启服务，需要在终端找到自己的json文件并且监视：\n\n```\n json-server --watch db.json\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5bb8f803927148ceb25e21e6c4c0e831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n然后就可以开始写代码了：\n\n基础使用：\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js\"></script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <h2 class=\"page-header\">基本使用</h2>\n        <button class=\"btn btn-primary\">发送GET请求</button>\n        <button class=\"btn btn-warning\">发送POST请求</button>\n        <button class=\"btn btn-success\">发送PUT请求</button>\n        <button class=\"btn btn-danger\">发送DELETE请求</button>\n    </div>\n\n    <script>\n        // 获取按钮\n        const btns = document.querySelectorAll('button');\n\n        // GET请求\n        btns[0].onclick = () => {\n            axios({\n                // 请求类型\n                method: 'GET',\n                // URL\n                url: 'http://localhost:3000/posts'\n            }).then(response => {\n                console.log(response);\n            })\n        }\n\n        // POST请求\n        btns[1].onclick = () => {\n            axios({\n                // 请求类型\n                method: 'POST',\n                // URL\n                url: 'http://localhost:3000/comments',\n                // 设置请求体\n                data: {\n                    id: 2,\n                    title: \"这是一个POST请求\",\n                    author: \"eyes\"\n                }\n            }).then(response => {\n                console.log(response);\n            })\n        }\n\n        // PUT请求\n        btns[2].onclick = () => {\n            axios({\n                // 请求类型\n                method: 'PUT',\n                // URL\n                url: 'http://localhost:3000/comments/2',\n                // 设置请求体\n                data: {\n                    id: 2,\n                    title: \"这是一个PUT请求\",\n                    author: \"eyes\"\n                }\n            }).then(response => {\n                console.log(response);\n            })\n        }\n\n        // delete请求\n        btns[3].onclick = () => {\n            axios({\n                // 请求类型\n                method: 'delete',\n                // URL\n                url: 'http://localhost:3000/comments/2',\n            }).then(response => {\n                console.log(response);\n            })\n        }\n    </script>\n</body>\n</html>\n```\n\n\naxios的一些方法：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js\"></script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <h2 class=\"page-header\">其他方法</h2>\n        <button class=\"btn btn-primary\">发送GET请求</button>\n        <button class=\"btn btn-warning\">发送POST请求</button>\n    </div>\n    <script>\n        // 获取按钮\n        const btns = document.querySelectorAll('button');\n\n        // 发送GET请求\n        btns[0].onclick = () => {\n            axios.request({\n                method: 'GET',\n                url: 'http://localhost:3000/comments'\n            }).then(response => {\n                console.log(response);\n            })\n        }\n\n        // 发送POST请求\n        btns[1].onclick = () => {\n            axios.post(\n                'http://localhost:3000/comments',\n                {\n                    \"body\": \"这是一个POST请求\",\n                    \"postId\": 2\n                }\n            ).then(response => {\n                console.log(response);\n            })\n        }\n    </script>\n</body>\n\n</html>\n```\n","source":"_posts/javascript/axios-json.md","raw":"---\ntitle: axios + json-server用法演示\ndate: 2021-08-17 16:59:31\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/11.jpg\ntags: \n  - axios\n  - json-server\ncategories: javascript\n---\n\njson-server可以在前端模拟服务器返回json格式数据，使用时需要全局安装json-server包\n\n```\nnpm i -g json-server\n```\n使用时需要开启服务，需要在终端找到自己的json文件并且监视：\n\n```\n json-server --watch db.json\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5bb8f803927148ceb25e21e6c4c0e831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n然后就可以开始写代码了：\n\n基础使用：\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js\"></script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <h2 class=\"page-header\">基本使用</h2>\n        <button class=\"btn btn-primary\">发送GET请求</button>\n        <button class=\"btn btn-warning\">发送POST请求</button>\n        <button class=\"btn btn-success\">发送PUT请求</button>\n        <button class=\"btn btn-danger\">发送DELETE请求</button>\n    </div>\n\n    <script>\n        // 获取按钮\n        const btns = document.querySelectorAll('button');\n\n        // GET请求\n        btns[0].onclick = () => {\n            axios({\n                // 请求类型\n                method: 'GET',\n                // URL\n                url: 'http://localhost:3000/posts'\n            }).then(response => {\n                console.log(response);\n            })\n        }\n\n        // POST请求\n        btns[1].onclick = () => {\n            axios({\n                // 请求类型\n                method: 'POST',\n                // URL\n                url: 'http://localhost:3000/comments',\n                // 设置请求体\n                data: {\n                    id: 2,\n                    title: \"这是一个POST请求\",\n                    author: \"eyes\"\n                }\n            }).then(response => {\n                console.log(response);\n            })\n        }\n\n        // PUT请求\n        btns[2].onclick = () => {\n            axios({\n                // 请求类型\n                method: 'PUT',\n                // URL\n                url: 'http://localhost:3000/comments/2',\n                // 设置请求体\n                data: {\n                    id: 2,\n                    title: \"这是一个PUT请求\",\n                    author: \"eyes\"\n                }\n            }).then(response => {\n                console.log(response);\n            })\n        }\n\n        // delete请求\n        btns[3].onclick = () => {\n            axios({\n                // 请求类型\n                method: 'delete',\n                // URL\n                url: 'http://localhost:3000/comments/2',\n            }).then(response => {\n                console.log(response);\n            })\n        }\n    </script>\n</body>\n</html>\n```\n\n\naxios的一些方法：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link href=\"https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js\"></script>\n</head>\n\n<body>\n    <div class=\"container\">\n        <h2 class=\"page-header\">其他方法</h2>\n        <button class=\"btn btn-primary\">发送GET请求</button>\n        <button class=\"btn btn-warning\">发送POST请求</button>\n    </div>\n    <script>\n        // 获取按钮\n        const btns = document.querySelectorAll('button');\n\n        // 发送GET请求\n        btns[0].onclick = () => {\n            axios.request({\n                method: 'GET',\n                url: 'http://localhost:3000/comments'\n            }).then(response => {\n                console.log(response);\n            })\n        }\n\n        // 发送POST请求\n        btns[1].onclick = () => {\n            axios.post(\n                'http://localhost:3000/comments',\n                {\n                    \"body\": \"这是一个POST请求\",\n                    \"postId\": 2\n                }\n            ).then(response => {\n                console.log(response);\n            })\n        }\n    </script>\n</body>\n\n</html>\n```\n","slug":"javascript/axios-json","published":1,"updated":"2021-12-04T02:54:58.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b6001basdacltadrcf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>json-server可以在前端模拟服务器返回json格式数据，使用时需要全局安装json-server包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g json-server</span><br></pre></td></tr></table></figure>\n<p>使用时需要开启服务，需要在终端找到自己的json文件并且监视：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json-server --watch db.json</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/5bb8f803927148ceb25e21e6c4c0e831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后就可以开始写代码了：</p>\n<p>基础使用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;page-header&quot;</span>&gt;</span>基本使用<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span>&gt;</span>发送GET请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-warning&quot;</span>&gt;</span>发送POST请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-success&quot;</span>&gt;</span>发送PUT请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-danger&quot;</span>&gt;</span>发送DELETE请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获取按钮</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">&#x27;button&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// GET请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">0</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 请求类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;GET&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// URL</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/posts&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// POST请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">1</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 请求类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// URL</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/comments&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 设置请求体</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">id</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&quot;这是一个POST请求&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">author</span>: <span class=\"string\">&quot;eyes&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// PUT请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">2</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 请求类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;PUT&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// URL</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/comments/2&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 设置请求体</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">id</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&quot;这是一个PUT请求&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">author</span>: <span class=\"string\">&quot;eyes&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// delete请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">3</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 请求类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;delete&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// URL</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/comments/2&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>axios的一些方法：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;page-header&quot;</span>&gt;</span>其他方法<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span>&gt;</span>发送GET请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-warning&quot;</span>&gt;</span>发送POST请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获取按钮</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">&#x27;button&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 发送GET请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">0</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios.request(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;GET&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/comments&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 发送POST请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">1</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios.post(</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&#x27;http://localhost:3000/comments&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">&quot;body&quot;</span>: <span class=\"string\">&quot;这是一个POST请求&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">&quot;postId&quot;</span>: <span class=\"number\">2</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            ).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>json-server可以在前端模拟服务器返回json格式数据，使用时需要全局安装json-server包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g json-server</span><br></pre></td></tr></table></figure>\n<p>使用时需要开启服务，需要在终端找到自己的json文件并且监视：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json-server --watch db.json</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/5bb8f803927148ceb25e21e6c4c0e831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后就可以开始写代码了：</p>\n<p>基础使用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;page-header&quot;</span>&gt;</span>基本使用<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span>&gt;</span>发送GET请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-warning&quot;</span>&gt;</span>发送POST请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-success&quot;</span>&gt;</span>发送PUT请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-danger&quot;</span>&gt;</span>发送DELETE请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获取按钮</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">&#x27;button&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// GET请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">0</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 请求类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;GET&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// URL</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/posts&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// POST请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">1</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 请求类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// URL</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/comments&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 设置请求体</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">id</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&quot;这是一个POST请求&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">author</span>: <span class=\"string\">&quot;eyes&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// PUT请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">2</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 请求类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;PUT&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// URL</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/comments/2&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 设置请求体</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">id</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&quot;这是一个PUT请求&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">author</span>: <span class=\"string\">&quot;eyes&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// delete请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">3</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 请求类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;delete&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// URL</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/comments/2&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>axios的一些方法：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;page-header&quot;</span>&gt;</span>其他方法<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span>&gt;</span>发送GET请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-warning&quot;</span>&gt;</span>发送POST请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获取按钮</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">&#x27;button&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 发送GET请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">0</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios.request(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">method</span>: <span class=\"string\">&#x27;GET&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://localhost:3000/comments&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 发送POST请求</span></span></span><br><span class=\"line\"><span class=\"javascript\">        btns[<span class=\"number\">1</span>].onclick = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            axios.post(</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&#x27;http://localhost:3000/comments&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">&quot;body&quot;</span>: <span class=\"string\">&quot;这是一个POST请求&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">&quot;postId&quot;</span>: <span class=\"number\">2</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            ).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">console</span>.log(response);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Web Stotage——本地储存详解及案例","date":"2021-06-11T03:38:05.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/29.jpg","_content":"\n        本地存储：客户端数据的存储\n        本地储存应用有用户临时登录信息，用户页面配置，当前临时信息等等\n        一些东西用户希望能存起来，以便下次访问继续使用，但服务器没必要浪费空间去存那些数据，就可以使用本地储存\n        本地存储的实现方式：\n            cookie：一般最多储存4kB数据，每个HTTP请求都会被传送回服务器，使用上安全策略浏览器行为跟踪，这方法兼容性好\n            Web Stotage：大约5MB，类似于key-value的储存方式\n            Web SQL Database：使用SQL语句操作，IE和FF不支持\n            Indexed Database：索引数据库，类似NoSQL，很强大，支持索引，事务处理和健壮的查询功能\n            \n        Web Storage\n            会话储存（session storage）\n            本地存储（local storage）\n            会话储存与本地区别：\n                两者不同之处在于localStorage里面存储的数据没有过期时间限制，\n                而存储在sessionStorage里面的数据在页面会话结束时会被清除。\n                页面会话在浏览器打开期间一直保持，并且重新加载或恢复页面仍会保持原来的页面会话。\n                sessionStorage只能在同一个域的同一页面使用。\n            Web Storage和cookie的区别：\n                Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽\n                cookie需要指定作用域，不可以跨域调用。\n                Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。\n                但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生\n            兼容性：\n                浏览器的支持除了IE７及以下不支持外，其他标准浏览器都完全支持(ie及FF需在web服务器里运行)，\n                值得一提的是IE总是办好事，例如IE7、IE6中的UserData其实就是javascript本地存储的解决方案。\n                通过简单的代码封装可以统一到所有的浏览器都支持web storage。\n            操作方法：\n                属性：\n                    Storage.length 只读属性\n                    返回一个整数，表示储存在Storage对象中的数据项数量\n                方法：\n                    Storage.key() ：该方法接受一个数值n作为参数，并返回储存中的第n个键名。\n                    Storage.getItem ：该方法接受一个键名作为参数，返回键名对应的值。\n                    Storage.setItem ：该方法接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新对应的值\n                    Storage.removeItem ：该方法接受一个键名作为参数，并把该键名从存储中删除。\n                    Storage.clear ：该方法会清空存储中的所有键名。\n \n \n操作方法示例：\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 存储数据\n        localStorage.setItem(\"name\", \"张三\");\n        // 获得数据\n        console.log(localStorage.getItem(\"name\"));\n\n        // 数据存储设置\n        localStorage.name2 = \"李四\";\n        localStorage['name3'] = \"王五\"\n        localStorage.num = 123;\n        localStorage.obj = {name: \"麻子\"}; // 对象的话只能存类型，不能存值\n\n        // 获得数据\n        console.log(localStorage.name2);\n        console.log(localStorage[\"name3\"]);\n        console.log(localStorage.num);\n        console.log(typeof localStorage.num); // string 类型，该种键值存储只能存字符串类型\n        console.log(localStorage.obj);\n        console.log(typeof localStorage.obj); //string 类型，理由同上\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/2021061110403649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210611104306402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)比较localStorage和sessionStorage的不同：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        localStorage.setItem('v1','localStorage');\n        sessionStorage.setItem('v1','sessionStorage');\n        console.log(localStorage.getItem('v1'));\n        console.log(sessionStorage.getItem('v1'));\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611110239853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210611110257919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210611110311676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n然后注释掉设置Stotage的语句，再次打开，会发现localStorage仍存在，sessionStorage已经不存在了，因为存储在sessionStorage里面的数据在页面会话结束时会被清除。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // localStorage.setItem('v1','localStorage');\n        // sessionStorage.setItem('v1','sessionStorage');\n        console.log(localStorage.getItem('v1'));\n        console.log(sessionStorage.getItem('v1'));\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611110507436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)利用Web Stotage实现关闭页面后重新打开数据仍在。\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <textarea name=\"\" id=\"mytxt\" cols=\"30\" rows=\"10\"></textarea>\n    <script>\n        var mytxt = document.getElementById('mytxt');\n        mytxt.onkeyup = function(){\n            localStorage.setItem('mytxt',mytxt.value);\n        }\n        if(localStorage.getItem('mytxt')){\n            mytxt.value = localStorage.getItem('mytxt');\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611111653768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)利用Web Stotage实现跨页面更新内容：\n页面一：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <textarea name=\"\" id=\"mytxt\" cols=\"30\" rows=\"10\"></textarea>\n    <script>\n        var mytxt = document.getElementById('mytxt');\n        mytxt.onkeyup = function(){\n            localStorage.setItem('mytxt',mytxt.value);\n        }\n        if(localStorage.getItem('mytxt')){\n            mytxt.value = localStorage.getItem('mytxt');\n        }\n    </script>\n</body>\n</html>\n```\n\n页面二：\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <p id=\"demo\"></p>\n    <script>\n        var demo = document.getElementById('demo');\n        setInterval(function(){\n            demo.innerHTML = localStorage.getItem('mytxt');\n        },500)\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/2021061111345927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","source":"_posts/javascript/webstotage.md","raw":"---\ntitle: Web Stotage——本地储存详解及案例\ndate: 2021-06-11 11:38:05\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/29.jpg\ntags: \n  - Stotage\ncategories: javascript\n---\n\n        本地存储：客户端数据的存储\n        本地储存应用有用户临时登录信息，用户页面配置，当前临时信息等等\n        一些东西用户希望能存起来，以便下次访问继续使用，但服务器没必要浪费空间去存那些数据，就可以使用本地储存\n        本地存储的实现方式：\n            cookie：一般最多储存4kB数据，每个HTTP请求都会被传送回服务器，使用上安全策略浏览器行为跟踪，这方法兼容性好\n            Web Stotage：大约5MB，类似于key-value的储存方式\n            Web SQL Database：使用SQL语句操作，IE和FF不支持\n            Indexed Database：索引数据库，类似NoSQL，很强大，支持索引，事务处理和健壮的查询功能\n            \n        Web Storage\n            会话储存（session storage）\n            本地存储（local storage）\n            会话储存与本地区别：\n                两者不同之处在于localStorage里面存储的数据没有过期时间限制，\n                而存储在sessionStorage里面的数据在页面会话结束时会被清除。\n                页面会话在浏览器打开期间一直保持，并且重新加载或恢复页面仍会保持原来的页面会话。\n                sessionStorage只能在同一个域的同一页面使用。\n            Web Storage和cookie的区别：\n                Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽\n                cookie需要指定作用域，不可以跨域调用。\n                Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。\n                但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生\n            兼容性：\n                浏览器的支持除了IE７及以下不支持外，其他标准浏览器都完全支持(ie及FF需在web服务器里运行)，\n                值得一提的是IE总是办好事，例如IE7、IE6中的UserData其实就是javascript本地存储的解决方案。\n                通过简单的代码封装可以统一到所有的浏览器都支持web storage。\n            操作方法：\n                属性：\n                    Storage.length 只读属性\n                    返回一个整数，表示储存在Storage对象中的数据项数量\n                方法：\n                    Storage.key() ：该方法接受一个数值n作为参数，并返回储存中的第n个键名。\n                    Storage.getItem ：该方法接受一个键名作为参数，返回键名对应的值。\n                    Storage.setItem ：该方法接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新对应的值\n                    Storage.removeItem ：该方法接受一个键名作为参数，并把该键名从存储中删除。\n                    Storage.clear ：该方法会清空存储中的所有键名。\n \n \n操作方法示例：\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // 存储数据\n        localStorage.setItem(\"name\", \"张三\");\n        // 获得数据\n        console.log(localStorage.getItem(\"name\"));\n\n        // 数据存储设置\n        localStorage.name2 = \"李四\";\n        localStorage['name3'] = \"王五\"\n        localStorage.num = 123;\n        localStorage.obj = {name: \"麻子\"}; // 对象的话只能存类型，不能存值\n\n        // 获得数据\n        console.log(localStorage.name2);\n        console.log(localStorage[\"name3\"]);\n        console.log(localStorage.num);\n        console.log(typeof localStorage.num); // string 类型，该种键值存储只能存字符串类型\n        console.log(localStorage.obj);\n        console.log(typeof localStorage.obj); //string 类型，理由同上\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/2021061110403649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210611104306402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)比较localStorage和sessionStorage的不同：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        localStorage.setItem('v1','localStorage');\n        sessionStorage.setItem('v1','sessionStorage');\n        console.log(localStorage.getItem('v1'));\n        console.log(sessionStorage.getItem('v1'));\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611110239853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210611110257919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/20210611110311676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n然后注释掉设置Stotage的语句，再次打开，会发现localStorage仍存在，sessionStorage已经不存在了，因为存储在sessionStorage里面的数据在页面会话结束时会被清除。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        // localStorage.setItem('v1','localStorage');\n        // sessionStorage.setItem('v1','sessionStorage');\n        console.log(localStorage.getItem('v1'));\n        console.log(sessionStorage.getItem('v1'));\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611110507436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)利用Web Stotage实现关闭页面后重新打开数据仍在。\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <textarea name=\"\" id=\"mytxt\" cols=\"30\" rows=\"10\"></textarea>\n    <script>\n        var mytxt = document.getElementById('mytxt');\n        mytxt.onkeyup = function(){\n            localStorage.setItem('mytxt',mytxt.value);\n        }\n        if(localStorage.getItem('mytxt')){\n            mytxt.value = localStorage.getItem('mytxt');\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611111653768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)利用Web Stotage实现跨页面更新内容：\n页面一：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <textarea name=\"\" id=\"mytxt\" cols=\"30\" rows=\"10\"></textarea>\n    <script>\n        var mytxt = document.getElementById('mytxt');\n        mytxt.onkeyup = function(){\n            localStorage.setItem('mytxt',mytxt.value);\n        }\n        if(localStorage.getItem('mytxt')){\n            mytxt.value = localStorage.getItem('mytxt');\n        }\n    </script>\n</body>\n</html>\n```\n\n页面二：\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <p id=\"demo\"></p>\n    <script>\n        var demo = document.getElementById('demo');\n        setInterval(function(){\n            demo.innerHTML = localStorage.getItem('mytxt');\n        },500)\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/2021061111345927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","slug":"javascript/webstotage","published":1,"updated":"2021-12-03T14:58:06.196Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b7001fasda9wwjf2ex","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><pre><code>    本地存储：客户端数据的存储\n    本地储存应用有用户临时登录信息，用户页面配置，当前临时信息等等\n    一些东西用户希望能存起来，以便下次访问继续使用，但服务器没必要浪费空间去存那些数据，就可以使用本地储存\n    本地存储的实现方式：\n        cookie：一般最多储存4kB数据，每个HTTP请求都会被传送回服务器，使用上安全策略浏览器行为跟踪，这方法兼容性好\n        Web Stotage：大约5MB，类似于key-value的储存方式\n        Web SQL Database：使用SQL语句操作，IE和FF不支持\n        Indexed Database：索引数据库，类似NoSQL，很强大，支持索引，事务处理和健壮的查询功能\n        \n    Web Storage\n        会话储存（session storage）\n        本地存储（local storage）\n        会话储存与本地区别：\n            两者不同之处在于localStorage里面存储的数据没有过期时间限制，\n            而存储在sessionStorage里面的数据在页面会话结束时会被清除。\n            页面会话在浏览器打开期间一直保持，并且重新加载或恢复页面仍会保持原来的页面会话。\n            sessionStorage只能在同一个域的同一页面使用。\n        Web Storage和cookie的区别：\n            Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽\n            cookie需要指定作用域，不可以跨域调用。\n            Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。\n            但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生\n        兼容性：\n            浏览器的支持除了IE７及以下不支持外，其他标准浏览器都完全支持(ie及FF需在web服务器里运行)，\n            值得一提的是IE总是办好事，例如IE7、IE6中的UserData其实就是javascript本地存储的解决方案。\n            通过简单的代码封装可以统一到所有的浏览器都支持web storage。\n        操作方法：\n            属性：\n                Storage.length 只读属性\n                返回一个整数，表示储存在Storage对象中的数据项数量\n            方法：\n                Storage.key() ：该方法接受一个数值n作为参数，并返回储存中的第n个键名。\n                Storage.getItem ：该方法接受一个键名作为参数，返回键名对应的值。\n                Storage.setItem ：该方法接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新对应的值\n                Storage.removeItem ：该方法接受一个键名作为参数，并把该键名从存储中删除。\n                Storage.clear ：该方法会清空存储中的所有键名。\n</code></pre>\n<p>操作方法示例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 存储数据</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;张三&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获得数据</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&quot;name&quot;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 数据存储设置</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.name2 = <span class=\"string\">&quot;李四&quot;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>[<span class=\"string\">&#x27;name3&#x27;</span>] = <span class=\"string\">&quot;王五&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.num = <span class=\"number\">123</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.obj = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;麻子&quot;</span>&#125;; <span class=\"comment\">// 对象的话只能存类型，不能存值</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获得数据</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.name2);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>[<span class=\"string\">&quot;name3&quot;</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.num);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"built_in\">localStorage</span>.num); <span class=\"comment\">// string 类型，该种键值存储只能存字符串类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.obj);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"built_in\">localStorage</span>.obj); <span class=\"comment\">//string 类型，理由同上</span></span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2021061110403649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/20210611104306402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">比较localStorage和sessionStorage的不同：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&#x27;v1&#x27;</span>,<span class=\"string\">&#x27;localStorage&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        sessionStorage.setItem(<span class=\"string\">&#x27;v1&#x27;</span>,<span class=\"string\">&#x27;sessionStorage&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;v1&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(sessionStorage.getItem(<span class=\"string\">&#x27;v1&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611110239853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/20210611110257919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/20210611110311676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>然后注释掉设置Stotage的语句，再次打开，会发现localStorage仍存在，sessionStorage已经不存在了，因为存储在sessionStorage里面的数据在页面会话结束时会被清除。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// localStorage.setItem(&#x27;v1&#x27;,&#x27;localStorage&#x27;);</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// sessionStorage.setItem(&#x27;v1&#x27;,&#x27;sessionStorage&#x27;);</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;v1&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(sessionStorage.getItem(<span class=\"string\">&#x27;v1&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611110507436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">利用Web Stotage实现关闭页面后重新打开数据仍在。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;textarea name=&quot;&quot; id=&quot;mytxt&quot; cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        var mytxt = document.getElementById(&#x27;mytxt&#x27;);</span><br><span class=\"line\">        mytxt.onkeyup = function()&#123;</span><br><span class=\"line\">            localStorage.setItem(&#x27;mytxt&#x27;,mytxt.value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(localStorage.getItem(&#x27;mytxt&#x27;))&#123;</span><br><span class=\"line\">            mytxt.value = localStorage.getItem(&#x27;mytxt&#x27;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611111653768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">利用Web Stotage实现跨页面更新内容：<br>页面一：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mytxt&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> mytxt = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;mytxt&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        mytxt.onkeyup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&#x27;mytxt&#x27;</span>,mytxt.value);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;mytxt&#x27;</span>))&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            mytxt.value = <span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;mytxt&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>页面二：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> demo = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;demo&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">setInterval</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            demo.innerHTML = <span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;mytxt&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;,<span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2021061111345927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>    本地存储：客户端数据的存储\n    本地储存应用有用户临时登录信息，用户页面配置，当前临时信息等等\n    一些东西用户希望能存起来，以便下次访问继续使用，但服务器没必要浪费空间去存那些数据，就可以使用本地储存\n    本地存储的实现方式：\n        cookie：一般最多储存4kB数据，每个HTTP请求都会被传送回服务器，使用上安全策略浏览器行为跟踪，这方法兼容性好\n        Web Stotage：大约5MB，类似于key-value的储存方式\n        Web SQL Database：使用SQL语句操作，IE和FF不支持\n        Indexed Database：索引数据库，类似NoSQL，很强大，支持索引，事务处理和健壮的查询功能\n        \n    Web Storage\n        会话储存（session storage）\n        本地存储（local storage）\n        会话储存与本地区别：\n            两者不同之处在于localStorage里面存储的数据没有过期时间限制，\n            而存储在sessionStorage里面的数据在页面会话结束时会被清除。\n            页面会话在浏览器打开期间一直保持，并且重新加载或恢复页面仍会保持原来的页面会话。\n            sessionStorage只能在同一个域的同一页面使用。\n        Web Storage和cookie的区别：\n            Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽\n            cookie需要指定作用域，不可以跨域调用。\n            Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。\n            但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生\n        兼容性：\n            浏览器的支持除了IE７及以下不支持外，其他标准浏览器都完全支持(ie及FF需在web服务器里运行)，\n            值得一提的是IE总是办好事，例如IE7、IE6中的UserData其实就是javascript本地存储的解决方案。\n            通过简单的代码封装可以统一到所有的浏览器都支持web storage。\n        操作方法：\n            属性：\n                Storage.length 只读属性\n                返回一个整数，表示储存在Storage对象中的数据项数量\n            方法：\n                Storage.key() ：该方法接受一个数值n作为参数，并返回储存中的第n个键名。\n                Storage.getItem ：该方法接受一个键名作为参数，返回键名对应的值。\n                Storage.setItem ：该方法接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新对应的值\n                Storage.removeItem ：该方法接受一个键名作为参数，并把该键名从存储中删除。\n                Storage.clear ：该方法会清空存储中的所有键名。\n</code></pre>\n<p>操作方法示例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 存储数据</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;张三&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获得数据</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&quot;name&quot;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 数据存储设置</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.name2 = <span class=\"string\">&quot;李四&quot;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>[<span class=\"string\">&#x27;name3&#x27;</span>] = <span class=\"string\">&quot;王五&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.num = <span class=\"number\">123</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.obj = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&quot;麻子&quot;</span>&#125;; <span class=\"comment\">// 对象的话只能存类型，不能存值</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 获得数据</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.name2);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>[<span class=\"string\">&quot;name3&quot;</span>]);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.num);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"built_in\">localStorage</span>.num); <span class=\"comment\">// string 类型，该种键值存储只能存字符串类型</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.obj);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"built_in\">localStorage</span>.obj); <span class=\"comment\">//string 类型，理由同上</span></span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2021061110403649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/20210611104306402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">比较localStorage和sessionStorage的不同：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&#x27;v1&#x27;</span>,<span class=\"string\">&#x27;localStorage&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        sessionStorage.setItem(<span class=\"string\">&#x27;v1&#x27;</span>,<span class=\"string\">&#x27;sessionStorage&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;v1&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(sessionStorage.getItem(<span class=\"string\">&#x27;v1&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611110239853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/20210611110257919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/20210611110311676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>然后注释掉设置Stotage的语句，再次打开，会发现localStorage仍存在，sessionStorage已经不存在了，因为存储在sessionStorage里面的数据在页面会话结束时会被清除。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// localStorage.setItem(&#x27;v1&#x27;,&#x27;localStorage&#x27;);</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// sessionStorage.setItem(&#x27;v1&#x27;,&#x27;sessionStorage&#x27;);</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;v1&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(sessionStorage.getItem(<span class=\"string\">&#x27;v1&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611110507436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">利用Web Stotage实现关闭页面后重新打开数据仍在。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;textarea name=&quot;&quot; id=&quot;mytxt&quot; cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        var mytxt = document.getElementById(&#x27;mytxt&#x27;);</span><br><span class=\"line\">        mytxt.onkeyup = function()&#123;</span><br><span class=\"line\">            localStorage.setItem(&#x27;mytxt&#x27;,mytxt.value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(localStorage.getItem(&#x27;mytxt&#x27;))&#123;</span><br><span class=\"line\">            mytxt.value = localStorage.getItem(&#x27;mytxt&#x27;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611111653768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">利用Web Stotage实现跨页面更新内容：<br>页面一：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mytxt&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> mytxt = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;mytxt&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        mytxt.onkeyup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&#x27;mytxt&#x27;</span>,mytxt.value);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;mytxt&#x27;</span>))&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            mytxt.value = <span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;mytxt&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>页面二：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> demo = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;demo&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">setInterval</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            demo.innerHTML = <span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;mytxt&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;,<span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2021061111345927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n"},{"title":"地理位置服务——navigator.geolocation","date":"2021-06-11T12:44:59.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/37.jpg","_content":"        使用navigator.geolocation对象来获取位置信息，geolocation对象包含一系列相关位置操作方法\n        需要选择IE9及以上的浏览器\n        一般流程：\n            1.用户从浏览器打开位置感应应用程序\n            2.程序执行，geolocation对象获取位置信息，此时浏览器要求用户授权同意才可以获得信息\n            3.浏览器内部通过数据源获取信息\n            4.浏览器将获取的信息发送给受信任的外部定位服务，返回位置信息到geolocation应用程序\n        操作方法：\n            navigator.geolocation包含三个方法：\n            获取当前地址信息（请求一次）\n            getCurrentPosition(successCallback, errorCallback, positionOptions)\n            监视当前地理位置（请求多次）\n            watchPosition(successCallback, errorCallback, positionOptions)\n            清除监视功能\n            clearWatch(watchId)\n        \n        getCurrentPosition(successCallback, errorCallback, positionOptions)\n            successCallback 回调函数接受一个参数：位置对象。这个对象包含坐标(coords属性)和一个获取位置数据时的时间戳\n                coords属性：\n                    coords.latitude  十进制数的纬度\n                    coords.longitude  十进制数的经度\n                    coords.accuracy  所提供的以米为单位的经度和纬度估计的精确度\n                    coords.altitude  海拔，海平面以上以米计\n                    coords.altitudeAccuracy  所提供的以米为单位的高度估计的精确度\n                    coords.heading  宿主设备当前移动的角度方向，相对于正北方向顺时针计算\n                    coords.speed  以米每秒为单位的设备的当前对地速度\n                timestamp  响应的日期/时间\n            errorCallback 接受错误对象作为参数，包含code属性、message信息\n                code属性：\n                    1. 当属性值为1时，用户不允许地理定位（拒绝授权），“Permission denied”。\n                    2. 当属性值为2时，无法获取当前位置，“Position unavailable”。\n                    3. 当属性值为3时，操作超时，“Timeout”\n                message属性：属性值是一个字符串，包含了错误信息，这个错误信息在我们开发和调试时非常有用\n            positionOptions 是一个可选属性的列表，说明如下：\n                enableHighAccuracy : 启用高精确度模式，这个参数通知浏览器启用HTML5\n                Geolocation : 服务的高精确度模式，默认值为false\n                timeout ： 超时限制（单位为毫秒）。如果在该时间内为获取到地理位置信息，则返回错误\n                maximumAge ： 表示浏览器重新计算位置的时间间隔，单位为ms，默认值为零，这意味着浏览器每次请求都必须重新计算位置\n        watchPosition(successCallback, errorCallback, positionOptions)\n            使用该方法可以定期获取用户地理位置信息，该方法与getCurrentPosition方法类似，这里调用会返回一个数字，\n            该数字与setInterval方法的返回值用法类似，可以被clearWatch方法使用，以停止对当前地理位置信息的监视。\n        clearWatch(watchId)\n            如果应用程序不需要再接受watchPosition的持续位置更新，则只需要调用clearWatch()函数,watchId是watchPosition函数的返回值\n        \n\n\n   代码实现：\n        1. 判断浏览器是否支持Geolocation API\n        2. 调用navigator.geolocation下的方法获取位置信息\n        3. 对成功或失败设置回调函数\n        4. 设置回调函数的输出信息\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <p id=\"demo\">点击按钮获取您当前坐标：</p>\n    <button onclick=\"getLocation()\">按钮</button>\n    <script>\n        var x = document.getElementById(\"demo\");\n\n        function getLocation() {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(showPosition, showError);\n            } else {\n                x.innerHTML = \"该浏览器不支持获取地理位置。\";\n            }\n        }\n\n        function showPosition(position) {\n            x.innerHTML = \"纬度: \" + position.coords.latitude +\n                \"<br>经度: \" + position.coords.longitude +\n                \"<br>位置精度: \" + position.coords.accuracy +\n                \"<br>海拔: \" + position.coords.altitude +\n                \"<br>位置的海拔精度: \" + position.coords.altitudeAccuracy +\n                \"<br>方向: \" + position.coords.heading +\n                \"<br>速度: \" + position.coords.speed;\n        }\n\n        function showError(error) {\n            switch (error.code) {\n                case error.PERMISSION_DENIED:\n                    x.innerHTML = \"用户拒绝对获取地理位置的请求。\"\n                    break;\n                case error.POSITION_UNAVAILABLE:\n                    x.innerHTML = \"位置信息是不可用的。\"\n                    break;\n                case error.TIMEOUT:\n                    x.innerHTML = \"请求用户地理位置超时。\"\n                    break;\n                case error.UNKNOWN_ERROR:\n                    x.innerHTML = \"未知错误。\"\n                    break;\n            }\n        }\n    </script>\n</body>\n\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611204317932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)有兴趣的话还可以看看我的另一篇博客：[地理位置服务——百度地图API](https://blog.csdn.net/tongkongyu/article/details/117826807)\n","source":"_posts/javascript/地理位置服务.md","raw":"---\ntitle: 地理位置服务——navigator.geolocation\ndate: 2021-06-11 20:44:59\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/37.jpg\ntags: \n  - geolocation\n  - 位置\ncategories: javascript\n---\n        使用navigator.geolocation对象来获取位置信息，geolocation对象包含一系列相关位置操作方法\n        需要选择IE9及以上的浏览器\n        一般流程：\n            1.用户从浏览器打开位置感应应用程序\n            2.程序执行，geolocation对象获取位置信息，此时浏览器要求用户授权同意才可以获得信息\n            3.浏览器内部通过数据源获取信息\n            4.浏览器将获取的信息发送给受信任的外部定位服务，返回位置信息到geolocation应用程序\n        操作方法：\n            navigator.geolocation包含三个方法：\n            获取当前地址信息（请求一次）\n            getCurrentPosition(successCallback, errorCallback, positionOptions)\n            监视当前地理位置（请求多次）\n            watchPosition(successCallback, errorCallback, positionOptions)\n            清除监视功能\n            clearWatch(watchId)\n        \n        getCurrentPosition(successCallback, errorCallback, positionOptions)\n            successCallback 回调函数接受一个参数：位置对象。这个对象包含坐标(coords属性)和一个获取位置数据时的时间戳\n                coords属性：\n                    coords.latitude  十进制数的纬度\n                    coords.longitude  十进制数的经度\n                    coords.accuracy  所提供的以米为单位的经度和纬度估计的精确度\n                    coords.altitude  海拔，海平面以上以米计\n                    coords.altitudeAccuracy  所提供的以米为单位的高度估计的精确度\n                    coords.heading  宿主设备当前移动的角度方向，相对于正北方向顺时针计算\n                    coords.speed  以米每秒为单位的设备的当前对地速度\n                timestamp  响应的日期/时间\n            errorCallback 接受错误对象作为参数，包含code属性、message信息\n                code属性：\n                    1. 当属性值为1时，用户不允许地理定位（拒绝授权），“Permission denied”。\n                    2. 当属性值为2时，无法获取当前位置，“Position unavailable”。\n                    3. 当属性值为3时，操作超时，“Timeout”\n                message属性：属性值是一个字符串，包含了错误信息，这个错误信息在我们开发和调试时非常有用\n            positionOptions 是一个可选属性的列表，说明如下：\n                enableHighAccuracy : 启用高精确度模式，这个参数通知浏览器启用HTML5\n                Geolocation : 服务的高精确度模式，默认值为false\n                timeout ： 超时限制（单位为毫秒）。如果在该时间内为获取到地理位置信息，则返回错误\n                maximumAge ： 表示浏览器重新计算位置的时间间隔，单位为ms，默认值为零，这意味着浏览器每次请求都必须重新计算位置\n        watchPosition(successCallback, errorCallback, positionOptions)\n            使用该方法可以定期获取用户地理位置信息，该方法与getCurrentPosition方法类似，这里调用会返回一个数字，\n            该数字与setInterval方法的返回值用法类似，可以被clearWatch方法使用，以停止对当前地理位置信息的监视。\n        clearWatch(watchId)\n            如果应用程序不需要再接受watchPosition的持续位置更新，则只需要调用clearWatch()函数,watchId是watchPosition函数的返回值\n        \n\n\n   代码实现：\n        1. 判断浏览器是否支持Geolocation API\n        2. 调用navigator.geolocation下的方法获取位置信息\n        3. 对成功或失败设置回调函数\n        4. 设置回调函数的输出信息\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n\n<body>\n    <p id=\"demo\">点击按钮获取您当前坐标：</p>\n    <button onclick=\"getLocation()\">按钮</button>\n    <script>\n        var x = document.getElementById(\"demo\");\n\n        function getLocation() {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(showPosition, showError);\n            } else {\n                x.innerHTML = \"该浏览器不支持获取地理位置。\";\n            }\n        }\n\n        function showPosition(position) {\n            x.innerHTML = \"纬度: \" + position.coords.latitude +\n                \"<br>经度: \" + position.coords.longitude +\n                \"<br>位置精度: \" + position.coords.accuracy +\n                \"<br>海拔: \" + position.coords.altitude +\n                \"<br>位置的海拔精度: \" + position.coords.altitudeAccuracy +\n                \"<br>方向: \" + position.coords.heading +\n                \"<br>速度: \" + position.coords.speed;\n        }\n\n        function showError(error) {\n            switch (error.code) {\n                case error.PERMISSION_DENIED:\n                    x.innerHTML = \"用户拒绝对获取地理位置的请求。\"\n                    break;\n                case error.POSITION_UNAVAILABLE:\n                    x.innerHTML = \"位置信息是不可用的。\"\n                    break;\n                case error.TIMEOUT:\n                    x.innerHTML = \"请求用户地理位置超时。\"\n                    break;\n                case error.UNKNOWN_ERROR:\n                    x.innerHTML = \"未知错误。\"\n                    break;\n            }\n        }\n    </script>\n</body>\n\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210611204317932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)有兴趣的话还可以看看我的另一篇博客：[地理位置服务——百度地图API](https://blog.csdn.net/tongkongyu/article/details/117826807)\n","slug":"javascript/地理位置服务","published":1,"updated":"2021-12-03T14:57:23.048Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b8001iasda22sx4o03","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><pre><code>    使用navigator.geolocation对象来获取位置信息，geolocation对象包含一系列相关位置操作方法\n    需要选择IE9及以上的浏览器\n    一般流程：\n        1.用户从浏览器打开位置感应应用程序\n        2.程序执行，geolocation对象获取位置信息，此时浏览器要求用户授权同意才可以获得信息\n        3.浏览器内部通过数据源获取信息\n        4.浏览器将获取的信息发送给受信任的外部定位服务，返回位置信息到geolocation应用程序\n    操作方法：\n        navigator.geolocation包含三个方法：\n        获取当前地址信息（请求一次）\n        getCurrentPosition(successCallback, errorCallback, positionOptions)\n        监视当前地理位置（请求多次）\n        watchPosition(successCallback, errorCallback, positionOptions)\n        清除监视功能\n        clearWatch(watchId)\n    \n    getCurrentPosition(successCallback, errorCallback, positionOptions)\n        successCallback 回调函数接受一个参数：位置对象。这个对象包含坐标(coords属性)和一个获取位置数据时的时间戳\n            coords属性：\n                coords.latitude  十进制数的纬度\n                coords.longitude  十进制数的经度\n                coords.accuracy  所提供的以米为单位的经度和纬度估计的精确度\n                coords.altitude  海拔，海平面以上以米计\n                coords.altitudeAccuracy  所提供的以米为单位的高度估计的精确度\n                coords.heading  宿主设备当前移动的角度方向，相对于正北方向顺时针计算\n                coords.speed  以米每秒为单位的设备的当前对地速度\n            timestamp  响应的日期/时间\n        errorCallback 接受错误对象作为参数，包含code属性、message信息\n            code属性：\n                1. 当属性值为1时，用户不允许地理定位（拒绝授权），“Permission denied”。\n                2. 当属性值为2时，无法获取当前位置，“Position unavailable”。\n                3. 当属性值为3时，操作超时，“Timeout”\n            message属性：属性值是一个字符串，包含了错误信息，这个错误信息在我们开发和调试时非常有用\n        positionOptions 是一个可选属性的列表，说明如下：\n            enableHighAccuracy : 启用高精确度模式，这个参数通知浏览器启用HTML5\n            Geolocation : 服务的高精确度模式，默认值为false\n            timeout ： 超时限制（单位为毫秒）。如果在该时间内为获取到地理位置信息，则返回错误\n            maximumAge ： 表示浏览器重新计算位置的时间间隔，单位为ms，默认值为零，这意味着浏览器每次请求都必须重新计算位置\n    watchPosition(successCallback, errorCallback, positionOptions)\n        使用该方法可以定期获取用户地理位置信息，该方法与getCurrentPosition方法类似，这里调用会返回一个数字，\n        该数字与setInterval方法的返回值用法类似，可以被clearWatch方法使用，以停止对当前地理位置信息的监视。\n    clearWatch(watchId)\n        如果应用程序不需要再接受watchPosition的持续位置更新，则只需要调用clearWatch()函数,watchId是watchPosition函数的返回值\n    \n</code></pre>\n<p>   代码实现：<br>        1. 判断浏览器是否支持Geolocation API<br>        2. 调用navigator.geolocation下的方法获取位置信息<br>        3. 对成功或失败设置回调函数<br>        4. 设置回调函数的输出信息</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo&quot;</span>&gt;</span>点击按钮获取您当前坐标：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;getLocation()&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> x = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;demo&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getLocation</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (navigator.geolocation) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                navigator.geolocation.getCurrentPosition(showPosition, showError);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                x.innerHTML = <span class=\"string\">&quot;该浏览器不支持获取地理位置。&quot;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showPosition</span>(<span class=\"params\">position</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            x.innerHTML = <span class=\"string\">&quot;纬度: &quot;</span> + position.coords.latitude +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;经度: &quot;</span> + position.coords.longitude +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;位置精度: &quot;</span> + position.coords.accuracy +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;海拔: &quot;</span> + position.coords.altitude +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;位置的海拔精度: &quot;</span> + position.coords.altitudeAccuracy +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;方向: &quot;</span> + position.coords.heading +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;速度: &quot;</span> + position.coords.speed;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showError</span>(<span class=\"params\">error</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">switch</span> (error.code) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">case</span> error.PERMISSION_DENIED:</span></span><br><span class=\"line\"><span class=\"javascript\">                    x.innerHTML = <span class=\"string\">&quot;用户拒绝对获取地理位置的请求。&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">case</span> error.POSITION_UNAVAILABLE:</span></span><br><span class=\"line\"><span class=\"javascript\">                    x.innerHTML = <span class=\"string\">&quot;位置信息是不可用的。&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">case</span> error.TIMEOUT:</span></span><br><span class=\"line\"><span class=\"javascript\">                    x.innerHTML = <span class=\"string\">&quot;请求用户地理位置超时。&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">case</span> error.UNKNOWN_ERROR:</span></span><br><span class=\"line\"><span class=\"javascript\">                    x.innerHTML = <span class=\"string\">&quot;未知错误。&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611204317932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">有兴趣的话还可以看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117826807\">地理位置服务——百度地图API</a></p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>    使用navigator.geolocation对象来获取位置信息，geolocation对象包含一系列相关位置操作方法\n    需要选择IE9及以上的浏览器\n    一般流程：\n        1.用户从浏览器打开位置感应应用程序\n        2.程序执行，geolocation对象获取位置信息，此时浏览器要求用户授权同意才可以获得信息\n        3.浏览器内部通过数据源获取信息\n        4.浏览器将获取的信息发送给受信任的外部定位服务，返回位置信息到geolocation应用程序\n    操作方法：\n        navigator.geolocation包含三个方法：\n        获取当前地址信息（请求一次）\n        getCurrentPosition(successCallback, errorCallback, positionOptions)\n        监视当前地理位置（请求多次）\n        watchPosition(successCallback, errorCallback, positionOptions)\n        清除监视功能\n        clearWatch(watchId)\n    \n    getCurrentPosition(successCallback, errorCallback, positionOptions)\n        successCallback 回调函数接受一个参数：位置对象。这个对象包含坐标(coords属性)和一个获取位置数据时的时间戳\n            coords属性：\n                coords.latitude  十进制数的纬度\n                coords.longitude  十进制数的经度\n                coords.accuracy  所提供的以米为单位的经度和纬度估计的精确度\n                coords.altitude  海拔，海平面以上以米计\n                coords.altitudeAccuracy  所提供的以米为单位的高度估计的精确度\n                coords.heading  宿主设备当前移动的角度方向，相对于正北方向顺时针计算\n                coords.speed  以米每秒为单位的设备的当前对地速度\n            timestamp  响应的日期/时间\n        errorCallback 接受错误对象作为参数，包含code属性、message信息\n            code属性：\n                1. 当属性值为1时，用户不允许地理定位（拒绝授权），“Permission denied”。\n                2. 当属性值为2时，无法获取当前位置，“Position unavailable”。\n                3. 当属性值为3时，操作超时，“Timeout”\n            message属性：属性值是一个字符串，包含了错误信息，这个错误信息在我们开发和调试时非常有用\n        positionOptions 是一个可选属性的列表，说明如下：\n            enableHighAccuracy : 启用高精确度模式，这个参数通知浏览器启用HTML5\n            Geolocation : 服务的高精确度模式，默认值为false\n            timeout ： 超时限制（单位为毫秒）。如果在该时间内为获取到地理位置信息，则返回错误\n            maximumAge ： 表示浏览器重新计算位置的时间间隔，单位为ms，默认值为零，这意味着浏览器每次请求都必须重新计算位置\n    watchPosition(successCallback, errorCallback, positionOptions)\n        使用该方法可以定期获取用户地理位置信息，该方法与getCurrentPosition方法类似，这里调用会返回一个数字，\n        该数字与setInterval方法的返回值用法类似，可以被clearWatch方法使用，以停止对当前地理位置信息的监视。\n    clearWatch(watchId)\n        如果应用程序不需要再接受watchPosition的持续位置更新，则只需要调用clearWatch()函数,watchId是watchPosition函数的返回值\n    \n</code></pre>\n<p>   代码实现：<br>        1. 判断浏览器是否支持Geolocation API<br>        2. 调用navigator.geolocation下的方法获取位置信息<br>        3. 对成功或失败设置回调函数<br>        4. 设置回调函数的输出信息</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;demo&quot;</span>&gt;</span>点击按钮获取您当前坐标：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;getLocation()&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> x = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;demo&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getLocation</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (navigator.geolocation) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                navigator.geolocation.getCurrentPosition(showPosition, showError);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                x.innerHTML = <span class=\"string\">&quot;该浏览器不支持获取地理位置。&quot;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showPosition</span>(<span class=\"params\">position</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            x.innerHTML = <span class=\"string\">&quot;纬度: &quot;</span> + position.coords.latitude +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;经度: &quot;</span> + position.coords.longitude +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;位置精度: &quot;</span> + position.coords.accuracy +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;海拔: &quot;</span> + position.coords.altitude +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;位置的海拔精度: &quot;</span> + position.coords.altitudeAccuracy +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;方向: &quot;</span> + position.coords.heading +</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&quot;&lt;br&gt;速度: &quot;</span> + position.coords.speed;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showError</span>(<span class=\"params\">error</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">switch</span> (error.code) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">case</span> error.PERMISSION_DENIED:</span></span><br><span class=\"line\"><span class=\"javascript\">                    x.innerHTML = <span class=\"string\">&quot;用户拒绝对获取地理位置的请求。&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">case</span> error.POSITION_UNAVAILABLE:</span></span><br><span class=\"line\"><span class=\"javascript\">                    x.innerHTML = <span class=\"string\">&quot;位置信息是不可用的。&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">case</span> error.TIMEOUT:</span></span><br><span class=\"line\"><span class=\"javascript\">                    x.innerHTML = <span class=\"string\">&quot;请求用户地理位置超时。&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">case</span> error.UNKNOWN_ERROR:</span></span><br><span class=\"line\"><span class=\"javascript\">                    x.innerHTML = <span class=\"string\">&quot;未知错误。&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">break</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210611204317932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">有兴趣的话还可以看看我的另一篇博客：<a href=\"https://blog.csdn.net/tongkongyu/article/details/117826807\">地理位置服务——百度地图API</a></p>\n"},{"title":"js拖放事件详解及实战","date":"2021-06-12T03:37:01.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/26.jpg","_content":"\n## 一：基础知识  \n\n        传统的拖放式根据鼠标按下松开事件完成的\n        HTML5对于拖放只需要在元素上面设置draggable=\"true\"属性,移动端不支持\n        <div draggable=\"true\"></div>\n        拖放事件：\n            dragstart  当一个元素开始被拖拽的时候触发\n            drag  这个事件在拖拽源触发\n            dragend  拖拽源在拖拽操作结束将得到dragend事件对象，不管操作成功与否\n            dragenter  当拖拽中的鼠标第一次进入一个元素时触发\n            dragover  当拖拽中的鼠标移动经过一个元素时触发\n            dragleave  当拖拽中的鼠标离开元素时触发\n            drop  这个事件在拖拽操作结束释放时于释放元素上触发\n        注：在拖拽的时候只会触发拖拽的相关事件，鼠标事件，例如mousemove是不会触发的。\n以下是基础代码演示：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        #mydiv{\n            width: 150px;\n            height: 150px;\n            background-color: rgba(100, 50, 50, 0.3);\n        }\n        #container{\n            width: 400px;\n            height: 400px;\n            background-color: aqua;\n            opacity: 0.3;\n            margin: 50px auto;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"mydiv\" draggable=\"true\"></div>\n    <div id=\"container\"></div>\n    <script>\n        var mydiv = document.getElementById(\"mydiv\");\n\n        // 拖事件  开始\n        mydiv.ondragstart = function(){\n            console.log('开始拖');\n        }\n\n        // 拖事件  正在  一直触发\n        mydiv.ondrag = function(){\n            console.log('正在拖');\n        }\n\n        // 拖事件  结束\n        mydiv.ondragend = function(){\n            console.log('结束拖');\n        }\n\n        // 放元素\n        var container = document.getElementById('container');\n\n        // 放事件 进入了\n        container.ondragenter = function(){\n            console.log('放入了');\n        }\n\n        // 放事件 放在上面  持续触发\n        container.ondragover = function(e){\n            console.log('放上了');\n            // 阻止默认事件，以便触发ondrop事件\n            e.preventDefault();\n        }\n\n        // 放事件 离开了\n        container.ondragleave = function(){\n            console.log('离开了');\n        }\n\n        // 放事件 放开了\n        container.ondrop = function(){\n            console.log('放开了');\n        }\n    </script>\n</body>\n</html>\n```\n不入框，则只触发拖事件\n![展示](https://img-blog.csdnimg.cn/20210612101910304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n注释掉拖事件的代码后，拖动灰框进入蓝框：\n![展示](https://img-blog.csdnimg.cn/20210612102013602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 二：拖动分类案例：\n\n```\n一般在一个元素开始被拖拽的时候，触发dragstart时候设置与这次拖拽相关的信息，例如拖动的数据和图像\n        所有的拖拽事件都有一个属性————dataTransfer，它包含着拖拽数据\n        dataTransfer 的api文档：https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\n        dataTransfer基础语法：\n            dataTransfer的常用方法：\n                data：保存在拖拽元素中的数据\n                setData(format,data):设置拖拽元素的信息\n                setDragImage(element, x, y): 使用存在的图像元素作为拖动图像\n                format：和setData里的format遥相呼应，才能取到相应的值，系统默认格式为： text/plain、text/html、text/xml、text/url-list（也可以自定义format，把format-data当key-value键值对使用）\n                getData(format)：获取拖拽元素的信息\n                addData(element): 调用此函数需要提供一个页面元素作为参考，同时使用此参数作为拖放反馈图像\n                clearData()：清除拖拽信息\n            dataTransfer的常用属性：\n                effectAllowed：设置拖拽时应带有的样式类型\n                dropEffect：设置拖拽元素被放下时的样式\n                files：内含一系列文件信息，常用于将文件从桌面拖向浏览器\n                items: 返回所有项与相关格式的所有文件\n```\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        #mydivBox{\n            display: flex;\n        }\n        .mydiv{\n            width: 100px;\n            height: 100px;\n            background-color: rgb(129, 233, 88);\n        }\n        #containerBox{\n            display: flex;\n        }\n        #container{\n            width: 500px;\n            height: 500px;\n            border: 5px solid burlywood;\n        }\n        #container2{\n            width: 500px;\n            height: 500px;\n            border: 5px solid burlywood;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"mydivBox\">\n        <div class=\"mydiv\" id=\"div1\" draggable=\"true\">1</div>\n        <div class=\"mydiv\" id=\"div2\" draggable=\"true\">2</div>\n        <div class=\"mydiv\" id=\"div3\" draggable=\"true\">3</div>\n        <div class=\"mydiv\" id=\"div4\" draggable=\"true\">4</div>\n        <div class=\"mydiv\" id=\"div5\" draggable=\"true\">5</div>\n        <div class=\"mydiv\" id=\"div6\" draggable=\"true\">6</div>\n    </div>\n    <div id=\"containerBox\">\n        <div id=\"container\"></div>\n        <div id=\"container2\"></div>\n    </div>\n<a href=\"../../0.img/1.jpg\"></a>\n    <script>\n        var mydivs = document.getElementsByClassName(\"mydiv\");\n        var container = document.getElementById('container');\n        var container2 = document.getElementById('container2');\n\n        // 给方块绑定\n        for(var i = 0, len = mydivs.length; i < len; i++)\n        {\n            mydivs[i].ondragstart = function(e){\n                // console.log(e.dataTransfer);\n                e.dataTransfer.setData('id', this.id);\n                // 设置显示图片\n                var img = new Image(); // 图像节点\n                img.src = '../../0.img/1.png'\n                e.dataTransfer.setDragImage(img, 30, 30);\n            }\n        }\n        // 取消默认事件\n        container.ondragover = function(){\n            return false;\n        }\n        container2.ondragover = function(){\n            return false;\n        }\n        // 放事件\n        container.ondrop = function(e){\n            // 获取之前存储的id\n            var id = e.dataTransfer.getData('id');\n            // 根据id获取节点\n            var node = document.getElementById(id);\n            this.appendChild(node);\n        }\n        container2.ondrop = function(e){\n            // 获取之前存储的id\n            var id = e.dataTransfer.getData('id');\n            // 根据id获取节点\n            var node = document.getElementById(id);\n            this.appendChild(node);\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210612113500883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 三：给歌单拖动排序\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        ul{\n            list-style: none;\n        }\n        .item{\n            background-color: #ccc;\n            margin-bottom: 5px;\n            padding: 10px;\n            width: 200px;\n        }\n    </style>\n</head>\n<body>\n    <ul class=\"list-ul\">\n        <li class=\"item\" draggable=\"true\">美丽之物</li>\n        <li class=\"item\" draggable=\"true\">Coming Home</li>\n        <li class=\"item\" draggable=\"true\">secret base</li>\n        <li class=\"item\" draggable=\"true\">芒种</li>\n        <li class=\"item\" draggable=\"true\">Bloom of Youth</li>\n        <li class=\"item\" draggable=\"true\">骑在银龙的背上</li>\n    </ul>\n    <script>\n        var items = document.getElementsByClassName('item');\n        var listUl = document.getElementsByClassName('list-ul')[0]; \n        for(var i = 0, len = items.length; i < len; i++)\n        {\n            // 设置id方便选取\n            items[i].id = 'mydiv' + i;\n            // 拖的时候把id存起来\n            items[i].ondragstart = function(e){\n                e.dataTransfer.setData('id', this.id);\n            }\n            // 放之前取消默认事件\n            items[i].ondragover = function(){\n                return false;\n            }\n            // 放事件\n            items[i].ondrop = function(e){\n                var id = e.dataTransfer.getData('id');\n                var tuo = document.getElementById(id);\n                listUl.insertBefore(tuo, this);\n                this.style.borderTop = '0px solid black';\n            }\n\n            // 放到上面时添加效果\n            items[i].ondragenter = function(){\n                this.style.borderTop = '5px solid black';\n            }\n            // 离开时去掉边\n            items[i].ondragleave = function(){\n                this.style.borderTop = '0px solid black';\n            }\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210612132042930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","source":"_posts/javascript/拖放.md","raw":"---\ntitle: js拖放事件详解及实战\ndate: 2021-06-12 11:37:01\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/26.jpg\ntags: \n  - 拖放\ncategories: javascript\n---\n\n## 一：基础知识  \n\n        传统的拖放式根据鼠标按下松开事件完成的\n        HTML5对于拖放只需要在元素上面设置draggable=\"true\"属性,移动端不支持\n        <div draggable=\"true\"></div>\n        拖放事件：\n            dragstart  当一个元素开始被拖拽的时候触发\n            drag  这个事件在拖拽源触发\n            dragend  拖拽源在拖拽操作结束将得到dragend事件对象，不管操作成功与否\n            dragenter  当拖拽中的鼠标第一次进入一个元素时触发\n            dragover  当拖拽中的鼠标移动经过一个元素时触发\n            dragleave  当拖拽中的鼠标离开元素时触发\n            drop  这个事件在拖拽操作结束释放时于释放元素上触发\n        注：在拖拽的时候只会触发拖拽的相关事件，鼠标事件，例如mousemove是不会触发的。\n以下是基础代码演示：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        #mydiv{\n            width: 150px;\n            height: 150px;\n            background-color: rgba(100, 50, 50, 0.3);\n        }\n        #container{\n            width: 400px;\n            height: 400px;\n            background-color: aqua;\n            opacity: 0.3;\n            margin: 50px auto;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"mydiv\" draggable=\"true\"></div>\n    <div id=\"container\"></div>\n    <script>\n        var mydiv = document.getElementById(\"mydiv\");\n\n        // 拖事件  开始\n        mydiv.ondragstart = function(){\n            console.log('开始拖');\n        }\n\n        // 拖事件  正在  一直触发\n        mydiv.ondrag = function(){\n            console.log('正在拖');\n        }\n\n        // 拖事件  结束\n        mydiv.ondragend = function(){\n            console.log('结束拖');\n        }\n\n        // 放元素\n        var container = document.getElementById('container');\n\n        // 放事件 进入了\n        container.ondragenter = function(){\n            console.log('放入了');\n        }\n\n        // 放事件 放在上面  持续触发\n        container.ondragover = function(e){\n            console.log('放上了');\n            // 阻止默认事件，以便触发ondrop事件\n            e.preventDefault();\n        }\n\n        // 放事件 离开了\n        container.ondragleave = function(){\n            console.log('离开了');\n        }\n\n        // 放事件 放开了\n        container.ondrop = function(){\n            console.log('放开了');\n        }\n    </script>\n</body>\n</html>\n```\n不入框，则只触发拖事件\n![展示](https://img-blog.csdnimg.cn/20210612101910304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n注释掉拖事件的代码后，拖动灰框进入蓝框：\n![展示](https://img-blog.csdnimg.cn/20210612102013602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 二：拖动分类案例：\n\n```\n一般在一个元素开始被拖拽的时候，触发dragstart时候设置与这次拖拽相关的信息，例如拖动的数据和图像\n        所有的拖拽事件都有一个属性————dataTransfer，它包含着拖拽数据\n        dataTransfer 的api文档：https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\n        dataTransfer基础语法：\n            dataTransfer的常用方法：\n                data：保存在拖拽元素中的数据\n                setData(format,data):设置拖拽元素的信息\n                setDragImage(element, x, y): 使用存在的图像元素作为拖动图像\n                format：和setData里的format遥相呼应，才能取到相应的值，系统默认格式为： text/plain、text/html、text/xml、text/url-list（也可以自定义format，把format-data当key-value键值对使用）\n                getData(format)：获取拖拽元素的信息\n                addData(element): 调用此函数需要提供一个页面元素作为参考，同时使用此参数作为拖放反馈图像\n                clearData()：清除拖拽信息\n            dataTransfer的常用属性：\n                effectAllowed：设置拖拽时应带有的样式类型\n                dropEffect：设置拖拽元素被放下时的样式\n                files：内含一系列文件信息，常用于将文件从桌面拖向浏览器\n                items: 返回所有项与相关格式的所有文件\n```\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        #mydivBox{\n            display: flex;\n        }\n        .mydiv{\n            width: 100px;\n            height: 100px;\n            background-color: rgb(129, 233, 88);\n        }\n        #containerBox{\n            display: flex;\n        }\n        #container{\n            width: 500px;\n            height: 500px;\n            border: 5px solid burlywood;\n        }\n        #container2{\n            width: 500px;\n            height: 500px;\n            border: 5px solid burlywood;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"mydivBox\">\n        <div class=\"mydiv\" id=\"div1\" draggable=\"true\">1</div>\n        <div class=\"mydiv\" id=\"div2\" draggable=\"true\">2</div>\n        <div class=\"mydiv\" id=\"div3\" draggable=\"true\">3</div>\n        <div class=\"mydiv\" id=\"div4\" draggable=\"true\">4</div>\n        <div class=\"mydiv\" id=\"div5\" draggable=\"true\">5</div>\n        <div class=\"mydiv\" id=\"div6\" draggable=\"true\">6</div>\n    </div>\n    <div id=\"containerBox\">\n        <div id=\"container\"></div>\n        <div id=\"container2\"></div>\n    </div>\n<a href=\"../../0.img/1.jpg\"></a>\n    <script>\n        var mydivs = document.getElementsByClassName(\"mydiv\");\n        var container = document.getElementById('container');\n        var container2 = document.getElementById('container2');\n\n        // 给方块绑定\n        for(var i = 0, len = mydivs.length; i < len; i++)\n        {\n            mydivs[i].ondragstart = function(e){\n                // console.log(e.dataTransfer);\n                e.dataTransfer.setData('id', this.id);\n                // 设置显示图片\n                var img = new Image(); // 图像节点\n                img.src = '../../0.img/1.png'\n                e.dataTransfer.setDragImage(img, 30, 30);\n            }\n        }\n        // 取消默认事件\n        container.ondragover = function(){\n            return false;\n        }\n        container2.ondragover = function(){\n            return false;\n        }\n        // 放事件\n        container.ondrop = function(e){\n            // 获取之前存储的id\n            var id = e.dataTransfer.getData('id');\n            // 根据id获取节点\n            var node = document.getElementById(id);\n            this.appendChild(node);\n        }\n        container2.ondrop = function(e){\n            // 获取之前存储的id\n            var id = e.dataTransfer.getData('id');\n            // 根据id获取节点\n            var node = document.getElementById(id);\n            this.appendChild(node);\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210612113500883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 三：给歌单拖动排序\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        ul{\n            list-style: none;\n        }\n        .item{\n            background-color: #ccc;\n            margin-bottom: 5px;\n            padding: 10px;\n            width: 200px;\n        }\n    </style>\n</head>\n<body>\n    <ul class=\"list-ul\">\n        <li class=\"item\" draggable=\"true\">美丽之物</li>\n        <li class=\"item\" draggable=\"true\">Coming Home</li>\n        <li class=\"item\" draggable=\"true\">secret base</li>\n        <li class=\"item\" draggable=\"true\">芒种</li>\n        <li class=\"item\" draggable=\"true\">Bloom of Youth</li>\n        <li class=\"item\" draggable=\"true\">骑在银龙的背上</li>\n    </ul>\n    <script>\n        var items = document.getElementsByClassName('item');\n        var listUl = document.getElementsByClassName('list-ul')[0]; \n        for(var i = 0, len = items.length; i < len; i++)\n        {\n            // 设置id方便选取\n            items[i].id = 'mydiv' + i;\n            // 拖的时候把id存起来\n            items[i].ondragstart = function(e){\n                e.dataTransfer.setData('id', this.id);\n            }\n            // 放之前取消默认事件\n            items[i].ondragover = function(){\n                return false;\n            }\n            // 放事件\n            items[i].ondrop = function(e){\n                var id = e.dataTransfer.getData('id');\n                var tuo = document.getElementById(id);\n                listUl.insertBefore(tuo, this);\n                this.style.borderTop = '0px solid black';\n            }\n\n            // 放到上面时添加效果\n            items[i].ondragenter = function(){\n                this.style.borderTop = '5px solid black';\n            }\n            // 离开时去掉边\n            items[i].ondragleave = function(){\n                this.style.borderTop = '0px solid black';\n            }\n        }\n    </script>\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/20210612132042930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","slug":"javascript/拖放","published":1,"updated":"2021-12-03T14:57:26.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958b9001lasdachko8e3u","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"一：基础知识\"><a href=\"#一：基础知识\" class=\"headerlink\" title=\"一：基础知识\"></a>一：基础知识</h2><pre><code>    传统的拖放式根据鼠标按下松开事件完成的\n    HTML5对于拖放只需要在元素上面设置draggable=&quot;true&quot;属性,移动端不支持\n    &lt;div draggable=&quot;true&quot;&gt;&lt;/div&gt;\n    拖放事件：\n        dragstart  当一个元素开始被拖拽的时候触发\n        drag  这个事件在拖拽源触发\n        dragend  拖拽源在拖拽操作结束将得到dragend事件对象，不管操作成功与否\n        dragenter  当拖拽中的鼠标第一次进入一个元素时触发\n        dragover  当拖拽中的鼠标移动经过一个元素时触发\n        dragleave  当拖拽中的鼠标离开元素时触发\n        drop  这个事件在拖拽操作结束释放时于释放元素上触发\n    注：在拖拽的时候只会触发拖拽的相关事件，鼠标事件，例如mousemove是不会触发的。\n</code></pre>\n<p>以下是基础代码演示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#mydiv</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">100</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>, <span class=\"number\">0.3</span>);</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#container</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">background-color</span>: aqua;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">opacity</span>: <span class=\"number\">0.3</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> mydiv = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;mydiv&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 拖事件  开始</span></span></span><br><span class=\"line\"><span class=\"javascript\">        mydiv.ondragstart = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;开始拖&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 拖事件  正在  一直触发</span></span></span><br><span class=\"line\"><span class=\"javascript\">        mydiv.ondrag = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;正在拖&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 拖事件  结束</span></span></span><br><span class=\"line\"><span class=\"javascript\">        mydiv.ondragend = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;结束拖&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放元素</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> container = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件 进入了</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondragenter = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;放入了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件 放在上面  持续触发</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondragover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;放上了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 阻止默认事件，以便触发ondrop事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">            e.preventDefault();</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件 离开了</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondragleave = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;离开了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件 放开了</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondrop = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;放开了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>不入框，则只触发拖事件<br><img src=\"https://img-blog.csdnimg.cn/20210612101910304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>注释掉拖事件的代码后，拖动灰框进入蓝框：<br><img src=\"https://img-blog.csdnimg.cn/20210612102013602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"二：拖动分类案例：\"><a href=\"#二：拖动分类案例：\" class=\"headerlink\" title=\"二：拖动分类案例：\"></a>二：拖动分类案例：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一般在一个元素开始被拖拽的时候，触发dragstart时候设置与这次拖拽相关的信息，例如拖动的数据和图像</span><br><span class=\"line\">        所有的拖拽事件都有一个属性————dataTransfer，它包含着拖拽数据</span><br><span class=\"line\">        dataTransfer 的api文档：https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer</span><br><span class=\"line\">        dataTransfer基础语法：</span><br><span class=\"line\">            dataTransfer的常用方法：</span><br><span class=\"line\">                data：保存在拖拽元素中的数据</span><br><span class=\"line\">                setData(format,data):设置拖拽元素的信息</span><br><span class=\"line\">                setDragImage(element, x, y): 使用存在的图像元素作为拖动图像</span><br><span class=\"line\">                format：和setData里的format遥相呼应，才能取到相应的值，系统默认格式为： text/plain、text/html、text/xml、text/url-list（也可以自定义format，把format-data当key-value键值对使用）</span><br><span class=\"line\">                getData(format)：获取拖拽元素的信息</span><br><span class=\"line\">                addData(element): 调用此函数需要提供一个页面元素作为参考，同时使用此参数作为拖放反馈图像</span><br><span class=\"line\">                clearData()：清除拖拽信息</span><br><span class=\"line\">            dataTransfer的常用属性：</span><br><span class=\"line\">                effectAllowed：设置拖拽时应带有的样式类型</span><br><span class=\"line\">                dropEffect：设置拖拽元素被放下时的样式</span><br><span class=\"line\">                files：内含一系列文件信息，常用于将文件从桌面拖向浏览器</span><br><span class=\"line\">                items: 返回所有项与相关格式的所有文件</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#mydivBox</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.mydiv</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">129</span>, <span class=\"number\">233</span>, <span class=\"number\">88</span>);</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#containerBox</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#container</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid burlywood;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#container2</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid burlywood;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mydivBox&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div2&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div3&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div4&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div5&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div6&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;containerBox&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../../0.img/1.jpg&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> mydivs = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&quot;mydiv&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> container = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> container2 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;container2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 给方块绑定</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = mydivs.length; i &lt; len; i++)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            mydivs[i].ondragstart = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// console.log(e.dataTransfer);</span></span></span><br><span class=\"line\"><span class=\"javascript\">                e.dataTransfer.setData(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"built_in\">this</span>.id);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 设置显示图片</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image(); <span class=\"comment\">// 图像节点</span></span></span><br><span class=\"line\"><span class=\"javascript\">                img.src = <span class=\"string\">&#x27;../../0.img/1.png&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                e.dataTransfer.setDragImage(img, <span class=\"number\">30</span>, <span class=\"number\">30</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 取消默认事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondragover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        container2.ondragover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondrop = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 获取之前存储的id</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> id = e.dataTransfer.getData(<span class=\"string\">&#x27;id&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 根据id获取节点</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> node = <span class=\"built_in\">document</span>.getElementById(id);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.appendChild(node);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        container2.ondrop = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 获取之前存储的id</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> id = e.dataTransfer.getData(<span class=\"string\">&#x27;id&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 根据id获取节点</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> node = <span class=\"built_in\">document</span>.getElementById(id);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.appendChild(node);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210612113500883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"三：给歌单拖动排序\"><a href=\"#三：给歌单拖动排序\" class=\"headerlink\" title=\"三：给歌单拖动排序\"></a>三：给歌单拖动排序</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">ul</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.item</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-ul&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>美丽之物<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>Coming Home<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>secret base<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>芒种<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>Bloom of Youth<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>骑在银龙的背上<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> items = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&#x27;item&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> listUl = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&#x27;list-ul&#x27;</span>)[<span class=\"number\">0</span>]; </span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = items.length; i &lt; len; i++)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 设置id方便选取</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].id = <span class=\"string\">&#x27;mydiv&#x27;</span> + i;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 拖的时候把id存起来</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondragstart = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                e.dataTransfer.setData(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"built_in\">this</span>.id);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 放之前取消默认事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondragover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 放事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondrop = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> id = e.dataTransfer.getData(<span class=\"string\">&#x27;id&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> tuo = <span class=\"built_in\">document</span>.getElementById(id);</span></span><br><span class=\"line\"><span class=\"javascript\">                listUl.insertBefore(tuo, <span class=\"built_in\">this</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">this</span>.style.borderTop = <span class=\"string\">&#x27;0px solid black&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 放到上面时添加效果</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondragenter = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">this</span>.style.borderTop = <span class=\"string\">&#x27;5px solid black&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 离开时去掉边</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondragleave = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">this</span>.style.borderTop = <span class=\"string\">&#x27;0px solid black&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210612132042930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一：基础知识\"><a href=\"#一：基础知识\" class=\"headerlink\" title=\"一：基础知识\"></a>一：基础知识</h2><pre><code>    传统的拖放式根据鼠标按下松开事件完成的\n    HTML5对于拖放只需要在元素上面设置draggable=&quot;true&quot;属性,移动端不支持\n    &lt;div draggable=&quot;true&quot;&gt;&lt;/div&gt;\n    拖放事件：\n        dragstart  当一个元素开始被拖拽的时候触发\n        drag  这个事件在拖拽源触发\n        dragend  拖拽源在拖拽操作结束将得到dragend事件对象，不管操作成功与否\n        dragenter  当拖拽中的鼠标第一次进入一个元素时触发\n        dragover  当拖拽中的鼠标移动经过一个元素时触发\n        dragleave  当拖拽中的鼠标离开元素时触发\n        drop  这个事件在拖拽操作结束释放时于释放元素上触发\n    注：在拖拽的时候只会触发拖拽的相关事件，鼠标事件，例如mousemove是不会触发的。\n</code></pre>\n<p>以下是基础代码演示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#mydiv</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">100</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>, <span class=\"number\">0.3</span>);</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#container</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">background-color</span>: aqua;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">opacity</span>: <span class=\"number\">0.3</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> mydiv = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;mydiv&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 拖事件  开始</span></span></span><br><span class=\"line\"><span class=\"javascript\">        mydiv.ondragstart = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;开始拖&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 拖事件  正在  一直触发</span></span></span><br><span class=\"line\"><span class=\"javascript\">        mydiv.ondrag = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;正在拖&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 拖事件  结束</span></span></span><br><span class=\"line\"><span class=\"javascript\">        mydiv.ondragend = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;结束拖&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放元素</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> container = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件 进入了</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondragenter = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;放入了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件 放在上面  持续触发</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondragover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;放上了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 阻止默认事件，以便触发ondrop事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">            e.preventDefault();</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件 离开了</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondragleave = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;离开了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件 放开了</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondrop = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;放开了&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>不入框，则只触发拖事件<br><img src=\"https://img-blog.csdnimg.cn/20210612101910304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>注释掉拖事件的代码后，拖动灰框进入蓝框：<br><img src=\"https://img-blog.csdnimg.cn/20210612102013602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"二：拖动分类案例：\"><a href=\"#二：拖动分类案例：\" class=\"headerlink\" title=\"二：拖动分类案例：\"></a>二：拖动分类案例：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一般在一个元素开始被拖拽的时候，触发dragstart时候设置与这次拖拽相关的信息，例如拖动的数据和图像</span><br><span class=\"line\">        所有的拖拽事件都有一个属性————dataTransfer，它包含着拖拽数据</span><br><span class=\"line\">        dataTransfer 的api文档：https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer</span><br><span class=\"line\">        dataTransfer基础语法：</span><br><span class=\"line\">            dataTransfer的常用方法：</span><br><span class=\"line\">                data：保存在拖拽元素中的数据</span><br><span class=\"line\">                setData(format,data):设置拖拽元素的信息</span><br><span class=\"line\">                setDragImage(element, x, y): 使用存在的图像元素作为拖动图像</span><br><span class=\"line\">                format：和setData里的format遥相呼应，才能取到相应的值，系统默认格式为： text/plain、text/html、text/xml、text/url-list（也可以自定义format，把format-data当key-value键值对使用）</span><br><span class=\"line\">                getData(format)：获取拖拽元素的信息</span><br><span class=\"line\">                addData(element): 调用此函数需要提供一个页面元素作为参考，同时使用此参数作为拖放反馈图像</span><br><span class=\"line\">                clearData()：清除拖拽信息</span><br><span class=\"line\">            dataTransfer的常用属性：</span><br><span class=\"line\">                effectAllowed：设置拖拽时应带有的样式类型</span><br><span class=\"line\">                dropEffect：设置拖拽元素被放下时的样式</span><br><span class=\"line\">                files：内含一系列文件信息，常用于将文件从桌面拖向浏览器</span><br><span class=\"line\">                items: 返回所有项与相关格式的所有文件</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#mydivBox</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.mydiv</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">129</span>, <span class=\"number\">233</span>, <span class=\"number\">88</span>);</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#containerBox</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#container</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid burlywood;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#container2</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">height</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid burlywood;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mydivBox&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div2&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div3&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div4&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div5&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mydiv&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div6&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;containerBox&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../../0.img/1.jpg&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> mydivs = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&quot;mydiv&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> container = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;container&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> container2 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;container2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 给方块绑定</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = mydivs.length; i &lt; len; i++)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            mydivs[i].ondragstart = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// console.log(e.dataTransfer);</span></span></span><br><span class=\"line\"><span class=\"javascript\">                e.dataTransfer.setData(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"built_in\">this</span>.id);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 设置显示图片</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image(); <span class=\"comment\">// 图像节点</span></span></span><br><span class=\"line\"><span class=\"javascript\">                img.src = <span class=\"string\">&#x27;../../0.img/1.png&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                e.dataTransfer.setDragImage(img, <span class=\"number\">30</span>, <span class=\"number\">30</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 取消默认事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondragover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        container2.ondragover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 放事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        container.ondrop = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 获取之前存储的id</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> id = e.dataTransfer.getData(<span class=\"string\">&#x27;id&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 根据id获取节点</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> node = <span class=\"built_in\">document</span>.getElementById(id);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.appendChild(node);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        container2.ondrop = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 获取之前存储的id</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> id = e.dataTransfer.getData(<span class=\"string\">&#x27;id&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 根据id获取节点</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> node = <span class=\"built_in\">document</span>.getElementById(id);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.appendChild(node);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210612113500883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"三：给歌单拖动排序\"><a href=\"#三：给歌单拖动排序\" class=\"headerlink\" title=\"三：给歌单拖动排序\"></a>三：给歌单拖动排序</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">ul</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.item</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">        &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-ul&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>美丽之物<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>Coming Home<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>secret base<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>芒种<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>Bloom of Youth<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">draggable</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>骑在银龙的背上<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> items = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&#x27;item&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> listUl = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&#x27;list-ul&#x27;</span>)[<span class=\"number\">0</span>]; </span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = items.length; i &lt; len; i++)</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 设置id方便选取</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].id = <span class=\"string\">&#x27;mydiv&#x27;</span> + i;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 拖的时候把id存起来</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondragstart = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                e.dataTransfer.setData(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"built_in\">this</span>.id);</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 放之前取消默认事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondragover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 放事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondrop = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> id = e.dataTransfer.getData(<span class=\"string\">&#x27;id&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> tuo = <span class=\"built_in\">document</span>.getElementById(id);</span></span><br><span class=\"line\"><span class=\"javascript\">                listUl.insertBefore(tuo, <span class=\"built_in\">this</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">this</span>.style.borderTop = <span class=\"string\">&#x27;0px solid black&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 放到上面时添加效果</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondragenter = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">this</span>.style.borderTop = <span class=\"string\">&#x27;5px solid black&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 离开时去掉边</span></span></span><br><span class=\"line\"><span class=\"javascript\">            items[i].ondragleave = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">this</span>.style.borderTop = <span class=\"string\">&#x27;0px solid black&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210612132042930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n"},{"title":"页面自动滚动脚本","date":"2021-05-02T06:53:37.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/7.jpg","_content":"\n看小说的时候总是不想用鼠标滑来滑去，就想了个办法让页面滚动起来，大家可以在油猴脚本下载这个脚本——[页面自动滚动脚本](https://greasyfork.org/zh-CN/users/763055-yujizhao)\n\n下面是它的使用说明：\n+ 按 ALT + 上 则向上滚动\n+ 按 ALT + 下 则向下滚动\n+ 多次按或长按ALT + 上/下 时速度可叠加\n+ 同时按CTRL + ALT键可停止自动滚动\n+ 配合浏览器自带的两个快捷键： CTRL + 上： 回到顶部。 CTRL + 下： 回到底部\n+ 单击页面可停止自动滚动\n+ 滚动时滑动鼠标滚轮则自动滚动停止\n\n下面是它的源代码：\n```javascript\n\n\n    // ==UserScript==\n    // @name         autoScroll\n    // @namespace    eyes\n    // @version      0.2\n    // @description  It allows the page to scroll on its own\n    // @author       eyes\n    // @match        *://*/*\n    // @grant        none\n    // ==/UserScript==\n     \n    (function() {\n        'use strict';\n        var speed = 0;\n        // 获取滑动位置\n        function getScrollTop() {\n            var scrollTop = 0,\n                bodyScrollTop = 0,\n                documentScrollTop = 0;\n            if (document.body) {\n                bodyScrollTop = document.body.scrollTop;\n            }\n            if (document.documentElement) {\n                documentScrollTop = document.documentElement.scrollTop;\n            }\n            scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\n            return scrollTop;\n        }\n\n        //浏览器视口的高度\n        function getWindowHeight() {\n            var windowHeight = 0;\n            if (document.compatMode == 'CSS1Compat') {\n                windowHeight = document.documentElement.clientHeight;\n            } else {\n                windowHeight = document.body.clientHeight;\n            }\n            return windowHeight;\n        }\n\n        //文档的总高度\n        function getScrollHeight() {\n            var scrollHeight = 0,\n                bodyScrollHeight = 0,\n                documentScrollHeight = 0;\n            if (document.body) {\n                bodyScrollHeight = document.body.scrollHeight;\n            }\n            if (document.documentElement) {\n                documentScrollHeight = document.documentElement.scrollHeight;\n            }\n            scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\n            return scrollHeight;\n        }\n\n        // 滚动事件\n        setInterval(() => {\n            // 判断页面是否滑到底部\n            let bottomFlag = (getScrollTop() + getWindowHeight() == getScrollHeight()) ? true : false;\n            let topFlag = (getScrollTop() == 0) ? true : false;\n            if (bottomFlag || topFlag) {\n                speed = 0;\n            } else {\n                document.documentElement.scrollTop += speed;\n            }\n        }, 5)\n\n        // 判断是否需要滚动\n        document.onkeydown = (e) => {\n            e = event || window.event;\n            if (e && e.keyCode == 38 && e.altKey) { // 上键\n                let bottomFlag = (getScrollTop() + getWindowHeight() == getScrollHeight()) ? true : false;\n                if (bottomFlag) {\n                    document.documentElement.scrollTop += -1;\n                }\n                speed -= 1.5;\n            }\n            if (e && e.keyCode == 40 && e.altKey) { // 下键\n                let topFlag = (getScrollTop() == 0) ? true : false;\n                if (topFlag) {\n                    document.documentElement.scrollTop += 1;\n                }\n                speed += 1.5;\n            }\n        }\n\n        // 单击页面停止滚动\n        document.onclick = () => {\n            speed = 0;\n        }\n\n        // 滑动滚轮页面停止滚动\n        document.onmousewheel = () => {\n            speed = 0;\n        }\n        document.addEventListener(\"DOMMouseScroll\", () => {\n            speed = 0;\n        })\n    })();\n```\n\n如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，[仓库地址](https://github.com/YuJiZhao/script)","source":"_posts/script/autoScoll.md","raw":"---\ntitle: 页面自动滚动脚本\ndate: 2021-05-02 14:53:37\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/7.jpg\ntags:\n  - 脚本\ncategories: 脚本\n---\n\n看小说的时候总是不想用鼠标滑来滑去，就想了个办法让页面滚动起来，大家可以在油猴脚本下载这个脚本——[页面自动滚动脚本](https://greasyfork.org/zh-CN/users/763055-yujizhao)\n\n下面是它的使用说明：\n+ 按 ALT + 上 则向上滚动\n+ 按 ALT + 下 则向下滚动\n+ 多次按或长按ALT + 上/下 时速度可叠加\n+ 同时按CTRL + ALT键可停止自动滚动\n+ 配合浏览器自带的两个快捷键： CTRL + 上： 回到顶部。 CTRL + 下： 回到底部\n+ 单击页面可停止自动滚动\n+ 滚动时滑动鼠标滚轮则自动滚动停止\n\n下面是它的源代码：\n```javascript\n\n\n    // ==UserScript==\n    // @name         autoScroll\n    // @namespace    eyes\n    // @version      0.2\n    // @description  It allows the page to scroll on its own\n    // @author       eyes\n    // @match        *://*/*\n    // @grant        none\n    // ==/UserScript==\n     \n    (function() {\n        'use strict';\n        var speed = 0;\n        // 获取滑动位置\n        function getScrollTop() {\n            var scrollTop = 0,\n                bodyScrollTop = 0,\n                documentScrollTop = 0;\n            if (document.body) {\n                bodyScrollTop = document.body.scrollTop;\n            }\n            if (document.documentElement) {\n                documentScrollTop = document.documentElement.scrollTop;\n            }\n            scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\n            return scrollTop;\n        }\n\n        //浏览器视口的高度\n        function getWindowHeight() {\n            var windowHeight = 0;\n            if (document.compatMode == 'CSS1Compat') {\n                windowHeight = document.documentElement.clientHeight;\n            } else {\n                windowHeight = document.body.clientHeight;\n            }\n            return windowHeight;\n        }\n\n        //文档的总高度\n        function getScrollHeight() {\n            var scrollHeight = 0,\n                bodyScrollHeight = 0,\n                documentScrollHeight = 0;\n            if (document.body) {\n                bodyScrollHeight = document.body.scrollHeight;\n            }\n            if (document.documentElement) {\n                documentScrollHeight = document.documentElement.scrollHeight;\n            }\n            scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\n            return scrollHeight;\n        }\n\n        // 滚动事件\n        setInterval(() => {\n            // 判断页面是否滑到底部\n            let bottomFlag = (getScrollTop() + getWindowHeight() == getScrollHeight()) ? true : false;\n            let topFlag = (getScrollTop() == 0) ? true : false;\n            if (bottomFlag || topFlag) {\n                speed = 0;\n            } else {\n                document.documentElement.scrollTop += speed;\n            }\n        }, 5)\n\n        // 判断是否需要滚动\n        document.onkeydown = (e) => {\n            e = event || window.event;\n            if (e && e.keyCode == 38 && e.altKey) { // 上键\n                let bottomFlag = (getScrollTop() + getWindowHeight() == getScrollHeight()) ? true : false;\n                if (bottomFlag) {\n                    document.documentElement.scrollTop += -1;\n                }\n                speed -= 1.5;\n            }\n            if (e && e.keyCode == 40 && e.altKey) { // 下键\n                let topFlag = (getScrollTop() == 0) ? true : false;\n                if (topFlag) {\n                    document.documentElement.scrollTop += 1;\n                }\n                speed += 1.5;\n            }\n        }\n\n        // 单击页面停止滚动\n        document.onclick = () => {\n            speed = 0;\n        }\n\n        // 滑动滚轮页面停止滚动\n        document.onmousewheel = () => {\n            speed = 0;\n        }\n        document.addEventListener(\"DOMMouseScroll\", () => {\n            speed = 0;\n        })\n    })();\n```\n\n如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，[仓库地址](https://github.com/YuJiZhao/script)","slug":"script/autoScoll","published":1,"updated":"2021-12-03T15:00:20.301Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958ba001oasda3avo8ai0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>看小说的时候总是不想用鼠标滑来滑去，就想了个办法让页面滚动起来，大家可以在油猴脚本下载这个脚本——<a href=\"https://greasyfork.org/zh-CN/users/763055-yujizhao\">页面自动滚动脚本</a></p>\n<p>下面是它的使用说明：</p>\n<ul>\n<li>按 ALT + 上 则向上滚动</li>\n<li>按 ALT + 下 则向下滚动</li>\n<li>多次按或长按ALT + 上/下 时速度可叠加</li>\n<li>同时按CTRL + ALT键可停止自动滚动</li>\n<li>配合浏览器自带的两个快捷键： CTRL + 上： 回到顶部。 CTRL + 下： 回到底部</li>\n<li>单击页面可停止自动滚动</li>\n<li>滚动时滑动鼠标滚轮则自动滚动停止</li>\n</ul>\n<p>下面是它的源代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ==UserScript==</span></span><br><span class=\"line\"><span class=\"comment\">// @name         autoScroll</span></span><br><span class=\"line\"><span class=\"comment\">// @namespace    eyes</span></span><br><span class=\"line\"><span class=\"comment\">// @version      0.2</span></span><br><span class=\"line\"><span class=\"comment\">// @description  It allows the page to scroll on its own</span></span><br><span class=\"line\"><span class=\"comment\">// @author       eyes</span></span><br><span class=\"line\"><span class=\"comment\">// @match        *://*/*</span></span><br><span class=\"line\"><span class=\"comment\">// @grant        none</span></span><br><span class=\"line\"><span class=\"comment\">// ==/UserScript==</span></span><br><span class=\"line\"> </span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    &#x27;use strict&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 获取滑动位置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollTop</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>,</span><br><span class=\"line\">            bodyScrollTop = <span class=\"number\">0</span>,</span><br><span class=\"line\">            documentScrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">            bodyScrollTop = <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">            documentScrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scrollTop = (bodyScrollTop - documentScrollTop &gt; <span class=\"number\">0</span>) ? bodyScrollTop : documentScrollTop;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//浏览器视口的高度</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWindowHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> windowHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.compatMode == <span class=\"string\">&#x27;CSS1Compat&#x27;</span>) &#123;</span><br><span class=\"line\">            windowHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            windowHeight = <span class=\"built_in\">document</span>.body.clientHeight;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> windowHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//文档的总高度</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> scrollHeight = <span class=\"number\">0</span>,</span><br><span class=\"line\">            bodyScrollHeight = <span class=\"number\">0</span>,</span><br><span class=\"line\">            documentScrollHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">            bodyScrollHeight = <span class=\"built_in\">document</span>.body.scrollHeight;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">            documentScrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollHeight;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; <span class=\"number\">0</span>) ? bodyScrollHeight : documentScrollHeight;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 滚动事件</span></span><br><span class=\"line\">    <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 判断页面是否滑到底部</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> bottomFlag = (getScrollTop() + getWindowHeight() == getScrollHeight()) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> topFlag = (getScrollTop() == <span class=\"number\">0</span>) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bottomFlag || topFlag) &#123;</span><br><span class=\"line\">            speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.documentElement.scrollTop += speed;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断是否需要滚动</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.onkeydown = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        e = event || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e &amp;&amp; e.keyCode == <span class=\"number\">38</span> &amp;&amp; e.altKey) &#123; <span class=\"comment\">// 上键</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> bottomFlag = (getScrollTop() + getWindowHeight() == getScrollHeight()) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (bottomFlag) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.documentElement.scrollTop += -<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            speed -= <span class=\"number\">1.5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e &amp;&amp; e.keyCode == <span class=\"number\">40</span> &amp;&amp; e.altKey) &#123; <span class=\"comment\">// 下键</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> topFlag = (getScrollTop() == <span class=\"number\">0</span>) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (topFlag) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.documentElement.scrollTop += <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            speed += <span class=\"number\">1.5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 单击页面停止滚动</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.onclick = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 滑动滚轮页面停止滚动</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.onmousewheel = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">&quot;DOMMouseScroll&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，<a href=\"https://github.com/YuJiZhao/script\">仓库地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>看小说的时候总是不想用鼠标滑来滑去，就想了个办法让页面滚动起来，大家可以在油猴脚本下载这个脚本——<a href=\"https://greasyfork.org/zh-CN/users/763055-yujizhao\">页面自动滚动脚本</a></p>\n<p>下面是它的使用说明：</p>\n<ul>\n<li>按 ALT + 上 则向上滚动</li>\n<li>按 ALT + 下 则向下滚动</li>\n<li>多次按或长按ALT + 上/下 时速度可叠加</li>\n<li>同时按CTRL + ALT键可停止自动滚动</li>\n<li>配合浏览器自带的两个快捷键： CTRL + 上： 回到顶部。 CTRL + 下： 回到底部</li>\n<li>单击页面可停止自动滚动</li>\n<li>滚动时滑动鼠标滚轮则自动滚动停止</li>\n</ul>\n<p>下面是它的源代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ==UserScript==</span></span><br><span class=\"line\"><span class=\"comment\">// @name         autoScroll</span></span><br><span class=\"line\"><span class=\"comment\">// @namespace    eyes</span></span><br><span class=\"line\"><span class=\"comment\">// @version      0.2</span></span><br><span class=\"line\"><span class=\"comment\">// @description  It allows the page to scroll on its own</span></span><br><span class=\"line\"><span class=\"comment\">// @author       eyes</span></span><br><span class=\"line\"><span class=\"comment\">// @match        *://*/*</span></span><br><span class=\"line\"><span class=\"comment\">// @grant        none</span></span><br><span class=\"line\"><span class=\"comment\">// ==/UserScript==</span></span><br><span class=\"line\"> </span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    &#x27;use strict&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 获取滑动位置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollTop</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>,</span><br><span class=\"line\">            bodyScrollTop = <span class=\"number\">0</span>,</span><br><span class=\"line\">            documentScrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">            bodyScrollTop = <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">            documentScrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scrollTop = (bodyScrollTop - documentScrollTop &gt; <span class=\"number\">0</span>) ? bodyScrollTop : documentScrollTop;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//浏览器视口的高度</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWindowHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> windowHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.compatMode == <span class=\"string\">&#x27;CSS1Compat&#x27;</span>) &#123;</span><br><span class=\"line\">            windowHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            windowHeight = <span class=\"built_in\">document</span>.body.clientHeight;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> windowHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//文档的总高度</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> scrollHeight = <span class=\"number\">0</span>,</span><br><span class=\"line\">            bodyScrollHeight = <span class=\"number\">0</span>,</span><br><span class=\"line\">            documentScrollHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">            bodyScrollHeight = <span class=\"built_in\">document</span>.body.scrollHeight;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">            documentScrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollHeight;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; <span class=\"number\">0</span>) ? bodyScrollHeight : documentScrollHeight;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 滚动事件</span></span><br><span class=\"line\">    <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 判断页面是否滑到底部</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> bottomFlag = (getScrollTop() + getWindowHeight() == getScrollHeight()) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> topFlag = (getScrollTop() == <span class=\"number\">0</span>) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bottomFlag || topFlag) &#123;</span><br><span class=\"line\">            speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.documentElement.scrollTop += speed;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断是否需要滚动</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.onkeydown = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        e = event || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e &amp;&amp; e.keyCode == <span class=\"number\">38</span> &amp;&amp; e.altKey) &#123; <span class=\"comment\">// 上键</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> bottomFlag = (getScrollTop() + getWindowHeight() == getScrollHeight()) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (bottomFlag) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.documentElement.scrollTop += -<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            speed -= <span class=\"number\">1.5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e &amp;&amp; e.keyCode == <span class=\"number\">40</span> &amp;&amp; e.altKey) &#123; <span class=\"comment\">// 下键</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> topFlag = (getScrollTop() == <span class=\"number\">0</span>) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (topFlag) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.documentElement.scrollTop += <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            speed += <span class=\"number\">1.5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 单击页面停止滚动</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.onclick = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 滑动滚轮页面停止滚动</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.onmousewheel = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">&quot;DOMMouseScroll&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        speed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，<a href=\"https://github.com/YuJiZhao/script\">仓库地址</a></p>\n"},{"title":"bilibili弹幕列表随视频播放滚动","date":"2021-09-18T02:51:09.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/97.png","_content":"\n以下是一些写脚本时获得的数据记录，最后面是脚本代码。\n\n抓包加上查资料拿到的弹幕数据接口：\n+ `\"https://api.bilibili.com/x/v1/dm/list.so?oid=\" + cid` 返回数据类型为XML(旧接口)。\n+ `https://api.bilibili.com/x/v2/dm/web/seg.so?oid=\" + cid + \"&type=1&segment_index=1` 返回二进制数据(新接口)\n\n二进制数据处理比较麻烦，我就用了XML的接口。\n\ncid是视频的id，也叫oid，不是AV号，获取方式有两种：\n+ 在控制台输入cid获取当前视频的cid\n+ 通过方法：`window.__INITIAL_STATE__.videoData.pages`\n\n接口测试时获取的数据如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0c98e0b2f37640ca8e490a3cb6253fbb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n弹幕的返回数据含义如下：\n\n```\n<d p=\"1611.18000,1,25,16777215,1631635549,0,ab0d3321,54811347826209280,10\">来看八爷</d>\n```\n有9个参数，经过查询并且测试获得了部分参数的含义：\n+ 参数1： `1611.18000` 弹幕出现的时间，以秒数为单位\n+ 参数2： `1` 弹幕的模式，1-3 滚动弹幕，4 底端弹幕，5顶端弹幕，6 逆向弹幕，7 精准定位，8 高级弹幕\n+ 参数3： `25` 字号 （12非常小，16特小，18小，25中，36大，45很大，64特别大）\n+ 参数4： `16777215` 字体的颜色,这串数字是十进制表示\n+ 参数5： `1631635549` unix时间戳\n+ 参数6： `0` 弹幕池类型，0普通池，1字幕池，2特殊池 【目前特殊池为高级弹幕专用】\n+ 参数7： `ab0d3321` 发送者的Hash，用于“屏蔽此弹幕的发送者”功能\n+ 参数8： `54811347826209280` 弹幕在弹幕数据库中rowID 用于“历史弹幕”功能。\n+ 参数9： `10` 未知，貌似是新增的，查阅的资料里都没有这个参数\n\n这里只有第一个参数用得到，剩下的参数会在我的另一个修改视频弹幕的脚ben里用到。\n\n最终效果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a1f518a955c248bd9947aeeccccdaf3c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n但由于该代码效率不高，对于上千或上万弹幕的视频加载较慢，因此暂时没有封装成脚本上传，后续有时间的话我会优化逻辑上传的。\n\n代码如下：\n```js\n// 允许跨域请求，防止浏览器拦截\nvar meta = document.createElement(\"meta\");\nmeta.httpEquiv = \"Access-Control-Allow-Origin\";\nmeta.content = \"*\";\n$(\"head\")[0].appendChild(meta);\n\n// 初始化若干变量\nvar page_loc = location.href;\nvar page_start = page_loc.indexOf(\"?p=\");\nvar page_p;\n\n// 获取视频cid\nif (page_start == -1 || page_start == 1) page_p = 0;\nelse page_p = page_loc.slice(page_start + 3) - 1;\nvar page_cid = window.__INITIAL_STATE__.videoData.pages[page_p].cid;\n\n// 发起请求，拿到弹幕数据\n$.ajax({\n    url: \"https://api.bilibili.com/x/v1/dm/list.so?oid=\" + page_cid,\n    type: \"GET\",\n    dataType: \"XML\",\n    success: function (xml) {\n        // 处理返回数据\n        data_deal(xml.all);\n    },\n    error: function (err) {\n        console.log(err);\n        alert(\"弹幕列表滚动脚本失效，可尝试更新最新版本脚本解决问题！\\n如果有一定编程基础可以打开控制台查看报错信息。\");\n    }\n});\n\n// 存储数据\nfunction data_deal(data) {\n    var data_list = new Array(); // 存信息\n    var data_arr = new Array(); // 存内容\n    var data_length = data.length;\n    for (var i = 8; i < data_length; i++) {\n        var data_array = data[i].attributes.p.value.split(\",\");\n        $.each(data_array, function (i) {\n            data_array[i] = parseFloat(data_array[i]); // 转换类型，便于排序\n        })\n        data_list.push(data_array);\n        data_arr.push(data[i].innerHTML);\n    }\n\n    // 执行排序\n    data_sort(data_list, 0, data_list.length - 1, data_arr);\n\n    // 修改弹幕列表\n    $(\".bui-collapse-header\").bind(\"click\", function () {\n        var clearInter = setInterval(function () {\n            if ($(\".player-auxiliary-danmaku-load-status\").css(\"display\") == \"none\") {\n                list_change(data_list, data_arr);\n                clearInterval(clearInter);\n            }\n        }, 100);\n    });\n}\n\n// 数据排序(快排算法)\nfunction data_sort(data_list, l, r, data_arr) {\n    if (l < r) {\n        var i = l,\n            j = r,\n            temp = data_list[l],\n            t1, t2, t3;\n        while (i < j) {\n            while (i < j && data_list[j][0] >= temp[0]) j--;\n            while (i < j && data_list[i][0] <= temp[0]) i++;\n            if (i < j) {\n                t1 = data_list[i];\n                data_list[i] = data_list[j];\n                data_list[j] = t1;\n                t2 = data_arr[i];\n                data_arr[i] = data_arr[j];\n                data_arr[j] = t2;\n            }\n        }\n\n        data_list[l] = data_list[i];\n        data_list[i] = temp;\n        t3 = data_arr[l];\n        data_arr[l] = data_arr[i];\n        data_arr[i] = t3;\n        data_sort(data_list, l, i - 1, data_arr);\n        data_sort(data_list, i + 1, r, data_arr);\n    }\n}\n\n// 时间格式转换(分转秒)\nfunction time_m_s(a) {\n    if (a.length == 2) return a[0] * 60 + a[1];\n    else return a[0] * 3600 + a[1] * 60 + a[2];\n}\n\n// 时间格式转换(秒转分)\nfunction time_s_m(a) {\n    a = Math.floor(a);\n    var m = Math.floor(a / 60);\n    var s = (a - Math.floor(a / 60) * 60);\n    if (m < 0) m = \"00\";\n    else if (m < 10) m = \"0\" + String(m);\n    if (s < 10) s = \"0\" + String(s);\n    return m + \":\" + s;\n}\n\n// 发送日期格式转换\nfunction data_s_d(a) {\n    var date = new Date(a * 1000);\n    var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n    var D = date.getDate();\n    if (D < 10) D = \"0\" + String(D) + ' ';\n    else D = D + ' ';\n    var h = date.getHours();\n    if (h < 10) h = \"0\" + String(h) + \":\";\n    else if (h == 0) h = \"00\" + \":\";\n    else h = h + \":\";\n    var m = date.getMinutes();\n    if (m < 10) m = \"0\" + String(m);\n    else if (m == 0) m = \"00\";\n    return M + D + h + m;\n}\n\n// 获取当前视频播放秒数\nfunction get_now_s() {\n    var time_now = $('.bilibili-player-video-time-now')[0].innerHTML.split(\":\");\n    $.each(time_now, function (i) {\n        time_now[i] = parseInt(time_now[i]);\n    })\n    return time_m_s(time_now);\n}\n\nfunction list_change(data_list, data_arr) {\n    // 修改页面控制\n    $(\".player-auxiliary-danmaku-btn-time\").removeAttr(\"orderby\");\n    $(\".player-auxiliary-danmaku-btn-danmaku\").removeAttr(\"orderby\");\n    $(\".player-auxiliary-danmaku-btn-date\").removeAttr(\"orderby\");\n    $(\".player-auxiliary-danmaku-function > .player-auxiliary-danmaku-btn-danmaku\")[0].innerHTML = \"滚动弹幕(共\" + data_arr.length + \"条)\";\n\n    // 弹幕排序\n    list_sort(data_list, data_arr);\n}\n\nfunction list_sort(data_list, data_arr) {\n    // 破坏初始列表结构\n    $(\".player-auxiliary-danmaku-wrap > div > ul\").empty();\n    $(\".player-auxiliary-danmaku-wrap > .player-auxiliary-danmaku-contaner\").removeClass(\"player-auxiliary-danmaku-contaner player-auxiliary-bscrollbar\");\n    $(\".player-auxiliary-danmaku-wrap\").off();\n    $(\".player-auxiliary-danmaku-wrap > div > ul\").off();\n\n    // 清除BFC\n    var div = document.createElement(\"div\");\n    var nothing = document.createTextNode(\".\");\n    div.appendChild(nothing);\n    $(\".player-auxiliary-danmaku-wrap > div > ul\")[0].appendChild(div);\n    $(div).addClass(\"BFC-nothing\");\n    $(\".BFC-nothing\").css(\"opacity\", \"0\");\n\n    // 构造有序列表\n    $(data_arr).each(function (i, v) {\n        var li = document.createElement(\"li\");\n        var span1 = document.createElement(\"span\");\n        var span2 = document.createElement(\"span\");\n        var span3 = document.createElement(\"span\");\n        var span4 = document.createElement(\"span\");\n        var text1 = document.createTextNode(time_s_m(data_list[i][0]));\n        var text2 = document.createTextNode(v);\n        var text3 = document.createTextNode(data_s_d(data_list[i][4]));\n        var text4 = document.createTextNode(\">\");\n        span1.appendChild(text1);\n        span2.appendChild(text2);\n        span3.appendChild(text3);\n        span4.appendChild(text4);\n        $(li).attr(\"dmno\", i);\n        $(span2).attr(\"title\", v);\n        $(li).addClass(\"danmaku-info-row\");\n        $(span1).addClass(\"danmaku-info-time\");\n        $(span2).addClass(\"danmaku-info-danmaku\");\n        $(span3).addClass(\"danmaku-info-date\");\n        $(span4).addClass(\"danmaku-info-animate\");\n        li.appendChild(span1);\n        li.appendChild(span2);\n        li.appendChild(span3);\n        li.appendChild(span4);\n        $(\".player-auxiliary-danmaku-wrap > div > ul\")[0].appendChild(li);\n        $('.danmaku-info-animate').css({\n            'position': 'absolute',\n            'width': '15px',\n            'height': '100%',\n            'padding': '0',\n            'left': '0px',\n            'font-size': '15px',\n            'color': 'rgb(1,185,245)',\n            'transition': '1s ease-in-out'\n        });\n    });\n\n    // 播放动画(监听视频播放进度)\n    var isChange = $(\".bilibili-player-video-time-now\")[0].innerHTML;\n    player_animate(data_list, get_now_s());\n    setInterval(function () {\n        if (isChange != $(\".bilibili-player-video-time-now\")[0].innerHTML) {\n            player_animate(data_list);  // 动画播放\n            isChange = $(\".bilibili-player-video-time-now\")[0].innerHTML;\n        }\n    }, 1000);\n}\n\n// 播放动画\nfunction player_animate(data_list) {\n    var time_now_s = get_now_s();\n    var length = data_list.length;\n    var begin = -1, end = -1;\n    for (var i = 0; i < length; i++) {\n        if (Math.floor(data_list[i][0]) < time_now_s) continue;\n        if (Math.floor(data_list[i][0]) > time_now_s) break;\n        if (begin != -1) end++;\n        if (begin == -1) begin = end = i;\n    }\n    if (end == -1) return;\n    var li_height = parseFloat($(\".player-auxiliary-danmaku-wrap > div > ul > li\").css(\"height\").replace(\"px\", \"\"));\n    var li_width = parseFloat($(\".player-auxiliary-danmaku-wrap > div > ul > li\").css(\"width\").replace(\"px\", \"\"));\n    for (var i = begin; i <= end; i++) {\n        if (length > 15 && i > 11) $(\".player-auxiliary-danmaku-wrap > div > ul > li:first\").css(\"margin-top\", \"-\" + (i - 11) * li_height + \"px\");  // 列表滚动\n        $($('.player-auxiliary-danmaku-wrap > div > ul > li')[i]).find(\".danmaku-info-animate\").css(\"left\", li_width);  // 播放动画\n    }\n}\n```\n\n如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，[仓库地址](https://github.com/YuJiZhao/script)","source":"_posts/script/bilibiliBarrageList.md","raw":"---\ntitle: bilibili弹幕列表随视频播放滚动\ndate: 2021-09-18 10:51:09\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/97.png\ntags:\n  - 脚本\ncategories: 脚本\n---\n\n以下是一些写脚本时获得的数据记录，最后面是脚本代码。\n\n抓包加上查资料拿到的弹幕数据接口：\n+ `\"https://api.bilibili.com/x/v1/dm/list.so?oid=\" + cid` 返回数据类型为XML(旧接口)。\n+ `https://api.bilibili.com/x/v2/dm/web/seg.so?oid=\" + cid + \"&type=1&segment_index=1` 返回二进制数据(新接口)\n\n二进制数据处理比较麻烦，我就用了XML的接口。\n\ncid是视频的id，也叫oid，不是AV号，获取方式有两种：\n+ 在控制台输入cid获取当前视频的cid\n+ 通过方法：`window.__INITIAL_STATE__.videoData.pages`\n\n接口测试时获取的数据如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0c98e0b2f37640ca8e490a3cb6253fbb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n弹幕的返回数据含义如下：\n\n```\n<d p=\"1611.18000,1,25,16777215,1631635549,0,ab0d3321,54811347826209280,10\">来看八爷</d>\n```\n有9个参数，经过查询并且测试获得了部分参数的含义：\n+ 参数1： `1611.18000` 弹幕出现的时间，以秒数为单位\n+ 参数2： `1` 弹幕的模式，1-3 滚动弹幕，4 底端弹幕，5顶端弹幕，6 逆向弹幕，7 精准定位，8 高级弹幕\n+ 参数3： `25` 字号 （12非常小，16特小，18小，25中，36大，45很大，64特别大）\n+ 参数4： `16777215` 字体的颜色,这串数字是十进制表示\n+ 参数5： `1631635549` unix时间戳\n+ 参数6： `0` 弹幕池类型，0普通池，1字幕池，2特殊池 【目前特殊池为高级弹幕专用】\n+ 参数7： `ab0d3321` 发送者的Hash，用于“屏蔽此弹幕的发送者”功能\n+ 参数8： `54811347826209280` 弹幕在弹幕数据库中rowID 用于“历史弹幕”功能。\n+ 参数9： `10` 未知，貌似是新增的，查阅的资料里都没有这个参数\n\n这里只有第一个参数用得到，剩下的参数会在我的另一个修改视频弹幕的脚ben里用到。\n\n最终效果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a1f518a955c248bd9947aeeccccdaf3c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n但由于该代码效率不高，对于上千或上万弹幕的视频加载较慢，因此暂时没有封装成脚本上传，后续有时间的话我会优化逻辑上传的。\n\n代码如下：\n```js\n// 允许跨域请求，防止浏览器拦截\nvar meta = document.createElement(\"meta\");\nmeta.httpEquiv = \"Access-Control-Allow-Origin\";\nmeta.content = \"*\";\n$(\"head\")[0].appendChild(meta);\n\n// 初始化若干变量\nvar page_loc = location.href;\nvar page_start = page_loc.indexOf(\"?p=\");\nvar page_p;\n\n// 获取视频cid\nif (page_start == -1 || page_start == 1) page_p = 0;\nelse page_p = page_loc.slice(page_start + 3) - 1;\nvar page_cid = window.__INITIAL_STATE__.videoData.pages[page_p].cid;\n\n// 发起请求，拿到弹幕数据\n$.ajax({\n    url: \"https://api.bilibili.com/x/v1/dm/list.so?oid=\" + page_cid,\n    type: \"GET\",\n    dataType: \"XML\",\n    success: function (xml) {\n        // 处理返回数据\n        data_deal(xml.all);\n    },\n    error: function (err) {\n        console.log(err);\n        alert(\"弹幕列表滚动脚本失效，可尝试更新最新版本脚本解决问题！\\n如果有一定编程基础可以打开控制台查看报错信息。\");\n    }\n});\n\n// 存储数据\nfunction data_deal(data) {\n    var data_list = new Array(); // 存信息\n    var data_arr = new Array(); // 存内容\n    var data_length = data.length;\n    for (var i = 8; i < data_length; i++) {\n        var data_array = data[i].attributes.p.value.split(\",\");\n        $.each(data_array, function (i) {\n            data_array[i] = parseFloat(data_array[i]); // 转换类型，便于排序\n        })\n        data_list.push(data_array);\n        data_arr.push(data[i].innerHTML);\n    }\n\n    // 执行排序\n    data_sort(data_list, 0, data_list.length - 1, data_arr);\n\n    // 修改弹幕列表\n    $(\".bui-collapse-header\").bind(\"click\", function () {\n        var clearInter = setInterval(function () {\n            if ($(\".player-auxiliary-danmaku-load-status\").css(\"display\") == \"none\") {\n                list_change(data_list, data_arr);\n                clearInterval(clearInter);\n            }\n        }, 100);\n    });\n}\n\n// 数据排序(快排算法)\nfunction data_sort(data_list, l, r, data_arr) {\n    if (l < r) {\n        var i = l,\n            j = r,\n            temp = data_list[l],\n            t1, t2, t3;\n        while (i < j) {\n            while (i < j && data_list[j][0] >= temp[0]) j--;\n            while (i < j && data_list[i][0] <= temp[0]) i++;\n            if (i < j) {\n                t1 = data_list[i];\n                data_list[i] = data_list[j];\n                data_list[j] = t1;\n                t2 = data_arr[i];\n                data_arr[i] = data_arr[j];\n                data_arr[j] = t2;\n            }\n        }\n\n        data_list[l] = data_list[i];\n        data_list[i] = temp;\n        t3 = data_arr[l];\n        data_arr[l] = data_arr[i];\n        data_arr[i] = t3;\n        data_sort(data_list, l, i - 1, data_arr);\n        data_sort(data_list, i + 1, r, data_arr);\n    }\n}\n\n// 时间格式转换(分转秒)\nfunction time_m_s(a) {\n    if (a.length == 2) return a[0] * 60 + a[1];\n    else return a[0] * 3600 + a[1] * 60 + a[2];\n}\n\n// 时间格式转换(秒转分)\nfunction time_s_m(a) {\n    a = Math.floor(a);\n    var m = Math.floor(a / 60);\n    var s = (a - Math.floor(a / 60) * 60);\n    if (m < 0) m = \"00\";\n    else if (m < 10) m = \"0\" + String(m);\n    if (s < 10) s = \"0\" + String(s);\n    return m + \":\" + s;\n}\n\n// 发送日期格式转换\nfunction data_s_d(a) {\n    var date = new Date(a * 1000);\n    var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n    var D = date.getDate();\n    if (D < 10) D = \"0\" + String(D) + ' ';\n    else D = D + ' ';\n    var h = date.getHours();\n    if (h < 10) h = \"0\" + String(h) + \":\";\n    else if (h == 0) h = \"00\" + \":\";\n    else h = h + \":\";\n    var m = date.getMinutes();\n    if (m < 10) m = \"0\" + String(m);\n    else if (m == 0) m = \"00\";\n    return M + D + h + m;\n}\n\n// 获取当前视频播放秒数\nfunction get_now_s() {\n    var time_now = $('.bilibili-player-video-time-now')[0].innerHTML.split(\":\");\n    $.each(time_now, function (i) {\n        time_now[i] = parseInt(time_now[i]);\n    })\n    return time_m_s(time_now);\n}\n\nfunction list_change(data_list, data_arr) {\n    // 修改页面控制\n    $(\".player-auxiliary-danmaku-btn-time\").removeAttr(\"orderby\");\n    $(\".player-auxiliary-danmaku-btn-danmaku\").removeAttr(\"orderby\");\n    $(\".player-auxiliary-danmaku-btn-date\").removeAttr(\"orderby\");\n    $(\".player-auxiliary-danmaku-function > .player-auxiliary-danmaku-btn-danmaku\")[0].innerHTML = \"滚动弹幕(共\" + data_arr.length + \"条)\";\n\n    // 弹幕排序\n    list_sort(data_list, data_arr);\n}\n\nfunction list_sort(data_list, data_arr) {\n    // 破坏初始列表结构\n    $(\".player-auxiliary-danmaku-wrap > div > ul\").empty();\n    $(\".player-auxiliary-danmaku-wrap > .player-auxiliary-danmaku-contaner\").removeClass(\"player-auxiliary-danmaku-contaner player-auxiliary-bscrollbar\");\n    $(\".player-auxiliary-danmaku-wrap\").off();\n    $(\".player-auxiliary-danmaku-wrap > div > ul\").off();\n\n    // 清除BFC\n    var div = document.createElement(\"div\");\n    var nothing = document.createTextNode(\".\");\n    div.appendChild(nothing);\n    $(\".player-auxiliary-danmaku-wrap > div > ul\")[0].appendChild(div);\n    $(div).addClass(\"BFC-nothing\");\n    $(\".BFC-nothing\").css(\"opacity\", \"0\");\n\n    // 构造有序列表\n    $(data_arr).each(function (i, v) {\n        var li = document.createElement(\"li\");\n        var span1 = document.createElement(\"span\");\n        var span2 = document.createElement(\"span\");\n        var span3 = document.createElement(\"span\");\n        var span4 = document.createElement(\"span\");\n        var text1 = document.createTextNode(time_s_m(data_list[i][0]));\n        var text2 = document.createTextNode(v);\n        var text3 = document.createTextNode(data_s_d(data_list[i][4]));\n        var text4 = document.createTextNode(\">\");\n        span1.appendChild(text1);\n        span2.appendChild(text2);\n        span3.appendChild(text3);\n        span4.appendChild(text4);\n        $(li).attr(\"dmno\", i);\n        $(span2).attr(\"title\", v);\n        $(li).addClass(\"danmaku-info-row\");\n        $(span1).addClass(\"danmaku-info-time\");\n        $(span2).addClass(\"danmaku-info-danmaku\");\n        $(span3).addClass(\"danmaku-info-date\");\n        $(span4).addClass(\"danmaku-info-animate\");\n        li.appendChild(span1);\n        li.appendChild(span2);\n        li.appendChild(span3);\n        li.appendChild(span4);\n        $(\".player-auxiliary-danmaku-wrap > div > ul\")[0].appendChild(li);\n        $('.danmaku-info-animate').css({\n            'position': 'absolute',\n            'width': '15px',\n            'height': '100%',\n            'padding': '0',\n            'left': '0px',\n            'font-size': '15px',\n            'color': 'rgb(1,185,245)',\n            'transition': '1s ease-in-out'\n        });\n    });\n\n    // 播放动画(监听视频播放进度)\n    var isChange = $(\".bilibili-player-video-time-now\")[0].innerHTML;\n    player_animate(data_list, get_now_s());\n    setInterval(function () {\n        if (isChange != $(\".bilibili-player-video-time-now\")[0].innerHTML) {\n            player_animate(data_list);  // 动画播放\n            isChange = $(\".bilibili-player-video-time-now\")[0].innerHTML;\n        }\n    }, 1000);\n}\n\n// 播放动画\nfunction player_animate(data_list) {\n    var time_now_s = get_now_s();\n    var length = data_list.length;\n    var begin = -1, end = -1;\n    for (var i = 0; i < length; i++) {\n        if (Math.floor(data_list[i][0]) < time_now_s) continue;\n        if (Math.floor(data_list[i][0]) > time_now_s) break;\n        if (begin != -1) end++;\n        if (begin == -1) begin = end = i;\n    }\n    if (end == -1) return;\n    var li_height = parseFloat($(\".player-auxiliary-danmaku-wrap > div > ul > li\").css(\"height\").replace(\"px\", \"\"));\n    var li_width = parseFloat($(\".player-auxiliary-danmaku-wrap > div > ul > li\").css(\"width\").replace(\"px\", \"\"));\n    for (var i = begin; i <= end; i++) {\n        if (length > 15 && i > 11) $(\".player-auxiliary-danmaku-wrap > div > ul > li:first\").css(\"margin-top\", \"-\" + (i - 11) * li_height + \"px\");  // 列表滚动\n        $($('.player-auxiliary-danmaku-wrap > div > ul > li')[i]).find(\".danmaku-info-animate\").css(\"left\", li_width);  // 播放动画\n    }\n}\n```\n\n如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，[仓库地址](https://github.com/YuJiZhao/script)","slug":"script/bilibiliBarrageList","published":1,"updated":"2021-12-03T15:00:23.090Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958bd001rasda2n1ydilm","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>以下是一些写脚本时获得的数据记录，最后面是脚本代码。</p>\n<p>抓包加上查资料拿到的弹幕数据接口：</p>\n<ul>\n<li><code>&quot;https://api.bilibili.com/x/v1/dm/list.so?oid=&quot; + cid</code> 返回数据类型为XML(旧接口)。</li>\n<li><code>https://api.bilibili.com/x/v2/dm/web/seg.so?oid=&quot; + cid + &quot;&amp;type=1&amp;segment_index=1</code> 返回二进制数据(新接口)</li>\n</ul>\n<p>二进制数据处理比较麻烦，我就用了XML的接口。</p>\n<p>cid是视频的id，也叫oid，不是AV号，获取方式有两种：</p>\n<ul>\n<li>在控制台输入cid获取当前视频的cid</li>\n<li>通过方法：<code>window.__INITIAL_STATE__.videoData.pages</code></li>\n</ul>\n<p>接口测试时获取的数据如下：<br><img src=\"https://img-blog.csdnimg.cn/0c98e0b2f37640ca8e490a3cb6253fbb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>弹幕的返回数据含义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;d p=&quot;1611.18000,1,25,16777215,1631635549,0,ab0d3321,54811347826209280,10&quot;&gt;来看八爷&lt;/d&gt;</span><br></pre></td></tr></table></figure>\n<p>有9个参数，经过查询并且测试获得了部分参数的含义：</p>\n<ul>\n<li>参数1： <code>1611.18000</code> 弹幕出现的时间，以秒数为单位</li>\n<li>参数2： <code>1</code> 弹幕的模式，1-3 滚动弹幕，4 底端弹幕，5顶端弹幕，6 逆向弹幕，7 精准定位，8 高级弹幕</li>\n<li>参数3： <code>25</code> 字号 （12非常小，16特小，18小，25中，36大，45很大，64特别大）</li>\n<li>参数4： <code>16777215</code> 字体的颜色,这串数字是十进制表示</li>\n<li>参数5： <code>1631635549</code> unix时间戳</li>\n<li>参数6： <code>0</code> 弹幕池类型，0普通池，1字幕池，2特殊池 【目前特殊池为高级弹幕专用】</li>\n<li>参数7： <code>ab0d3321</code> 发送者的Hash，用于“屏蔽此弹幕的发送者”功能</li>\n<li>参数8： <code>54811347826209280</code> 弹幕在弹幕数据库中rowID 用于“历史弹幕”功能。</li>\n<li>参数9： <code>10</code> 未知，貌似是新增的，查阅的资料里都没有这个参数</li>\n</ul>\n<p>这里只有第一个参数用得到，剩下的参数会在我的另一个修改视频弹幕的脚ben里用到。</p>\n<p>最终效果如下：<br><img src=\"https://img-blog.csdnimg.cn/a1f518a955c248bd9947aeeccccdaf3c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>但由于该代码效率不高，对于上千或上万弹幕的视频加载较慢，因此暂时没有封装成脚本上传，后续有时间的话我会优化逻辑上传的。</p>\n<p>代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 允许跨域请求，防止浏览器拦截</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> meta = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;meta&quot;</span>);</span><br><span class=\"line\">meta.httpEquiv = <span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>;</span><br><span class=\"line\">meta.content = <span class=\"string\">&quot;*&quot;</span>;</span><br><span class=\"line\">$(<span class=\"string\">&quot;head&quot;</span>)[<span class=\"number\">0</span>].appendChild(meta);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化若干变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> page_loc = location.href;</span><br><span class=\"line\"><span class=\"keyword\">var</span> page_start = page_loc.indexOf(<span class=\"string\">&quot;?p=&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> page_p;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取视频cid</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (page_start == -<span class=\"number\">1</span> || page_start == <span class=\"number\">1</span>) page_p = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> page_p = page_loc.slice(page_start + <span class=\"number\">3</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> page_cid = <span class=\"built_in\">window</span>.__INITIAL_STATE__.videoData.pages[page_p].cid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发起请求，拿到弹幕数据</span></span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&quot;https://api.bilibili.com/x/v1/dm/list.so?oid=&quot;</span> + page_cid,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">dataType</span>: <span class=\"string\">&quot;XML&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">xml</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 处理返回数据</span></span><br><span class=\"line\">        data_deal(xml.all);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">error</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">        alert(<span class=\"string\">&quot;弹幕列表滚动脚本失效，可尝试更新最新版本脚本解决问题！\\n如果有一定编程基础可以打开控制台查看报错信息。&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 存储数据</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">data_deal</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> data_list = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(); <span class=\"comment\">// 存信息</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> data_arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(); <span class=\"comment\">// 存内容</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> data_length = data.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">8</span>; i &lt; data_length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data_array = data[i].attributes.p.value.split(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">        $.each(data_array, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">            data_array[i] = <span class=\"built_in\">parseFloat</span>(data_array[i]); <span class=\"comment\">// 转换类型，便于排序</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        data_list.push(data_array);</span><br><span class=\"line\">        data_arr.push(data[i].innerHTML);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 执行排序</span></span><br><span class=\"line\">    data_sort(data_list, <span class=\"number\">0</span>, data_list.length - <span class=\"number\">1</span>, data_arr);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 修改弹幕列表</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;.bui-collapse-header&quot;</span>).bind(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clearInter = <span class=\"built_in\">setInterval</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($(<span class=\"string\">&quot;.player-auxiliary-danmaku-load-status&quot;</span>).css(<span class=\"string\">&quot;display&quot;</span>) == <span class=\"string\">&quot;none&quot;</span>) &#123;</span><br><span class=\"line\">                list_change(data_list, data_arr);</span><br><span class=\"line\">                <span class=\"built_in\">clearInterval</span>(clearInter);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数据排序(快排算法)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">data_sort</span>(<span class=\"params\">data_list, l, r, data_arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l &lt; r) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = l,</span><br><span class=\"line\">            j = r,</span><br><span class=\"line\">            temp = data_list[l],</span><br><span class=\"line\">            t1, t2, t3;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; data_list[j][<span class=\"number\">0</span>] &gt;= temp[<span class=\"number\">0</span>]) j--;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; data_list[i][<span class=\"number\">0</span>] &lt;= temp[<span class=\"number\">0</span>]) i++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; j) &#123;</span><br><span class=\"line\">                t1 = data_list[i];</span><br><span class=\"line\">                data_list[i] = data_list[j];</span><br><span class=\"line\">                data_list[j] = t1;</span><br><span class=\"line\">                t2 = data_arr[i];</span><br><span class=\"line\">                data_arr[i] = data_arr[j];</span><br><span class=\"line\">                data_arr[j] = t2;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        data_list[l] = data_list[i];</span><br><span class=\"line\">        data_list[i] = temp;</span><br><span class=\"line\">        t3 = data_arr[l];</span><br><span class=\"line\">        data_arr[l] = data_arr[i];</span><br><span class=\"line\">        data_arr[i] = t3;</span><br><span class=\"line\">        data_sort(data_list, l, i - <span class=\"number\">1</span>, data_arr);</span><br><span class=\"line\">        data_sort(data_list, i + <span class=\"number\">1</span>, r, data_arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 时间格式转换(分转秒)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">time_m_s</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.length == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> a[<span class=\"number\">0</span>] * <span class=\"number\">60</span> + a[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> a[<span class=\"number\">0</span>] * <span class=\"number\">3600</span> + a[<span class=\"number\">1</span>] * <span class=\"number\">60</span> + a[<span class=\"number\">2</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 时间格式转换(秒转分)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">time_s_m</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    a = <span class=\"built_in\">Math</span>.floor(a);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> m = <span class=\"built_in\">Math</span>.floor(a / <span class=\"number\">60</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = (a - <span class=\"built_in\">Math</span>.floor(a / <span class=\"number\">60</span>) * <span class=\"number\">60</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m &lt; <span class=\"number\">0</span>) m = <span class=\"string\">&quot;00&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (m &lt; <span class=\"number\">10</span>) m = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(m);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s &lt; <span class=\"number\">10</span>) s = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(s);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m + <span class=\"string\">&quot;:&quot;</span> + s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送日期格式转换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">data_s_d</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(a * <span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> M = (date.getMonth() + <span class=\"number\">1</span> &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + (date.getMonth() + <span class=\"number\">1</span>) : date.getMonth() + <span class=\"number\">1</span>) + <span class=\"string\">&#x27;-&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> D = date.getDate();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (D &lt; <span class=\"number\">10</span>) D = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(D) + <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> D = D + <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> h = date.getHours();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (h &lt; <span class=\"number\">10</span>) h = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(h) + <span class=\"string\">&quot;:&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (h == <span class=\"number\">0</span>) h = <span class=\"string\">&quot;00&quot;</span> + <span class=\"string\">&quot;:&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> h = h + <span class=\"string\">&quot;:&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> m = date.getMinutes();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m &lt; <span class=\"number\">10</span>) m = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(m);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (m == <span class=\"number\">0</span>) m = <span class=\"string\">&quot;00&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> M + D + h + m;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取当前视频播放秒数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_now_s</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> time_now = $(<span class=\"string\">&#x27;.bilibili-player-video-time-now&#x27;</span>)[<span class=\"number\">0</span>].innerHTML.split(<span class=\"string\">&quot;:&quot;</span>);</span><br><span class=\"line\">    $.each(time_now, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">        time_now[i] = <span class=\"built_in\">parseInt</span>(time_now[i]);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> time_m_s(time_now);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">list_change</span>(<span class=\"params\">data_list, data_arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 修改页面控制</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-btn-time&quot;</span>).removeAttr(<span class=\"string\">&quot;orderby&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-btn-danmaku&quot;</span>).removeAttr(<span class=\"string\">&quot;orderby&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-btn-date&quot;</span>).removeAttr(<span class=\"string\">&quot;orderby&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-function &gt; .player-auxiliary-danmaku-btn-danmaku&quot;</span>)[<span class=\"number\">0</span>].innerHTML = <span class=\"string\">&quot;滚动弹幕(共&quot;</span> + data_arr.length + <span class=\"string\">&quot;条)&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 弹幕排序</span></span><br><span class=\"line\">    list_sort(data_list, data_arr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">list_sort</span>(<span class=\"params\">data_list, data_arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 破坏初始列表结构</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul&quot;</span>).empty();</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; .player-auxiliary-danmaku-contaner&quot;</span>).removeClass(<span class=\"string\">&quot;player-auxiliary-danmaku-contaner player-auxiliary-bscrollbar&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap&quot;</span>).off();</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul&quot;</span>).off();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清除BFC</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> div = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> nothing = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">    div.appendChild(nothing);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul&quot;</span>)[<span class=\"number\">0</span>].appendChild(div);</span><br><span class=\"line\">    $(div).addClass(<span class=\"string\">&quot;BFC-nothing&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.BFC-nothing&quot;</span>).css(<span class=\"string\">&quot;opacity&quot;</span>, <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造有序列表</span></span><br><span class=\"line\">    $(data_arr).each(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, v</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> li = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;li&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> span1 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> span2 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> span3 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> span4 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text1 = <span class=\"built_in\">document</span>.createTextNode(time_s_m(data_list[i][<span class=\"number\">0</span>]));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text2 = <span class=\"built_in\">document</span>.createTextNode(v);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text3 = <span class=\"built_in\">document</span>.createTextNode(data_s_d(data_list[i][<span class=\"number\">4</span>]));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text4 = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">&quot;&gt;&quot;</span>);</span><br><span class=\"line\">        span1.appendChild(text1);</span><br><span class=\"line\">        span2.appendChild(text2);</span><br><span class=\"line\">        span3.appendChild(text3);</span><br><span class=\"line\">        span4.appendChild(text4);</span><br><span class=\"line\">        $(li).attr(<span class=\"string\">&quot;dmno&quot;</span>, i);</span><br><span class=\"line\">        $(span2).attr(<span class=\"string\">&quot;title&quot;</span>, v);</span><br><span class=\"line\">        $(li).addClass(<span class=\"string\">&quot;danmaku-info-row&quot;</span>);</span><br><span class=\"line\">        $(span1).addClass(<span class=\"string\">&quot;danmaku-info-time&quot;</span>);</span><br><span class=\"line\">        $(span2).addClass(<span class=\"string\">&quot;danmaku-info-danmaku&quot;</span>);</span><br><span class=\"line\">        $(span3).addClass(<span class=\"string\">&quot;danmaku-info-date&quot;</span>);</span><br><span class=\"line\">        $(span4).addClass(<span class=\"string\">&quot;danmaku-info-animate&quot;</span>);</span><br><span class=\"line\">        li.appendChild(span1);</span><br><span class=\"line\">        li.appendChild(span2);</span><br><span class=\"line\">        li.appendChild(span3);</span><br><span class=\"line\">        li.appendChild(span4);</span><br><span class=\"line\">        $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul&quot;</span>)[<span class=\"number\">0</span>].appendChild(li);</span><br><span class=\"line\">        $(<span class=\"string\">&#x27;.danmaku-info-animate&#x27;</span>).css(&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;position&#x27;</span>: <span class=\"string\">&#x27;absolute&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;width&#x27;</span>: <span class=\"string\">&#x27;15px&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;height&#x27;</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;padding&#x27;</span>: <span class=\"string\">&#x27;0&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;left&#x27;</span>: <span class=\"string\">&#x27;0px&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;font-size&#x27;</span>: <span class=\"string\">&#x27;15px&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;color&#x27;</span>: <span class=\"string\">&#x27;rgb(1,185,245)&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;transition&#x27;</span>: <span class=\"string\">&#x27;1s ease-in-out&#x27;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 播放动画(监听视频播放进度)</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> isChange = $(<span class=\"string\">&quot;.bilibili-player-video-time-now&quot;</span>)[<span class=\"number\">0</span>].innerHTML;</span><br><span class=\"line\">    player_animate(data_list, get_now_s());</span><br><span class=\"line\">    <span class=\"built_in\">setInterval</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isChange != $(<span class=\"string\">&quot;.bilibili-player-video-time-now&quot;</span>)[<span class=\"number\">0</span>].innerHTML) &#123;</span><br><span class=\"line\">            player_animate(data_list);  <span class=\"comment\">// 动画播放</span></span><br><span class=\"line\">            isChange = $(<span class=\"string\">&quot;.bilibili-player-video-time-now&quot;</span>)[<span class=\"number\">0</span>].innerHTML;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 播放动画</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">player_animate</span>(<span class=\"params\">data_list</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> time_now_s = get_now_s();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> length = data_list.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> begin = -<span class=\"number\">1</span>, end = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.floor(data_list[i][<span class=\"number\">0</span>]) &lt; time_now_s) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.floor(data_list[i][<span class=\"number\">0</span>]) &gt; time_now_s) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (begin != -<span class=\"number\">1</span>) end++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (begin == -<span class=\"number\">1</span>) begin = end = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (end == -<span class=\"number\">1</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> li_height = <span class=\"built_in\">parseFloat</span>($(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul &gt; li&quot;</span>).css(<span class=\"string\">&quot;height&quot;</span>).replace(<span class=\"string\">&quot;px&quot;</span>, <span class=\"string\">&quot;&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> li_width = <span class=\"built_in\">parseFloat</span>($(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul &gt; li&quot;</span>).css(<span class=\"string\">&quot;width&quot;</span>).replace(<span class=\"string\">&quot;px&quot;</span>, <span class=\"string\">&quot;&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = begin; i &lt;= end; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (length &gt; <span class=\"number\">15</span> &amp;&amp; i &gt; <span class=\"number\">11</span>) $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul &gt; li:first&quot;</span>).css(<span class=\"string\">&quot;margin-top&quot;</span>, <span class=\"string\">&quot;-&quot;</span> + (i - <span class=\"number\">11</span>) * li_height + <span class=\"string\">&quot;px&quot;</span>);  <span class=\"comment\">// 列表滚动</span></span><br><span class=\"line\">        $($(<span class=\"string\">&#x27;.player-auxiliary-danmaku-wrap &gt; div &gt; ul &gt; li&#x27;</span>)[i]).find(<span class=\"string\">&quot;.danmaku-info-animate&quot;</span>).css(<span class=\"string\">&quot;left&quot;</span>, li_width);  <span class=\"comment\">// 播放动画</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，<a href=\"https://github.com/YuJiZhao/script\">仓库地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>以下是一些写脚本时获得的数据记录，最后面是脚本代码。</p>\n<p>抓包加上查资料拿到的弹幕数据接口：</p>\n<ul>\n<li><code>&quot;https://api.bilibili.com/x/v1/dm/list.so?oid=&quot; + cid</code> 返回数据类型为XML(旧接口)。</li>\n<li><code>https://api.bilibili.com/x/v2/dm/web/seg.so?oid=&quot; + cid + &quot;&amp;type=1&amp;segment_index=1</code> 返回二进制数据(新接口)</li>\n</ul>\n<p>二进制数据处理比较麻烦，我就用了XML的接口。</p>\n<p>cid是视频的id，也叫oid，不是AV号，获取方式有两种：</p>\n<ul>\n<li>在控制台输入cid获取当前视频的cid</li>\n<li>通过方法：<code>window.__INITIAL_STATE__.videoData.pages</code></li>\n</ul>\n<p>接口测试时获取的数据如下：<br><img src=\"https://img-blog.csdnimg.cn/0c98e0b2f37640ca8e490a3cb6253fbb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>弹幕的返回数据含义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;d p=&quot;1611.18000,1,25,16777215,1631635549,0,ab0d3321,54811347826209280,10&quot;&gt;来看八爷&lt;/d&gt;</span><br></pre></td></tr></table></figure>\n<p>有9个参数，经过查询并且测试获得了部分参数的含义：</p>\n<ul>\n<li>参数1： <code>1611.18000</code> 弹幕出现的时间，以秒数为单位</li>\n<li>参数2： <code>1</code> 弹幕的模式，1-3 滚动弹幕，4 底端弹幕，5顶端弹幕，6 逆向弹幕，7 精准定位，8 高级弹幕</li>\n<li>参数3： <code>25</code> 字号 （12非常小，16特小，18小，25中，36大，45很大，64特别大）</li>\n<li>参数4： <code>16777215</code> 字体的颜色,这串数字是十进制表示</li>\n<li>参数5： <code>1631635549</code> unix时间戳</li>\n<li>参数6： <code>0</code> 弹幕池类型，0普通池，1字幕池，2特殊池 【目前特殊池为高级弹幕专用】</li>\n<li>参数7： <code>ab0d3321</code> 发送者的Hash，用于“屏蔽此弹幕的发送者”功能</li>\n<li>参数8： <code>54811347826209280</code> 弹幕在弹幕数据库中rowID 用于“历史弹幕”功能。</li>\n<li>参数9： <code>10</code> 未知，貌似是新增的，查阅的资料里都没有这个参数</li>\n</ul>\n<p>这里只有第一个参数用得到，剩下的参数会在我的另一个修改视频弹幕的脚ben里用到。</p>\n<p>最终效果如下：<br><img src=\"https://img-blog.csdnimg.cn/a1f518a955c248bd9947aeeccccdaf3c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>但由于该代码效率不高，对于上千或上万弹幕的视频加载较慢，因此暂时没有封装成脚本上传，后续有时间的话我会优化逻辑上传的。</p>\n<p>代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 允许跨域请求，防止浏览器拦截</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> meta = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;meta&quot;</span>);</span><br><span class=\"line\">meta.httpEquiv = <span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>;</span><br><span class=\"line\">meta.content = <span class=\"string\">&quot;*&quot;</span>;</span><br><span class=\"line\">$(<span class=\"string\">&quot;head&quot;</span>)[<span class=\"number\">0</span>].appendChild(meta);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化若干变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> page_loc = location.href;</span><br><span class=\"line\"><span class=\"keyword\">var</span> page_start = page_loc.indexOf(<span class=\"string\">&quot;?p=&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> page_p;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取视频cid</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (page_start == -<span class=\"number\">1</span> || page_start == <span class=\"number\">1</span>) page_p = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span> page_p = page_loc.slice(page_start + <span class=\"number\">3</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> page_cid = <span class=\"built_in\">window</span>.__INITIAL_STATE__.videoData.pages[page_p].cid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发起请求，拿到弹幕数据</span></span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&quot;https://api.bilibili.com/x/v1/dm/list.so?oid=&quot;</span> + page_cid,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">dataType</span>: <span class=\"string\">&quot;XML&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">xml</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 处理返回数据</span></span><br><span class=\"line\">        data_deal(xml.all);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">error</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">        alert(<span class=\"string\">&quot;弹幕列表滚动脚本失效，可尝试更新最新版本脚本解决问题！\\n如果有一定编程基础可以打开控制台查看报错信息。&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 存储数据</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">data_deal</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> data_list = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(); <span class=\"comment\">// 存信息</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> data_arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(); <span class=\"comment\">// 存内容</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> data_length = data.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">8</span>; i &lt; data_length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data_array = data[i].attributes.p.value.split(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">        $.each(data_array, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">            data_array[i] = <span class=\"built_in\">parseFloat</span>(data_array[i]); <span class=\"comment\">// 转换类型，便于排序</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        data_list.push(data_array);</span><br><span class=\"line\">        data_arr.push(data[i].innerHTML);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 执行排序</span></span><br><span class=\"line\">    data_sort(data_list, <span class=\"number\">0</span>, data_list.length - <span class=\"number\">1</span>, data_arr);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 修改弹幕列表</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;.bui-collapse-header&quot;</span>).bind(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clearInter = <span class=\"built_in\">setInterval</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($(<span class=\"string\">&quot;.player-auxiliary-danmaku-load-status&quot;</span>).css(<span class=\"string\">&quot;display&quot;</span>) == <span class=\"string\">&quot;none&quot;</span>) &#123;</span><br><span class=\"line\">                list_change(data_list, data_arr);</span><br><span class=\"line\">                <span class=\"built_in\">clearInterval</span>(clearInter);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数据排序(快排算法)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">data_sort</span>(<span class=\"params\">data_list, l, r, data_arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l &lt; r) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = l,</span><br><span class=\"line\">            j = r,</span><br><span class=\"line\">            temp = data_list[l],</span><br><span class=\"line\">            t1, t2, t3;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; data_list[j][<span class=\"number\">0</span>] &gt;= temp[<span class=\"number\">0</span>]) j--;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; data_list[i][<span class=\"number\">0</span>] &lt;= temp[<span class=\"number\">0</span>]) i++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; j) &#123;</span><br><span class=\"line\">                t1 = data_list[i];</span><br><span class=\"line\">                data_list[i] = data_list[j];</span><br><span class=\"line\">                data_list[j] = t1;</span><br><span class=\"line\">                t2 = data_arr[i];</span><br><span class=\"line\">                data_arr[i] = data_arr[j];</span><br><span class=\"line\">                data_arr[j] = t2;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        data_list[l] = data_list[i];</span><br><span class=\"line\">        data_list[i] = temp;</span><br><span class=\"line\">        t3 = data_arr[l];</span><br><span class=\"line\">        data_arr[l] = data_arr[i];</span><br><span class=\"line\">        data_arr[i] = t3;</span><br><span class=\"line\">        data_sort(data_list, l, i - <span class=\"number\">1</span>, data_arr);</span><br><span class=\"line\">        data_sort(data_list, i + <span class=\"number\">1</span>, r, data_arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 时间格式转换(分转秒)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">time_m_s</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.length == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> a[<span class=\"number\">0</span>] * <span class=\"number\">60</span> + a[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> a[<span class=\"number\">0</span>] * <span class=\"number\">3600</span> + a[<span class=\"number\">1</span>] * <span class=\"number\">60</span> + a[<span class=\"number\">2</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 时间格式转换(秒转分)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">time_s_m</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    a = <span class=\"built_in\">Math</span>.floor(a);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> m = <span class=\"built_in\">Math</span>.floor(a / <span class=\"number\">60</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = (a - <span class=\"built_in\">Math</span>.floor(a / <span class=\"number\">60</span>) * <span class=\"number\">60</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m &lt; <span class=\"number\">0</span>) m = <span class=\"string\">&quot;00&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (m &lt; <span class=\"number\">10</span>) m = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(m);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s &lt; <span class=\"number\">10</span>) s = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(s);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m + <span class=\"string\">&quot;:&quot;</span> + s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送日期格式转换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">data_s_d</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(a * <span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> M = (date.getMonth() + <span class=\"number\">1</span> &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + (date.getMonth() + <span class=\"number\">1</span>) : date.getMonth() + <span class=\"number\">1</span>) + <span class=\"string\">&#x27;-&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> D = date.getDate();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (D &lt; <span class=\"number\">10</span>) D = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(D) + <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> D = D + <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> h = date.getHours();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (h &lt; <span class=\"number\">10</span>) h = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(h) + <span class=\"string\">&quot;:&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (h == <span class=\"number\">0</span>) h = <span class=\"string\">&quot;00&quot;</span> + <span class=\"string\">&quot;:&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> h = h + <span class=\"string\">&quot;:&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> m = date.getMinutes();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m &lt; <span class=\"number\">10</span>) m = <span class=\"string\">&quot;0&quot;</span> + <span class=\"built_in\">String</span>(m);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (m == <span class=\"number\">0</span>) m = <span class=\"string\">&quot;00&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> M + D + h + m;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取当前视频播放秒数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_now_s</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> time_now = $(<span class=\"string\">&#x27;.bilibili-player-video-time-now&#x27;</span>)[<span class=\"number\">0</span>].innerHTML.split(<span class=\"string\">&quot;:&quot;</span>);</span><br><span class=\"line\">    $.each(time_now, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">        time_now[i] = <span class=\"built_in\">parseInt</span>(time_now[i]);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> time_m_s(time_now);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">list_change</span>(<span class=\"params\">data_list, data_arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 修改页面控制</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-btn-time&quot;</span>).removeAttr(<span class=\"string\">&quot;orderby&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-btn-danmaku&quot;</span>).removeAttr(<span class=\"string\">&quot;orderby&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-btn-date&quot;</span>).removeAttr(<span class=\"string\">&quot;orderby&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-function &gt; .player-auxiliary-danmaku-btn-danmaku&quot;</span>)[<span class=\"number\">0</span>].innerHTML = <span class=\"string\">&quot;滚动弹幕(共&quot;</span> + data_arr.length + <span class=\"string\">&quot;条)&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 弹幕排序</span></span><br><span class=\"line\">    list_sort(data_list, data_arr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">list_sort</span>(<span class=\"params\">data_list, data_arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 破坏初始列表结构</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul&quot;</span>).empty();</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; .player-auxiliary-danmaku-contaner&quot;</span>).removeClass(<span class=\"string\">&quot;player-auxiliary-danmaku-contaner player-auxiliary-bscrollbar&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap&quot;</span>).off();</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul&quot;</span>).off();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清除BFC</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> div = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> nothing = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">    div.appendChild(nothing);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul&quot;</span>)[<span class=\"number\">0</span>].appendChild(div);</span><br><span class=\"line\">    $(div).addClass(<span class=\"string\">&quot;BFC-nothing&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;.BFC-nothing&quot;</span>).css(<span class=\"string\">&quot;opacity&quot;</span>, <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造有序列表</span></span><br><span class=\"line\">    $(data_arr).each(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, v</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> li = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;li&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> span1 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> span2 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> span3 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> span4 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&quot;span&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text1 = <span class=\"built_in\">document</span>.createTextNode(time_s_m(data_list[i][<span class=\"number\">0</span>]));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text2 = <span class=\"built_in\">document</span>.createTextNode(v);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text3 = <span class=\"built_in\">document</span>.createTextNode(data_s_d(data_list[i][<span class=\"number\">4</span>]));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text4 = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">&quot;&gt;&quot;</span>);</span><br><span class=\"line\">        span1.appendChild(text1);</span><br><span class=\"line\">        span2.appendChild(text2);</span><br><span class=\"line\">        span3.appendChild(text3);</span><br><span class=\"line\">        span4.appendChild(text4);</span><br><span class=\"line\">        $(li).attr(<span class=\"string\">&quot;dmno&quot;</span>, i);</span><br><span class=\"line\">        $(span2).attr(<span class=\"string\">&quot;title&quot;</span>, v);</span><br><span class=\"line\">        $(li).addClass(<span class=\"string\">&quot;danmaku-info-row&quot;</span>);</span><br><span class=\"line\">        $(span1).addClass(<span class=\"string\">&quot;danmaku-info-time&quot;</span>);</span><br><span class=\"line\">        $(span2).addClass(<span class=\"string\">&quot;danmaku-info-danmaku&quot;</span>);</span><br><span class=\"line\">        $(span3).addClass(<span class=\"string\">&quot;danmaku-info-date&quot;</span>);</span><br><span class=\"line\">        $(span4).addClass(<span class=\"string\">&quot;danmaku-info-animate&quot;</span>);</span><br><span class=\"line\">        li.appendChild(span1);</span><br><span class=\"line\">        li.appendChild(span2);</span><br><span class=\"line\">        li.appendChild(span3);</span><br><span class=\"line\">        li.appendChild(span4);</span><br><span class=\"line\">        $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul&quot;</span>)[<span class=\"number\">0</span>].appendChild(li);</span><br><span class=\"line\">        $(<span class=\"string\">&#x27;.danmaku-info-animate&#x27;</span>).css(&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;position&#x27;</span>: <span class=\"string\">&#x27;absolute&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;width&#x27;</span>: <span class=\"string\">&#x27;15px&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;height&#x27;</span>: <span class=\"string\">&#x27;100%&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;padding&#x27;</span>: <span class=\"string\">&#x27;0&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;left&#x27;</span>: <span class=\"string\">&#x27;0px&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;font-size&#x27;</span>: <span class=\"string\">&#x27;15px&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;color&#x27;</span>: <span class=\"string\">&#x27;rgb(1,185,245)&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;transition&#x27;</span>: <span class=\"string\">&#x27;1s ease-in-out&#x27;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 播放动画(监听视频播放进度)</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> isChange = $(<span class=\"string\">&quot;.bilibili-player-video-time-now&quot;</span>)[<span class=\"number\">0</span>].innerHTML;</span><br><span class=\"line\">    player_animate(data_list, get_now_s());</span><br><span class=\"line\">    <span class=\"built_in\">setInterval</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isChange != $(<span class=\"string\">&quot;.bilibili-player-video-time-now&quot;</span>)[<span class=\"number\">0</span>].innerHTML) &#123;</span><br><span class=\"line\">            player_animate(data_list);  <span class=\"comment\">// 动画播放</span></span><br><span class=\"line\">            isChange = $(<span class=\"string\">&quot;.bilibili-player-video-time-now&quot;</span>)[<span class=\"number\">0</span>].innerHTML;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 播放动画</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">player_animate</span>(<span class=\"params\">data_list</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> time_now_s = get_now_s();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> length = data_list.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> begin = -<span class=\"number\">1</span>, end = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.floor(data_list[i][<span class=\"number\">0</span>]) &lt; time_now_s) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.floor(data_list[i][<span class=\"number\">0</span>]) &gt; time_now_s) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (begin != -<span class=\"number\">1</span>) end++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (begin == -<span class=\"number\">1</span>) begin = end = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (end == -<span class=\"number\">1</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> li_height = <span class=\"built_in\">parseFloat</span>($(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul &gt; li&quot;</span>).css(<span class=\"string\">&quot;height&quot;</span>).replace(<span class=\"string\">&quot;px&quot;</span>, <span class=\"string\">&quot;&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> li_width = <span class=\"built_in\">parseFloat</span>($(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul &gt; li&quot;</span>).css(<span class=\"string\">&quot;width&quot;</span>).replace(<span class=\"string\">&quot;px&quot;</span>, <span class=\"string\">&quot;&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = begin; i &lt;= end; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (length &gt; <span class=\"number\">15</span> &amp;&amp; i &gt; <span class=\"number\">11</span>) $(<span class=\"string\">&quot;.player-auxiliary-danmaku-wrap &gt; div &gt; ul &gt; li:first&quot;</span>).css(<span class=\"string\">&quot;margin-top&quot;</span>, <span class=\"string\">&quot;-&quot;</span> + (i - <span class=\"number\">11</span>) * li_height + <span class=\"string\">&quot;px&quot;</span>);  <span class=\"comment\">// 列表滚动</span></span><br><span class=\"line\">        $($(<span class=\"string\">&#x27;.player-auxiliary-danmaku-wrap &gt; div &gt; ul &gt; li&#x27;</span>)[i]).find(<span class=\"string\">&quot;.danmaku-info-animate&quot;</span>).css(<span class=\"string\">&quot;left&quot;</span>, li_width);  <span class=\"comment\">// 播放动画</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，<a href=\"https://github.com/YuJiZhao/script\">仓库地址</a></p>\n"},{"title":"CSDN屏蔽会员资源脚本","date":"2021-09-15T09:00:15.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/58.jpg","_content":"\n在csdn查资料总会点到一些会员或者付费下载的博客，这总是让我查资料很不舒服。。。。于是就写了这个jiao本，大家可以直接下载使用，下载地址：[CSDN屏蔽会员资源脚本](https://greasyfork.org/zh-CN/scripts/432452-csdn%E5%B1%8F%E8%94%BD%E4%BC%9A%E5%91%98%E8%B5%84%E6%BA%90)。\n\n下面这个图可以把功能描述地好一点\n![](https://bu.dusays.com/2021/09/18/50b0688899236.png)\n\n```javascript\n// ==UserScript==\n// @name         CSDN屏蔽会员资源\n// @namespace    eyes\n// @version      1.5\n// @description  专门屏蔽需要积分才能下载的资源页面以及会员专属资源的页面，让白嫖党在CSDN拥有更舒适的体验\n// @author       eyes\n// @match        *://*.csdn.net/*\n// @grant        none\n// ==/UserScript==\n\n(function () {\n    'use strict';\n    var loc = location.href;\n\n    // 搜索页面\n    var reg = /\\/so\\/search/g;\n    if (reg.test(loc)) {\n        // 执行屏蔽\n        function search_shield() {\n            var list_item = $('.list-item');\n            var clear_num = 0;\n            $.each(list_item, function (i, v) {\n                // 屏蔽资源\n                var b1 = $(v).find('.icon-download').length;  // 下载资源\n                var b2 = $(v).find('.download-size').length;  // 下载资源\n                var b3 = $(v).find('.icon-course_count').length;  // 付费课程\n                if ((b1 || b2 || b3) && v.style.display != 'none') {\n                    $(v).hide();\n                    clear_num++;\n                }\n            })\n            return clear_num;\n        }\n\n        // 初始时执行\n        // 油猴脚本里似乎必须绑定事件才能执行，我试了很多种加载完成执行都没用。。。。我也没办法只能这样。。。。。感觉这是个油猴bug\n        $(document).mousemove(function() {\n            var clear_num = search_shield();\n            if (clear_num) {\n                console.log(\"初次屏蔽\", clear_num, \"个会员资源链接╮(￣▽ ￣)╭\");\n                $(document).off(\"mousemove\");\n            }\n        })\n\n        // 页面下滑加载时执行\n        $(window).scroll(function () {\n            var clear_num = search_shield();\n            if (clear_num) console.log(\"再次屏蔽\", clear_num, \"个会员资源链接╮(￣▽ ￣)╭\");\n        })\n\n        // 点击加载更多时执行\n        $(\".so-load-data\").click(function () {\n            var clear_num = search_shield();\n            if (clear_num) {\n                console.log(\"再次屏蔽\", clear_num, \"个会员资源链接╮(￣▽ ￣)╭\");\n                $(document).off(\"scroll\");  // 取消对滚动的监听\n            }\n        })\n    }\n\n    // 文章页面\n    var reg2 = /article\\/details/g;\n    if (reg2.test(loc)) {\n        // 执行屏蔽\n        function article_shield() {\n            var clear_num = 0;\n            var download_item = $('.recommend-box .type_download');\n            var download_type = $(\"div[data-type='download']\");\n            $.each([download_item, download_type], function (i, v) {\n                $.each(v, function (i, v) {\n                    $(v).hide();\n                    clear_num++;\n                })\n            })\n            return clear_num;\n        }\n\n        // 与搜索页面初始屏蔽同理\n        $(document).mousemove(function() {\n            var clear_num = article_shield();\n            if (clear_num) {\n                console.log(\"一共屏蔽\", clear_num, \"个会员资源链接╮(￣▽ ￣)╭\");\n                $(document).off(\"mousemove\");\n            }\n        })\n    }\n})();\n```\n如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，[仓库地址](https://github.com/YuJiZhao/script)","source":"_posts/script/csdnNoFee.md","raw":"---\ntitle: CSDN屏蔽会员资源脚本\ndate: 2021-09-15 17:00:15\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/58.jpg\ntags:\n  - 脚本\ncategories: 脚本\n---\n\n在csdn查资料总会点到一些会员或者付费下载的博客，这总是让我查资料很不舒服。。。。于是就写了这个jiao本，大家可以直接下载使用，下载地址：[CSDN屏蔽会员资源脚本](https://greasyfork.org/zh-CN/scripts/432452-csdn%E5%B1%8F%E8%94%BD%E4%BC%9A%E5%91%98%E8%B5%84%E6%BA%90)。\n\n下面这个图可以把功能描述地好一点\n![](https://bu.dusays.com/2021/09/18/50b0688899236.png)\n\n```javascript\n// ==UserScript==\n// @name         CSDN屏蔽会员资源\n// @namespace    eyes\n// @version      1.5\n// @description  专门屏蔽需要积分才能下载的资源页面以及会员专属资源的页面，让白嫖党在CSDN拥有更舒适的体验\n// @author       eyes\n// @match        *://*.csdn.net/*\n// @grant        none\n// ==/UserScript==\n\n(function () {\n    'use strict';\n    var loc = location.href;\n\n    // 搜索页面\n    var reg = /\\/so\\/search/g;\n    if (reg.test(loc)) {\n        // 执行屏蔽\n        function search_shield() {\n            var list_item = $('.list-item');\n            var clear_num = 0;\n            $.each(list_item, function (i, v) {\n                // 屏蔽资源\n                var b1 = $(v).find('.icon-download').length;  // 下载资源\n                var b2 = $(v).find('.download-size').length;  // 下载资源\n                var b3 = $(v).find('.icon-course_count').length;  // 付费课程\n                if ((b1 || b2 || b3) && v.style.display != 'none') {\n                    $(v).hide();\n                    clear_num++;\n                }\n            })\n            return clear_num;\n        }\n\n        // 初始时执行\n        // 油猴脚本里似乎必须绑定事件才能执行，我试了很多种加载完成执行都没用。。。。我也没办法只能这样。。。。。感觉这是个油猴bug\n        $(document).mousemove(function() {\n            var clear_num = search_shield();\n            if (clear_num) {\n                console.log(\"初次屏蔽\", clear_num, \"个会员资源链接╮(￣▽ ￣)╭\");\n                $(document).off(\"mousemove\");\n            }\n        })\n\n        // 页面下滑加载时执行\n        $(window).scroll(function () {\n            var clear_num = search_shield();\n            if (clear_num) console.log(\"再次屏蔽\", clear_num, \"个会员资源链接╮(￣▽ ￣)╭\");\n        })\n\n        // 点击加载更多时执行\n        $(\".so-load-data\").click(function () {\n            var clear_num = search_shield();\n            if (clear_num) {\n                console.log(\"再次屏蔽\", clear_num, \"个会员资源链接╮(￣▽ ￣)╭\");\n                $(document).off(\"scroll\");  // 取消对滚动的监听\n            }\n        })\n    }\n\n    // 文章页面\n    var reg2 = /article\\/details/g;\n    if (reg2.test(loc)) {\n        // 执行屏蔽\n        function article_shield() {\n            var clear_num = 0;\n            var download_item = $('.recommend-box .type_download');\n            var download_type = $(\"div[data-type='download']\");\n            $.each([download_item, download_type], function (i, v) {\n                $.each(v, function (i, v) {\n                    $(v).hide();\n                    clear_num++;\n                })\n            })\n            return clear_num;\n        }\n\n        // 与搜索页面初始屏蔽同理\n        $(document).mousemove(function() {\n            var clear_num = article_shield();\n            if (clear_num) {\n                console.log(\"一共屏蔽\", clear_num, \"个会员资源链接╮(￣▽ ￣)╭\");\n                $(document).off(\"mousemove\");\n            }\n        })\n    }\n})();\n```\n如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，[仓库地址](https://github.com/YuJiZhao/script)","slug":"script/csdnNoFee","published":1,"updated":"2021-12-03T15:00:25.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958be001uasdacohmdzlu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>在csdn查资料总会点到一些会员或者付费下载的博客，这总是让我查资料很不舒服。。。。于是就写了这个jiao本，大家可以直接下载使用，下载地址：<a href=\"https://greasyfork.org/zh-CN/scripts/432452-csdn%E5%B1%8F%E8%94%BD%E4%BC%9A%E5%91%98%E8%B5%84%E6%BA%90\">CSDN屏蔽会员资源脚本</a>。</p>\n<p>下面这个图可以把功能描述地好一点<br><img src=\"https://bu.dusays.com/2021/09/18/50b0688899236.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ==UserScript==</span></span><br><span class=\"line\"><span class=\"comment\">// @name         CSDN屏蔽会员资源</span></span><br><span class=\"line\"><span class=\"comment\">// @namespace    eyes</span></span><br><span class=\"line\"><span class=\"comment\">// @version      1.5</span></span><br><span class=\"line\"><span class=\"comment\">// @description  专门屏蔽需要积分才能下载的资源页面以及会员专属资源的页面，让白嫖党在CSDN拥有更舒适的体验</span></span><br><span class=\"line\"><span class=\"comment\">// @author       eyes</span></span><br><span class=\"line\"><span class=\"comment\">// @match        *://*.csdn.net/*</span></span><br><span class=\"line\"><span class=\"comment\">// @grant        none</span></span><br><span class=\"line\"><span class=\"comment\">// ==/UserScript==</span></span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    &#x27;use strict&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> loc = location.href;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 搜索页面</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\/so\\/search/g</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (reg.test(loc)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行屏蔽</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">search_shield</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> list_item = $(<span class=\"string\">&#x27;.list-item&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = <span class=\"number\">0</span>;</span><br><span class=\"line\">            $.each(list_item, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, v</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 屏蔽资源</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> b1 = $(v).find(<span class=\"string\">&#x27;.icon-download&#x27;</span>).length;  <span class=\"comment\">// 下载资源</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> b2 = $(v).find(<span class=\"string\">&#x27;.download-size&#x27;</span>).length;  <span class=\"comment\">// 下载资源</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> b3 = $(v).find(<span class=\"string\">&#x27;.icon-course_count&#x27;</span>).length;  <span class=\"comment\">// 付费课程</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((b1 || b2 || b3) &amp;&amp; v.style.display != <span class=\"string\">&#x27;none&#x27;</span>) &#123;</span><br><span class=\"line\">                    $(v).hide();</span><br><span class=\"line\">                    clear_num++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> clear_num;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 初始时执行</span></span><br><span class=\"line\">        <span class=\"comment\">// 油猴脚本里似乎必须绑定事件才能执行，我试了很多种加载完成执行都没用。。。。我也没办法只能这样。。。。。感觉这是个油猴bug</span></span><br><span class=\"line\">        $(<span class=\"built_in\">document</span>).mousemove(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = search_shield();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clear_num) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;初次屏蔽&quot;</span>, clear_num, <span class=\"string\">&quot;个会员资源链接╮(￣▽ ￣)╭&quot;</span>);</span><br><span class=\"line\">                $(<span class=\"built_in\">document</span>).off(<span class=\"string\">&quot;mousemove&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 页面下滑加载时执行</span></span><br><span class=\"line\">        $(<span class=\"built_in\">window</span>).scroll(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = search_shield();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clear_num) <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;再次屏蔽&quot;</span>, clear_num, <span class=\"string\">&quot;个会员资源链接╮(￣▽ ￣)╭&quot;</span>);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 点击加载更多时执行</span></span><br><span class=\"line\">        $(<span class=\"string\">&quot;.so-load-data&quot;</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = search_shield();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clear_num) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;再次屏蔽&quot;</span>, clear_num, <span class=\"string\">&quot;个会员资源链接╮(￣▽ ￣)╭&quot;</span>);</span><br><span class=\"line\">                $(<span class=\"built_in\">document</span>).off(<span class=\"string\">&quot;scroll&quot;</span>);  <span class=\"comment\">// 取消对滚动的监听</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 文章页面</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg2 = <span class=\"regexp\">/article\\/details/g</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (reg2.test(loc)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行屏蔽</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">article_shield</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> download_item = $(<span class=\"string\">&#x27;.recommend-box .type_download&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> download_type = $(<span class=\"string\">&quot;div[data-type=&#x27;download&#x27;]&quot;</span>);</span><br><span class=\"line\">            $.each([download_item, download_type], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, v</span>) </span>&#123;</span><br><span class=\"line\">                $.each(v, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, v</span>) </span>&#123;</span><br><span class=\"line\">                    $(v).hide();</span><br><span class=\"line\">                    clear_num++;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> clear_num;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 与搜索页面初始屏蔽同理</span></span><br><span class=\"line\">        $(<span class=\"built_in\">document</span>).mousemove(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = article_shield();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clear_num) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;一共屏蔽&quot;</span>, clear_num, <span class=\"string\">&quot;个会员资源链接╮(￣▽ ￣)╭&quot;</span>);</span><br><span class=\"line\">                $(<span class=\"built_in\">document</span>).off(<span class=\"string\">&quot;mousemove&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，<a href=\"https://github.com/YuJiZhao/script\">仓库地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在csdn查资料总会点到一些会员或者付费下载的博客，这总是让我查资料很不舒服。。。。于是就写了这个jiao本，大家可以直接下载使用，下载地址：<a href=\"https://greasyfork.org/zh-CN/scripts/432452-csdn%E5%B1%8F%E8%94%BD%E4%BC%9A%E5%91%98%E8%B5%84%E6%BA%90\">CSDN屏蔽会员资源脚本</a>。</p>\n<p>下面这个图可以把功能描述地好一点<br><img src=\"https://bu.dusays.com/2021/09/18/50b0688899236.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ==UserScript==</span></span><br><span class=\"line\"><span class=\"comment\">// @name         CSDN屏蔽会员资源</span></span><br><span class=\"line\"><span class=\"comment\">// @namespace    eyes</span></span><br><span class=\"line\"><span class=\"comment\">// @version      1.5</span></span><br><span class=\"line\"><span class=\"comment\">// @description  专门屏蔽需要积分才能下载的资源页面以及会员专属资源的页面，让白嫖党在CSDN拥有更舒适的体验</span></span><br><span class=\"line\"><span class=\"comment\">// @author       eyes</span></span><br><span class=\"line\"><span class=\"comment\">// @match        *://*.csdn.net/*</span></span><br><span class=\"line\"><span class=\"comment\">// @grant        none</span></span><br><span class=\"line\"><span class=\"comment\">// ==/UserScript==</span></span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    &#x27;use strict&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> loc = location.href;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 搜索页面</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\/so\\/search/g</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (reg.test(loc)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行屏蔽</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">search_shield</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> list_item = $(<span class=\"string\">&#x27;.list-item&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = <span class=\"number\">0</span>;</span><br><span class=\"line\">            $.each(list_item, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, v</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 屏蔽资源</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> b1 = $(v).find(<span class=\"string\">&#x27;.icon-download&#x27;</span>).length;  <span class=\"comment\">// 下载资源</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> b2 = $(v).find(<span class=\"string\">&#x27;.download-size&#x27;</span>).length;  <span class=\"comment\">// 下载资源</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> b3 = $(v).find(<span class=\"string\">&#x27;.icon-course_count&#x27;</span>).length;  <span class=\"comment\">// 付费课程</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((b1 || b2 || b3) &amp;&amp; v.style.display != <span class=\"string\">&#x27;none&#x27;</span>) &#123;</span><br><span class=\"line\">                    $(v).hide();</span><br><span class=\"line\">                    clear_num++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> clear_num;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 初始时执行</span></span><br><span class=\"line\">        <span class=\"comment\">// 油猴脚本里似乎必须绑定事件才能执行，我试了很多种加载完成执行都没用。。。。我也没办法只能这样。。。。。感觉这是个油猴bug</span></span><br><span class=\"line\">        $(<span class=\"built_in\">document</span>).mousemove(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = search_shield();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clear_num) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;初次屏蔽&quot;</span>, clear_num, <span class=\"string\">&quot;个会员资源链接╮(￣▽ ￣)╭&quot;</span>);</span><br><span class=\"line\">                $(<span class=\"built_in\">document</span>).off(<span class=\"string\">&quot;mousemove&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 页面下滑加载时执行</span></span><br><span class=\"line\">        $(<span class=\"built_in\">window</span>).scroll(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = search_shield();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clear_num) <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;再次屏蔽&quot;</span>, clear_num, <span class=\"string\">&quot;个会员资源链接╮(￣▽ ￣)╭&quot;</span>);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 点击加载更多时执行</span></span><br><span class=\"line\">        $(<span class=\"string\">&quot;.so-load-data&quot;</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = search_shield();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clear_num) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;再次屏蔽&quot;</span>, clear_num, <span class=\"string\">&quot;个会员资源链接╮(￣▽ ￣)╭&quot;</span>);</span><br><span class=\"line\">                $(<span class=\"built_in\">document</span>).off(<span class=\"string\">&quot;scroll&quot;</span>);  <span class=\"comment\">// 取消对滚动的监听</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 文章页面</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg2 = <span class=\"regexp\">/article\\/details/g</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (reg2.test(loc)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 执行屏蔽</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">article_shield</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> download_item = $(<span class=\"string\">&#x27;.recommend-box .type_download&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> download_type = $(<span class=\"string\">&quot;div[data-type=&#x27;download&#x27;]&quot;</span>);</span><br><span class=\"line\">            $.each([download_item, download_type], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, v</span>) </span>&#123;</span><br><span class=\"line\">                $.each(v, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i, v</span>) </span>&#123;</span><br><span class=\"line\">                    $(v).hide();</span><br><span class=\"line\">                    clear_num++;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> clear_num;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 与搜索页面初始屏蔽同理</span></span><br><span class=\"line\">        $(<span class=\"built_in\">document</span>).mousemove(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> clear_num = article_shield();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clear_num) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;一共屏蔽&quot;</span>, clear_num, <span class=\"string\">&quot;个会员资源链接╮(￣▽ ￣)╭&quot;</span>);</span><br><span class=\"line\">                $(<span class=\"built_in\">document</span>).off(<span class=\"string\">&quot;mousemove&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>如果对该类脚本感兴趣的话，欢迎来到我的github看看，我开源了一个script仓库，里面有很多我写的和正在写的脚本，大佬们有兴趣可以一起贡献代码，<a href=\"https://github.com/YuJiZhao/script\">仓库地址</a></p>\n"},{"title":"python之pil的使用","date":"2021-10-13T07:48:51.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/104.jpg","_content":"\n# 一：PIL功能介绍与安装\nPIL，全称Python Image Library，主要作用是图像处理，可用于图片剪切、粘贴、缩放、镜像、水印、颜色块、滤镜、图像格式转换、色场空间转换、验证码、旋转图像、图像增强、直方图处理、插值和滤波等功能。不过只支持到Python 2.7。Pillow是PIL的一个派生分支，但如今已经发展成为比PIL本身更具活力的图像处理库。我们需要安装的就是Pillow。\n\nPIL具体用途：\n+ 图像归档(Image Archives)。PIL非常适合于图像归档以及图像的批处理任务。你可以使用PIL创建缩略图，转换图像格式，打印图像等等。\n+ 图像展示(Image Display)。PIL较新的版本支持包括Tk PhotoImage，BitmapImage还有Windows DIB等接口。PIL支持众多的GUI框架接口，可以用于图像展示。\n+ 图像处理(Image Processing)。PIL包括了基础的图像处理函数，包括对点的处理，使用众多的卷积核(convolution kernels)做过滤(filter),还有颜色空间的转换。PIL库同样支持图像的大小转换，图像旋转，以及任意的仿射变换。PIL还有一些直方图的方法，允许你展示图像的一些统计特性。这个可以用来实现图像的自动对比度增强，还有全局的统计分析等。\n\n\n```shell\npip install Pillow\n```\n貌似Pillow是默认安装好了的，可以通过`pip list`查看是否已经安装\n# 二：PIL的基本操作\n以下是打开图片保存图片的基本操作。\n```python\nfrom PIL import Image\n\n# 1.打开图片\nimg = Image.open(\"image/10.png\")\n# 2.显示图片(执行显示图片后线程会中断，关闭图像后恢复)\nimg.show()\n# 3.保存图片\nimg.save(\"image/xiaomai.png\")\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d83056bbdef3458e8e61149965e1b595.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)我在尝试的过程中发现，png格式的图片保存为jpg格式时会报错：`OSError: cannot write mode RGBA as JPEG`，经过查阅资料发现错误原因主要是因为PNG格式和JPG格式图片的通道数不同。\n+ PNG是四通道：RGBA意思是红色，绿色，蓝色，Alpha的色彩空间，Alpha指透明度\n+ JPG是三通道：RGB意思是红色，绿色，蓝色\n\n所以，PNG格式图片要保存成JPG格式就要丢弃A通道：\n\n```python\nfrom PIL import Image\n\n# 1.打开图片\nimg = Image.open(\"image/10.png\")\n# 2.显示图片(执行显示图片后线程会中断，关闭图像后恢复)\nimg.show()\n# 3.保存图片\nimg = img.convert(\"RGB\")\nimg.save(\"image/xiaomai.jpg\")\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f4f2f1dfbcb74f81bd4c5946be761c30.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)下面是图片旋转的代码：\n\n```python\nfrom PIL import Image\n\n# 1.打开图片\nimg = Image.open(\"pli/7.png\")\n# 2.水平翻转\nimg1 = img.transpose(Image.FLIP_LEFT_RIGHT)\n# 3.保存图片\nimg1.save(\"pli/1.png\")\n# 4.垂直翻转\nimg2 = img.rotate(180)\n# 5.保存照片\nimg2.save(\"pli/2.png\")\n# 6.水平+垂直翻转\nimg3 = img.transpose(Image.FLIP_LEFT_RIGHT).rotate(180)\n# 7.保存图片\nimg3.save(\"pli/3.png\")\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/319f05af4b6f40b29162322c98ef1591.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 三：给图片增加文字\n要在图像上绘制文本要用到 PIL 的两个模块：ImageDraw和ImageFont。 ImageDraw 用于创建绘图对象，ImageFont用于加载字体。\n```python\nfrom PIL import Image, ImageDraw, ImageFont\n# 1.打开图片\nimg = Image.open(\"image/10.png\")\n# 2.调用画图模块\ndraw = ImageDraw.Draw(img)\n# 3.设置字体\ntfont = ImageFont.truetype(\"萌神手写体.ttf\", 24)\n# 4.添加文字\n\"\"\"\n    参数一：文字在图片的位置：(x, y)\n    参数二：文字内容\n    参数三：字体颜色，当然颜色也可以用RGB值指定\n    参数四：字体类型\n\"\"\"\ndraw.text((50, 30), \"eyes\", fill=\"green\", font=tfont)\n# 5.保存图片\nimg.save(\"image/addWord.png\")\n# 6.显示图片\nimg.show()\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5f604d0a2e7b42c3958fb6744d5f8798.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 四：PIL滤镜功能\n\n```python\nfrom PIL import Image, ImageFilter\nimg = Image.open(\"image/10.png\")\nimg = img.filter(ImageFilter.CONTOUR)\nimg.save(\"image/Filter.png\")\nimg.show()\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a9979bfb20d34e4e9b02459e4f6c91ff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n滤镜类型如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/56911c96b013459587f4b98f0d53e2c0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 五：PIL镜像功能\n\n```python\nfrom PIL import Image\nimg = Image.open(\"image/10.png\")\nimg = img.transpose(Image.FLIP_LEFT_RIGHT)\nimg.save(\"image/mirror.png\")\n```\n![在这里插入代码片](https://img-blog.csdnimg.cn/59ec6229539248249ce6ce66e4fff7d8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)transpose有这么几种模式\n+ FLIP_LEFT_RIGHT：左右镜像\n+ FLIP_TOP_BOTTOM：上下镜像\n+ ROTATE_90：逆时针转90度\n+ ROTATE_180：逆时针转180度\n+ ROTATE_270：逆时针转270度\n+ TRANSPOSE：像素矩阵转置\n+ TRANSVERSE\n\n最后一种模式我也不知道什么意思，也没查到，但效果是下面这样的，盲猜是对角线对转。。。。。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5536425799ce459b8064d819fdc95040.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)除了使用transpose制造镜像，使用rotate也可以的，不过rotate只能旋转：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/072c42190bcc449db7d957d626624452.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n发现这样旋转会有棱角，然后经过某位不愿透露姓名的大佬指点，发现是rotate旋转只是像素旋转，画布不动，于是我写下了以下测试代码：\n\n```python\nfrom PIL import Image\n\nimg = Image.open(\"image/12.jpg\")\nimg1 = img.transpose(Image.ROTATE_90)\nimg1.save(\"image/test.jpg\")\nimg2 = img.rotate(90)\nimg2.save(\"image/test2.jpg\")\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f7a93ce1579b47c9ad12b86bd04cc9c9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)可以发现小埋的rotate旋转不会自动填充空白像素，而血小板的会自动黑色填充。是因为png格式是非失真性压缩的，允许使用类似于GIF格式的调色板技术，支持真彩色图像，并具备阿尔法通道（半透明）等特性。而jpg格式没有阿尔法通道，因此jpg格式图片不能为透明，png格式可以。\n\n# 六：图片拼接功能\n虽说是拼接，但更像是将两幅图粘贴到一个新的画布上\n```python\nfrom PIL import Image, ImageDraw\n\n# 打开图片\nimg1 = Image.open(\"image/10.png\")\nimg2 = Image.open(\"image/addWord.png\")\n# 查看图片尺寸，便于拼接图片\nprint(img1.size)\nprint(img1.size)\n# 新建空白图片,三个参数分别是模式(RGB/RGBA)、大小、颜色\nnewimg = Image.new(mode=\"RGB\", size=(1174, 614), color=(255, 100, 50))\n# 拼接图片,第一个参数是图片，第二个是起始位置\nnewimg.paste(img1, (0, 0))\nnewimg.paste(img2, (587, 0))\nnewimg.show()\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/658ad834e7344305a17d1c297f8471d3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 七：PIL裁剪功能\n图片裁剪用到的方法是image.crop()，这个方法能从图像中提取出某个矩形大小的图像。它接收一个四元素的元组作为参数，各元素为（left, upper, right, lower），坐标系统的原点（0, 0）是左上角。\n\n```python\nfrom PIL import Image\nimg = Image.open(\"image/10.png\")\nprint(img.size)\nimgCut = img.crop((100, 200, 500, 600))\nimgCut.show()\n```\n在这里插入代码片![在这里插入图片描述](https://img-blog.csdnimg.cn/4c01cf541c6749c5a1a88ff428db5e61.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 八：图片缩放\n可能这么看不是二分之一，但这是显示问题，可以看数据：\n\n```python\nfrom PIL import Image\n\n# :\nimg = Image.open('image/10.png')\n# 获得图像尺寸:\nw, h = img.size\n# 缩放到50%:\nimg.thumbnail((w//2, h//2))\n# 把缩放后的图像用jpeg格式保存:\nimg.save('image/zoom.png')\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/36cc575c57ac4f9c908eb0baabc9df14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","source":"_posts/python/pil的使用.md","raw":"---\ntitle: python之pil的使用\ndate:  2021-10-13 15:48:51\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/104.jpg\ntags:\n  - pil\ncategories: python\n---\n\n# 一：PIL功能介绍与安装\nPIL，全称Python Image Library，主要作用是图像处理，可用于图片剪切、粘贴、缩放、镜像、水印、颜色块、滤镜、图像格式转换、色场空间转换、验证码、旋转图像、图像增强、直方图处理、插值和滤波等功能。不过只支持到Python 2.7。Pillow是PIL的一个派生分支，但如今已经发展成为比PIL本身更具活力的图像处理库。我们需要安装的就是Pillow。\n\nPIL具体用途：\n+ 图像归档(Image Archives)。PIL非常适合于图像归档以及图像的批处理任务。你可以使用PIL创建缩略图，转换图像格式，打印图像等等。\n+ 图像展示(Image Display)。PIL较新的版本支持包括Tk PhotoImage，BitmapImage还有Windows DIB等接口。PIL支持众多的GUI框架接口，可以用于图像展示。\n+ 图像处理(Image Processing)。PIL包括了基础的图像处理函数，包括对点的处理，使用众多的卷积核(convolution kernels)做过滤(filter),还有颜色空间的转换。PIL库同样支持图像的大小转换，图像旋转，以及任意的仿射变换。PIL还有一些直方图的方法，允许你展示图像的一些统计特性。这个可以用来实现图像的自动对比度增强，还有全局的统计分析等。\n\n\n```shell\npip install Pillow\n```\n貌似Pillow是默认安装好了的，可以通过`pip list`查看是否已经安装\n# 二：PIL的基本操作\n以下是打开图片保存图片的基本操作。\n```python\nfrom PIL import Image\n\n# 1.打开图片\nimg = Image.open(\"image/10.png\")\n# 2.显示图片(执行显示图片后线程会中断，关闭图像后恢复)\nimg.show()\n# 3.保存图片\nimg.save(\"image/xiaomai.png\")\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d83056bbdef3458e8e61149965e1b595.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)我在尝试的过程中发现，png格式的图片保存为jpg格式时会报错：`OSError: cannot write mode RGBA as JPEG`，经过查阅资料发现错误原因主要是因为PNG格式和JPG格式图片的通道数不同。\n+ PNG是四通道：RGBA意思是红色，绿色，蓝色，Alpha的色彩空间，Alpha指透明度\n+ JPG是三通道：RGB意思是红色，绿色，蓝色\n\n所以，PNG格式图片要保存成JPG格式就要丢弃A通道：\n\n```python\nfrom PIL import Image\n\n# 1.打开图片\nimg = Image.open(\"image/10.png\")\n# 2.显示图片(执行显示图片后线程会中断，关闭图像后恢复)\nimg.show()\n# 3.保存图片\nimg = img.convert(\"RGB\")\nimg.save(\"image/xiaomai.jpg\")\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f4f2f1dfbcb74f81bd4c5946be761c30.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)下面是图片旋转的代码：\n\n```python\nfrom PIL import Image\n\n# 1.打开图片\nimg = Image.open(\"pli/7.png\")\n# 2.水平翻转\nimg1 = img.transpose(Image.FLIP_LEFT_RIGHT)\n# 3.保存图片\nimg1.save(\"pli/1.png\")\n# 4.垂直翻转\nimg2 = img.rotate(180)\n# 5.保存照片\nimg2.save(\"pli/2.png\")\n# 6.水平+垂直翻转\nimg3 = img.transpose(Image.FLIP_LEFT_RIGHT).rotate(180)\n# 7.保存图片\nimg3.save(\"pli/3.png\")\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/319f05af4b6f40b29162322c98ef1591.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 三：给图片增加文字\n要在图像上绘制文本要用到 PIL 的两个模块：ImageDraw和ImageFont。 ImageDraw 用于创建绘图对象，ImageFont用于加载字体。\n```python\nfrom PIL import Image, ImageDraw, ImageFont\n# 1.打开图片\nimg = Image.open(\"image/10.png\")\n# 2.调用画图模块\ndraw = ImageDraw.Draw(img)\n# 3.设置字体\ntfont = ImageFont.truetype(\"萌神手写体.ttf\", 24)\n# 4.添加文字\n\"\"\"\n    参数一：文字在图片的位置：(x, y)\n    参数二：文字内容\n    参数三：字体颜色，当然颜色也可以用RGB值指定\n    参数四：字体类型\n\"\"\"\ndraw.text((50, 30), \"eyes\", fill=\"green\", font=tfont)\n# 5.保存图片\nimg.save(\"image/addWord.png\")\n# 6.显示图片\nimg.show()\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5f604d0a2e7b42c3958fb6744d5f8798.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 四：PIL滤镜功能\n\n```python\nfrom PIL import Image, ImageFilter\nimg = Image.open(\"image/10.png\")\nimg = img.filter(ImageFilter.CONTOUR)\nimg.save(\"image/Filter.png\")\nimg.show()\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a9979bfb20d34e4e9b02459e4f6c91ff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n滤镜类型如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/56911c96b013459587f4b98f0d53e2c0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 五：PIL镜像功能\n\n```python\nfrom PIL import Image\nimg = Image.open(\"image/10.png\")\nimg = img.transpose(Image.FLIP_LEFT_RIGHT)\nimg.save(\"image/mirror.png\")\n```\n![在这里插入代码片](https://img-blog.csdnimg.cn/59ec6229539248249ce6ce66e4fff7d8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)transpose有这么几种模式\n+ FLIP_LEFT_RIGHT：左右镜像\n+ FLIP_TOP_BOTTOM：上下镜像\n+ ROTATE_90：逆时针转90度\n+ ROTATE_180：逆时针转180度\n+ ROTATE_270：逆时针转270度\n+ TRANSPOSE：像素矩阵转置\n+ TRANSVERSE\n\n最后一种模式我也不知道什么意思，也没查到，但效果是下面这样的，盲猜是对角线对转。。。。。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5536425799ce459b8064d819fdc95040.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)除了使用transpose制造镜像，使用rotate也可以的，不过rotate只能旋转：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/072c42190bcc449db7d957d626624452.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n发现这样旋转会有棱角，然后经过某位不愿透露姓名的大佬指点，发现是rotate旋转只是像素旋转，画布不动，于是我写下了以下测试代码：\n\n```python\nfrom PIL import Image\n\nimg = Image.open(\"image/12.jpg\")\nimg1 = img.transpose(Image.ROTATE_90)\nimg1.save(\"image/test.jpg\")\nimg2 = img.rotate(90)\nimg2.save(\"image/test2.jpg\")\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f7a93ce1579b47c9ad12b86bd04cc9c9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)可以发现小埋的rotate旋转不会自动填充空白像素，而血小板的会自动黑色填充。是因为png格式是非失真性压缩的，允许使用类似于GIF格式的调色板技术，支持真彩色图像，并具备阿尔法通道（半透明）等特性。而jpg格式没有阿尔法通道，因此jpg格式图片不能为透明，png格式可以。\n\n# 六：图片拼接功能\n虽说是拼接，但更像是将两幅图粘贴到一个新的画布上\n```python\nfrom PIL import Image, ImageDraw\n\n# 打开图片\nimg1 = Image.open(\"image/10.png\")\nimg2 = Image.open(\"image/addWord.png\")\n# 查看图片尺寸，便于拼接图片\nprint(img1.size)\nprint(img1.size)\n# 新建空白图片,三个参数分别是模式(RGB/RGBA)、大小、颜色\nnewimg = Image.new(mode=\"RGB\", size=(1174, 614), color=(255, 100, 50))\n# 拼接图片,第一个参数是图片，第二个是起始位置\nnewimg.paste(img1, (0, 0))\nnewimg.paste(img2, (587, 0))\nnewimg.show()\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/658ad834e7344305a17d1c297f8471d3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 七：PIL裁剪功能\n图片裁剪用到的方法是image.crop()，这个方法能从图像中提取出某个矩形大小的图像。它接收一个四元素的元组作为参数，各元素为（left, upper, right, lower），坐标系统的原点（0, 0）是左上角。\n\n```python\nfrom PIL import Image\nimg = Image.open(\"image/10.png\")\nprint(img.size)\nimgCut = img.crop((100, 200, 500, 600))\nimgCut.show()\n```\n在这里插入代码片![在这里插入图片描述](https://img-blog.csdnimg.cn/4c01cf541c6749c5a1a88ff428db5e61.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 八：图片缩放\n可能这么看不是二分之一，但这是显示问题，可以看数据：\n\n```python\nfrom PIL import Image\n\n# :\nimg = Image.open('image/10.png')\n# 获得图像尺寸:\nw, h = img.size\n# 缩放到50%:\nimg.thumbnail((w//2, h//2))\n# 把缩放后的图像用jpeg格式保存:\nimg.save('image/zoom.png')\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/36cc575c57ac4f9c908eb0baabc9df14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","slug":"python/pil的使用","published":1,"updated":"2021-12-04T02:55:20.890Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958bf001yasda8lxuhoc0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：PIL功能介绍与安装\"><a href=\"#一：PIL功能介绍与安装\" class=\"headerlink\" title=\"一：PIL功能介绍与安装\"></a>一：PIL功能介绍与安装</h1><p>PIL，全称Python Image Library，主要作用是图像处理，可用于图片剪切、粘贴、缩放、镜像、水印、颜色块、滤镜、图像格式转换、色场空间转换、验证码、旋转图像、图像增强、直方图处理、插值和滤波等功能。不过只支持到Python 2.7。Pillow是PIL的一个派生分支，但如今已经发展成为比PIL本身更具活力的图像处理库。我们需要安装的就是Pillow。</p>\n<p>PIL具体用途：</p>\n<ul>\n<li>图像归档(Image Archives)。PIL非常适合于图像归档以及图像的批处理任务。你可以使用PIL创建缩略图，转换图像格式，打印图像等等。</li>\n<li>图像展示(Image Display)。PIL较新的版本支持包括Tk PhotoImage，BitmapImage还有Windows DIB等接口。PIL支持众多的GUI框架接口，可以用于图像展示。</li>\n<li>图像处理(Image Processing)。PIL包括了基础的图像处理函数，包括对点的处理，使用众多的卷积核(convolution kernels)做过滤(filter),还有颜色空间的转换。PIL库同样支持图像的大小转换，图像旋转，以及任意的仿射变换。PIL还有一些直方图的方法，允许你展示图像的一些统计特性。这个可以用来实现图像的自动对比度增强，还有全局的统计分析等。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Pillow</span><br></pre></td></tr></table></figure>\n<p>貌似Pillow是默认安装好了的，可以通过<code>pip list</code>查看是否已经安装</p>\n<h1 id=\"二：PIL的基本操作\"><a href=\"#二：PIL的基本操作\" class=\"headerlink\" title=\"二：PIL的基本操作\"></a>二：PIL的基本操作</h1><p>以下是打开图片保存图片的基本操作。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.打开图片</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.显示图片(执行显示图片后线程会中断，关闭图像后恢复)</span></span><br><span class=\"line\">img.show()</span><br><span class=\"line\"><span class=\"comment\"># 3.保存图片</span></span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/xiaomai.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/d83056bbdef3458e8e61149965e1b595.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">我在尝试的过程中发现，png格式的图片保存为jpg格式时会报错：<code>OSError: cannot write mode RGBA as JPEG</code>，经过查阅资料发现错误原因主要是因为PNG格式和JPG格式图片的通道数不同。</p>\n<ul>\n<li>PNG是四通道：RGBA意思是红色，绿色，蓝色，Alpha的色彩空间，Alpha指透明度</li>\n<li>JPG是三通道：RGB意思是红色，绿色，蓝色</li>\n</ul>\n<p>所以，PNG格式图片要保存成JPG格式就要丢弃A通道：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.打开图片</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.显示图片(执行显示图片后线程会中断，关闭图像后恢复)</span></span><br><span class=\"line\">img.show()</span><br><span class=\"line\"><span class=\"comment\"># 3.保存图片</span></span><br><span class=\"line\">img = img.convert(<span class=\"string\">&quot;RGB&quot;</span>)</span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/xiaomai.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/f4f2f1dfbcb74f81bd4c5946be761c30.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">下面是图片旋转的代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.打开图片</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;pli/7.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.水平翻转</span></span><br><span class=\"line\">img1 = img.transpose(Image.FLIP_LEFT_RIGHT)</span><br><span class=\"line\"><span class=\"comment\"># 3.保存图片</span></span><br><span class=\"line\">img1.save(<span class=\"string\">&quot;pli/1.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 4.垂直翻转</span></span><br><span class=\"line\">img2 = img.rotate(<span class=\"number\">180</span>)</span><br><span class=\"line\"><span class=\"comment\"># 5.保存照片</span></span><br><span class=\"line\">img2.save(<span class=\"string\">&quot;pli/2.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 6.水平+垂直翻转</span></span><br><span class=\"line\">img3 = img.transpose(Image.FLIP_LEFT_RIGHT).rotate(<span class=\"number\">180</span>)</span><br><span class=\"line\"><span class=\"comment\"># 7.保存图片</span></span><br><span class=\"line\">img3.save(<span class=\"string\">&quot;pli/3.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/319f05af4b6f40b29162322c98ef1591.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：给图片增加文字\"><a href=\"#三：给图片增加文字\" class=\"headerlink\" title=\"三：给图片增加文字\"></a>三：给图片增加文字</h1><p>要在图像上绘制文本要用到 PIL 的两个模块：ImageDraw和ImageFont。 ImageDraw 用于创建绘图对象，ImageFont用于加载字体。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageDraw, ImageFont</span><br><span class=\"line\"><span class=\"comment\"># 1.打开图片</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.调用画图模块</span></span><br><span class=\"line\">draw = ImageDraw.Draw(img)</span><br><span class=\"line\"><span class=\"comment\"># 3.设置字体</span></span><br><span class=\"line\">tfont = ImageFont.truetype(<span class=\"string\">&quot;萌神手写体.ttf&quot;</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\"><span class=\"comment\"># 4.添加文字</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    参数一：文字在图片的位置：(x, y)</span></span><br><span class=\"line\"><span class=\"string\">    参数二：文字内容</span></span><br><span class=\"line\"><span class=\"string\">    参数三：字体颜色，当然颜色也可以用RGB值指定</span></span><br><span class=\"line\"><span class=\"string\">    参数四：字体类型</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">draw.text((<span class=\"number\">50</span>, <span class=\"number\">30</span>), <span class=\"string\">&quot;eyes&quot;</span>, fill=<span class=\"string\">&quot;green&quot;</span>, font=tfont)</span><br><span class=\"line\"><span class=\"comment\"># 5.保存图片</span></span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/addWord.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 6.显示图片</span></span><br><span class=\"line\">img.show()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/5f604d0a2e7b42c3958fb6744d5f8798.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：PIL滤镜功能\"><a href=\"#四：PIL滤镜功能\" class=\"headerlink\" title=\"四：PIL滤镜功能\"></a>四：PIL滤镜功能</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageFilter</span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\">img = img.<span class=\"built_in\">filter</span>(ImageFilter.CONTOUR)</span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/Filter.png&quot;</span>)</span><br><span class=\"line\">img.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/a9979bfb20d34e4e9b02459e4f6c91ff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>滤镜类型如下：<br><img src=\"https://img-blog.csdnimg.cn/56911c96b013459587f4b98f0d53e2c0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"五：PIL镜像功能\"><a href=\"#五：PIL镜像功能\" class=\"headerlink\" title=\"五：PIL镜像功能\"></a>五：PIL镜像功能</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\">img = img.transpose(Image.FLIP_LEFT_RIGHT)</span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/mirror.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/59ec6229539248249ce6ce66e4fff7d8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入代码片\">transpose有这么几种模式</p>\n<ul>\n<li>FLIP_LEFT_RIGHT：左右镜像</li>\n<li>FLIP_TOP_BOTTOM：上下镜像</li>\n<li>ROTATE_90：逆时针转90度</li>\n<li>ROTATE_180：逆时针转180度</li>\n<li>ROTATE_270：逆时针转270度</li>\n<li>TRANSPOSE：像素矩阵转置</li>\n<li>TRANSVERSE</li>\n</ul>\n<p>最后一种模式我也不知道什么意思，也没查到，但效果是下面这样的，盲猜是对角线对转。。。。。<br><img src=\"https://img-blog.csdnimg.cn/5536425799ce459b8064d819fdc95040.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">除了使用transpose制造镜像，使用rotate也可以的，不过rotate只能旋转：<br><img src=\"https://img-blog.csdnimg.cn/072c42190bcc449db7d957d626624452.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>发现这样旋转会有棱角，然后经过某位不愿透露姓名的大佬指点，发现是rotate旋转只是像素旋转，画布不动，于是我写下了以下测试代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/12.jpg&quot;</span>)</span><br><span class=\"line\">img1 = img.transpose(Image.ROTATE_90)</span><br><span class=\"line\">img1.save(<span class=\"string\">&quot;image/test.jpg&quot;</span>)</span><br><span class=\"line\">img2 = img.rotate(<span class=\"number\">90</span>)</span><br><span class=\"line\">img2.save(<span class=\"string\">&quot;image/test2.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/f7a93ce1579b47c9ad12b86bd04cc9c9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">可以发现小埋的rotate旋转不会自动填充空白像素，而血小板的会自动黑色填充。是因为png格式是非失真性压缩的，允许使用类似于GIF格式的调色板技术，支持真彩色图像，并具备阿尔法通道（半透明）等特性。而jpg格式没有阿尔法通道，因此jpg格式图片不能为透明，png格式可以。</p>\n<h1 id=\"六：图片拼接功能\"><a href=\"#六：图片拼接功能\" class=\"headerlink\" title=\"六：图片拼接功能\"></a>六：图片拼接功能</h1><p>虽说是拼接，但更像是将两幅图粘贴到一个新的画布上</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageDraw</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开图片</span></span><br><span class=\"line\">img1 = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\">img2 = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/addWord.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 查看图片尺寸，便于拼接图片</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(img1.size)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img1.size)</span><br><span class=\"line\"><span class=\"comment\"># 新建空白图片,三个参数分别是模式(RGB/RGBA)、大小、颜色</span></span><br><span class=\"line\">newimg = Image.new(mode=<span class=\"string\">&quot;RGB&quot;</span>, size=(<span class=\"number\">1174</span>, <span class=\"number\">614</span>), color=(<span class=\"number\">255</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>))</span><br><span class=\"line\"><span class=\"comment\"># 拼接图片,第一个参数是图片，第二个是起始位置</span></span><br><span class=\"line\">newimg.paste(img1, (<span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">newimg.paste(img2, (<span class=\"number\">587</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">newimg.show()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/658ad834e7344305a17d1c297f8471d3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：PIL裁剪功能\"><a href=\"#七：PIL裁剪功能\" class=\"headerlink\" title=\"七：PIL裁剪功能\"></a>七：PIL裁剪功能</h1><p>图片裁剪用到的方法是image.crop()，这个方法能从图像中提取出某个矩形大小的图像。它接收一个四元素的元组作为参数，各元素为（left, upper, right, lower），坐标系统的原点（0, 0）是左上角。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img.size)</span><br><span class=\"line\">imgCut = img.crop((<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">500</span>, <span class=\"number\">600</span>))</span><br><span class=\"line\">imgCut.show()</span><br></pre></td></tr></table></figure>\n<p>在这里插入代码片<img src=\"https://img-blog.csdnimg.cn/4c01cf541c6749c5a1a88ff428db5e61.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"八：图片缩放\"><a href=\"#八：图片缩放\" class=\"headerlink\" title=\"八：图片缩放\"></a>八：图片缩放</h1><p>可能这么看不是二分之一，但这是显示问题，可以看数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># :</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;image/10.png&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 获得图像尺寸:</span></span><br><span class=\"line\">w, h = img.size</span><br><span class=\"line\"><span class=\"comment\"># 缩放到50%:</span></span><br><span class=\"line\">img.thumbnail((w//<span class=\"number\">2</span>, h//<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"comment\"># 把缩放后的图像用jpeg格式保存:</span></span><br><span class=\"line\">img.save(<span class=\"string\">&#x27;image/zoom.png&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/36cc575c57ac4f9c908eb0baabc9df14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：PIL功能介绍与安装\"><a href=\"#一：PIL功能介绍与安装\" class=\"headerlink\" title=\"一：PIL功能介绍与安装\"></a>一：PIL功能介绍与安装</h1><p>PIL，全称Python Image Library，主要作用是图像处理，可用于图片剪切、粘贴、缩放、镜像、水印、颜色块、滤镜、图像格式转换、色场空间转换、验证码、旋转图像、图像增强、直方图处理、插值和滤波等功能。不过只支持到Python 2.7。Pillow是PIL的一个派生分支，但如今已经发展成为比PIL本身更具活力的图像处理库。我们需要安装的就是Pillow。</p>\n<p>PIL具体用途：</p>\n<ul>\n<li>图像归档(Image Archives)。PIL非常适合于图像归档以及图像的批处理任务。你可以使用PIL创建缩略图，转换图像格式，打印图像等等。</li>\n<li>图像展示(Image Display)。PIL较新的版本支持包括Tk PhotoImage，BitmapImage还有Windows DIB等接口。PIL支持众多的GUI框架接口，可以用于图像展示。</li>\n<li>图像处理(Image Processing)。PIL包括了基础的图像处理函数，包括对点的处理，使用众多的卷积核(convolution kernels)做过滤(filter),还有颜色空间的转换。PIL库同样支持图像的大小转换，图像旋转，以及任意的仿射变换。PIL还有一些直方图的方法，允许你展示图像的一些统计特性。这个可以用来实现图像的自动对比度增强，还有全局的统计分析等。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Pillow</span><br></pre></td></tr></table></figure>\n<p>貌似Pillow是默认安装好了的，可以通过<code>pip list</code>查看是否已经安装</p>\n<h1 id=\"二：PIL的基本操作\"><a href=\"#二：PIL的基本操作\" class=\"headerlink\" title=\"二：PIL的基本操作\"></a>二：PIL的基本操作</h1><p>以下是打开图片保存图片的基本操作。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.打开图片</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.显示图片(执行显示图片后线程会中断，关闭图像后恢复)</span></span><br><span class=\"line\">img.show()</span><br><span class=\"line\"><span class=\"comment\"># 3.保存图片</span></span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/xiaomai.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/d83056bbdef3458e8e61149965e1b595.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">我在尝试的过程中发现，png格式的图片保存为jpg格式时会报错：<code>OSError: cannot write mode RGBA as JPEG</code>，经过查阅资料发现错误原因主要是因为PNG格式和JPG格式图片的通道数不同。</p>\n<ul>\n<li>PNG是四通道：RGBA意思是红色，绿色，蓝色，Alpha的色彩空间，Alpha指透明度</li>\n<li>JPG是三通道：RGB意思是红色，绿色，蓝色</li>\n</ul>\n<p>所以，PNG格式图片要保存成JPG格式就要丢弃A通道：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.打开图片</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.显示图片(执行显示图片后线程会中断，关闭图像后恢复)</span></span><br><span class=\"line\">img.show()</span><br><span class=\"line\"><span class=\"comment\"># 3.保存图片</span></span><br><span class=\"line\">img = img.convert(<span class=\"string\">&quot;RGB&quot;</span>)</span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/xiaomai.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/f4f2f1dfbcb74f81bd4c5946be761c30.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">下面是图片旋转的代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.打开图片</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;pli/7.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.水平翻转</span></span><br><span class=\"line\">img1 = img.transpose(Image.FLIP_LEFT_RIGHT)</span><br><span class=\"line\"><span class=\"comment\"># 3.保存图片</span></span><br><span class=\"line\">img1.save(<span class=\"string\">&quot;pli/1.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 4.垂直翻转</span></span><br><span class=\"line\">img2 = img.rotate(<span class=\"number\">180</span>)</span><br><span class=\"line\"><span class=\"comment\"># 5.保存照片</span></span><br><span class=\"line\">img2.save(<span class=\"string\">&quot;pli/2.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 6.水平+垂直翻转</span></span><br><span class=\"line\">img3 = img.transpose(Image.FLIP_LEFT_RIGHT).rotate(<span class=\"number\">180</span>)</span><br><span class=\"line\"><span class=\"comment\"># 7.保存图片</span></span><br><span class=\"line\">img3.save(<span class=\"string\">&quot;pli/3.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/319f05af4b6f40b29162322c98ef1591.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：给图片增加文字\"><a href=\"#三：给图片增加文字\" class=\"headerlink\" title=\"三：给图片增加文字\"></a>三：给图片增加文字</h1><p>要在图像上绘制文本要用到 PIL 的两个模块：ImageDraw和ImageFont。 ImageDraw 用于创建绘图对象，ImageFont用于加载字体。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageDraw, ImageFont</span><br><span class=\"line\"><span class=\"comment\"># 1.打开图片</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.调用画图模块</span></span><br><span class=\"line\">draw = ImageDraw.Draw(img)</span><br><span class=\"line\"><span class=\"comment\"># 3.设置字体</span></span><br><span class=\"line\">tfont = ImageFont.truetype(<span class=\"string\">&quot;萌神手写体.ttf&quot;</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\"><span class=\"comment\"># 4.添加文字</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    参数一：文字在图片的位置：(x, y)</span></span><br><span class=\"line\"><span class=\"string\">    参数二：文字内容</span></span><br><span class=\"line\"><span class=\"string\">    参数三：字体颜色，当然颜色也可以用RGB值指定</span></span><br><span class=\"line\"><span class=\"string\">    参数四：字体类型</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">draw.text((<span class=\"number\">50</span>, <span class=\"number\">30</span>), <span class=\"string\">&quot;eyes&quot;</span>, fill=<span class=\"string\">&quot;green&quot;</span>, font=tfont)</span><br><span class=\"line\"><span class=\"comment\"># 5.保存图片</span></span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/addWord.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 6.显示图片</span></span><br><span class=\"line\">img.show()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/5f604d0a2e7b42c3958fb6744d5f8798.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：PIL滤镜功能\"><a href=\"#四：PIL滤镜功能\" class=\"headerlink\" title=\"四：PIL滤镜功能\"></a>四：PIL滤镜功能</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageFilter</span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\">img = img.<span class=\"built_in\">filter</span>(ImageFilter.CONTOUR)</span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/Filter.png&quot;</span>)</span><br><span class=\"line\">img.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/a9979bfb20d34e4e9b02459e4f6c91ff.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>滤镜类型如下：<br><img src=\"https://img-blog.csdnimg.cn/56911c96b013459587f4b98f0d53e2c0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"五：PIL镜像功能\"><a href=\"#五：PIL镜像功能\" class=\"headerlink\" title=\"五：PIL镜像功能\"></a>五：PIL镜像功能</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\">img = img.transpose(Image.FLIP_LEFT_RIGHT)</span><br><span class=\"line\">img.save(<span class=\"string\">&quot;image/mirror.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/59ec6229539248249ce6ce66e4fff7d8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入代码片\">transpose有这么几种模式</p>\n<ul>\n<li>FLIP_LEFT_RIGHT：左右镜像</li>\n<li>FLIP_TOP_BOTTOM：上下镜像</li>\n<li>ROTATE_90：逆时针转90度</li>\n<li>ROTATE_180：逆时针转180度</li>\n<li>ROTATE_270：逆时针转270度</li>\n<li>TRANSPOSE：像素矩阵转置</li>\n<li>TRANSVERSE</li>\n</ul>\n<p>最后一种模式我也不知道什么意思，也没查到，但效果是下面这样的，盲猜是对角线对转。。。。。<br><img src=\"https://img-blog.csdnimg.cn/5536425799ce459b8064d819fdc95040.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">除了使用transpose制造镜像，使用rotate也可以的，不过rotate只能旋转：<br><img src=\"https://img-blog.csdnimg.cn/072c42190bcc449db7d957d626624452.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>发现这样旋转会有棱角，然后经过某位不愿透露姓名的大佬指点，发现是rotate旋转只是像素旋转，画布不动，于是我写下了以下测试代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/12.jpg&quot;</span>)</span><br><span class=\"line\">img1 = img.transpose(Image.ROTATE_90)</span><br><span class=\"line\">img1.save(<span class=\"string\">&quot;image/test.jpg&quot;</span>)</span><br><span class=\"line\">img2 = img.rotate(<span class=\"number\">90</span>)</span><br><span class=\"line\">img2.save(<span class=\"string\">&quot;image/test2.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/f7a93ce1579b47c9ad12b86bd04cc9c9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">可以发现小埋的rotate旋转不会自动填充空白像素，而血小板的会自动黑色填充。是因为png格式是非失真性压缩的，允许使用类似于GIF格式的调色板技术，支持真彩色图像，并具备阿尔法通道（半透明）等特性。而jpg格式没有阿尔法通道，因此jpg格式图片不能为透明，png格式可以。</p>\n<h1 id=\"六：图片拼接功能\"><a href=\"#六：图片拼接功能\" class=\"headerlink\" title=\"六：图片拼接功能\"></a>六：图片拼接功能</h1><p>虽说是拼接，但更像是将两幅图粘贴到一个新的画布上</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageDraw</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开图片</span></span><br><span class=\"line\">img1 = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\">img2 = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/addWord.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 查看图片尺寸，便于拼接图片</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(img1.size)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img1.size)</span><br><span class=\"line\"><span class=\"comment\"># 新建空白图片,三个参数分别是模式(RGB/RGBA)、大小、颜色</span></span><br><span class=\"line\">newimg = Image.new(mode=<span class=\"string\">&quot;RGB&quot;</span>, size=(<span class=\"number\">1174</span>, <span class=\"number\">614</span>), color=(<span class=\"number\">255</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>))</span><br><span class=\"line\"><span class=\"comment\"># 拼接图片,第一个参数是图片，第二个是起始位置</span></span><br><span class=\"line\">newimg.paste(img1, (<span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">newimg.paste(img2, (<span class=\"number\">587</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">newimg.show()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/658ad834e7344305a17d1c297f8471d3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：PIL裁剪功能\"><a href=\"#七：PIL裁剪功能\" class=\"headerlink\" title=\"七：PIL裁剪功能\"></a>七：PIL裁剪功能</h1><p>图片裁剪用到的方法是image.crop()，这个方法能从图像中提取出某个矩形大小的图像。它接收一个四元素的元组作为参数，各元素为（left, upper, right, lower），坐标系统的原点（0, 0）是左上角。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;image/10.png&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img.size)</span><br><span class=\"line\">imgCut = img.crop((<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">500</span>, <span class=\"number\">600</span>))</span><br><span class=\"line\">imgCut.show()</span><br></pre></td></tr></table></figure>\n<p>在这里插入代码片<img src=\"https://img-blog.csdnimg.cn/4c01cf541c6749c5a1a88ff428db5e61.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"八：图片缩放\"><a href=\"#八：图片缩放\" class=\"headerlink\" title=\"八：图片缩放\"></a>八：图片缩放</h1><p>可能这么看不是二分之一，但这是显示问题，可以看数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># :</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;image/10.png&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 获得图像尺寸:</span></span><br><span class=\"line\">w, h = img.size</span><br><span class=\"line\"><span class=\"comment\"># 缩放到50%:</span></span><br><span class=\"line\">img.thumbnail((w//<span class=\"number\">2</span>, h//<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"comment\"># 把缩放后的图像用jpeg格式保存:</span></span><br><span class=\"line\">img.save(<span class=\"string\">&#x27;image/zoom.png&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/36cc575c57ac4f9c908eb0baabc9df14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"python的库文件管理(pip的使用)","date":"2021-07-06T09:58:08.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/9.jpg","_content":"\n## 命令行中python的进入与退出\n1：python指令\n安装完后会出现python命令，在命令行工具内输入后可显示所安装的python的相关信息，并进行python操作。\n![展示](https://img-blog.csdnimg.cn/20210706160045565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)2: exit() 与 ctrl+z 指令\n输入python后进入python模式，可以通过上述两个指令退出python。\n![展示](https://img-blog.csdnimg.cn/20210706160746821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 库文件管理——pip\npip就是 Python标准库中的一个包，这个包比较特殊，用它可以来管理Python标准库中其他的包。pip支持从PyPI（https://pypi.org/），版本控制，本地项目以及直接从分发文件进行安装。pip是一个命令行程序。安装pip后，会向系统添加一个pip命令，该命令可以从命令提示符运行。目前，pip 是The Python Packaging Authority (PyPA) 推荐的 Python 包管理工具！\npython本身的标准库很优秀，但开发中时常需要使用其他的库，比如wxPython、Twisted和Python图像库等等，此时就需要使用pip指令进行安装。\n\n这是Python标准库：\n![展示](https://img-blog.csdnimg.cn/20210706161356227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)这是pip指令运行结果：\n![展示](https://img-blog.csdnimg.cn/20210706161034442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)从中可以看出pip的使用语法：\n```python\npip <command> [options]\n```\n以及pip命令：\n![展示](https://img-blog.csdnimg.cn/20210706163049332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### 1.安装包\n直接使用install操作时，程序默认会从python官网的库里下载，因为那是国外网站，所以下载极为缓慢。\n\n下图是在默认的官网的库里下载，很慢。\n![展示](https://img-blog.csdnimg.cn/20210706173735891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n因此推荐从国内的库中下载，国内可用的源如下：(其中清华大学的最好，因为清华大学的pip源是官网pypi的镜像，每隔5分钟同步一次)\n```\n清华大学：https://pypi.tuna.tsinghua.edu.cn/simple  \n阿里云：http://mirrors.aliyun.com/pypi/simple/\n中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/\n华中理工大学：http://pypi.hustunique.com/\n山东理工大学：http://pypi.sdutlinux.org/\n豆瓣：http://pypi.douban.com/simple/\n```\n\n永久修改pip镜像：直接在C盘的user目录中创建一个pip目录，如：C:\\Users\\xx\\pip，并新建文件pip.ini文件，pip文件内容如下：\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host=pypi.tuna.tsinghua.edu.cn\n```\n![展示](https://img-blog.csdnimg.cn/20210706174724114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n还有临时使用其他镜像的方法，就是直接加参数 -i [镜像地址]，比如下面指令：\n\n```python\npip install requests -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n![展示](https://img-blog.csdnimg.cn/20210706171958414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)下载完后的包可以在Lib文件夹下的site-packages文件夹下找到。\n![展示](https://img-blog.csdnimg.cn/20210706174931534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### 2.更新pip\n\n```python\npython -m pip install --upgrade pip\n```\n```python\npip install --upgrade pip\n```\n\n#### 3.更新包\n\n```python\npip install --upgrade package_name\n```\n\n#### 4.删除包\n\n```python\npip uninstall package_name\n```\n#### 5.查看已安装的包\n\n```python\npip list\n```\n#### 6.查看可升级的包\n\n```python\npip list --outdated\n```\n#### 7.查看包的具体信息\n\n```python\npip show package_name\n```\n#### 8.搜索包\n\n```python\npip search keyword\n```\n","source":"_posts/python/pip.md","raw":"---\ntitle: python的库文件管理(pip的使用)\ndate: 2021-07-06 17:58:08\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/9.jpg\ntags: \n  - pip\n  - 文件\ncategories: python\n---\n\n## 命令行中python的进入与退出\n1：python指令\n安装完后会出现python命令，在命令行工具内输入后可显示所安装的python的相关信息，并进行python操作。\n![展示](https://img-blog.csdnimg.cn/20210706160045565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)2: exit() 与 ctrl+z 指令\n输入python后进入python模式，可以通过上述两个指令退出python。\n![展示](https://img-blog.csdnimg.cn/20210706160746821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 库文件管理——pip\npip就是 Python标准库中的一个包，这个包比较特殊，用它可以来管理Python标准库中其他的包。pip支持从PyPI（https://pypi.org/），版本控制，本地项目以及直接从分发文件进行安装。pip是一个命令行程序。安装pip后，会向系统添加一个pip命令，该命令可以从命令提示符运行。目前，pip 是The Python Packaging Authority (PyPA) 推荐的 Python 包管理工具！\npython本身的标准库很优秀，但开发中时常需要使用其他的库，比如wxPython、Twisted和Python图像库等等，此时就需要使用pip指令进行安装。\n\n这是Python标准库：\n![展示](https://img-blog.csdnimg.cn/20210706161356227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)这是pip指令运行结果：\n![展示](https://img-blog.csdnimg.cn/20210706161034442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)从中可以看出pip的使用语法：\n```python\npip <command> [options]\n```\n以及pip命令：\n![展示](https://img-blog.csdnimg.cn/20210706163049332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### 1.安装包\n直接使用install操作时，程序默认会从python官网的库里下载，因为那是国外网站，所以下载极为缓慢。\n\n下图是在默认的官网的库里下载，很慢。\n![展示](https://img-blog.csdnimg.cn/20210706173735891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n因此推荐从国内的库中下载，国内可用的源如下：(其中清华大学的最好，因为清华大学的pip源是官网pypi的镜像，每隔5分钟同步一次)\n```\n清华大学：https://pypi.tuna.tsinghua.edu.cn/simple  \n阿里云：http://mirrors.aliyun.com/pypi/simple/\n中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/\n华中理工大学：http://pypi.hustunique.com/\n山东理工大学：http://pypi.sdutlinux.org/\n豆瓣：http://pypi.douban.com/simple/\n```\n\n永久修改pip镜像：直接在C盘的user目录中创建一个pip目录，如：C:\\Users\\xx\\pip，并新建文件pip.ini文件，pip文件内容如下：\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host=pypi.tuna.tsinghua.edu.cn\n```\n![展示](https://img-blog.csdnimg.cn/20210706174724114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n还有临时使用其他镜像的方法，就是直接加参数 -i [镜像地址]，比如下面指令：\n\n```python\npip install requests -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n![展示](https://img-blog.csdnimg.cn/20210706171958414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)下载完后的包可以在Lib文件夹下的site-packages文件夹下找到。\n![展示](https://img-blog.csdnimg.cn/20210706174931534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### 2.更新pip\n\n```python\npython -m pip install --upgrade pip\n```\n```python\npip install --upgrade pip\n```\n\n#### 3.更新包\n\n```python\npip install --upgrade package_name\n```\n\n#### 4.删除包\n\n```python\npip uninstall package_name\n```\n#### 5.查看已安装的包\n\n```python\npip list\n```\n#### 6.查看可升级的包\n\n```python\npip list --outdated\n```\n#### 7.查看包的具体信息\n\n```python\npip show package_name\n```\n#### 8.搜索包\n\n```python\npip search keyword\n```\n","slug":"python/pip","published":1,"updated":"2021-12-03T15:00:13.075Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958bg0022asdaakpq07g1","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"命令行中python的进入与退出\"><a href=\"#命令行中python的进入与退出\" class=\"headerlink\" title=\"命令行中python的进入与退出\"></a>命令行中python的进入与退出</h2><p>1：python指令<br>安装完后会出现python命令，在命令行工具内输入后可显示所安装的python的相关信息，并进行python操作。<br><img src=\"https://img-blog.csdnimg.cn/20210706160045565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">2: exit() 与 ctrl+z 指令<br>输入python后进入python模式，可以通过上述两个指令退出python。<br><img src=\"https://img-blog.csdnimg.cn/20210706160746821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"库文件管理——pip\"><a href=\"#库文件管理——pip\" class=\"headerlink\" title=\"库文件管理——pip\"></a>库文件管理——pip</h2><p>pip就是 Python标准库中的一个包，这个包比较特殊，用它可以来管理Python标准库中其他的包。pip支持从PyPI（<a href=\"https://pypi.org/%EF%BC%89%EF%BC%8C%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%EF%BC%8C%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%BB%A5%E5%8F%8A%E7%9B%B4%E6%8E%A5%E4%BB%8E%E5%88%86%E5%8F%91%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E3%80%82pip%E6%98%AF%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%A8%8B%E5%BA%8F%E3%80%82%E5%AE%89%E8%A3%85pip%E5%90%8E%EF%BC%8C%E4%BC%9A%E5%90%91%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AApip%E5%91%BD%E4%BB%A4%EF%BC%8C%E8%AF%A5%E5%91%BD%E4%BB%A4%E5%8F%AF%E4%BB%A5%E4%BB%8E%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E8%BF%90%E8%A1%8C%E3%80%82%E7%9B%AE%E5%89%8D%EF%BC%8Cpip\">https://pypi.org/），版本控制，本地项目以及直接从分发文件进行安装。pip是一个命令行程序。安装pip后，会向系统添加一个pip命令，该命令可以从命令提示符运行。目前，pip</a> 是The Python Packaging Authority (PyPA) 推荐的 Python 包管理工具！<br>python本身的标准库很优秀，但开发中时常需要使用其他的库，比如wxPython、Twisted和Python图像库等等，此时就需要使用pip指令进行安装。</p>\n<p>这是Python标准库：<br><img src=\"https://img-blog.csdnimg.cn/20210706161356227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">这是pip指令运行结果：<br><img src=\"https://img-blog.csdnimg.cn/20210706161034442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">从中可以看出pip的使用语法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip &lt;command&gt; [options]</span><br></pre></td></tr></table></figure>\n<p>以及pip命令：<br><img src=\"https://img-blog.csdnimg.cn/20210706163049332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h4 id=\"1-安装包\"><a href=\"#1-安装包\" class=\"headerlink\" title=\"1.安装包\"></a>1.安装包</h4><p>直接使用install操作时，程序默认会从python官网的库里下载，因为那是国外网站，所以下载极为缓慢。</p>\n<p>下图是在默认的官网的库里下载，很慢。<br><img src=\"https://img-blog.csdnimg.cn/20210706173735891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>因此推荐从国内的库中下载，国内可用的源如下：(其中清华大学的最好，因为清华大学的pip源是官网pypi的镜像，每隔5分钟同步一次)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">清华大学：https://pypi.tuna.tsinghua.edu.cn/simple  </span><br><span class=\"line\">阿里云：http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\">中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class=\"line\">华中理工大学：http://pypi.hustunique.com/</span><br><span class=\"line\">山东理工大学：http://pypi.sdutlinux.org/</span><br><span class=\"line\">豆瓣：http://pypi.douban.com/simple/</span><br></pre></td></tr></table></figure>\n\n<p>永久修改pip镜像：直接在C盘的user目录中创建一个pip目录，如：C:\\Users\\xx\\pip，并新建文件pip.ini文件，pip文件内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[global]</span><br><span class=\"line\">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">[install]</span><br><span class=\"line\">trusted-host=pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210706174724114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>还有临时使用其他镜像的方法，就是直接加参数 -i [镜像地址]，比如下面指令：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210706171958414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">下载完后的包可以在Lib文件夹下的site-packages文件夹下找到。<br><img src=\"https://img-blog.csdnimg.cn/20210706174931534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h4 id=\"2-更新pip\"><a href=\"#2-更新pip\" class=\"headerlink\" title=\"2.更新pip\"></a>2.更新pip</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-更新包\"><a href=\"#3-更新包\" class=\"headerlink\" title=\"3.更新包\"></a>3.更新包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --upgrade package_name</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-删除包\"><a href=\"#4-删除包\" class=\"headerlink\" title=\"4.删除包\"></a>4.删除包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip uninstall package_name</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-查看已安装的包\"><a href=\"#5-查看已安装的包\" class=\"headerlink\" title=\"5.查看已安装的包\"></a>5.查看已安装的包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-查看可升级的包\"><a href=\"#6-查看可升级的包\" class=\"headerlink\" title=\"6.查看可升级的包\"></a>6.查看可升级的包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip <span class=\"built_in\">list</span> --outdated</span><br></pre></td></tr></table></figure>\n<h4 id=\"7-查看包的具体信息\"><a href=\"#7-查看包的具体信息\" class=\"headerlink\" title=\"7.查看包的具体信息\"></a>7.查看包的具体信息</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip show package_name</span><br></pre></td></tr></table></figure>\n<h4 id=\"8-搜索包\"><a href=\"#8-搜索包\" class=\"headerlink\" title=\"8.搜索包\"></a>8.搜索包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip search keyword</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"命令行中python的进入与退出\"><a href=\"#命令行中python的进入与退出\" class=\"headerlink\" title=\"命令行中python的进入与退出\"></a>命令行中python的进入与退出</h2><p>1：python指令<br>安装完后会出现python命令，在命令行工具内输入后可显示所安装的python的相关信息，并进行python操作。<br><img src=\"https://img-blog.csdnimg.cn/20210706160045565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">2: exit() 与 ctrl+z 指令<br>输入python后进入python模式，可以通过上述两个指令退出python。<br><img src=\"https://img-blog.csdnimg.cn/20210706160746821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"库文件管理——pip\"><a href=\"#库文件管理——pip\" class=\"headerlink\" title=\"库文件管理——pip\"></a>库文件管理——pip</h2><p>pip就是 Python标准库中的一个包，这个包比较特殊，用它可以来管理Python标准库中其他的包。pip支持从PyPI（<a href=\"https://pypi.org/%EF%BC%89%EF%BC%8C%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%EF%BC%8C%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%BB%A5%E5%8F%8A%E7%9B%B4%E6%8E%A5%E4%BB%8E%E5%88%86%E5%8F%91%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E3%80%82pip%E6%98%AF%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%A8%8B%E5%BA%8F%E3%80%82%E5%AE%89%E8%A3%85pip%E5%90%8E%EF%BC%8C%E4%BC%9A%E5%90%91%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AApip%E5%91%BD%E4%BB%A4%EF%BC%8C%E8%AF%A5%E5%91%BD%E4%BB%A4%E5%8F%AF%E4%BB%A5%E4%BB%8E%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E8%BF%90%E8%A1%8C%E3%80%82%E7%9B%AE%E5%89%8D%EF%BC%8Cpip\">https://pypi.org/），版本控制，本地项目以及直接从分发文件进行安装。pip是一个命令行程序。安装pip后，会向系统添加一个pip命令，该命令可以从命令提示符运行。目前，pip</a> 是The Python Packaging Authority (PyPA) 推荐的 Python 包管理工具！<br>python本身的标准库很优秀，但开发中时常需要使用其他的库，比如wxPython、Twisted和Python图像库等等，此时就需要使用pip指令进行安装。</p>\n<p>这是Python标准库：<br><img src=\"https://img-blog.csdnimg.cn/20210706161356227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">这是pip指令运行结果：<br><img src=\"https://img-blog.csdnimg.cn/20210706161034442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">从中可以看出pip的使用语法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip &lt;command&gt; [options]</span><br></pre></td></tr></table></figure>\n<p>以及pip命令：<br><img src=\"https://img-blog.csdnimg.cn/20210706163049332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h4 id=\"1-安装包\"><a href=\"#1-安装包\" class=\"headerlink\" title=\"1.安装包\"></a>1.安装包</h4><p>直接使用install操作时，程序默认会从python官网的库里下载，因为那是国外网站，所以下载极为缓慢。</p>\n<p>下图是在默认的官网的库里下载，很慢。<br><img src=\"https://img-blog.csdnimg.cn/20210706173735891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>因此推荐从国内的库中下载，国内可用的源如下：(其中清华大学的最好，因为清华大学的pip源是官网pypi的镜像，每隔5分钟同步一次)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">清华大学：https://pypi.tuna.tsinghua.edu.cn/simple  </span><br><span class=\"line\">阿里云：http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\">中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class=\"line\">华中理工大学：http://pypi.hustunique.com/</span><br><span class=\"line\">山东理工大学：http://pypi.sdutlinux.org/</span><br><span class=\"line\">豆瓣：http://pypi.douban.com/simple/</span><br></pre></td></tr></table></figure>\n\n<p>永久修改pip镜像：直接在C盘的user目录中创建一个pip目录，如：C:\\Users\\xx\\pip，并新建文件pip.ini文件，pip文件内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[global]</span><br><span class=\"line\">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">[install]</span><br><span class=\"line\">trusted-host=pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210706174724114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>还有临时使用其他镜像的方法，就是直接加参数 -i [镜像地址]，比如下面指令：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20210706171958414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">下载完后的包可以在Lib文件夹下的site-packages文件夹下找到。<br><img src=\"https://img-blog.csdnimg.cn/20210706174931534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h4 id=\"2-更新pip\"><a href=\"#2-更新pip\" class=\"headerlink\" title=\"2.更新pip\"></a>2.更新pip</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-更新包\"><a href=\"#3-更新包\" class=\"headerlink\" title=\"3.更新包\"></a>3.更新包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --upgrade package_name</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-删除包\"><a href=\"#4-删除包\" class=\"headerlink\" title=\"4.删除包\"></a>4.删除包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip uninstall package_name</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-查看已安装的包\"><a href=\"#5-查看已安装的包\" class=\"headerlink\" title=\"5.查看已安装的包\"></a>5.查看已安装的包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-查看可升级的包\"><a href=\"#6-查看可升级的包\" class=\"headerlink\" title=\"6.查看可升级的包\"></a>6.查看可升级的包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip <span class=\"built_in\">list</span> --outdated</span><br></pre></td></tr></table></figure>\n<h4 id=\"7-查看包的具体信息\"><a href=\"#7-查看包的具体信息\" class=\"headerlink\" title=\"7.查看包的具体信息\"></a>7.查看包的具体信息</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip show package_name</span><br></pre></td></tr></table></figure>\n<h4 id=\"8-搜索包\"><a href=\"#8-搜索包\" class=\"headerlink\" title=\"8.搜索包\"></a>8.搜索包</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip search keyword</span><br></pre></td></tr></table></figure>\n"},{"title":"wordcloud绘制词云彩","date":"2021-10-11T07:09:11.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/59.jpg","_content":"\n\n# 一：wordcloud介绍\nwordcloud库可以说是python非常优秀的词云展示第三方库。词云以词语为基本单位更加直观和艺术的展示文本，wordcloud库是基于numpy和pillow这两个内置库的。官网地址：[wordcloud](https://pypi.org/project/wordcloud/)，github地址：[word_cloud](https://github.com/amueller/word_cloud)。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/15dbb600fa0d46b69f92d61db2e9ecb5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 二：wordcloud安装\n可以直接使用pip安装：\n\n```shell\npip install wordcloud\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0ac12dc26b9f499dbc1b2369088499e9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)我应该算是幸运的吧，我看网上一堆人都是说第一次装绝对会出错，我这次装虽然没有报错，但也有一堆warning，感觉报错的主流解法都是直接下载whl文件安装，如果安装出错的话这里推荐一个安装教程：[wordcloud安装方法（Windows10）](https://blog.csdn.net/weixin_45231460/article/details/104273699)\n\n# 三：wordcloud的使用\n我们可以通过wordcloud方法来生成我们的词云对象。我们在定义对象的时候也能生成我们的对象的参数定义：\n+ **width**：图像的宽度，默认为400px\n+ **height**：图像的高度，默认为200px\n+ **min_font_size**：最小字号，默认为4px\n+ **max_font_size**：最大字号，默认不做限制\n+ **margin**：画布边缘留白的空隙，默认留白空间是2px\n+ **font_step**：字体步进，系统会根据词出现的次数来定词的大小，次数多的和次数少的之间的字号差距就是步进间隔。默认为1\n+ **font_path**：展示字体的路径\n+ **prefer_horizontal**： 词语水平方向排版出现的频率，默认 0.9 ,所以词语垂直方向排版出现频率为 0.1 \n+ **scale**：在字段width和height乘以的倍数，最终呈现的画布尺寸以这个结果。默认是1，此方法适合需要呈现大尺寸的画布\n+ **max_words**：词云最大单词数量，默认为200\n+ **stop_words**：不显示词语列表，采用集合形式：stop_words={\" “,” “,” \"}\n+ **background_color**：背景颜色，默认为黑色\n+ **normalize_plurals**：bool类型，是否去掉单词末尾的s，默认去掉\n+ **repeat**：bool类型，单词是否重复展示，默认不重复\n\n除了上面这些参数，wordcloud还有一个特殊的参数，就是词云的形状，wordcloud的形状我们必须引入另外一个库imageio，通过imageio我们可以将目前的图片加载成元单元。\n\n```shell\npip install imageio\n```\n引入完成后，我们可以设置词云的形状，参数为 **mask**\n\nwordcloud的一些方法：\n<table style=\"border-width:2px;border-style:solid;\" border=\"2\" align=\"center\"><tbody><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;方法名　　</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;参数</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;返回值</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;备注</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">fit_words</code><span class=\"sig-paren\">(<em>frequencies</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>frequencies</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">dict from string to float</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self　</span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\" rowspan=\"2\"><span style=\"font-size:14px;\">根据单词及其频率生成词云</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><span style=\"font-size:14px;\"><code class=\"descname\">generate_from_frequencies</code></span></p> <p><span style=\"font-size:14px;\"><span class=\"sig-paren\">(<em>frequencies</em>,&nbsp;<em>max_font_size=None</em><span class=\"sig-paren\">)</span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><span style=\"font-size:14px;\"><strong>frequencies</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">dict from string to float</span></span></span></p> <p><span class=\"classifier-delimiter\" style=\"font-size:14px;\"><span class=\"classifier\"><strong>max_font_size</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">int</span></span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">generate</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\" rowspan=\"2\"><span style=\"font-size:14px;\">根据文本生成词云，是方法generate_from_text的别称。输入的文本应该是一个自然文本。若输入的是已排列好的单词，那么单词会出现两次，可以设置参数collocations=False去除此单词重复。调用process_text和genereate_from_frequences</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">generate_from_text</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">process_text</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">words<span class=\"classifier-delimiter\">:<span class=\"classifier\">dict (string, int)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">将一长段文本切片成单词，并去除stopwords。返回单词（words）和其出现次数的字典格式</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\"><code class=\"descname\">recolor</code><span class=\"sig-paren\">(<em>random_state=None</em>,&nbsp;<em>color_func=None</em>,&nbsp;<em>colormap=None</em><span class=\"sig-paren\">)</span></span></code></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><strong><strong>random_state</strong><span class=\"classifier-delimiter\">:</span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\">RandomState, int, or None, default=None</span></span></p> <p><strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><strong>color_func</strong><span class=\"classifier-delimiter\">:</span></span></span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\">function or None, default=None</span></span></span></span></p> <p><strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\"><strong>colormap</strong><span class=\"classifier-delimiter\">:</span></span></span></span></span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\">string or matplotlib colormap, default=None</span></span></span></span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">self</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><code class=\"descname\">to_array</code><span class=\"sig-paren\">(<span class=\"sig-paren\">)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">image<span class=\"classifier-delimiter\">:<span class=\"classifier\">nd-array size (width, height, 3)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">转换成numpy array</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><code class=\"descname\"><code class=\"descname\">to_file</code><span class=\"sig-paren\">(<em>filename</em><span class=\"sig-paren\">)</span></span></code></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><strong>filename</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">self</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">保存图片文件</td></tr></tbody></table>\n\n需要注意的是，使用generate加载词云文本时，其中txt的内容需要以空格来分隔单词，并且对于英文单词而言，如果单词长度为1-2，系统会自动过滤。\n\n效果如下：\n\n```python\nimport wordcloud, imageio\n\n# 准备字符串\nstr = \"\"\"If El Niños were dangerous before,they are looking to become especially destructive in the near future. \nAlready severe and unpredictable,recent research indicates these natural weather events are now swinging to even \ngreater extremes. Since humans started burning fossil fuels on an industrial scale,coral records from the past 7,\n000 years indicate that heat waves,wildfires,droughts,flooding and violent storms associated with El Niño have grown \nmarkedly worse. \"\"\"\n\n# 准备词云模板\nmask = imageio.imread(\"wordcloud/template.png\")\n# 实例化一个wordcloud对象\nwc = wordcloud.WordCloud(width=400, height=400, min_font_size=5, max_font_size=50, font_step=2, max_words=500, mask=mask)\n# 加载词云文本\nwc.generate(str)\n# 输出图片\nwc.to_file(\"wordcloud/word.png\")\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/651bad50a9dd49f18a30412a748bf472.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/63a64f4e4b0b4bc18f1f07fd417649ba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 四：wordcloud案例\n题目：wordcloud 是优秀的词云展示第三方库，它以以词语为基本单位，更加直观和艺术地展示文本，请根据附件文件（校长 2018.txt、校长 2018 毕业讲话.txt），分别绘制词云彩，可自行设定背\n景或背景图片。\n\n```python\nimport wordcloud, imageio\n\n# 准备字符串\nf1 = open(\"校长2018.txt\", \"r+\", encoding=\"utf-8\")\nf2 = open(\"校长2018毕业讲话.txt\", \"r+\", encoding=\"utf-8\")\ntext1 = f1.read()\ntext2 = f2.read()\n# 准备词云模板\nmask = imageio.imread(\"wordcloud/template.png\")\n# 实例化一个wordcloud对象\nwc = wordcloud.WordCloud(width=400, height=400, min_font_size=5, max_font_size=50, font_step=2, max_words=500, mask=mask)\n# 加载词云文本\nwc.generate(text1 + text2)\n# 输出图片\nwc.to_file(\"wordcloud/word.png\")\n\nprint(text1+text2)\nf1.close()\nf2.close()\n```\n我在运行的时候发现，没有报错，但结果却是这样的：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9c3479c4c6b44dd3ab60b976fed72a4e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n经过查阅资料后找到原因，wordcloud默认字体是DroidSansMono.ttf，这个字体不支持中文格式，因此需要更换字体，找到wordcloud.py文件，打开后更改：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c81ca19866534286bde2c55dcb805b86.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n我这里是改成了微软雅黑，同时还需要把对应的字体放在wordcloud.py同目录：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/21499c3ec91941d2be31ea23eca63057.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n然后就顺利完成了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/29a21db25f8046859325d39cc370a8b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","source":"_posts/python/wordcloud.md","raw":"---\ntitle: wordcloud绘制词云彩\ndate: 2021-10-11 15:09:11\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/59.jpg\ntags:\n  - wordcloud\ncategories: python\n---\n\n\n# 一：wordcloud介绍\nwordcloud库可以说是python非常优秀的词云展示第三方库。词云以词语为基本单位更加直观和艺术的展示文本，wordcloud库是基于numpy和pillow这两个内置库的。官网地址：[wordcloud](https://pypi.org/project/wordcloud/)，github地址：[word_cloud](https://github.com/amueller/word_cloud)。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/15dbb600fa0d46b69f92d61db2e9ecb5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 二：wordcloud安装\n可以直接使用pip安装：\n\n```shell\npip install wordcloud\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0ac12dc26b9f499dbc1b2369088499e9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)我应该算是幸运的吧，我看网上一堆人都是说第一次装绝对会出错，我这次装虽然没有报错，但也有一堆warning，感觉报错的主流解法都是直接下载whl文件安装，如果安装出错的话这里推荐一个安装教程：[wordcloud安装方法（Windows10）](https://blog.csdn.net/weixin_45231460/article/details/104273699)\n\n# 三：wordcloud的使用\n我们可以通过wordcloud方法来生成我们的词云对象。我们在定义对象的时候也能生成我们的对象的参数定义：\n+ **width**：图像的宽度，默认为400px\n+ **height**：图像的高度，默认为200px\n+ **min_font_size**：最小字号，默认为4px\n+ **max_font_size**：最大字号，默认不做限制\n+ **margin**：画布边缘留白的空隙，默认留白空间是2px\n+ **font_step**：字体步进，系统会根据词出现的次数来定词的大小，次数多的和次数少的之间的字号差距就是步进间隔。默认为1\n+ **font_path**：展示字体的路径\n+ **prefer_horizontal**： 词语水平方向排版出现的频率，默认 0.9 ,所以词语垂直方向排版出现频率为 0.1 \n+ **scale**：在字段width和height乘以的倍数，最终呈现的画布尺寸以这个结果。默认是1，此方法适合需要呈现大尺寸的画布\n+ **max_words**：词云最大单词数量，默认为200\n+ **stop_words**：不显示词语列表，采用集合形式：stop_words={\" “,” “,” \"}\n+ **background_color**：背景颜色，默认为黑色\n+ **normalize_plurals**：bool类型，是否去掉单词末尾的s，默认去掉\n+ **repeat**：bool类型，单词是否重复展示，默认不重复\n\n除了上面这些参数，wordcloud还有一个特殊的参数，就是词云的形状，wordcloud的形状我们必须引入另外一个库imageio，通过imageio我们可以将目前的图片加载成元单元。\n\n```shell\npip install imageio\n```\n引入完成后，我们可以设置词云的形状，参数为 **mask**\n\nwordcloud的一些方法：\n<table style=\"border-width:2px;border-style:solid;\" border=\"2\" align=\"center\"><tbody><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;方法名　　</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;参数</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;返回值</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;备注</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">fit_words</code><span class=\"sig-paren\">(<em>frequencies</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>frequencies</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">dict from string to float</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self　</span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\" rowspan=\"2\"><span style=\"font-size:14px;\">根据单词及其频率生成词云</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><span style=\"font-size:14px;\"><code class=\"descname\">generate_from_frequencies</code></span></p> <p><span style=\"font-size:14px;\"><span class=\"sig-paren\">(<em>frequencies</em>,&nbsp;<em>max_font_size=None</em><span class=\"sig-paren\">)</span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><span style=\"font-size:14px;\"><strong>frequencies</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">dict from string to float</span></span></span></p> <p><span class=\"classifier-delimiter\" style=\"font-size:14px;\"><span class=\"classifier\"><strong>max_font_size</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">int</span></span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">generate</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\" rowspan=\"2\"><span style=\"font-size:14px;\">根据文本生成词云，是方法generate_from_text的别称。输入的文本应该是一个自然文本。若输入的是已排列好的单词，那么单词会出现两次，可以设置参数collocations=False去除此单词重复。调用process_text和genereate_from_frequences</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">generate_from_text</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">process_text</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">words<span class=\"classifier-delimiter\">:<span class=\"classifier\">dict (string, int)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">将一长段文本切片成单词，并去除stopwords。返回单词（words）和其出现次数的字典格式</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\"><code class=\"descname\">recolor</code><span class=\"sig-paren\">(<em>random_state=None</em>,&nbsp;<em>color_func=None</em>,&nbsp;<em>colormap=None</em><span class=\"sig-paren\">)</span></span></code></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><strong><strong>random_state</strong><span class=\"classifier-delimiter\">:</span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\">RandomState, int, or None, default=None</span></span></p> <p><strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><strong>color_func</strong><span class=\"classifier-delimiter\">:</span></span></span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\">function or None, default=None</span></span></span></span></p> <p><strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\"><strong>colormap</strong><span class=\"classifier-delimiter\">:</span></span></span></span></span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\">string or matplotlib colormap, default=None</span></span></span></span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">self</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><code class=\"descname\">to_array</code><span class=\"sig-paren\">(<span class=\"sig-paren\">)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">image<span class=\"classifier-delimiter\">:<span class=\"classifier\">nd-array size (width, height, 3)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">转换成numpy array</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><code class=\"descname\"><code class=\"descname\">to_file</code><span class=\"sig-paren\">(<em>filename</em><span class=\"sig-paren\">)</span></span></code></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><strong>filename</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">self</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">保存图片文件</td></tr></tbody></table>\n\n需要注意的是，使用generate加载词云文本时，其中txt的内容需要以空格来分隔单词，并且对于英文单词而言，如果单词长度为1-2，系统会自动过滤。\n\n效果如下：\n\n```python\nimport wordcloud, imageio\n\n# 准备字符串\nstr = \"\"\"If El Niños were dangerous before,they are looking to become especially destructive in the near future. \nAlready severe and unpredictable,recent research indicates these natural weather events are now swinging to even \ngreater extremes. Since humans started burning fossil fuels on an industrial scale,coral records from the past 7,\n000 years indicate that heat waves,wildfires,droughts,flooding and violent storms associated with El Niño have grown \nmarkedly worse. \"\"\"\n\n# 准备词云模板\nmask = imageio.imread(\"wordcloud/template.png\")\n# 实例化一个wordcloud对象\nwc = wordcloud.WordCloud(width=400, height=400, min_font_size=5, max_font_size=50, font_step=2, max_words=500, mask=mask)\n# 加载词云文本\nwc.generate(str)\n# 输出图片\nwc.to_file(\"wordcloud/word.png\")\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/651bad50a9dd49f18a30412a748bf472.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/63a64f4e4b0b4bc18f1f07fd417649ba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 四：wordcloud案例\n题目：wordcloud 是优秀的词云展示第三方库，它以以词语为基本单位，更加直观和艺术地展示文本，请根据附件文件（校长 2018.txt、校长 2018 毕业讲话.txt），分别绘制词云彩，可自行设定背\n景或背景图片。\n\n```python\nimport wordcloud, imageio\n\n# 准备字符串\nf1 = open(\"校长2018.txt\", \"r+\", encoding=\"utf-8\")\nf2 = open(\"校长2018毕业讲话.txt\", \"r+\", encoding=\"utf-8\")\ntext1 = f1.read()\ntext2 = f2.read()\n# 准备词云模板\nmask = imageio.imread(\"wordcloud/template.png\")\n# 实例化一个wordcloud对象\nwc = wordcloud.WordCloud(width=400, height=400, min_font_size=5, max_font_size=50, font_step=2, max_words=500, mask=mask)\n# 加载词云文本\nwc.generate(text1 + text2)\n# 输出图片\nwc.to_file(\"wordcloud/word.png\")\n\nprint(text1+text2)\nf1.close()\nf2.close()\n```\n我在运行的时候发现，没有报错，但结果却是这样的：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9c3479c4c6b44dd3ab60b976fed72a4e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n经过查阅资料后找到原因，wordcloud默认字体是DroidSansMono.ttf，这个字体不支持中文格式，因此需要更换字体，找到wordcloud.py文件，打开后更改：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c81ca19866534286bde2c55dcb805b86.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n我这里是改成了微软雅黑，同时还需要把对应的字体放在wordcloud.py同目录：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/21499c3ec91941d2be31ea23eca63057.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n然后就顺利完成了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/29a21db25f8046859325d39cc370a8b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","slug":"python/wordcloud","published":1,"updated":"2021-12-03T15:00:15.946Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958bi0026asdadle085e2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：wordcloud介绍\"><a href=\"#一：wordcloud介绍\" class=\"headerlink\" title=\"一：wordcloud介绍\"></a>一：wordcloud介绍</h1><p>wordcloud库可以说是python非常优秀的词云展示第三方库。词云以词语为基本单位更加直观和艺术的展示文本，wordcloud库是基于numpy和pillow这两个内置库的。官网地址：<a href=\"https://pypi.org/project/wordcloud/\">wordcloud</a>，github地址：<a href=\"https://github.com/amueller/word_cloud\">word_cloud</a>。<br><img src=\"https://img-blog.csdnimg.cn/15dbb600fa0d46b69f92d61db2e9ecb5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"二：wordcloud安装\"><a href=\"#二：wordcloud安装\" class=\"headerlink\" title=\"二：wordcloud安装\"></a>二：wordcloud安装</h1><p>可以直接使用pip安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install wordcloud</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/0ac12dc26b9f499dbc1b2369088499e9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">我应该算是幸运的吧，我看网上一堆人都是说第一次装绝对会出错，我这次装虽然没有报错，但也有一堆warning，感觉报错的主流解法都是直接下载whl文件安装，如果安装出错的话这里推荐一个安装教程：<a href=\"https://blog.csdn.net/weixin_45231460/article/details/104273699\">wordcloud安装方法（Windows10）</a></p>\n<h1 id=\"三：wordcloud的使用\"><a href=\"#三：wordcloud的使用\" class=\"headerlink\" title=\"三：wordcloud的使用\"></a>三：wordcloud的使用</h1><p>我们可以通过wordcloud方法来生成我们的词云对象。我们在定义对象的时候也能生成我们的对象的参数定义：</p>\n<ul>\n<li><strong>width</strong>：图像的宽度，默认为400px</li>\n<li><strong>height</strong>：图像的高度，默认为200px</li>\n<li><strong>min_font_size</strong>：最小字号，默认为4px</li>\n<li><strong>max_font_size</strong>：最大字号，默认不做限制</li>\n<li><strong>margin</strong>：画布边缘留白的空隙，默认留白空间是2px</li>\n<li><strong>font_step</strong>：字体步进，系统会根据词出现的次数来定词的大小，次数多的和次数少的之间的字号差距就是步进间隔。默认为1</li>\n<li><strong>font_path</strong>：展示字体的路径</li>\n<li><strong>prefer_horizontal</strong>： 词语水平方向排版出现的频率，默认 0.9 ,所以词语垂直方向排版出现频率为 0.1 </li>\n<li><strong>scale</strong>：在字段width和height乘以的倍数，最终呈现的画布尺寸以这个结果。默认是1，此方法适合需要呈现大尺寸的画布</li>\n<li><strong>max_words</strong>：词云最大单词数量，默认为200</li>\n<li><strong>stop_words</strong>：不显示词语列表，采用集合形式：stop_words={“ “,” “,” “}</li>\n<li><strong>background_color</strong>：背景颜色，默认为黑色</li>\n<li><strong>normalize_plurals</strong>：bool类型，是否去掉单词末尾的s，默认去掉</li>\n<li><strong>repeat</strong>：bool类型，单词是否重复展示，默认不重复</li>\n</ul>\n<p>除了上面这些参数，wordcloud还有一个特殊的参数，就是词云的形状，wordcloud的形状我们必须引入另外一个库imageio，通过imageio我们可以将目前的图片加载成元单元。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install imageio</span><br></pre></td></tr></table></figure>\n<p>引入完成后，我们可以设置词云的形状，参数为 <strong>mask</strong></p>\n<p>wordcloud的一些方法：</p>\n<table style=\"border-width:2px;border-style:solid;\" border=\"2\" align=\"center\"><tbody><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;方法名　　</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;参数</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;返回值</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;备注</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">fit_words</code><span class=\"sig-paren\">(<em>frequencies</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>frequencies</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">dict from string to float</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self　</span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\" rowspan=\"2\"><span style=\"font-size:14px;\">根据单词及其频率生成词云</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><span style=\"font-size:14px;\"><code class=\"descname\">generate_from_frequencies</code></span></p> <p><span style=\"font-size:14px;\"><span class=\"sig-paren\">(<em>frequencies</em>,&nbsp;<em>max_font_size=None</em><span class=\"sig-paren\">)</span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><span style=\"font-size:14px;\"><strong>frequencies</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">dict from string to float</span></span></span></p> <p><span class=\"classifier-delimiter\" style=\"font-size:14px;\"><span class=\"classifier\"><strong>max_font_size</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">int</span></span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">generate</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\" rowspan=\"2\"><span style=\"font-size:14px;\">根据文本生成词云，是方法generate_from_text的别称。输入的文本应该是一个自然文本。若输入的是已排列好的单词，那么单词会出现两次，可以设置参数collocations=False去除此单词重复。调用process_text和genereate_from_frequences</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">generate_from_text</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">process_text</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">words<span class=\"classifier-delimiter\">:<span class=\"classifier\">dict (string, int)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">将一长段文本切片成单词，并去除stopwords。返回单词（words）和其出现次数的字典格式</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\"><code class=\"descname\">recolor</code><span class=\"sig-paren\">(<em>random_state=None</em>,&nbsp;<em>color_func=None</em>,&nbsp;<em>colormap=None</em><span class=\"sig-paren\">)</span></span></code></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><strong><strong>random_state</strong><span class=\"classifier-delimiter\">:</span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\">RandomState, int, or None, default=None</span></span></p> <p><strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><strong>color_func</strong><span class=\"classifier-delimiter\">:</span></span></span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\">function or None, default=None</span></span></span></span></p> <p><strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\"><strong>colormap</strong><span class=\"classifier-delimiter\">:</span></span></span></span></span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\">string or matplotlib colormap, default=None</span></span></span></span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">self</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><code class=\"descname\">to_array</code><span class=\"sig-paren\">(<span class=\"sig-paren\">)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">image<span class=\"classifier-delimiter\">:<span class=\"classifier\">nd-array size (width, height, 3)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">转换成numpy array</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><code class=\"descname\"><code class=\"descname\">to_file</code><span class=\"sig-paren\">(<em>filename</em><span class=\"sig-paren\">)</span></span></code></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><strong>filename</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">self</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">保存图片文件</td></tr></tbody></table>\n\n<p>需要注意的是，使用generate加载词云文本时，其中txt的内容需要以空格来分隔单词，并且对于英文单词而言，如果单词长度为1-2，系统会自动过滤。</p>\n<p>效果如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wordcloud, imageio</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备字符串</span></span><br><span class=\"line\"><span class=\"built_in\">str</span> = <span class=\"string\">&quot;&quot;&quot;If El Niños were dangerous before,they are looking to become especially destructive in the near future. </span></span><br><span class=\"line\"><span class=\"string\">Already severe and unpredictable,recent research indicates these natural weather events are now swinging to even </span></span><br><span class=\"line\"><span class=\"string\">greater extremes. Since humans started burning fossil fuels on an industrial scale,coral records from the past 7,</span></span><br><span class=\"line\"><span class=\"string\">000 years indicate that heat waves,wildfires,droughts,flooding and violent storms associated with El Niño have grown </span></span><br><span class=\"line\"><span class=\"string\">markedly worse. &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备词云模板</span></span><br><span class=\"line\">mask = imageio.imread(<span class=\"string\">&quot;wordcloud/template.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 实例化一个wordcloud对象</span></span><br><span class=\"line\">wc = wordcloud.WordCloud(width=<span class=\"number\">400</span>, height=<span class=\"number\">400</span>, min_font_size=<span class=\"number\">5</span>, max_font_size=<span class=\"number\">50</span>, font_step=<span class=\"number\">2</span>, max_words=<span class=\"number\">500</span>, mask=mask)</span><br><span class=\"line\"><span class=\"comment\"># 加载词云文本</span></span><br><span class=\"line\">wc.generate(<span class=\"built_in\">str</span>)</span><br><span class=\"line\"><span class=\"comment\"># 输出图片</span></span><br><span class=\"line\">wc.to_file(<span class=\"string\">&quot;wordcloud/word.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/651bad50a9dd49f18a30412a748bf472.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/63a64f4e4b0b4bc18f1f07fd417649ba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：wordcloud案例\"><a href=\"#四：wordcloud案例\" class=\"headerlink\" title=\"四：wordcloud案例\"></a>四：wordcloud案例</h1><p>题目：wordcloud 是优秀的词云展示第三方库，它以以词语为基本单位，更加直观和艺术地展示文本，请根据附件文件（校长 2018.txt、校长 2018 毕业讲话.txt），分别绘制词云彩，可自行设定背<br>景或背景图片。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wordcloud, imageio</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备字符串</span></span><br><span class=\"line\">f1 = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;校长2018.txt&quot;</span>, <span class=\"string\">&quot;r+&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">f2 = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;校长2018毕业讲话.txt&quot;</span>, <span class=\"string\">&quot;r+&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">text1 = f1.read()</span><br><span class=\"line\">text2 = f2.read()</span><br><span class=\"line\"><span class=\"comment\"># 准备词云模板</span></span><br><span class=\"line\">mask = imageio.imread(<span class=\"string\">&quot;wordcloud/template.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 实例化一个wordcloud对象</span></span><br><span class=\"line\">wc = wordcloud.WordCloud(width=<span class=\"number\">400</span>, height=<span class=\"number\">400</span>, min_font_size=<span class=\"number\">5</span>, max_font_size=<span class=\"number\">50</span>, font_step=<span class=\"number\">2</span>, max_words=<span class=\"number\">500</span>, mask=mask)</span><br><span class=\"line\"><span class=\"comment\"># 加载词云文本</span></span><br><span class=\"line\">wc.generate(text1 + text2)</span><br><span class=\"line\"><span class=\"comment\"># 输出图片</span></span><br><span class=\"line\">wc.to_file(<span class=\"string\">&quot;wordcloud/word.png&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(text1+text2)</span><br><span class=\"line\">f1.close()</span><br><span class=\"line\">f2.close()</span><br></pre></td></tr></table></figure>\n<p>我在运行的时候发现，没有报错，但结果却是这样的：<br><img src=\"https://img-blog.csdnimg.cn/9c3479c4c6b44dd3ab60b976fed72a4e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>经过查阅资料后找到原因，wordcloud默认字体是DroidSansMono.ttf，这个字体不支持中文格式，因此需要更换字体，找到wordcloud.py文件，打开后更改：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/c81ca19866534286bde2c55dcb805b86.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>我这里是改成了微软雅黑，同时还需要把对应的字体放在wordcloud.py同目录：<br><img src=\"https://img-blog.csdnimg.cn/21499c3ec91941d2be31ea23eca63057.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>然后就顺利完成了：<br><img src=\"https://img-blog.csdnimg.cn/29a21db25f8046859325d39cc370a8b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：wordcloud介绍\"><a href=\"#一：wordcloud介绍\" class=\"headerlink\" title=\"一：wordcloud介绍\"></a>一：wordcloud介绍</h1><p>wordcloud库可以说是python非常优秀的词云展示第三方库。词云以词语为基本单位更加直观和艺术的展示文本，wordcloud库是基于numpy和pillow这两个内置库的。官网地址：<a href=\"https://pypi.org/project/wordcloud/\">wordcloud</a>，github地址：<a href=\"https://github.com/amueller/word_cloud\">word_cloud</a>。<br><img src=\"https://img-blog.csdnimg.cn/15dbb600fa0d46b69f92d61db2e9ecb5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"二：wordcloud安装\"><a href=\"#二：wordcloud安装\" class=\"headerlink\" title=\"二：wordcloud安装\"></a>二：wordcloud安装</h1><p>可以直接使用pip安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install wordcloud</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/0ac12dc26b9f499dbc1b2369088499e9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">我应该算是幸运的吧，我看网上一堆人都是说第一次装绝对会出错，我这次装虽然没有报错，但也有一堆warning，感觉报错的主流解法都是直接下载whl文件安装，如果安装出错的话这里推荐一个安装教程：<a href=\"https://blog.csdn.net/weixin_45231460/article/details/104273699\">wordcloud安装方法（Windows10）</a></p>\n<h1 id=\"三：wordcloud的使用\"><a href=\"#三：wordcloud的使用\" class=\"headerlink\" title=\"三：wordcloud的使用\"></a>三：wordcloud的使用</h1><p>我们可以通过wordcloud方法来生成我们的词云对象。我们在定义对象的时候也能生成我们的对象的参数定义：</p>\n<ul>\n<li><strong>width</strong>：图像的宽度，默认为400px</li>\n<li><strong>height</strong>：图像的高度，默认为200px</li>\n<li><strong>min_font_size</strong>：最小字号，默认为4px</li>\n<li><strong>max_font_size</strong>：最大字号，默认不做限制</li>\n<li><strong>margin</strong>：画布边缘留白的空隙，默认留白空间是2px</li>\n<li><strong>font_step</strong>：字体步进，系统会根据词出现的次数来定词的大小，次数多的和次数少的之间的字号差距就是步进间隔。默认为1</li>\n<li><strong>font_path</strong>：展示字体的路径</li>\n<li><strong>prefer_horizontal</strong>： 词语水平方向排版出现的频率，默认 0.9 ,所以词语垂直方向排版出现频率为 0.1 </li>\n<li><strong>scale</strong>：在字段width和height乘以的倍数，最终呈现的画布尺寸以这个结果。默认是1，此方法适合需要呈现大尺寸的画布</li>\n<li><strong>max_words</strong>：词云最大单词数量，默认为200</li>\n<li><strong>stop_words</strong>：不显示词语列表，采用集合形式：stop_words={“ “,” “,” “}</li>\n<li><strong>background_color</strong>：背景颜色，默认为黑色</li>\n<li><strong>normalize_plurals</strong>：bool类型，是否去掉单词末尾的s，默认去掉</li>\n<li><strong>repeat</strong>：bool类型，单词是否重复展示，默认不重复</li>\n</ul>\n<p>除了上面这些参数，wordcloud还有一个特殊的参数，就是词云的形状，wordcloud的形状我们必须引入另外一个库imageio，通过imageio我们可以将目前的图片加载成元单元。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install imageio</span><br></pre></td></tr></table></figure>\n<p>引入完成后，我们可以设置词云的形状，参数为 <strong>mask</strong></p>\n<p>wordcloud的一些方法：</p>\n<table style=\"border-width:2px;border-style:solid;\" border=\"2\" align=\"center\"><tbody><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;方法名　　</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;参数</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;返回值</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;备注</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">fit_words</code><span class=\"sig-paren\">(<em>frequencies</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>frequencies</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">dict from string to float</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self　</span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\" rowspan=\"2\"><span style=\"font-size:14px;\">根据单词及其频率生成词云</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><span style=\"font-size:14px;\"><code class=\"descname\">generate_from_frequencies</code></span></p> <p><span style=\"font-size:14px;\"><span class=\"sig-paren\">(<em>frequencies</em>,&nbsp;<em>max_font_size=None</em><span class=\"sig-paren\">)</span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><span style=\"font-size:14px;\"><strong>frequencies</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">dict from string to float</span></span></span></p> <p><span class=\"classifier-delimiter\" style=\"font-size:14px;\"><span class=\"classifier\"><strong>max_font_size</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">int</span></span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">generate</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\" rowspan=\"2\"><span style=\"font-size:14px;\">根据文本生成词云，是方法generate_from_text的别称。输入的文本应该是一个自然文本。若输入的是已排列好的单词，那么单词会出现两次，可以设置参数collocations=False去除此单词重复。调用process_text和genereate_from_frequences</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">generate_from_text</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">self</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\">process_text</code><span class=\"sig-paren\">(<em>text</em><span class=\"sig-paren\">)</span></span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><strong>text</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">words<span class=\"classifier-delimiter\">:<span class=\"classifier\">dict (string, int)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\">将一长段文本切片成单词，并去除stopwords。返回单词（words）和其出现次数的字典格式</span></td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><span style=\"font-size:14px;\"><code class=\"descname\"><code class=\"descname\">recolor</code><span class=\"sig-paren\">(<em>random_state=None</em>,&nbsp;<em>color_func=None</em>,&nbsp;<em>colormap=None</em><span class=\"sig-paren\">)</span></span></code></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"> <p><strong><strong>random_state</strong><span class=\"classifier-delimiter\">:</span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\">RandomState, int, or None, default=None</span></span></p> <p><strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><strong>color_func</strong><span class=\"classifier-delimiter\">:</span></span></span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\">function or None, default=None</span></span></span></span></p> <p><strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\"><strong>colormap</strong><span class=\"classifier-delimiter\">:</span></span></span></span></span></strong><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\"><span class=\"classifier-delimiter\"><span class=\"classifier\">string or matplotlib colormap, default=None</span></span></span></span></span></span></p> </td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">self</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><code class=\"descname\">to_array</code><span class=\"sig-paren\">(<span class=\"sig-paren\">)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">&nbsp;</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">image<span class=\"classifier-delimiter\">:<span class=\"classifier\">nd-array size (width, height, 3)</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">转换成numpy array</td></tr><tr><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><code class=\"descname\"><code class=\"descname\">to_file</code><span class=\"sig-paren\">(<em>filename</em><span class=\"sig-paren\">)</span></span></code></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\"><strong>filename</strong><span class=\"classifier-delimiter\">:<span class=\"classifier\">string</span></span></td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">self</td><td style=\"border-color:#000000;border-style:solid;border-width:1px;\">保存图片文件</td></tr></tbody></table>\n\n<p>需要注意的是，使用generate加载词云文本时，其中txt的内容需要以空格来分隔单词，并且对于英文单词而言，如果单词长度为1-2，系统会自动过滤。</p>\n<p>效果如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wordcloud, imageio</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备字符串</span></span><br><span class=\"line\"><span class=\"built_in\">str</span> = <span class=\"string\">&quot;&quot;&quot;If El Niños were dangerous before,they are looking to become especially destructive in the near future. </span></span><br><span class=\"line\"><span class=\"string\">Already severe and unpredictable,recent research indicates these natural weather events are now swinging to even </span></span><br><span class=\"line\"><span class=\"string\">greater extremes. Since humans started burning fossil fuels on an industrial scale,coral records from the past 7,</span></span><br><span class=\"line\"><span class=\"string\">000 years indicate that heat waves,wildfires,droughts,flooding and violent storms associated with El Niño have grown </span></span><br><span class=\"line\"><span class=\"string\">markedly worse. &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备词云模板</span></span><br><span class=\"line\">mask = imageio.imread(<span class=\"string\">&quot;wordcloud/template.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 实例化一个wordcloud对象</span></span><br><span class=\"line\">wc = wordcloud.WordCloud(width=<span class=\"number\">400</span>, height=<span class=\"number\">400</span>, min_font_size=<span class=\"number\">5</span>, max_font_size=<span class=\"number\">50</span>, font_step=<span class=\"number\">2</span>, max_words=<span class=\"number\">500</span>, mask=mask)</span><br><span class=\"line\"><span class=\"comment\"># 加载词云文本</span></span><br><span class=\"line\">wc.generate(<span class=\"built_in\">str</span>)</span><br><span class=\"line\"><span class=\"comment\"># 输出图片</span></span><br><span class=\"line\">wc.to_file(<span class=\"string\">&quot;wordcloud/word.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/651bad50a9dd49f18a30412a748bf472.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/63a64f4e4b0b4bc18f1f07fd417649ba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：wordcloud案例\"><a href=\"#四：wordcloud案例\" class=\"headerlink\" title=\"四：wordcloud案例\"></a>四：wordcloud案例</h1><p>题目：wordcloud 是优秀的词云展示第三方库，它以以词语为基本单位，更加直观和艺术地展示文本，请根据附件文件（校长 2018.txt、校长 2018 毕业讲话.txt），分别绘制词云彩，可自行设定背<br>景或背景图片。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wordcloud, imageio</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备字符串</span></span><br><span class=\"line\">f1 = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;校长2018.txt&quot;</span>, <span class=\"string\">&quot;r+&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">f2 = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;校长2018毕业讲话.txt&quot;</span>, <span class=\"string\">&quot;r+&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">text1 = f1.read()</span><br><span class=\"line\">text2 = f2.read()</span><br><span class=\"line\"><span class=\"comment\"># 准备词云模板</span></span><br><span class=\"line\">mask = imageio.imread(<span class=\"string\">&quot;wordcloud/template.png&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 实例化一个wordcloud对象</span></span><br><span class=\"line\">wc = wordcloud.WordCloud(width=<span class=\"number\">400</span>, height=<span class=\"number\">400</span>, min_font_size=<span class=\"number\">5</span>, max_font_size=<span class=\"number\">50</span>, font_step=<span class=\"number\">2</span>, max_words=<span class=\"number\">500</span>, mask=mask)</span><br><span class=\"line\"><span class=\"comment\"># 加载词云文本</span></span><br><span class=\"line\">wc.generate(text1 + text2)</span><br><span class=\"line\"><span class=\"comment\"># 输出图片</span></span><br><span class=\"line\">wc.to_file(<span class=\"string\">&quot;wordcloud/word.png&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(text1+text2)</span><br><span class=\"line\">f1.close()</span><br><span class=\"line\">f2.close()</span><br></pre></td></tr></table></figure>\n<p>我在运行的时候发现，没有报错，但结果却是这样的：<br><img src=\"https://img-blog.csdnimg.cn/9c3479c4c6b44dd3ab60b976fed72a4e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>经过查阅资料后找到原因，wordcloud默认字体是DroidSansMono.ttf，这个字体不支持中文格式，因此需要更换字体，找到wordcloud.py文件，打开后更改：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/c81ca19866534286bde2c55dcb805b86.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>我这里是改成了微软雅黑，同时还需要把对应的字体放在wordcloud.py同目录：<br><img src=\"https://img-blog.csdnimg.cn/21499c3ec91941d2be31ea23eca63057.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>然后就顺利完成了：<br><img src=\"https://img-blog.csdnimg.cn/29a21db25f8046859325d39cc370a8b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"通用爬虫模块使用(中)","date":"2021-10-09T09:15:11.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/50.jpg","_content":"\n# 一：requests发送POST请求\n哪些时候我们会用到POST请求：\n+ 登陆注册(POST比GET更安全)\n+ 传输大文本内容(POST请求对数据长度没要求，GET有)\n\nPOST请求用法：\n\n```python\nresponse = requests.post(\"https://www.baidu.com/\", data=data, headers=headers)\n```\n以下是百度的示例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/3dd60b7a0b9b458d9786074e838bb7aa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e03eff26d5964e70ae765afad08f7f92.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)获取到接口地址和参数后我们就可以用python发请求了：\n\n```python\nimport requests\n\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0\"}\ndata = {\n\t\"from\": \"zh\",\n\t\"to\": \"en\",\n\t\"query\": \"人生苦短，我用python\",\n\t\"transtype\": \"realtime\",\n\t\"simple_means_flag\": \"3\",\n\t\"sign\": \"289133.35420\",\n\t\"token\": \"b409912a85846ee1e437236ba0491f3c\",\n\t\"domain\": \"common\"\n}\npost_url = \"https://fanyi.baidu.com/v2transapi\"\n\nr = requests.post(post_url, data=data, headers=headers)\nprint(r.content.decode())\n```\n运行结果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0c7315c1dd114d5f9ad7899578009c56.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)很明显出了错，通过多次抓取翻译请求，发现携带的参数中sign是变化的，token是不变的，通过代码查找发现token是固定的：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2619a822bddc4ede8bceae09dfbe45ce.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)而没有找到sign，因此暂时无法找到sign的生成算法，这个接口应该是用不了了。。。。。。无所谓，反正这也不是写如何调用百度翻译接口的博客。。。。。\n\n# 二：requests使用代理\n代理引用知乎上的解释就是：代理就是用服务器（其他人的电脑）帮你访问要访问的网页。和召唤美团快递小哥一个道理。餐厅老板和你，你们俩谁都没见过谁。在这个过程中，只有快递小哥知道你家地址，老板并不知道，（不好吃就给个差评，老板也找不到你）是不是很安全。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7438bda60f1a41e38778e17dc031eb4d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)而代理分为正向代理和反向代理：\n\n**代理服务器**(Proxy Serve):提供代理服务的电脑系统或其它类型的网络终端,代替网络用户去取得网络信息。\n\n**使用代理服务器的好处**：\n+ 提高访问速度：由于目标主机返回的数据会存放在代理服务器的硬盘中，因此下一次客户再访问相同的站点数据时，会直接从代理服务器的硬盘中读取，起到了缓存的作用，尤其对于热门网站能明显提高访问速度。\n+ 防火墙作用：由于所有的客户机请求都必须通过代理服务器访问远程站点，因此可以在代理服务器上设限，过滤掉某些不安全信息。同时正向代理中上网者可以隐藏自己的IP,免受攻击。\n+ 突破访问限制：互联网上有许多开发的代理服务器，客户机在访问受限时，可通过不受限的代理服务器访问目标站点，通俗说，我们使用的翻墙浏览器就是利用了代理服务器，可以直接访问外网。\n\n**正向代理：** 正向代理（forward proxy） ，一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并制定目标（原始服务器），然后代理向原始服务器转发请求并将获得的内容返回给客户端，客户端才能使用正向代理。我们平时说的代理就是指正向代理。 \n\n**反向代理：** 反向代理（Reverse Proxy），以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求的客户端，此时代理服务器对外表现为一个反向代理服务器。 \n\n**为什么爬虫需要使用代理**：爬虫可能会频繁请求服务器数据，使用代理可以让服务器以为不是同一个客户端在请求，防止我们的真实地址被泄露，防止被追究。\n\n**使用代理**：\n用法：requests.get(URL, proxies=proxies)\nproxies的形式：字典\n例如：\n```python\nproxies = {\n    \"http\": \"http://12.34.56.78.8000\",\n    \"https\": \"https://12.34.56.78.8000\"\n}\n```\n\n对于代理地址，国内有很多公司会提供免费代理ip，大家可以自行百度搜索。\n\n一次简单的代理使用：\n```python\nimport requests\n\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0\"}\nproxies = {\"https\": \"https://47.98.183.59:3128\"}\n\nr = requests.get(\"https://www.runoob.com\", proxies=proxies, headers=headers)\n\nprint(r.status_code)\n```\n我使用的时候编译器报错了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cd4f53c1ddd94f03b54aa77f024ecdc0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)百度之后发现是因为我的requests库版本太高，解决方法就是降低requests模块的版本或者是降低urllib3的版本，我采用的是降低urllib3的版本：(注意安装模块前，要关闭)fiddler抓包工具。我是直接在pycharm中进行修改的，也可以使用 pip install 指定版本进行安装：\n\n```shell\npip install urllib3==1.25.8\n```\n![](https://img-blog.csdnimg.cn/561aba1768b0471ea7940bd11d9a4172.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)然后就成功了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/93d72db0af2f4e6f87c7ea672f060990.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n使用代理需要注意的事项：\n+ 为了防止同一ip多次请求服务器导致被封ip，一般爬虫需要大量代理ip形成ip池，每次请求时随即调用其中的某个\n+ 使用ip池的时候，需要对每个ip先进行判断是否有效，然后再去使用它进行代理请求，判断是否有效可以判断返回的状态码，并且注意请求方式是http还是https\n\n# 三：requests携带cookie\n使用爬虫的时候有时候需要带上cookie或session。带上cookie、session的好处就是能够请求到登录之后的页面，但是也有弊端，一套cookie和session往往与一个用户对应，请求太快，请求次数太多都容易被服务器识别为爬虫，所以不需要cookie的时候尽量不使用cookie，怕被封号。当然也可以注册一堆账号，这样就有一堆cookie了，cookie池的使用方式跟ip池一样。\n\nrequests提供了一个session类来实现客户端和服务端的会话保持。\n使用方法：\n1. 实例化一个session对象\n2. 让session发送get或者post请求\n\n如：\n```python\nsession = request.session()  # 先使用session发送一次请求，这样就有cookie了\nresponse = session.get(url, headers)  # 带上之前的cookie请求数据\n```\n\n以下代码只是个session使用示例，现在大多数的网站都会加密密码再发送给后端，所以模拟登录很麻烦：\n\n```python\nimport requests\n\nurl = \"https://xxxxxx.com\"\ndata = {\n    \"email\": \"123456789@qq.com\",\n    \"password\": \"123456789\"\n}\nheaders = {\n    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"\n}\n# 实例化一个session对象\nsession = requests.session()\n# 使用session发送post请求，cookie保存在其中\nsession.post(url, data=data, headers=headers)\n# 在使用session进行请求登录之后才能访问的地址\nr = session.get(\"http://xxxxxx.com/home\", headers=headers)\n# 保存页面\nwith open(\"xxxxxx.html\", \"w\", encoding=\"utf-8\") as f:\n    f.write(r.content.decode())\n```\n","source":"_posts/python/通用爬虫中.md","raw":"---\ntitle: 通用爬虫模块使用(中)\ndate:  2021-10-09 17:15:11\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/50.jpg\ntags:\n  - 爬虫\ncategories: python\n---\n\n# 一：requests发送POST请求\n哪些时候我们会用到POST请求：\n+ 登陆注册(POST比GET更安全)\n+ 传输大文本内容(POST请求对数据长度没要求，GET有)\n\nPOST请求用法：\n\n```python\nresponse = requests.post(\"https://www.baidu.com/\", data=data, headers=headers)\n```\n以下是百度的示例：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/3dd60b7a0b9b458d9786074e838bb7aa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e03eff26d5964e70ae765afad08f7f92.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)获取到接口地址和参数后我们就可以用python发请求了：\n\n```python\nimport requests\n\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0\"}\ndata = {\n\t\"from\": \"zh\",\n\t\"to\": \"en\",\n\t\"query\": \"人生苦短，我用python\",\n\t\"transtype\": \"realtime\",\n\t\"simple_means_flag\": \"3\",\n\t\"sign\": \"289133.35420\",\n\t\"token\": \"b409912a85846ee1e437236ba0491f3c\",\n\t\"domain\": \"common\"\n}\npost_url = \"https://fanyi.baidu.com/v2transapi\"\n\nr = requests.post(post_url, data=data, headers=headers)\nprint(r.content.decode())\n```\n运行结果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0c7315c1dd114d5f9ad7899578009c56.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)很明显出了错，通过多次抓取翻译请求，发现携带的参数中sign是变化的，token是不变的，通过代码查找发现token是固定的：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2619a822bddc4ede8bceae09dfbe45ce.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)而没有找到sign，因此暂时无法找到sign的生成算法，这个接口应该是用不了了。。。。。。无所谓，反正这也不是写如何调用百度翻译接口的博客。。。。。\n\n# 二：requests使用代理\n代理引用知乎上的解释就是：代理就是用服务器（其他人的电脑）帮你访问要访问的网页。和召唤美团快递小哥一个道理。餐厅老板和你，你们俩谁都没见过谁。在这个过程中，只有快递小哥知道你家地址，老板并不知道，（不好吃就给个差评，老板也找不到你）是不是很安全。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7438bda60f1a41e38778e17dc031eb4d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)而代理分为正向代理和反向代理：\n\n**代理服务器**(Proxy Serve):提供代理服务的电脑系统或其它类型的网络终端,代替网络用户去取得网络信息。\n\n**使用代理服务器的好处**：\n+ 提高访问速度：由于目标主机返回的数据会存放在代理服务器的硬盘中，因此下一次客户再访问相同的站点数据时，会直接从代理服务器的硬盘中读取，起到了缓存的作用，尤其对于热门网站能明显提高访问速度。\n+ 防火墙作用：由于所有的客户机请求都必须通过代理服务器访问远程站点，因此可以在代理服务器上设限，过滤掉某些不安全信息。同时正向代理中上网者可以隐藏自己的IP,免受攻击。\n+ 突破访问限制：互联网上有许多开发的代理服务器，客户机在访问受限时，可通过不受限的代理服务器访问目标站点，通俗说，我们使用的翻墙浏览器就是利用了代理服务器，可以直接访问外网。\n\n**正向代理：** 正向代理（forward proxy） ，一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并制定目标（原始服务器），然后代理向原始服务器转发请求并将获得的内容返回给客户端，客户端才能使用正向代理。我们平时说的代理就是指正向代理。 \n\n**反向代理：** 反向代理（Reverse Proxy），以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求的客户端，此时代理服务器对外表现为一个反向代理服务器。 \n\n**为什么爬虫需要使用代理**：爬虫可能会频繁请求服务器数据，使用代理可以让服务器以为不是同一个客户端在请求，防止我们的真实地址被泄露，防止被追究。\n\n**使用代理**：\n用法：requests.get(URL, proxies=proxies)\nproxies的形式：字典\n例如：\n```python\nproxies = {\n    \"http\": \"http://12.34.56.78.8000\",\n    \"https\": \"https://12.34.56.78.8000\"\n}\n```\n\n对于代理地址，国内有很多公司会提供免费代理ip，大家可以自行百度搜索。\n\n一次简单的代理使用：\n```python\nimport requests\n\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0\"}\nproxies = {\"https\": \"https://47.98.183.59:3128\"}\n\nr = requests.get(\"https://www.runoob.com\", proxies=proxies, headers=headers)\n\nprint(r.status_code)\n```\n我使用的时候编译器报错了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cd4f53c1ddd94f03b54aa77f024ecdc0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)百度之后发现是因为我的requests库版本太高，解决方法就是降低requests模块的版本或者是降低urllib3的版本，我采用的是降低urllib3的版本：(注意安装模块前，要关闭)fiddler抓包工具。我是直接在pycharm中进行修改的，也可以使用 pip install 指定版本进行安装：\n\n```shell\npip install urllib3==1.25.8\n```\n![](https://img-blog.csdnimg.cn/561aba1768b0471ea7940bd11d9a4172.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)然后就成功了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/93d72db0af2f4e6f87c7ea672f060990.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n使用代理需要注意的事项：\n+ 为了防止同一ip多次请求服务器导致被封ip，一般爬虫需要大量代理ip形成ip池，每次请求时随即调用其中的某个\n+ 使用ip池的时候，需要对每个ip先进行判断是否有效，然后再去使用它进行代理请求，判断是否有效可以判断返回的状态码，并且注意请求方式是http还是https\n\n# 三：requests携带cookie\n使用爬虫的时候有时候需要带上cookie或session。带上cookie、session的好处就是能够请求到登录之后的页面，但是也有弊端，一套cookie和session往往与一个用户对应，请求太快，请求次数太多都容易被服务器识别为爬虫，所以不需要cookie的时候尽量不使用cookie，怕被封号。当然也可以注册一堆账号，这样就有一堆cookie了，cookie池的使用方式跟ip池一样。\n\nrequests提供了一个session类来实现客户端和服务端的会话保持。\n使用方法：\n1. 实例化一个session对象\n2. 让session发送get或者post请求\n\n如：\n```python\nsession = request.session()  # 先使用session发送一次请求，这样就有cookie了\nresponse = session.get(url, headers)  # 带上之前的cookie请求数据\n```\n\n以下代码只是个session使用示例，现在大多数的网站都会加密密码再发送给后端，所以模拟登录很麻烦：\n\n```python\nimport requests\n\nurl = \"https://xxxxxx.com\"\ndata = {\n    \"email\": \"123456789@qq.com\",\n    \"password\": \"123456789\"\n}\nheaders = {\n    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"\n}\n# 实例化一个session对象\nsession = requests.session()\n# 使用session发送post请求，cookie保存在其中\nsession.post(url, data=data, headers=headers)\n# 在使用session进行请求登录之后才能访问的地址\nr = session.get(\"http://xxxxxx.com/home\", headers=headers)\n# 保存页面\nwith open(\"xxxxxx.html\", \"w\", encoding=\"utf-8\") as f:\n    f.write(r.content.decode())\n```\n","slug":"python/通用爬虫中","published":1,"updated":"2021-12-03T15:00:06.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958bj0028asdaf33r0xn5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：requests发送POST请求\"><a href=\"#一：requests发送POST请求\" class=\"headerlink\" title=\"一：requests发送POST请求\"></a>一：requests发送POST请求</h1><p>哪些时候我们会用到POST请求：</p>\n<ul>\n<li>登陆注册(POST比GET更安全)</li>\n<li>传输大文本内容(POST请求对数据长度没要求，GET有)</li>\n</ul>\n<p>POST请求用法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response = requests.post(<span class=\"string\">&quot;https://www.baidu.com/&quot;</span>, data=data, headers=headers)</span><br></pre></td></tr></table></figure>\n<p>以下是百度的示例：<br><img src=\"https://img-blog.csdnimg.cn/3dd60b7a0b9b458d9786074e838bb7aa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/e03eff26d5964e70ae765afad08f7f92.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">获取到接口地址和参数后我们就可以用python发请求了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0&quot;</span>&#125;</span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;from&quot;</span>: <span class=\"string\">&quot;zh&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;to&quot;</span>: <span class=\"string\">&quot;en&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;人生苦短，我用python&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;transtype&quot;</span>: <span class=\"string\">&quot;realtime&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;simple_means_flag&quot;</span>: <span class=\"string\">&quot;3&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;sign&quot;</span>: <span class=\"string\">&quot;289133.35420&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;token&quot;</span>: <span class=\"string\">&quot;b409912a85846ee1e437236ba0491f3c&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;domain&quot;</span>: <span class=\"string\">&quot;common&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">post_url = <span class=\"string\">&quot;https://fanyi.baidu.com/v2transapi&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">r = requests.post(post_url, data=data, headers=headers)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(r.content.decode())</span><br></pre></td></tr></table></figure>\n<p>运行结果如下：<br><img src=\"https://img-blog.csdnimg.cn/0c7315c1dd114d5f9ad7899578009c56.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">很明显出了错，通过多次抓取翻译请求，发现携带的参数中sign是变化的，token是不变的，通过代码查找发现token是固定的：<br><img src=\"https://img-blog.csdnimg.cn/2619a822bddc4ede8bceae09dfbe45ce.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">而没有找到sign，因此暂时无法找到sign的生成算法，这个接口应该是用不了了。。。。。。无所谓，反正这也不是写如何调用百度翻译接口的博客。。。。。</p>\n<h1 id=\"二：requests使用代理\"><a href=\"#二：requests使用代理\" class=\"headerlink\" title=\"二：requests使用代理\"></a>二：requests使用代理</h1><p>代理引用知乎上的解释就是：代理就是用服务器（其他人的电脑）帮你访问要访问的网页。和召唤美团快递小哥一个道理。餐厅老板和你，你们俩谁都没见过谁。在这个过程中，只有快递小哥知道你家地址，老板并不知道，（不好吃就给个差评，老板也找不到你）是不是很安全。<br><img src=\"https://img-blog.csdnimg.cn/7438bda60f1a41e38778e17dc031eb4d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">而代理分为正向代理和反向代理：</p>\n<p><strong>代理服务器</strong>(Proxy Serve):提供代理服务的电脑系统或其它类型的网络终端,代替网络用户去取得网络信息。</p>\n<p><strong>使用代理服务器的好处</strong>：</p>\n<ul>\n<li>提高访问速度：由于目标主机返回的数据会存放在代理服务器的硬盘中，因此下一次客户再访问相同的站点数据时，会直接从代理服务器的硬盘中读取，起到了缓存的作用，尤其对于热门网站能明显提高访问速度。</li>\n<li>防火墙作用：由于所有的客户机请求都必须通过代理服务器访问远程站点，因此可以在代理服务器上设限，过滤掉某些不安全信息。同时正向代理中上网者可以隐藏自己的IP,免受攻击。</li>\n<li>突破访问限制：互联网上有许多开发的代理服务器，客户机在访问受限时，可通过不受限的代理服务器访问目标站点，通俗说，我们使用的翻墙浏览器就是利用了代理服务器，可以直接访问外网。</li>\n</ul>\n<p><strong>正向代理：</strong> 正向代理（forward proxy） ，一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并制定目标（原始服务器），然后代理向原始服务器转发请求并将获得的内容返回给客户端，客户端才能使用正向代理。我们平时说的代理就是指正向代理。 </p>\n<p><strong>反向代理：</strong> 反向代理（Reverse Proxy），以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求的客户端，此时代理服务器对外表现为一个反向代理服务器。 </p>\n<p><strong>为什么爬虫需要使用代理</strong>：爬虫可能会频繁请求服务器数据，使用代理可以让服务器以为不是同一个客户端在请求，防止我们的真实地址被泄露，防止被追究。</p>\n<p><strong>使用代理</strong>：<br>用法：requests.get(URL, proxies=proxies)<br>proxies的形式：字典<br>例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxies = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;http&quot;</span>: <span class=\"string\">&quot;http://12.34.56.78.8000&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;https&quot;</span>: <span class=\"string\">&quot;https://12.34.56.78.8000&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>对于代理地址，国内有很多公司会提供免费代理ip，大家可以自行百度搜索。</p>\n<p>一次简单的代理使用：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0&quot;</span>&#125;</span><br><span class=\"line\">proxies = &#123;<span class=\"string\">&quot;https&quot;</span>: <span class=\"string\">&quot;https://47.98.183.59:3128&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">r = requests.get(<span class=\"string\">&quot;https://www.runoob.com&quot;</span>, proxies=proxies, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(r.status_code)</span><br></pre></td></tr></table></figure>\n<p>我使用的时候编译器报错了：<br><img src=\"https://img-blog.csdnimg.cn/cd4f53c1ddd94f03b54aa77f024ecdc0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">百度之后发现是因为我的requests库版本太高，解决方法就是降低requests模块的版本或者是降低urllib3的版本，我采用的是降低urllib3的版本：(注意安装模块前，要关闭)fiddler抓包工具。我是直接在pycharm中进行修改的，也可以使用 pip install 指定版本进行安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install urllib3==1.25.8</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/561aba1768b0471ea7940bd11d9a4172.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\">然后就成功了：<br><img src=\"https://img-blog.csdnimg.cn/93d72db0af2f4e6f87c7ea672f060990.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>使用代理需要注意的事项：</p>\n<ul>\n<li>为了防止同一ip多次请求服务器导致被封ip，一般爬虫需要大量代理ip形成ip池，每次请求时随即调用其中的某个</li>\n<li>使用ip池的时候，需要对每个ip先进行判断是否有效，然后再去使用它进行代理请求，判断是否有效可以判断返回的状态码，并且注意请求方式是http还是https</li>\n</ul>\n<h1 id=\"三：requests携带cookie\"><a href=\"#三：requests携带cookie\" class=\"headerlink\" title=\"三：requests携带cookie\"></a>三：requests携带cookie</h1><p>使用爬虫的时候有时候需要带上cookie或session。带上cookie、session的好处就是能够请求到登录之后的页面，但是也有弊端，一套cookie和session往往与一个用户对应，请求太快，请求次数太多都容易被服务器识别为爬虫，所以不需要cookie的时候尽量不使用cookie，怕被封号。当然也可以注册一堆账号，这样就有一堆cookie了，cookie池的使用方式跟ip池一样。</p>\n<p>requests提供了一个session类来实现客户端和服务端的会话保持。<br>使用方法：</p>\n<ol>\n<li>实例化一个session对象</li>\n<li>让session发送get或者post请求</li>\n</ol>\n<p>如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session = request.session()  <span class=\"comment\"># 先使用session发送一次请求，这样就有cookie了</span></span><br><span class=\"line\">response = session.get(url, headers)  <span class=\"comment\"># 带上之前的cookie请求数据</span></span><br></pre></td></tr></table></figure>\n\n<p>以下代码只是个session使用示例，现在大多数的网站都会加密密码再发送给后端，所以模拟登录很麻烦：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;https://xxxxxx.com&quot;</span></span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;123456789@qq.com&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;password&quot;</span>: <span class=\"string\">&quot;123456789&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 实例化一个session对象</span></span><br><span class=\"line\">session = requests.session()</span><br><span class=\"line\"><span class=\"comment\"># 使用session发送post请求，cookie保存在其中</span></span><br><span class=\"line\">session.post(url, data=data, headers=headers)</span><br><span class=\"line\"><span class=\"comment\"># 在使用session进行请求登录之后才能访问的地址</span></span><br><span class=\"line\">r = session.get(<span class=\"string\">&quot;http://xxxxxx.com/home&quot;</span>, headers=headers)</span><br><span class=\"line\"><span class=\"comment\"># 保存页面</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;xxxxxx.html&quot;</span>, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(r.content.decode())</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：requests发送POST请求\"><a href=\"#一：requests发送POST请求\" class=\"headerlink\" title=\"一：requests发送POST请求\"></a>一：requests发送POST请求</h1><p>哪些时候我们会用到POST请求：</p>\n<ul>\n<li>登陆注册(POST比GET更安全)</li>\n<li>传输大文本内容(POST请求对数据长度没要求，GET有)</li>\n</ul>\n<p>POST请求用法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response = requests.post(<span class=\"string\">&quot;https://www.baidu.com/&quot;</span>, data=data, headers=headers)</span><br></pre></td></tr></table></figure>\n<p>以下是百度的示例：<br><img src=\"https://img-blog.csdnimg.cn/3dd60b7a0b9b458d9786074e838bb7aa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/e03eff26d5964e70ae765afad08f7f92.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">获取到接口地址和参数后我们就可以用python发请求了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0&quot;</span>&#125;</span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;from&quot;</span>: <span class=\"string\">&quot;zh&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;to&quot;</span>: <span class=\"string\">&quot;en&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;query&quot;</span>: <span class=\"string\">&quot;人生苦短，我用python&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;transtype&quot;</span>: <span class=\"string\">&quot;realtime&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;simple_means_flag&quot;</span>: <span class=\"string\">&quot;3&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;sign&quot;</span>: <span class=\"string\">&quot;289133.35420&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;token&quot;</span>: <span class=\"string\">&quot;b409912a85846ee1e437236ba0491f3c&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;domain&quot;</span>: <span class=\"string\">&quot;common&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">post_url = <span class=\"string\">&quot;https://fanyi.baidu.com/v2transapi&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">r = requests.post(post_url, data=data, headers=headers)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(r.content.decode())</span><br></pre></td></tr></table></figure>\n<p>运行结果如下：<br><img src=\"https://img-blog.csdnimg.cn/0c7315c1dd114d5f9ad7899578009c56.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">很明显出了错，通过多次抓取翻译请求，发现携带的参数中sign是变化的，token是不变的，通过代码查找发现token是固定的：<br><img src=\"https://img-blog.csdnimg.cn/2619a822bddc4ede8bceae09dfbe45ce.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">而没有找到sign，因此暂时无法找到sign的生成算法，这个接口应该是用不了了。。。。。。无所谓，反正这也不是写如何调用百度翻译接口的博客。。。。。</p>\n<h1 id=\"二：requests使用代理\"><a href=\"#二：requests使用代理\" class=\"headerlink\" title=\"二：requests使用代理\"></a>二：requests使用代理</h1><p>代理引用知乎上的解释就是：代理就是用服务器（其他人的电脑）帮你访问要访问的网页。和召唤美团快递小哥一个道理。餐厅老板和你，你们俩谁都没见过谁。在这个过程中，只有快递小哥知道你家地址，老板并不知道，（不好吃就给个差评，老板也找不到你）是不是很安全。<br><img src=\"https://img-blog.csdnimg.cn/7438bda60f1a41e38778e17dc031eb4d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">而代理分为正向代理和反向代理：</p>\n<p><strong>代理服务器</strong>(Proxy Serve):提供代理服务的电脑系统或其它类型的网络终端,代替网络用户去取得网络信息。</p>\n<p><strong>使用代理服务器的好处</strong>：</p>\n<ul>\n<li>提高访问速度：由于目标主机返回的数据会存放在代理服务器的硬盘中，因此下一次客户再访问相同的站点数据时，会直接从代理服务器的硬盘中读取，起到了缓存的作用，尤其对于热门网站能明显提高访问速度。</li>\n<li>防火墙作用：由于所有的客户机请求都必须通过代理服务器访问远程站点，因此可以在代理服务器上设限，过滤掉某些不安全信息。同时正向代理中上网者可以隐藏自己的IP,免受攻击。</li>\n<li>突破访问限制：互联网上有许多开发的代理服务器，客户机在访问受限时，可通过不受限的代理服务器访问目标站点，通俗说，我们使用的翻墙浏览器就是利用了代理服务器，可以直接访问外网。</li>\n</ul>\n<p><strong>正向代理：</strong> 正向代理（forward proxy） ，一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并制定目标（原始服务器），然后代理向原始服务器转发请求并将获得的内容返回给客户端，客户端才能使用正向代理。我们平时说的代理就是指正向代理。 </p>\n<p><strong>反向代理：</strong> 反向代理（Reverse Proxy），以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求的客户端，此时代理服务器对外表现为一个反向代理服务器。 </p>\n<p><strong>为什么爬虫需要使用代理</strong>：爬虫可能会频繁请求服务器数据，使用代理可以让服务器以为不是同一个客户端在请求，防止我们的真实地址被泄露，防止被追究。</p>\n<p><strong>使用代理</strong>：<br>用法：requests.get(URL, proxies=proxies)<br>proxies的形式：字典<br>例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxies = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;http&quot;</span>: <span class=\"string\">&quot;http://12.34.56.78.8000&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;https&quot;</span>: <span class=\"string\">&quot;https://12.34.56.78.8000&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>对于代理地址，国内有很多公司会提供免费代理ip，大家可以自行百度搜索。</p>\n<p>一次简单的代理使用：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0&quot;</span>&#125;</span><br><span class=\"line\">proxies = &#123;<span class=\"string\">&quot;https&quot;</span>: <span class=\"string\">&quot;https://47.98.183.59:3128&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">r = requests.get(<span class=\"string\">&quot;https://www.runoob.com&quot;</span>, proxies=proxies, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(r.status_code)</span><br></pre></td></tr></table></figure>\n<p>我使用的时候编译器报错了：<br><img src=\"https://img-blog.csdnimg.cn/cd4f53c1ddd94f03b54aa77f024ecdc0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">百度之后发现是因为我的requests库版本太高，解决方法就是降低requests模块的版本或者是降低urllib3的版本，我采用的是降低urllib3的版本：(注意安装模块前，要关闭)fiddler抓包工具。我是直接在pycharm中进行修改的，也可以使用 pip install 指定版本进行安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install urllib3==1.25.8</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/561aba1768b0471ea7940bd11d9a4172.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\">然后就成功了：<br><img src=\"https://img-blog.csdnimg.cn/93d72db0af2f4e6f87c7ea672f060990.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>使用代理需要注意的事项：</p>\n<ul>\n<li>为了防止同一ip多次请求服务器导致被封ip，一般爬虫需要大量代理ip形成ip池，每次请求时随即调用其中的某个</li>\n<li>使用ip池的时候，需要对每个ip先进行判断是否有效，然后再去使用它进行代理请求，判断是否有效可以判断返回的状态码，并且注意请求方式是http还是https</li>\n</ul>\n<h1 id=\"三：requests携带cookie\"><a href=\"#三：requests携带cookie\" class=\"headerlink\" title=\"三：requests携带cookie\"></a>三：requests携带cookie</h1><p>使用爬虫的时候有时候需要带上cookie或session。带上cookie、session的好处就是能够请求到登录之后的页面，但是也有弊端，一套cookie和session往往与一个用户对应，请求太快，请求次数太多都容易被服务器识别为爬虫，所以不需要cookie的时候尽量不使用cookie，怕被封号。当然也可以注册一堆账号，这样就有一堆cookie了，cookie池的使用方式跟ip池一样。</p>\n<p>requests提供了一个session类来实现客户端和服务端的会话保持。<br>使用方法：</p>\n<ol>\n<li>实例化一个session对象</li>\n<li>让session发送get或者post请求</li>\n</ol>\n<p>如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session = request.session()  <span class=\"comment\"># 先使用session发送一次请求，这样就有cookie了</span></span><br><span class=\"line\">response = session.get(url, headers)  <span class=\"comment\"># 带上之前的cookie请求数据</span></span><br></pre></td></tr></table></figure>\n\n<p>以下代码只是个session使用示例，现在大多数的网站都会加密密码再发送给后端，所以模拟登录很麻烦：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;https://xxxxxx.com&quot;</span></span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;email&quot;</span>: <span class=\"string\">&quot;123456789@qq.com&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;password&quot;</span>: <span class=\"string\">&quot;123456789&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 实例化一个session对象</span></span><br><span class=\"line\">session = requests.session()</span><br><span class=\"line\"><span class=\"comment\"># 使用session发送post请求，cookie保存在其中</span></span><br><span class=\"line\">session.post(url, data=data, headers=headers)</span><br><span class=\"line\"><span class=\"comment\"># 在使用session进行请求登录之后才能访问的地址</span></span><br><span class=\"line\">r = session.get(<span class=\"string\">&quot;http://xxxxxx.com/home&quot;</span>, headers=headers)</span><br><span class=\"line\"><span class=\"comment\"># 保存页面</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;xxxxxx.html&quot;</span>, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(r.content.decode())</span><br></pre></td></tr></table></figure>\n"},{"title":"通用爬虫模块使用(上)","date":"2021-09-07T09:14:09.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/6.jpg","_content":"# 一：爬虫的流程\n> 爬虫的分类\n\n爬虫分为两种：通用爬虫和聚焦爬虫\n+ 通用爬虫：通常指搜索引擎的爬虫\n+ 聚焦爬虫：针对特定网站的爬虫\n\n两种爬虫的工作流程\n![在这里插入图片描述](https://img-blog.csdnimg.cn/42f9314eb7ca48089acd12ed9f0bf387.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 二：HTTP与HTTPS\nURL的形式：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/24d4d0fc6a804868b72d4d72a7f5a03f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\nHTTP请求形式：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0f4e15c92cd24a37be371858592827db.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\nHTTP常用请求头：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/156baeb926864e4f9bf15d2525d5110b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n有关HTTP与HTTPS的详情可以看看我的另一篇博客，这里就不赘述了。[HTTP详解](https://blog.csdn.net/tongkongyu/article/details/119220506)\n\n# 三：requests库发送请求和获取网页的字符串\n打开命令行工具-->进入python环境-->导入requests包-->请求网站数据-->打印返回结果类型\n![在这里插入图片描述](https://img-blog.csdnimg.cn/84ad1c06e176466a9736693477fc7503.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\nresponse有很多属性操作\n+ response.text，可以打印出响应的内容，\n+ response.encoding，查看默认解码方式，默认解码方式是根据HTTP头部对响应的编码做出有根据的推测的方式，不过可能会推测错误。\n+ response.encoding = \"utf-8\"，设置解码方式\n+ response.content，返回bytes类型数据\n+ response.content.decode()，解码bytes数据\n+ response.content.decode(\"gbk\")，可以设置解码方式\n\n更推荐使用response.content.decode()方式获取响应的html页面\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d1b38b4d3ed841cc812a485af3805fcb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4230f16b2bad4bda978161fdaa029393.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ce25940a8e0b4d6a851dbe76ed92ee94.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/24b24de198d84cbbbdc1348c1c96e4e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 四：使用requests保存图片\n代码如下：\n\n```python\n# coding=utf-8\nimport requests\n\n# 发送请求\nresponse = requests.get(\"https://docs.python-requests.org/zh_CN/latest/_static/requests-sidebar.png\")\n\n# 保存\nwith open(\"a.png\", \"wb\") as f:\n    f.write(response.content)\n```\n\n效果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/869160823b7f4c93bcfb11c7944c1a06.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 五：requests发送带headers的请求\nresponse = requests.get(url)，其中response的常用方法如下：\n+ response.text\n+ response.content\n+ response.status_code\n+ response.request.*\n+ response.url\n+ response.headers\n\n一些用法：\n\n```python\nimport requests\nresponse = requests.get(\"https://www.baidu.com\")\n\nprint(\"响应状态码：\", response.status_code)\nprint(\"响应头：\", response.headers)\nprint(\"请求：\", response.request)\nprint(\"请求的地址：\", response.request.url) # 如果被网站重定向了，则请求的地址与响应的地址会不同\nprint(\"响应的地址：\", response.url)\nprint(\"请求头：\", response.request.headers)\nprint(\"请求体：\", response.request.body)\nprint(\"请求钩子：\", response.request.hooks)\nprint(\"请求方式：\", response.request.method)\n```\n结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e2e59623af444034b6da324c1b8155d1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n为了正确爬取数据，需要在请求时带上header，模拟浏览器，欺骗服务器，获取和浏览器一致的内容。之前使用response.content.decode()只能获取少量数据，具体可以见前面的测试，但设置请求头模拟浏览器后可以获得大量数据，就像浏览器访问一样。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2827d549a52f404b86a00f7edb2c73cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n```python\nimport requests\n# 获取请求头,一般而言带上User-Agent就可以了，如果不行，则可以尝试Accept，Host，Cookie之类的\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"}\n# 请求头在第二个参数\nresponse = requests.get(\"https://www.baidu.com\", headers=headers)\n\nprint(response.content.decode())\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/47e03b1205ca4f61b2b9ec9727681488.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 六：requests发送带参数的请求\n一般的请求都是带参数的，如下百度搜索：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/dbc8f1828f9b43909352b684258453b9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n整条链接如下，?号后面，&连接且A=B形式的都是参数：\n```\nhttps://www.baidu.com/s?wd=python&rsv_spt=1&rsv_iqid=0xc6f3adb20001c17d&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&rqlang=&tn=baiduhome_pg&ch=&rsv_enter=1&rsv_btype=i&rsv_dl=ib&inputT=6532\n```\n但不是所有参数都是必须的，经过尝试发现，只有`wd=python`是必须的，即传入的搜索的参数。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ce02816042264d21bd9d8e6711b9bec6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n那么现在就可以尝试让请求带参数了：\n+ 参数形式：字典\n+ p={'wd'='python'}\n+ 用法：requests.get(url,params=p)\n\n```python\nimport requests\n# 请求地址\nurl = \"https://www.baidu.com/s?\"\n# 获取请求头,一般而言带上User-Agent就可以了，如果不行，则可以尝试Accept，Host，Cookie之类的\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"}\n# 携带参数\np = {'wd':'python'}\n# 发请求\nresponse = requests.get(url, headers=headers, params=p)\n\nprint(response.content.decode())\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8bce661b191c4c18a2b288f4d73085dd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 七：贴吧爬虫\n这里我爬取的是百度贴吧里的原神吧，代码如下：\n\n```python\n# coding=utf-8\nimport requests\n\nclass Tieba:\n    def __init__(self, name):\n        self.tieba_name=name\n        self.url_temp = \"https://tieba.baidu.com/f?kw=\" + name + \"&ie=utf-8pn={}\"\n        self.headers={\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"}\n\n    def get_url_list(self):  # 构造url列表\n        url_list = []\n        for i in range(1000):\n            url_list.append(self.url_temp.format(i + 50))\n        return url_list\n\n    def parse_url(self, url): # 发送请求，获取响应\n        response = requests.get(url, headers=self.headers)\n        return response.content.decode()\n\n    def save_html(self, html_str, page_num): # 保存html字符串\n        file_path = \"page/{}--第{}页.html\".format(self.tieba_name, page_num)\n        with open(file_path, \"w\", encoding=\"utf-8\") as f:\n            f.write(html_str)\n        print(\"成功爬取：\", file_path)\n\n    def run(self):  # 实现主要逻辑\n        # 1.构造url列表\n        url_list = self.get_url_list()\n        # 2.遍历，发送请求，获取响应\n        for url in url_list:\n            html_str = self.parse_url(url)\n            # 3.保存\n            page_num = url_list.index(url) + 1\n            self.save_html(html_str, page_num)\n\n\nif __name__ == '__main__':\n    tieba = Tieba(\"原神\")\n    tieba.run()\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/487b20a871c248ef88a114c2da028dd2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)","source":"_posts/python/通用爬虫上.md","raw":"---\ntitle: 通用爬虫模块使用(上)\ndate: 2021-09-07 17:14:09\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/6.jpg\ntags: \n  - 爬虫\n  - requests\ncategories: python\n---\n# 一：爬虫的流程\n> 爬虫的分类\n\n爬虫分为两种：通用爬虫和聚焦爬虫\n+ 通用爬虫：通常指搜索引擎的爬虫\n+ 聚焦爬虫：针对特定网站的爬虫\n\n两种爬虫的工作流程\n![在这里插入图片描述](https://img-blog.csdnimg.cn/42f9314eb7ca48089acd12ed9f0bf387.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 二：HTTP与HTTPS\nURL的形式：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/24d4d0fc6a804868b72d4d72a7f5a03f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\nHTTP请求形式：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0f4e15c92cd24a37be371858592827db.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\nHTTP常用请求头：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/156baeb926864e4f9bf15d2525d5110b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n有关HTTP与HTTPS的详情可以看看我的另一篇博客，这里就不赘述了。[HTTP详解](https://blog.csdn.net/tongkongyu/article/details/119220506)\n\n# 三：requests库发送请求和获取网页的字符串\n打开命令行工具-->进入python环境-->导入requests包-->请求网站数据-->打印返回结果类型\n![在这里插入图片描述](https://img-blog.csdnimg.cn/84ad1c06e176466a9736693477fc7503.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\nresponse有很多属性操作\n+ response.text，可以打印出响应的内容，\n+ response.encoding，查看默认解码方式，默认解码方式是根据HTTP头部对响应的编码做出有根据的推测的方式，不过可能会推测错误。\n+ response.encoding = \"utf-8\"，设置解码方式\n+ response.content，返回bytes类型数据\n+ response.content.decode()，解码bytes数据\n+ response.content.decode(\"gbk\")，可以设置解码方式\n\n更推荐使用response.content.decode()方式获取响应的html页面\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d1b38b4d3ed841cc812a485af3805fcb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4230f16b2bad4bda978161fdaa029393.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ce25940a8e0b4d6a851dbe76ed92ee94.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/24b24de198d84cbbbdc1348c1c96e4e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 四：使用requests保存图片\n代码如下：\n\n```python\n# coding=utf-8\nimport requests\n\n# 发送请求\nresponse = requests.get(\"https://docs.python-requests.org/zh_CN/latest/_static/requests-sidebar.png\")\n\n# 保存\nwith open(\"a.png\", \"wb\") as f:\n    f.write(response.content)\n```\n\n效果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/869160823b7f4c93bcfb11c7944c1a06.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 五：requests发送带headers的请求\nresponse = requests.get(url)，其中response的常用方法如下：\n+ response.text\n+ response.content\n+ response.status_code\n+ response.request.*\n+ response.url\n+ response.headers\n\n一些用法：\n\n```python\nimport requests\nresponse = requests.get(\"https://www.baidu.com\")\n\nprint(\"响应状态码：\", response.status_code)\nprint(\"响应头：\", response.headers)\nprint(\"请求：\", response.request)\nprint(\"请求的地址：\", response.request.url) # 如果被网站重定向了，则请求的地址与响应的地址会不同\nprint(\"响应的地址：\", response.url)\nprint(\"请求头：\", response.request.headers)\nprint(\"请求体：\", response.request.body)\nprint(\"请求钩子：\", response.request.hooks)\nprint(\"请求方式：\", response.request.method)\n```\n结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e2e59623af444034b6da324c1b8155d1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n为了正确爬取数据，需要在请求时带上header，模拟浏览器，欺骗服务器，获取和浏览器一致的内容。之前使用response.content.decode()只能获取少量数据，具体可以见前面的测试，但设置请求头模拟浏览器后可以获得大量数据，就像浏览器访问一样。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2827d549a52f404b86a00f7edb2c73cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n```python\nimport requests\n# 获取请求头,一般而言带上User-Agent就可以了，如果不行，则可以尝试Accept，Host，Cookie之类的\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"}\n# 请求头在第二个参数\nresponse = requests.get(\"https://www.baidu.com\", headers=headers)\n\nprint(response.content.decode())\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/47e03b1205ca4f61b2b9ec9727681488.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 六：requests发送带参数的请求\n一般的请求都是带参数的，如下百度搜索：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/dbc8f1828f9b43909352b684258453b9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n整条链接如下，?号后面，&连接且A=B形式的都是参数：\n```\nhttps://www.baidu.com/s?wd=python&rsv_spt=1&rsv_iqid=0xc6f3adb20001c17d&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&rqlang=&tn=baiduhome_pg&ch=&rsv_enter=1&rsv_btype=i&rsv_dl=ib&inputT=6532\n```\n但不是所有参数都是必须的，经过尝试发现，只有`wd=python`是必须的，即传入的搜索的参数。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ce02816042264d21bd9d8e6711b9bec6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n那么现在就可以尝试让请求带参数了：\n+ 参数形式：字典\n+ p={'wd'='python'}\n+ 用法：requests.get(url,params=p)\n\n```python\nimport requests\n# 请求地址\nurl = \"https://www.baidu.com/s?\"\n# 获取请求头,一般而言带上User-Agent就可以了，如果不行，则可以尝试Accept，Host，Cookie之类的\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"}\n# 携带参数\np = {'wd':'python'}\n# 发请求\nresponse = requests.get(url, headers=headers, params=p)\n\nprint(response.content.decode())\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8bce661b191c4c18a2b288f4d73085dd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 七：贴吧爬虫\n这里我爬取的是百度贴吧里的原神吧，代码如下：\n\n```python\n# coding=utf-8\nimport requests\n\nclass Tieba:\n    def __init__(self, name):\n        self.tieba_name=name\n        self.url_temp = \"https://tieba.baidu.com/f?kw=\" + name + \"&ie=utf-8pn={}\"\n        self.headers={\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"}\n\n    def get_url_list(self):  # 构造url列表\n        url_list = []\n        for i in range(1000):\n            url_list.append(self.url_temp.format(i + 50))\n        return url_list\n\n    def parse_url(self, url): # 发送请求，获取响应\n        response = requests.get(url, headers=self.headers)\n        return response.content.decode()\n\n    def save_html(self, html_str, page_num): # 保存html字符串\n        file_path = \"page/{}--第{}页.html\".format(self.tieba_name, page_num)\n        with open(file_path, \"w\", encoding=\"utf-8\") as f:\n            f.write(html_str)\n        print(\"成功爬取：\", file_path)\n\n    def run(self):  # 实现主要逻辑\n        # 1.构造url列表\n        url_list = self.get_url_list()\n        # 2.遍历，发送请求，获取响应\n        for url in url_list:\n            html_str = self.parse_url(url)\n            # 3.保存\n            page_num = url_list.index(url) + 1\n            self.save_html(html_str, page_num)\n\n\nif __name__ == '__main__':\n    tieba = Tieba(\"原神\")\n    tieba.run()\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/487b20a871c248ef88a114c2da028dd2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)","slug":"python/通用爬虫上","published":1,"updated":"2021-12-03T15:00:03.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958c7004nasdaa034bmtc","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：爬虫的流程\"><a href=\"#一：爬虫的流程\" class=\"headerlink\" title=\"一：爬虫的流程\"></a>一：爬虫的流程</h1><blockquote>\n<p>爬虫的分类</p>\n</blockquote>\n<p>爬虫分为两种：通用爬虫和聚焦爬虫</p>\n<ul>\n<li>通用爬虫：通常指搜索引擎的爬虫</li>\n<li>聚焦爬虫：针对特定网站的爬虫</li>\n</ul>\n<p>两种爬虫的工作流程<br><img src=\"https://img-blog.csdnimg.cn/42f9314eb7ca48089acd12ed9f0bf387.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"二：HTTP与HTTPS\"><a href=\"#二：HTTP与HTTPS\" class=\"headerlink\" title=\"二：HTTP与HTTPS\"></a>二：HTTP与HTTPS</h1><p>URL的形式：<br><img src=\"https://img-blog.csdnimg.cn/24d4d0fc6a804868b72d4d72a7f5a03f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>HTTP请求形式：<br><img src=\"https://img-blog.csdnimg.cn/0f4e15c92cd24a37be371858592827db.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>HTTP常用请求头：<br><img src=\"https://img-blog.csdnimg.cn/156baeb926864e4f9bf15d2525d5110b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>有关HTTP与HTTPS的详情可以看看我的另一篇博客，这里就不赘述了。<a href=\"https://blog.csdn.net/tongkongyu/article/details/119220506\">HTTP详解</a></p>\n<h1 id=\"三：requests库发送请求和获取网页的字符串\"><a href=\"#三：requests库发送请求和获取网页的字符串\" class=\"headerlink\" title=\"三：requests库发送请求和获取网页的字符串\"></a>三：requests库发送请求和获取网页的字符串</h1><p>打开命令行工具–&gt;进入python环境–&gt;导入requests包–&gt;请求网站数据–&gt;打印返回结果类型<br><img src=\"https://img-blog.csdnimg.cn/84ad1c06e176466a9736693477fc7503.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>response有很多属性操作</p>\n<ul>\n<li>response.text，可以打印出响应的内容，</li>\n<li>response.encoding，查看默认解码方式，默认解码方式是根据HTTP头部对响应的编码做出有根据的推测的方式，不过可能会推测错误。</li>\n<li>response.encoding = “utf-8”，设置解码方式</li>\n<li>response.content，返回bytes类型数据</li>\n<li>response.content.decode()，解码bytes数据</li>\n<li>response.content.decode(“gbk”)，可以设置解码方式</li>\n</ul>\n<p>更推荐使用response.content.decode()方式获取响应的html页面</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d1b38b4d3ed841cc812a485af3805fcb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/4230f16b2bad4bda978161fdaa029393.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/ce25940a8e0b4d6a851dbe76ed92ee94.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/24b24de198d84cbbbdc1348c1c96e4e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：使用requests保存图片\"><a href=\"#四：使用requests保存图片\" class=\"headerlink\" title=\"四：使用requests保存图片\"></a>四：使用requests保存图片</h1><p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">response = requests.get(<span class=\"string\">&quot;https://docs.python-requests.org/zh_CN/latest/_static/requests-sidebar.png&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;a.png&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(response.content)</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"https://img-blog.csdnimg.cn/869160823b7f4c93bcfb11c7944c1a06.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"五：requests发送带headers的请求\"><a href=\"#五：requests发送带headers的请求\" class=\"headerlink\" title=\"五：requests发送带headers的请求\"></a>五：requests发送带headers的请求</h1><p>response = requests.get(url)，其中response的常用方法如下：</p>\n<ul>\n<li>response.text</li>\n<li>response.content</li>\n<li>response.status_code</li>\n<li>response.request.*</li>\n<li>response.url</li>\n<li>response.headers</li>\n</ul>\n<p>一些用法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">response = requests.get(<span class=\"string\">&quot;https://www.baidu.com&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应状态码：&quot;</span>, response.status_code)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应头：&quot;</span>, response.headers)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求：&quot;</span>, response.request)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的地址：&quot;</span>, response.request.url) <span class=\"comment\"># 如果被网站重定向了，则请求的地址与响应的地址会不同</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应的地址：&quot;</span>, response.url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求头：&quot;</span>, response.request.headers)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求体：&quot;</span>, response.request.body)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求钩子：&quot;</span>, response.request.hooks)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求方式：&quot;</span>, response.request.method)</span><br></pre></td></tr></table></figure>\n<p>结果：<br><img src=\"https://img-blog.csdnimg.cn/e2e59623af444034b6da324c1b8155d1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>为了正确爬取数据，需要在请求时带上header，模拟浏览器，欺骗服务器，获取和浏览器一致的内容。之前使用response.content.decode()只能获取少量数据，具体可以见前面的测试，但设置请求头模拟浏览器后可以获得大量数据，就像浏览器访问一样。<br><img src=\"https://img-blog.csdnimg.cn/2827d549a52f404b86a00f7edb2c73cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"comment\"># 获取请求头,一般而言带上User-Agent就可以了，如果不行，则可以尝试Accept，Host，Cookie之类的</span></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 请求头在第二个参数</span></span><br><span class=\"line\">response = requests.get(<span class=\"string\">&quot;https://www.baidu.com&quot;</span>, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(response.content.decode())</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/47e03b1205ca4f61b2b9ec9727681488.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六：requests发送带参数的请求\"><a href=\"#六：requests发送带参数的请求\" class=\"headerlink\" title=\"六：requests发送带参数的请求\"></a>六：requests发送带参数的请求</h1><p>一般的请求都是带参数的，如下百度搜索：<br><img src=\"https://img-blog.csdnimg.cn/dbc8f1828f9b43909352b684258453b9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>整条链接如下，?号后面，&amp;连接且A=B形式的都是参数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.baidu.com/s?wd=python&amp;rsv_spt=1&amp;rsv_iqid=0xc6f3adb20001c17d&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;rqlang=&amp;tn=baiduhome_pg&amp;ch=&amp;rsv_enter=1&amp;rsv_btype=i&amp;rsv_dl=ib&amp;inputT=6532</span><br></pre></td></tr></table></figure>\n<p>但不是所有参数都是必须的，经过尝试发现，只有<code>wd=python</code>是必须的，即传入的搜索的参数。<br><img src=\"https://img-blog.csdnimg.cn/ce02816042264d21bd9d8e6711b9bec6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>那么现在就可以尝试让请求带参数了：</p>\n<ul>\n<li>参数形式：字典</li>\n<li>p={‘wd’=’python’}</li>\n<li>用法：requests.get(url,params=p)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"comment\"># 请求地址</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;https://www.baidu.com/s?&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 获取请求头,一般而言带上User-Agent就可以了，如果不行，则可以尝试Accept，Host，Cookie之类的</span></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 携带参数</span></span><br><span class=\"line\">p = &#123;<span class=\"string\">&#x27;wd&#x27;</span>:<span class=\"string\">&#x27;python&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 发请求</span></span><br><span class=\"line\">response = requests.get(url, headers=headers, params=p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(response.content.decode())</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8bce661b191c4c18a2b288f4d73085dd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：贴吧爬虫\"><a href=\"#七：贴吧爬虫\" class=\"headerlink\" title=\"七：贴吧爬虫\"></a>七：贴吧爬虫</h1><p>这里我爬取的是百度贴吧里的原神吧，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tieba</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, name</span>):</span></span><br><span class=\"line\">        self.tieba_name=name</span><br><span class=\"line\">        self.url_temp = <span class=\"string\">&quot;https://tieba.baidu.com/f?kw=&quot;</span> + name + <span class=\"string\">&quot;&amp;ie=utf-8pn=&#123;&#125;&quot;</span></span><br><span class=\"line\">        self.headers=&#123;<span class=\"string\">&quot;User-Agent&quot;</span>:<span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_url_list</span>(<span class=\"params\">self</span>):</span>  <span class=\"comment\"># 构造url列表</span></span><br><span class=\"line\">        url_list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1000</span>):</span><br><span class=\"line\">            url_list.append(self.url_temp.<span class=\"built_in\">format</span>(i + <span class=\"number\">50</span>))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> url_list</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse_url</span>(<span class=\"params\">self, url</span>):</span> <span class=\"comment\"># 发送请求，获取响应</span></span><br><span class=\"line\">        response = requests.get(url, headers=self.headers)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response.content.decode()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save_html</span>(<span class=\"params\">self, html_str, page_num</span>):</span> <span class=\"comment\"># 保存html字符串</span></span><br><span class=\"line\">        file_path = <span class=\"string\">&quot;page/&#123;&#125;--第&#123;&#125;页.html&quot;</span>.<span class=\"built_in\">format</span>(self.tieba_name, page_num)</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(html_str)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;成功爬取：&quot;</span>, file_path)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run</span>(<span class=\"params\">self</span>):</span>  <span class=\"comment\"># 实现主要逻辑</span></span><br><span class=\"line\">        <span class=\"comment\"># 1.构造url列表</span></span><br><span class=\"line\">        url_list = self.get_url_list()</span><br><span class=\"line\">        <span class=\"comment\"># 2.遍历，发送请求，获取响应</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> url <span class=\"keyword\">in</span> url_list:</span><br><span class=\"line\">            html_str = self.parse_url(url)</span><br><span class=\"line\">            <span class=\"comment\"># 3.保存</span></span><br><span class=\"line\">            page_num = url_list.index(url) + <span class=\"number\">1</span></span><br><span class=\"line\">            self.save_html(html_str, page_num)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    tieba = Tieba(<span class=\"string\">&quot;原神&quot;</span>)</span><br><span class=\"line\">    tieba.run()</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/487b20a871c248ef88a114c2da028dd2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：爬虫的流程\"><a href=\"#一：爬虫的流程\" class=\"headerlink\" title=\"一：爬虫的流程\"></a>一：爬虫的流程</h1><blockquote>\n<p>爬虫的分类</p>\n</blockquote>\n<p>爬虫分为两种：通用爬虫和聚焦爬虫</p>\n<ul>\n<li>通用爬虫：通常指搜索引擎的爬虫</li>\n<li>聚焦爬虫：针对特定网站的爬虫</li>\n</ul>\n<p>两种爬虫的工作流程<br><img src=\"https://img-blog.csdnimg.cn/42f9314eb7ca48089acd12ed9f0bf387.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"二：HTTP与HTTPS\"><a href=\"#二：HTTP与HTTPS\" class=\"headerlink\" title=\"二：HTTP与HTTPS\"></a>二：HTTP与HTTPS</h1><p>URL的形式：<br><img src=\"https://img-blog.csdnimg.cn/24d4d0fc6a804868b72d4d72a7f5a03f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>HTTP请求形式：<br><img src=\"https://img-blog.csdnimg.cn/0f4e15c92cd24a37be371858592827db.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>HTTP常用请求头：<br><img src=\"https://img-blog.csdnimg.cn/156baeb926864e4f9bf15d2525d5110b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>有关HTTP与HTTPS的详情可以看看我的另一篇博客，这里就不赘述了。<a href=\"https://blog.csdn.net/tongkongyu/article/details/119220506\">HTTP详解</a></p>\n<h1 id=\"三：requests库发送请求和获取网页的字符串\"><a href=\"#三：requests库发送请求和获取网页的字符串\" class=\"headerlink\" title=\"三：requests库发送请求和获取网页的字符串\"></a>三：requests库发送请求和获取网页的字符串</h1><p>打开命令行工具–&gt;进入python环境–&gt;导入requests包–&gt;请求网站数据–&gt;打印返回结果类型<br><img src=\"https://img-blog.csdnimg.cn/84ad1c06e176466a9736693477fc7503.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>response有很多属性操作</p>\n<ul>\n<li>response.text，可以打印出响应的内容，</li>\n<li>response.encoding，查看默认解码方式，默认解码方式是根据HTTP头部对响应的编码做出有根据的推测的方式，不过可能会推测错误。</li>\n<li>response.encoding = “utf-8”，设置解码方式</li>\n<li>response.content，返回bytes类型数据</li>\n<li>response.content.decode()，解码bytes数据</li>\n<li>response.content.decode(“gbk”)，可以设置解码方式</li>\n</ul>\n<p>更推荐使用response.content.decode()方式获取响应的html页面</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d1b38b4d3ed841cc812a485af3805fcb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/4230f16b2bad4bda978161fdaa029393.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/ce25940a8e0b4d6a851dbe76ed92ee94.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/24b24de198d84cbbbdc1348c1c96e4e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：使用requests保存图片\"><a href=\"#四：使用requests保存图片\" class=\"headerlink\" title=\"四：使用requests保存图片\"></a>四：使用requests保存图片</h1><p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">response = requests.get(<span class=\"string\">&quot;https://docs.python-requests.org/zh_CN/latest/_static/requests-sidebar.png&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;a.png&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(response.content)</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"https://img-blog.csdnimg.cn/869160823b7f4c93bcfb11c7944c1a06.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"五：requests发送带headers的请求\"><a href=\"#五：requests发送带headers的请求\" class=\"headerlink\" title=\"五：requests发送带headers的请求\"></a>五：requests发送带headers的请求</h1><p>response = requests.get(url)，其中response的常用方法如下：</p>\n<ul>\n<li>response.text</li>\n<li>response.content</li>\n<li>response.status_code</li>\n<li>response.request.*</li>\n<li>response.url</li>\n<li>response.headers</li>\n</ul>\n<p>一些用法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">response = requests.get(<span class=\"string\">&quot;https://www.baidu.com&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应状态码：&quot;</span>, response.status_code)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应头：&quot;</span>, response.headers)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求：&quot;</span>, response.request)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的地址：&quot;</span>, response.request.url) <span class=\"comment\"># 如果被网站重定向了，则请求的地址与响应的地址会不同</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应的地址：&quot;</span>, response.url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求头：&quot;</span>, response.request.headers)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求体：&quot;</span>, response.request.body)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求钩子：&quot;</span>, response.request.hooks)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求方式：&quot;</span>, response.request.method)</span><br></pre></td></tr></table></figure>\n<p>结果：<br><img src=\"https://img-blog.csdnimg.cn/e2e59623af444034b6da324c1b8155d1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>为了正确爬取数据，需要在请求时带上header，模拟浏览器，欺骗服务器，获取和浏览器一致的内容。之前使用response.content.decode()只能获取少量数据，具体可以见前面的测试，但设置请求头模拟浏览器后可以获得大量数据，就像浏览器访问一样。<br><img src=\"https://img-blog.csdnimg.cn/2827d549a52f404b86a00f7edb2c73cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"comment\"># 获取请求头,一般而言带上User-Agent就可以了，如果不行，则可以尝试Accept，Host，Cookie之类的</span></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 请求头在第二个参数</span></span><br><span class=\"line\">response = requests.get(<span class=\"string\">&quot;https://www.baidu.com&quot;</span>, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(response.content.decode())</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/47e03b1205ca4f61b2b9ec9727681488.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六：requests发送带参数的请求\"><a href=\"#六：requests发送带参数的请求\" class=\"headerlink\" title=\"六：requests发送带参数的请求\"></a>六：requests发送带参数的请求</h1><p>一般的请求都是带参数的，如下百度搜索：<br><img src=\"https://img-blog.csdnimg.cn/dbc8f1828f9b43909352b684258453b9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>整条链接如下，?号后面，&amp;连接且A=B形式的都是参数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.baidu.com/s?wd=python&amp;rsv_spt=1&amp;rsv_iqid=0xc6f3adb20001c17d&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;rqlang=&amp;tn=baiduhome_pg&amp;ch=&amp;rsv_enter=1&amp;rsv_btype=i&amp;rsv_dl=ib&amp;inputT=6532</span><br></pre></td></tr></table></figure>\n<p>但不是所有参数都是必须的，经过尝试发现，只有<code>wd=python</code>是必须的，即传入的搜索的参数。<br><img src=\"https://img-blog.csdnimg.cn/ce02816042264d21bd9d8e6711b9bec6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>那么现在就可以尝试让请求带参数了：</p>\n<ul>\n<li>参数形式：字典</li>\n<li>p={‘wd’=’python’}</li>\n<li>用法：requests.get(url,params=p)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"comment\"># 请求地址</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;https://www.baidu.com/s?&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 获取请求头,一般而言带上User-Agent就可以了，如果不行，则可以尝试Accept，Host，Cookie之类的</span></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 携带参数</span></span><br><span class=\"line\">p = &#123;<span class=\"string\">&#x27;wd&#x27;</span>:<span class=\"string\">&#x27;python&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># 发请求</span></span><br><span class=\"line\">response = requests.get(url, headers=headers, params=p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(response.content.decode())</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8bce661b191c4c18a2b288f4d73085dd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：贴吧爬虫\"><a href=\"#七：贴吧爬虫\" class=\"headerlink\" title=\"七：贴吧爬虫\"></a>七：贴吧爬虫</h1><p>这里我爬取的是百度贴吧里的原神吧，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tieba</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, name</span>):</span></span><br><span class=\"line\">        self.tieba_name=name</span><br><span class=\"line\">        self.url_temp = <span class=\"string\">&quot;https://tieba.baidu.com/f?kw=&quot;</span> + name + <span class=\"string\">&quot;&amp;ie=utf-8pn=&#123;&#125;&quot;</span></span><br><span class=\"line\">        self.headers=&#123;<span class=\"string\">&quot;User-Agent&quot;</span>:<span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_url_list</span>(<span class=\"params\">self</span>):</span>  <span class=\"comment\"># 构造url列表</span></span><br><span class=\"line\">        url_list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1000</span>):</span><br><span class=\"line\">            url_list.append(self.url_temp.<span class=\"built_in\">format</span>(i + <span class=\"number\">50</span>))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> url_list</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse_url</span>(<span class=\"params\">self, url</span>):</span> <span class=\"comment\"># 发送请求，获取响应</span></span><br><span class=\"line\">        response = requests.get(url, headers=self.headers)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response.content.decode()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save_html</span>(<span class=\"params\">self, html_str, page_num</span>):</span> <span class=\"comment\"># 保存html字符串</span></span><br><span class=\"line\">        file_path = <span class=\"string\">&quot;page/&#123;&#125;--第&#123;&#125;页.html&quot;</span>.<span class=\"built_in\">format</span>(self.tieba_name, page_num)</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(html_str)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;成功爬取：&quot;</span>, file_path)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run</span>(<span class=\"params\">self</span>):</span>  <span class=\"comment\"># 实现主要逻辑</span></span><br><span class=\"line\">        <span class=\"comment\"># 1.构造url列表</span></span><br><span class=\"line\">        url_list = self.get_url_list()</span><br><span class=\"line\">        <span class=\"comment\"># 2.遍历，发送请求，获取响应</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> url <span class=\"keyword\">in</span> url_list:</span><br><span class=\"line\">            html_str = self.parse_url(url)</span><br><span class=\"line\">            <span class=\"comment\"># 3.保存</span></span><br><span class=\"line\">            page_num = url_list.index(url) + <span class=\"number\">1</span></span><br><span class=\"line\">            self.save_html(html_str, page_num)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    tieba = Tieba(<span class=\"string\">&quot;原神&quot;</span>)</span><br><span class=\"line\">    tieba.run()</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/487b20a871c248ef88a114c2da028dd2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"MySQL存储引擎","date":"2021-09-27T12:29:35.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/43.jpg","_content":"\n# 一：存储引擎是什么\n存储引擎其实就是对于数据库文件的一种存取机制，如何实现存储数据，如何为存储的数据建立索引以及如何更新，查询数据等技术实现的方法。MySQL中的数据用各种不同的技术存储在文件（或内存）中，这些技术中的每一种技术都使用不同的存储机制，索引技巧，锁定水平并且最终提供广泛的不同功能和能力。在MySQL中将这些不同的技术及配套的相关功能称为存储引擎。\n\n数据库存储引擎是数据库底层软件组件，不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。Oracle，SqlServer等数据库只有一种存储引擎，而MySQL提供了插件式的存储引擎架构。所以MySQL存在多种存储引擎，可以根据需要使用相应引擎，或者编写存储引擎。MySQL 的核心就是存储引擎。\n\n<p style=\"color: red\">另外要注意的是存储引擎是基于表的，而不是数据库</p>\n\n# 二：MySQL的引擎\nMySQL支持9种存储引擎(大型公司可能会自己开发)，分别是InnoDB，MyISAM，Memory，CSV，Archive，Blackhole，Merge，Federated，Example。\n\n可以使用`SHOW ENGINES;`命令查看自己的mysql支持的引擎情况（我的mysql版本是8.0）：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/83f24e237d0943e98b83fc41d2585569.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)引擎很多，但是用得最广泛的只有两款：InnoDB和MyISAM，MySQL5.5之前的默认存储引擎是MyISAM，5.5之后就改为了InnoDB。\n\n创建新表时如果不指定存储引擎，那么系统就会使用默认的存储引擎，可以使用: \n\n```sql\nshow variables like '%storage_engine%' ;\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d15c1ea239ea433087aaf126aab503d2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果要修改默认引擎，可以用这个命令：\n\n```sql\nSET default_storage_engine=< 存储引擎名 >\n```\n\n比如我想把默认引擎改为MEMORY，那我可以`SET default_storage_engine=MEMORY;`\n\n如果想查看具体某一个表所使用的存储引擎，可以用这个命令：\n\n```sql\nshow create table tablename;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/120e2456bffb41ebae96520588cce742.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n准确查看某个数据库中的某一表所使用的存储引擎\n\n```sql\nshow table status from database where name=\"tablename\";\n```\n\n# 三：引擎介绍\n下面重点介绍几种常用的存储引擎， 并对比各个存储引擎之间的区别， 如下表所示：\n<table>\n<thead>\n<tr>\n<th>特点</th>\n<th>InnoDB</th>\n<th>MyISAM</th>\n<th>MEMORY</th>\n<th>MERGE</th>\n<th>NDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存储限制</td>\n<td>64TB</td>\n<td>256TB</td>\n<td>RAM</td>\n<td>没有</td>\n<td>128TB</td>\n</tr>\n<tr>\n<td>事务安全</td>\n<td><mark>支持</mark></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>锁机制</td>\n<td><mark>行锁(适合高并发)</mark></td>\n<td><mark>表锁</mark></td>\n<td>表锁</td>\n<td>表锁</td>\n<td>行锁</td>\n</tr>\n<tr>\n<td>B树索引</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>哈希索引</td>\n<td></td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>全文索引</td>\n<td>支持(5.6版本之后)</td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>集群索引</td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>数据索引</td>\n<td>支持</td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td>支持</td>\n</tr>\n<tr>\n<td>索引缓存</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>数据可压缩</td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>空间使用</td>\n<td>高</td>\n<td>低</td>\n<td>N/A</td>\n<td>低</td>\n<td>低</td>\n</tr>\n<tr>\n<td>内存使用</td>\n<td>高</td>\n<td>低</td>\n<td>中等</td>\n<td>低</td>\n<td>高</td>\n</tr>\n<tr>\n<td>批量插入速度</td>\n<td>低</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n</tr>\n<tr>\n<td>支持外键</td>\n<td><mark>支持</mark></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n\n## 1. InnoDB存储引擎\nInnoDB存储引擎支持事务，其设计目标主要是面向在线事务处理的应用。其特点是行锁设计、支持外键，并支持类似于Oracle的非锁定读，即默认读取操作不会产生锁。InnoDB通过使用多版本并发控制(MVCC)来获得高并发性，并且实现了SQL标准的4种隔离级别，默认为Repeatable级别。同时使用一种被称为next-key locking的策略来避免幻读现象的产生。InnoDB存储引擎还提供了插入缓存、二次写、自适应哈希索引、预读等高性能和高可用的功能。\n\n​对于表中数据的存储，InnoDB存储引擎采用了聚集的方式，因此每张表的存储都是按主键的顺序进行存放。如果没有显示地在表定义时指定主键，InnoDB存储引擎会为每一行生成一个6字节的ROWID，并以此作为主键。实践证明，InnoDB存储引擎具备高可用性、高性能以及高可扩展性。\n\n## 2. MyISAM存储引擎\nMyISAM是MySQL的ISAM扩展格式和缺省的数据库引擎。除了提供ISAM里所没有的索引和字段管理的大量功能，MyISAM还使用一种表格锁定的机制，来优化多个并发的读写操作，其代价是你需要经常运行OPTIMIZE TABLE命令，来恢复被更新机制所浪费的空间。MYISAM强调了快速读取操作，这可能就是为什么MySQL受到了WEB开发如此青睐的主要原因：在WEB开发中你所进行的大量数据操作都是读取操作。所以，大多数虚拟主机提供商和INTERNET平台提供商只允许使用MYISAM格式。MyISAM格式的一个重要缺陷就是不能在表损坏后恢复数据。\n\n## 3.Memory存储引擎\n​ Memory存储引擎(之前称HEAP存储引擎)将表中的数据存放在内存中，如果数据库重启或发生故障崩溃，表中的数据将会消失。它非常适合用于存储临时数据的临时表，以及数据仓库中的维度表。Memory存储引擎默认使用哈希索引，而不是我们熟悉的B+树索引。\n\n​ Memory存储引擎非常快，但它只支持表锁，并发性能较差，并且不支持TEXT和BLOB。最重要的是，存储变长字段(varchar)时是按照定长字段(char)的方式进行的，因此会浪费内存，不过eBay工程师已解决此问题。\n\n​ MySQL数据库使用Memory存储引擎作为临时表来存放查询的中间结果集(intermediate result)。如果中间结果集大于Memory存储引擎表的容量设置，又或者中间结果含有TEXT或BLOB列类型字段，则MySQL数据库会把其转换到MyISAM存储引擎表而存放到磁盘中。\nArchive存储引擎\n\n## 4.Archive存储引擎\n只支持insert和select操作，从MySQL 5.1开始支持索引。Archive存储引擎使用zlib算法将数据行进行压缩后存储，压缩比一般可以达1:10。Archive存储引擎使用行锁来实现高并发的插入操作，但是其本身并不是事务安全的存储引擎，其设计目标主要是提供高速的插入和压缩功能。\nFederated存储引擎\n\n## 5.Federated存储引擎\n并不存放数据，它只是指向一台远程MySQL数据库服务器上的表。目前只支持MySQL数据库表，不支持异构数据库表。\n\n## 6.Maria存储引擎\nMaria存储引擎是由MySQL创始人Michael Widenius新开发的引擎，设计目标主要是用来取代原有的MyISAM存储引擎，从而成为MySQL的默认存储引擎。Maria支持缓存数据和索引文件，应用了行锁设计，提供了MVCC功能，支持事务和非事务安全的选项，以及更好的BLOB字符类型的处理性能。\n\n## 7. 其他\n事实上也有很多大公司会自己开发优秀的存储引擎，比如Percona，它为MySQL数据库服务器进行了改进，在功能和性能上较MySQL有了明显提升，该版本提升了在高负载情况下的InnoDB的性能，为DBA提供了一些非常有用的性能诊断工具，另外有更多的参数和命令来控制服务器行为，该公司新建了一款存储引擎“xtradb”，完全可以替代InnoDB，并且在性能和并发上做的更好。\n\n其他的如阿里的AliSql+AliRedis也十分优秀，据说性能有30-70左右的提升。","source":"_posts/sql/mysql存储引擎.md","raw":"---\ntitle: MySQL存储引擎\ndate: 2021-09-27 20:29:35\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/43.jpg\ntags:\n  - 存储引擎\ncategories: sql\n---\n\n# 一：存储引擎是什么\n存储引擎其实就是对于数据库文件的一种存取机制，如何实现存储数据，如何为存储的数据建立索引以及如何更新，查询数据等技术实现的方法。MySQL中的数据用各种不同的技术存储在文件（或内存）中，这些技术中的每一种技术都使用不同的存储机制，索引技巧，锁定水平并且最终提供广泛的不同功能和能力。在MySQL中将这些不同的技术及配套的相关功能称为存储引擎。\n\n数据库存储引擎是数据库底层软件组件，不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。Oracle，SqlServer等数据库只有一种存储引擎，而MySQL提供了插件式的存储引擎架构。所以MySQL存在多种存储引擎，可以根据需要使用相应引擎，或者编写存储引擎。MySQL 的核心就是存储引擎。\n\n<p style=\"color: red\">另外要注意的是存储引擎是基于表的，而不是数据库</p>\n\n# 二：MySQL的引擎\nMySQL支持9种存储引擎(大型公司可能会自己开发)，分别是InnoDB，MyISAM，Memory，CSV，Archive，Blackhole，Merge，Federated，Example。\n\n可以使用`SHOW ENGINES;`命令查看自己的mysql支持的引擎情况（我的mysql版本是8.0）：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/83f24e237d0943e98b83fc41d2585569.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)引擎很多，但是用得最广泛的只有两款：InnoDB和MyISAM，MySQL5.5之前的默认存储引擎是MyISAM，5.5之后就改为了InnoDB。\n\n创建新表时如果不指定存储引擎，那么系统就会使用默认的存储引擎，可以使用: \n\n```sql\nshow variables like '%storage_engine%' ;\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d15c1ea239ea433087aaf126aab503d2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果要修改默认引擎，可以用这个命令：\n\n```sql\nSET default_storage_engine=< 存储引擎名 >\n```\n\n比如我想把默认引擎改为MEMORY，那我可以`SET default_storage_engine=MEMORY;`\n\n如果想查看具体某一个表所使用的存储引擎，可以用这个命令：\n\n```sql\nshow create table tablename;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/120e2456bffb41ebae96520588cce742.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n准确查看某个数据库中的某一表所使用的存储引擎\n\n```sql\nshow table status from database where name=\"tablename\";\n```\n\n# 三：引擎介绍\n下面重点介绍几种常用的存储引擎， 并对比各个存储引擎之间的区别， 如下表所示：\n<table>\n<thead>\n<tr>\n<th>特点</th>\n<th>InnoDB</th>\n<th>MyISAM</th>\n<th>MEMORY</th>\n<th>MERGE</th>\n<th>NDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存储限制</td>\n<td>64TB</td>\n<td>256TB</td>\n<td>RAM</td>\n<td>没有</td>\n<td>128TB</td>\n</tr>\n<tr>\n<td>事务安全</td>\n<td><mark>支持</mark></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>锁机制</td>\n<td><mark>行锁(适合高并发)</mark></td>\n<td><mark>表锁</mark></td>\n<td>表锁</td>\n<td>表锁</td>\n<td>行锁</td>\n</tr>\n<tr>\n<td>B树索引</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>哈希索引</td>\n<td></td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>全文索引</td>\n<td>支持(5.6版本之后)</td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>集群索引</td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>数据索引</td>\n<td>支持</td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td>支持</td>\n</tr>\n<tr>\n<td>索引缓存</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>数据可压缩</td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>空间使用</td>\n<td>高</td>\n<td>低</td>\n<td>N/A</td>\n<td>低</td>\n<td>低</td>\n</tr>\n<tr>\n<td>内存使用</td>\n<td>高</td>\n<td>低</td>\n<td>中等</td>\n<td>低</td>\n<td>高</td>\n</tr>\n<tr>\n<td>批量插入速度</td>\n<td>低</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n</tr>\n<tr>\n<td>支持外键</td>\n<td><mark>支持</mark></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n\n## 1. InnoDB存储引擎\nInnoDB存储引擎支持事务，其设计目标主要是面向在线事务处理的应用。其特点是行锁设计、支持外键，并支持类似于Oracle的非锁定读，即默认读取操作不会产生锁。InnoDB通过使用多版本并发控制(MVCC)来获得高并发性，并且实现了SQL标准的4种隔离级别，默认为Repeatable级别。同时使用一种被称为next-key locking的策略来避免幻读现象的产生。InnoDB存储引擎还提供了插入缓存、二次写、自适应哈希索引、预读等高性能和高可用的功能。\n\n​对于表中数据的存储，InnoDB存储引擎采用了聚集的方式，因此每张表的存储都是按主键的顺序进行存放。如果没有显示地在表定义时指定主键，InnoDB存储引擎会为每一行生成一个6字节的ROWID，并以此作为主键。实践证明，InnoDB存储引擎具备高可用性、高性能以及高可扩展性。\n\n## 2. MyISAM存储引擎\nMyISAM是MySQL的ISAM扩展格式和缺省的数据库引擎。除了提供ISAM里所没有的索引和字段管理的大量功能，MyISAM还使用一种表格锁定的机制，来优化多个并发的读写操作，其代价是你需要经常运行OPTIMIZE TABLE命令，来恢复被更新机制所浪费的空间。MYISAM强调了快速读取操作，这可能就是为什么MySQL受到了WEB开发如此青睐的主要原因：在WEB开发中你所进行的大量数据操作都是读取操作。所以，大多数虚拟主机提供商和INTERNET平台提供商只允许使用MYISAM格式。MyISAM格式的一个重要缺陷就是不能在表损坏后恢复数据。\n\n## 3.Memory存储引擎\n​ Memory存储引擎(之前称HEAP存储引擎)将表中的数据存放在内存中，如果数据库重启或发生故障崩溃，表中的数据将会消失。它非常适合用于存储临时数据的临时表，以及数据仓库中的维度表。Memory存储引擎默认使用哈希索引，而不是我们熟悉的B+树索引。\n\n​ Memory存储引擎非常快，但它只支持表锁，并发性能较差，并且不支持TEXT和BLOB。最重要的是，存储变长字段(varchar)时是按照定长字段(char)的方式进行的，因此会浪费内存，不过eBay工程师已解决此问题。\n\n​ MySQL数据库使用Memory存储引擎作为临时表来存放查询的中间结果集(intermediate result)。如果中间结果集大于Memory存储引擎表的容量设置，又或者中间结果含有TEXT或BLOB列类型字段，则MySQL数据库会把其转换到MyISAM存储引擎表而存放到磁盘中。\nArchive存储引擎\n\n## 4.Archive存储引擎\n只支持insert和select操作，从MySQL 5.1开始支持索引。Archive存储引擎使用zlib算法将数据行进行压缩后存储，压缩比一般可以达1:10。Archive存储引擎使用行锁来实现高并发的插入操作，但是其本身并不是事务安全的存储引擎，其设计目标主要是提供高速的插入和压缩功能。\nFederated存储引擎\n\n## 5.Federated存储引擎\n并不存放数据，它只是指向一台远程MySQL数据库服务器上的表。目前只支持MySQL数据库表，不支持异构数据库表。\n\n## 6.Maria存储引擎\nMaria存储引擎是由MySQL创始人Michael Widenius新开发的引擎，设计目标主要是用来取代原有的MyISAM存储引擎，从而成为MySQL的默认存储引擎。Maria支持缓存数据和索引文件，应用了行锁设计，提供了MVCC功能，支持事务和非事务安全的选项，以及更好的BLOB字符类型的处理性能。\n\n## 7. 其他\n事实上也有很多大公司会自己开发优秀的存储引擎，比如Percona，它为MySQL数据库服务器进行了改进，在功能和性能上较MySQL有了明显提升，该版本提升了在高负载情况下的InnoDB的性能，为DBA提供了一些非常有用的性能诊断工具，另外有更多的参数和命令来控制服务器行为，该公司新建了一款存储引擎“xtradb”，完全可以替代InnoDB，并且在性能和并发上做的更好。\n\n其他的如阿里的AliSql+AliRedis也十分优秀，据说性能有30-70左右的提升。","slug":"sql/mysql存储引擎","published":1,"updated":"2021-12-03T15:00:30.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958c8004oasdabuxrb6gq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：存储引擎是什么\"><a href=\"#一：存储引擎是什么\" class=\"headerlink\" title=\"一：存储引擎是什么\"></a>一：存储引擎是什么</h1><p>存储引擎其实就是对于数据库文件的一种存取机制，如何实现存储数据，如何为存储的数据建立索引以及如何更新，查询数据等技术实现的方法。MySQL中的数据用各种不同的技术存储在文件（或内存）中，这些技术中的每一种技术都使用不同的存储机制，索引技巧，锁定水平并且最终提供广泛的不同功能和能力。在MySQL中将这些不同的技术及配套的相关功能称为存储引擎。</p>\n<p>数据库存储引擎是数据库底层软件组件，不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。Oracle，SqlServer等数据库只有一种存储引擎，而MySQL提供了插件式的存储引擎架构。所以MySQL存在多种存储引擎，可以根据需要使用相应引擎，或者编写存储引擎。MySQL 的核心就是存储引擎。</p>\n<p style=\"color: red\">另外要注意的是存储引擎是基于表的，而不是数据库</p>\n\n<h1 id=\"二：MySQL的引擎\"><a href=\"#二：MySQL的引擎\" class=\"headerlink\" title=\"二：MySQL的引擎\"></a>二：MySQL的引擎</h1><p>MySQL支持9种存储引擎(大型公司可能会自己开发)，分别是InnoDB，MyISAM，Memory，CSV，Archive，Blackhole，Merge，Federated，Example。</p>\n<p>可以使用<code>SHOW ENGINES;</code>命令查看自己的mysql支持的引擎情况（我的mysql版本是8.0）：<br><img src=\"https://img-blog.csdnimg.cn/83f24e237d0943e98b83fc41d2585569.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">引擎很多，但是用得最广泛的只有两款：InnoDB和MyISAM，MySQL5.5之前的默认存储引擎是MyISAM，5.5之后就改为了InnoDB。</p>\n<p>创建新表时如果不指定存储引擎，那么系统就会使用默认的存储引擎，可以使用: </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%storage_engine%&#x27;</span> ;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/d15c1ea239ea433087aaf126aab503d2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果要修改默认引擎，可以用这个命令：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> default_storage_engine<span class=\"operator\">=</span><span class=\"operator\">&lt;</span> 存储引擎名 <span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>比如我想把默认引擎改为MEMORY，那我可以<code>SET default_storage_engine=MEMORY;</code></p>\n<p>如果想查看具体某一个表所使用的存储引擎，可以用这个命令：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tablename;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/120e2456bffb41ebae96520588cce742.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>准确查看某个数据库中的某一表所使用的存储引擎</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">table</span> status <span class=\"keyword\">from</span> database <span class=\"keyword\">where</span> name<span class=\"operator\">=</span>&quot;tablename&quot;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三：引擎介绍\"><a href=\"#三：引擎介绍\" class=\"headerlink\" title=\"三：引擎介绍\"></a>三：引擎介绍</h1><p>下面重点介绍几种常用的存储引擎， 并对比各个存储引擎之间的区别， 如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>特点</th>\n<th>InnoDB</th>\n<th>MyISAM</th>\n<th>MEMORY</th>\n<th>MERGE</th>\n<th>NDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存储限制</td>\n<td>64TB</td>\n<td>256TB</td>\n<td>RAM</td>\n<td>没有</td>\n<td>128TB</td>\n</tr>\n<tr>\n<td>事务安全</td>\n<td><mark>支持</mark></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>锁机制</td>\n<td><mark>行锁(适合高并发)</mark></td>\n<td><mark>表锁</mark></td>\n<td>表锁</td>\n<td>表锁</td>\n<td>行锁</td>\n</tr>\n<tr>\n<td>B树索引</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>哈希索引</td>\n<td></td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>全文索引</td>\n<td>支持(5.6版本之后)</td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>集群索引</td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>数据索引</td>\n<td>支持</td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td>支持</td>\n</tr>\n<tr>\n<td>索引缓存</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>数据可压缩</td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>空间使用</td>\n<td>高</td>\n<td>低</td>\n<td>N/A</td>\n<td>低</td>\n<td>低</td>\n</tr>\n<tr>\n<td>内存使用</td>\n<td>高</td>\n<td>低</td>\n<td>中等</td>\n<td>低</td>\n<td>高</td>\n</tr>\n<tr>\n<td>批量插入速度</td>\n<td>低</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n</tr>\n<tr>\n<td>支持外键</td>\n<td><mark>支持</mark></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=\"1-InnoDB存储引擎\"><a href=\"#1-InnoDB存储引擎\" class=\"headerlink\" title=\"1. InnoDB存储引擎\"></a>1. InnoDB存储引擎</h2><p>InnoDB存储引擎支持事务，其设计目标主要是面向在线事务处理的应用。其特点是行锁设计、支持外键，并支持类似于Oracle的非锁定读，即默认读取操作不会产生锁。InnoDB通过使用多版本并发控制(MVCC)来获得高并发性，并且实现了SQL标准的4种隔离级别，默认为Repeatable级别。同时使用一种被称为next-key locking的策略来避免幻读现象的产生。InnoDB存储引擎还提供了插入缓存、二次写、自适应哈希索引、预读等高性能和高可用的功能。</p>\n<p>​对于表中数据的存储，InnoDB存储引擎采用了聚集的方式，因此每张表的存储都是按主键的顺序进行存放。如果没有显示地在表定义时指定主键，InnoDB存储引擎会为每一行生成一个6字节的ROWID，并以此作为主键。实践证明，InnoDB存储引擎具备高可用性、高性能以及高可扩展性。</p>\n<h2 id=\"2-MyISAM存储引擎\"><a href=\"#2-MyISAM存储引擎\" class=\"headerlink\" title=\"2. MyISAM存储引擎\"></a>2. MyISAM存储引擎</h2><p>MyISAM是MySQL的ISAM扩展格式和缺省的数据库引擎。除了提供ISAM里所没有的索引和字段管理的大量功能，MyISAM还使用一种表格锁定的机制，来优化多个并发的读写操作，其代价是你需要经常运行OPTIMIZE TABLE命令，来恢复被更新机制所浪费的空间。MYISAM强调了快速读取操作，这可能就是为什么MySQL受到了WEB开发如此青睐的主要原因：在WEB开发中你所进行的大量数据操作都是读取操作。所以，大多数虚拟主机提供商和INTERNET平台提供商只允许使用MYISAM格式。MyISAM格式的一个重要缺陷就是不能在表损坏后恢复数据。</p>\n<h2 id=\"3-Memory存储引擎\"><a href=\"#3-Memory存储引擎\" class=\"headerlink\" title=\"3.Memory存储引擎\"></a>3.Memory存储引擎</h2><p>​ Memory存储引擎(之前称HEAP存储引擎)将表中的数据存放在内存中，如果数据库重启或发生故障崩溃，表中的数据将会消失。它非常适合用于存储临时数据的临时表，以及数据仓库中的维度表。Memory存储引擎默认使用哈希索引，而不是我们熟悉的B+树索引。</p>\n<p>​ Memory存储引擎非常快，但它只支持表锁，并发性能较差，并且不支持TEXT和BLOB。最重要的是，存储变长字段(varchar)时是按照定长字段(char)的方式进行的，因此会浪费内存，不过eBay工程师已解决此问题。</p>\n<p>​ MySQL数据库使用Memory存储引擎作为临时表来存放查询的中间结果集(intermediate result)。如果中间结果集大于Memory存储引擎表的容量设置，又或者中间结果含有TEXT或BLOB列类型字段，则MySQL数据库会把其转换到MyISAM存储引擎表而存放到磁盘中。<br>Archive存储引擎</p>\n<h2 id=\"4-Archive存储引擎\"><a href=\"#4-Archive存储引擎\" class=\"headerlink\" title=\"4.Archive存储引擎\"></a>4.Archive存储引擎</h2><p>只支持insert和select操作，从MySQL 5.1开始支持索引。Archive存储引擎使用zlib算法将数据行进行压缩后存储，压缩比一般可以达1:10。Archive存储引擎使用行锁来实现高并发的插入操作，但是其本身并不是事务安全的存储引擎，其设计目标主要是提供高速的插入和压缩功能。<br>Federated存储引擎</p>\n<h2 id=\"5-Federated存储引擎\"><a href=\"#5-Federated存储引擎\" class=\"headerlink\" title=\"5.Federated存储引擎\"></a>5.Federated存储引擎</h2><p>并不存放数据，它只是指向一台远程MySQL数据库服务器上的表。目前只支持MySQL数据库表，不支持异构数据库表。</p>\n<h2 id=\"6-Maria存储引擎\"><a href=\"#6-Maria存储引擎\" class=\"headerlink\" title=\"6.Maria存储引擎\"></a>6.Maria存储引擎</h2><p>Maria存储引擎是由MySQL创始人Michael Widenius新开发的引擎，设计目标主要是用来取代原有的MyISAM存储引擎，从而成为MySQL的默认存储引擎。Maria支持缓存数据和索引文件，应用了行锁设计，提供了MVCC功能，支持事务和非事务安全的选项，以及更好的BLOB字符类型的处理性能。</p>\n<h2 id=\"7-其他\"><a href=\"#7-其他\" class=\"headerlink\" title=\"7. 其他\"></a>7. 其他</h2><p>事实上也有很多大公司会自己开发优秀的存储引擎，比如Percona，它为MySQL数据库服务器进行了改进，在功能和性能上较MySQL有了明显提升，该版本提升了在高负载情况下的InnoDB的性能，为DBA提供了一些非常有用的性能诊断工具，另外有更多的参数和命令来控制服务器行为，该公司新建了一款存储引擎“xtradb”，完全可以替代InnoDB，并且在性能和并发上做的更好。</p>\n<p>其他的如阿里的AliSql+AliRedis也十分优秀，据说性能有30-70左右的提升。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：存储引擎是什么\"><a href=\"#一：存储引擎是什么\" class=\"headerlink\" title=\"一：存储引擎是什么\"></a>一：存储引擎是什么</h1><p>存储引擎其实就是对于数据库文件的一种存取机制，如何实现存储数据，如何为存储的数据建立索引以及如何更新，查询数据等技术实现的方法。MySQL中的数据用各种不同的技术存储在文件（或内存）中，这些技术中的每一种技术都使用不同的存储机制，索引技巧，锁定水平并且最终提供广泛的不同功能和能力。在MySQL中将这些不同的技术及配套的相关功能称为存储引擎。</p>\n<p>数据库存储引擎是数据库底层软件组件，不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。Oracle，SqlServer等数据库只有一种存储引擎，而MySQL提供了插件式的存储引擎架构。所以MySQL存在多种存储引擎，可以根据需要使用相应引擎，或者编写存储引擎。MySQL 的核心就是存储引擎。</p>\n<p style=\"color: red\">另外要注意的是存储引擎是基于表的，而不是数据库</p>\n\n<h1 id=\"二：MySQL的引擎\"><a href=\"#二：MySQL的引擎\" class=\"headerlink\" title=\"二：MySQL的引擎\"></a>二：MySQL的引擎</h1><p>MySQL支持9种存储引擎(大型公司可能会自己开发)，分别是InnoDB，MyISAM，Memory，CSV，Archive，Blackhole，Merge，Federated，Example。</p>\n<p>可以使用<code>SHOW ENGINES;</code>命令查看自己的mysql支持的引擎情况（我的mysql版本是8.0）：<br><img src=\"https://img-blog.csdnimg.cn/83f24e237d0943e98b83fc41d2585569.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">引擎很多，但是用得最广泛的只有两款：InnoDB和MyISAM，MySQL5.5之前的默认存储引擎是MyISAM，5.5之后就改为了InnoDB。</p>\n<p>创建新表时如果不指定存储引擎，那么系统就会使用默认的存储引擎，可以使用: </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%storage_engine%&#x27;</span> ;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/d15c1ea239ea433087aaf126aab503d2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果要修改默认引擎，可以用这个命令：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> default_storage_engine<span class=\"operator\">=</span><span class=\"operator\">&lt;</span> 存储引擎名 <span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>比如我想把默认引擎改为MEMORY，那我可以<code>SET default_storage_engine=MEMORY;</code></p>\n<p>如果想查看具体某一个表所使用的存储引擎，可以用这个命令：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tablename;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/120e2456bffb41ebae96520588cce742.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>准确查看某个数据库中的某一表所使用的存储引擎</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">table</span> status <span class=\"keyword\">from</span> database <span class=\"keyword\">where</span> name<span class=\"operator\">=</span>&quot;tablename&quot;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三：引擎介绍\"><a href=\"#三：引擎介绍\" class=\"headerlink\" title=\"三：引擎介绍\"></a>三：引擎介绍</h1><p>下面重点介绍几种常用的存储引擎， 并对比各个存储引擎之间的区别， 如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>特点</th>\n<th>InnoDB</th>\n<th>MyISAM</th>\n<th>MEMORY</th>\n<th>MERGE</th>\n<th>NDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存储限制</td>\n<td>64TB</td>\n<td>256TB</td>\n<td>RAM</td>\n<td>没有</td>\n<td>128TB</td>\n</tr>\n<tr>\n<td>事务安全</td>\n<td><mark>支持</mark></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>锁机制</td>\n<td><mark>行锁(适合高并发)</mark></td>\n<td><mark>表锁</mark></td>\n<td>表锁</td>\n<td>表锁</td>\n<td>行锁</td>\n</tr>\n<tr>\n<td>B树索引</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>哈希索引</td>\n<td></td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>全文索引</td>\n<td>支持(5.6版本之后)</td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>集群索引</td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>数据索引</td>\n<td>支持</td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td>支持</td>\n</tr>\n<tr>\n<td>索引缓存</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>数据可压缩</td>\n<td></td>\n<td>支持</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>空间使用</td>\n<td>高</td>\n<td>低</td>\n<td>N/A</td>\n<td>低</td>\n<td>低</td>\n</tr>\n<tr>\n<td>内存使用</td>\n<td>高</td>\n<td>低</td>\n<td>中等</td>\n<td>低</td>\n<td>高</td>\n</tr>\n<tr>\n<td>批量插入速度</td>\n<td>低</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n</tr>\n<tr>\n<td>支持外键</td>\n<td><mark>支持</mark></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=\"1-InnoDB存储引擎\"><a href=\"#1-InnoDB存储引擎\" class=\"headerlink\" title=\"1. InnoDB存储引擎\"></a>1. InnoDB存储引擎</h2><p>InnoDB存储引擎支持事务，其设计目标主要是面向在线事务处理的应用。其特点是行锁设计、支持外键，并支持类似于Oracle的非锁定读，即默认读取操作不会产生锁。InnoDB通过使用多版本并发控制(MVCC)来获得高并发性，并且实现了SQL标准的4种隔离级别，默认为Repeatable级别。同时使用一种被称为next-key locking的策略来避免幻读现象的产生。InnoDB存储引擎还提供了插入缓存、二次写、自适应哈希索引、预读等高性能和高可用的功能。</p>\n<p>​对于表中数据的存储，InnoDB存储引擎采用了聚集的方式，因此每张表的存储都是按主键的顺序进行存放。如果没有显示地在表定义时指定主键，InnoDB存储引擎会为每一行生成一个6字节的ROWID，并以此作为主键。实践证明，InnoDB存储引擎具备高可用性、高性能以及高可扩展性。</p>\n<h2 id=\"2-MyISAM存储引擎\"><a href=\"#2-MyISAM存储引擎\" class=\"headerlink\" title=\"2. MyISAM存储引擎\"></a>2. MyISAM存储引擎</h2><p>MyISAM是MySQL的ISAM扩展格式和缺省的数据库引擎。除了提供ISAM里所没有的索引和字段管理的大量功能，MyISAM还使用一种表格锁定的机制，来优化多个并发的读写操作，其代价是你需要经常运行OPTIMIZE TABLE命令，来恢复被更新机制所浪费的空间。MYISAM强调了快速读取操作，这可能就是为什么MySQL受到了WEB开发如此青睐的主要原因：在WEB开发中你所进行的大量数据操作都是读取操作。所以，大多数虚拟主机提供商和INTERNET平台提供商只允许使用MYISAM格式。MyISAM格式的一个重要缺陷就是不能在表损坏后恢复数据。</p>\n<h2 id=\"3-Memory存储引擎\"><a href=\"#3-Memory存储引擎\" class=\"headerlink\" title=\"3.Memory存储引擎\"></a>3.Memory存储引擎</h2><p>​ Memory存储引擎(之前称HEAP存储引擎)将表中的数据存放在内存中，如果数据库重启或发生故障崩溃，表中的数据将会消失。它非常适合用于存储临时数据的临时表，以及数据仓库中的维度表。Memory存储引擎默认使用哈希索引，而不是我们熟悉的B+树索引。</p>\n<p>​ Memory存储引擎非常快，但它只支持表锁，并发性能较差，并且不支持TEXT和BLOB。最重要的是，存储变长字段(varchar)时是按照定长字段(char)的方式进行的，因此会浪费内存，不过eBay工程师已解决此问题。</p>\n<p>​ MySQL数据库使用Memory存储引擎作为临时表来存放查询的中间结果集(intermediate result)。如果中间结果集大于Memory存储引擎表的容量设置，又或者中间结果含有TEXT或BLOB列类型字段，则MySQL数据库会把其转换到MyISAM存储引擎表而存放到磁盘中。<br>Archive存储引擎</p>\n<h2 id=\"4-Archive存储引擎\"><a href=\"#4-Archive存储引擎\" class=\"headerlink\" title=\"4.Archive存储引擎\"></a>4.Archive存储引擎</h2><p>只支持insert和select操作，从MySQL 5.1开始支持索引。Archive存储引擎使用zlib算法将数据行进行压缩后存储，压缩比一般可以达1:10。Archive存储引擎使用行锁来实现高并发的插入操作，但是其本身并不是事务安全的存储引擎，其设计目标主要是提供高速的插入和压缩功能。<br>Federated存储引擎</p>\n<h2 id=\"5-Federated存储引擎\"><a href=\"#5-Federated存储引擎\" class=\"headerlink\" title=\"5.Federated存储引擎\"></a>5.Federated存储引擎</h2><p>并不存放数据，它只是指向一台远程MySQL数据库服务器上的表。目前只支持MySQL数据库表，不支持异构数据库表。</p>\n<h2 id=\"6-Maria存储引擎\"><a href=\"#6-Maria存储引擎\" class=\"headerlink\" title=\"6.Maria存储引擎\"></a>6.Maria存储引擎</h2><p>Maria存储引擎是由MySQL创始人Michael Widenius新开发的引擎，设计目标主要是用来取代原有的MyISAM存储引擎，从而成为MySQL的默认存储引擎。Maria支持缓存数据和索引文件，应用了行锁设计，提供了MVCC功能，支持事务和非事务安全的选项，以及更好的BLOB字符类型的处理性能。</p>\n<h2 id=\"7-其他\"><a href=\"#7-其他\" class=\"headerlink\" title=\"7. 其他\"></a>7. 其他</h2><p>事实上也有很多大公司会自己开发优秀的存储引擎，比如Percona，它为MySQL数据库服务器进行了改进，在功能和性能上较MySQL有了明显提升，该版本提升了在高负载情况下的InnoDB的性能，为DBA提供了一些非常有用的性能诊断工具，另外有更多的参数和命令来控制服务器行为，该公司新建了一款存储引擎“xtradb”，完全可以替代InnoDB，并且在性能和并发上做的更好。</p>\n<p>其他的如阿里的AliSql+AliRedis也十分优秀，据说性能有30-70左右的提升。</p>\n"},{"title":"git操作","date":"2021-08-15T12:58:58.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/006.jpg","_content":"\n# 一：版本控制\n### 1) 什么是版本控制\n版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。简单说就是用于管理多人协同开发项目的技术。\n\n版本控制的好处：\n+ 实现跨区域多人协同开发\n+ 追踪和记载一个或者多个文件的历史记录\n+ 组织和保护你的源代码和文档\n+ 统计工作量\n+ 并行开发、提高开发效率\n+ 跟踪记录整个软件的开发过程\n+ 减轻开发人员的负担，节省时间，同时降低人为错误\n\n\n\n没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。\n\n主流的版本控制器有如下这些：\n+ Git\n+ SVN（Subversion）\n+ CVS（Concurrent Versions System）\n+ VSS（Micorosoft Visual SourceSafe）\n+ TFS（Team Foundation Server）\n+ Visual Studio Online\n\n版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是Git与SVN。\n\n### 2) 版本控制分类\n**本地版本控制**\n记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如RCS。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c545e94743ed433782af256febdd8936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**集中版本控制**\n所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/03f9906d7cd04310b23a90bb65731fe5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS。\n\n**分布式版本控制**\n每个人都拥有全部的代码！安全隐患！\n所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时push到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。\n不会因为服务器损坏或者网络问题，造成不能工作的情况！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ce54210959ff4b2dac16106f90625867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**Git与SVN的主要区别**\n\nSVN是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。\n\nGit是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git可以直接看到更新了哪些代码和文件！\n\nGit是目前世界上最先进的分布式版本控制系统。\n\n# 二：关于Git\n安装成功后在开始菜单中会有Git项，菜单下有3个程序(任意文件夹下右键也可以看到对应的程序)：\n\nGit Bash：Unix与Linux风格的命令行，使用最多，推荐最多\n\nGit CMD：Windows风格的命令行\n\nGit GUI：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令\n\n# 三：常用的Linux命令\n\n> cd : 改变目录。\n\n> cd . . 回退到上一个目录，直接cd进入默认目录\n\n> pwd : 显示当前所在的目录路径。\n\n> ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。\n\n> touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。\n\n> rm:  删除一个文件, rm index.js 就会把index.js文件删除。\n\n> mkdir:  新建一个目录,就是新建一个文件夹。\n\n> rm -r :  删除一个文件夹, rm -r src 删除src目录\n> rm -rf / 切勿在Linux中尝试！删除电脑中全部文件！\n\n> mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。\n\n> reset 重新初始化终端/清屏。\n\n> clear 清屏。\n\n> history 查看命令历史。\n\n> help 帮助。\n\n> exit 退出。\n\n> #表示注释\n\n\n# 四：Git配置\n\n查看配置：\n`git config -l`\n\n查看不同级别的配置文件：\n`git config --system --list   #查看系统config`\n`git config --global  --list   #查看当前用户（global）配置`\n\nGit相关的配置文件（可以直接编辑配置文件，通过命令设置后会响应到这里）：\n\n1）、Git\\etc\\gitconfig  ：Git 安装目录下的 gitconfig     --system 系统级\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b7cd83313c634f0b8dc6f51ee7a9108c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n2）、C:\\Users\\Administrator\\ .gitconfig    只适用于当前登录用户的配置  --global 全局\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a652d12f12ad4421b4352ac00cce15c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n设置用户名与邮箱（用户标识，必要）：\n当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：\n\n`git config --global user.name \"用户名称\"  #名称`\n`git config --global user.email 用户邮箱   #邮箱`\n\n只需要做一次这个设置，如果你传递了--global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要--global选项。总之--global为全局配置，不加为某个项目的特定配置。\n\n# 五：Git基本理论（重要）\n**三个区域**\n\nGit本地有三个工作区域：工作目录（Working Directory）、暂存区(Stage/Index)、资源库(Repository或Git Directory)。如果在加上远程的git仓库(Remote Directory)就可以分为四个工作区域。文件在这四个区域之间的转换关系如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/15d680f6a5774dc194fc45e5955e423b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n+ Workspace：工作区，就是你平时存放项目代码的地方\n+ Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息\n+ Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本\n+ Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换\n\n本地的三个区域确切的说应该是git仓库中HEAD指向的版本：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/fdf64537cd7f49d9b2f13e2430c811c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n+ Directory：使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。\n+ WorkSpace：需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间。\n+ .git：存放Git管理信息的目录，初始化仓库的时候自动创建。\n+ Index/Stage：暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。\n+ Local Repo：本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。\n+ Stash：隐藏，是一个工作状态保存栈，用于保存/恢复WorkSpace中的临时状态。\n\n\n**工作流程**\n\ngit的工作流程一般是这样的：\n\n１、在工作目录中添加、修改文件；\n\n２、将需要进行版本管理的文件放入暂存区域；\n\n３、将暂存区域的文件提交到git仓库。\n\n因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/55e2e0f70334456bbf05b7a5d7496100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n# 六：Git项目搭建\n**创建工作目录与常用指令**\n工作目录（WorkSpace)一般就是你希望Git帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。\n\n日常使用只要记住下图6个命令：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/bfbb0c482f2e435ab5d5ea39bd6e84f5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**本地仓库搭建**\n\n创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。\n\n**创建全新的仓库**\n创建全新的仓库，需要用GIT管理的项目的根目录执行:  `$ git init`\n执行后可以看到，在项目目录多出了一个.git目录，关于版本等的所有信息都在这个目录里面。但.git文件夹是隐藏文件夹，需要勾选查看隐藏文件夹才能看到。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cc8d33e828ee443b8e33c7edc376d62b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**克隆远程仓库**\n另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！\n克隆一个项目和它的整个代码历史(版本信息) ： `$ git clone url `\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f0934ee863994cfa8a00e1262ee412e1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/21e59eb3597445368e151384adcd544d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n# 七：Git基础操作\n**文件的四种状态**\n版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。\n+ Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.\n+ Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件\n+ Modified: 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !\n+ Staged: 暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified\n\n**查看文件状态**\n上面说文件有4种状态，通过如下命令可以查看到文件的状态：\n+ `git status [filename]`  查看指定文件状态\n+ `git status`     查看所有文件状态\n+ `git add [filename]`   添加指定文件到暂存区\n+ `git add .`                  添加所有文件到暂存区\n+ `git commit -m \"消息\"`         提交暂存区中的内容到本地仓库 -m 提交信息\n\n\n**忽略文件**\n有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等\n在主目录下建立\".gitignore\"文件，此文件有如下规则：\n+ 忽略文件中的空行或以井号（#）开始的行将会被忽略。\n+ 可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,...}）代表可选的字符串等。\n+ 如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。\n+ 如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。\n+ 如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。\n\n示例：\n```\n*.txt        #忽略所有 .txt结尾的文件,这样的话上传就不会被选中！\n!lib.txt     #但lib.txt除外\n/temp        #仅忽略项目根目录下的TODO文件,不包括其它目录temp\nbuild/       #忽略build/目录下的所有文件\ndoc/*.txt    #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt\n```\n以下是vue项目中的\".gitignore\"文件配置：\n\n```\n.DS_Store\nnode_modules\n/dist\n\n\n# local env files\n.env.local\n.env.*.local\n\n# Log files\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\n\n# Editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n```\n\n# 八：使用码云\n设置本机绑定SSH公钥，实现免密码登录（免密码登录，这一步挺重要的，码云是远程仓库，我们是平时工作在本地仓库)\n\n进入 C:\\Users\\Administrator\\.ssh 目录，生成公钥，使用命令`ssh-keygen`，或者使用加上加密算法：`ssh-keygen -t rsa`，生成完公钥后会出现两个文件，分别是自己的私钥和公钥。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/55d4a8434f204495859f35c4d0ff8b66.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n用文本编辑器打开公钥文件，将公钥信息public key添加到码云账户中即可！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/01b17348d83642d5b442633886d81855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)然后在git上新建仓库，并且将其克隆到本地：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0a76bf11c82d440caeff689e7805801a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/ea3615ce3541430ab67bca8c6b2cd5dc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**IDEA中集成Git**\n这里我以vscode为例，我新建一个vue项目，然后将之前克隆的文件全部粘贴进脚手架，同名文件可以直接选择覆盖。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/764d3b327f7f48c78ab79a138d9fa6e1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/97f29099a6f7436898bad34b04d98897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)上面的消息输入框可以填入自己的更改内容描述，方便别人阅读代码。提交时先暂存所有更改，然后提交到本地暂存，然后直接推送。一次git提交就完成了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1916dc5dd78b47698a342fad01e13f20.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**GIT分支**\n\n分支在GIT中相对较难，分支就是科幻电影里面的平行宇宙，如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，我们就需要处理一些问题了！\n\ngit分支中常用指令：\n+ 列出所有本地分支          git branch\n+ 列出所有远程分支          git branch -r\n+ 新建一个分支，但依然停留在当前分支          git branch [branch-name]\n+ 新建一个分支，并切换到该分支    git checkout -b [branch]\n+ 合并指定分支到当前分支   $ git merge [branch]\n+ 删除分支   $ git branch -d [branch-name]\n+ 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n\n参考文章：[狂神说Git](https://mp.weixin.qq.com/s/Bf7uVhGiu47uOELjmC5uXQ)","source":"_posts/other/git操作.md","raw":"---\ntitle: git操作\ndate: 2021-08-15 20:58:58\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/006.jpg\ntags: \n  - git\ncategories: 其他\n---\n\n# 一：版本控制\n### 1) 什么是版本控制\n版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。简单说就是用于管理多人协同开发项目的技术。\n\n版本控制的好处：\n+ 实现跨区域多人协同开发\n+ 追踪和记载一个或者多个文件的历史记录\n+ 组织和保护你的源代码和文档\n+ 统计工作量\n+ 并行开发、提高开发效率\n+ 跟踪记录整个软件的开发过程\n+ 减轻开发人员的负担，节省时间，同时降低人为错误\n\n\n\n没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。\n\n主流的版本控制器有如下这些：\n+ Git\n+ SVN（Subversion）\n+ CVS（Concurrent Versions System）\n+ VSS（Micorosoft Visual SourceSafe）\n+ TFS（Team Foundation Server）\n+ Visual Studio Online\n\n版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是Git与SVN。\n\n### 2) 版本控制分类\n**本地版本控制**\n记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如RCS。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c545e94743ed433782af256febdd8936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**集中版本控制**\n所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/03f9906d7cd04310b23a90bb65731fe5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS。\n\n**分布式版本控制**\n每个人都拥有全部的代码！安全隐患！\n所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时push到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。\n不会因为服务器损坏或者网络问题，造成不能工作的情况！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ce54210959ff4b2dac16106f90625867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**Git与SVN的主要区别**\n\nSVN是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。\n\nGit是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git可以直接看到更新了哪些代码和文件！\n\nGit是目前世界上最先进的分布式版本控制系统。\n\n# 二：关于Git\n安装成功后在开始菜单中会有Git项，菜单下有3个程序(任意文件夹下右键也可以看到对应的程序)：\n\nGit Bash：Unix与Linux风格的命令行，使用最多，推荐最多\n\nGit CMD：Windows风格的命令行\n\nGit GUI：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令\n\n# 三：常用的Linux命令\n\n> cd : 改变目录。\n\n> cd . . 回退到上一个目录，直接cd进入默认目录\n\n> pwd : 显示当前所在的目录路径。\n\n> ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。\n\n> touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。\n\n> rm:  删除一个文件, rm index.js 就会把index.js文件删除。\n\n> mkdir:  新建一个目录,就是新建一个文件夹。\n\n> rm -r :  删除一个文件夹, rm -r src 删除src目录\n> rm -rf / 切勿在Linux中尝试！删除电脑中全部文件！\n\n> mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。\n\n> reset 重新初始化终端/清屏。\n\n> clear 清屏。\n\n> history 查看命令历史。\n\n> help 帮助。\n\n> exit 退出。\n\n> #表示注释\n\n\n# 四：Git配置\n\n查看配置：\n`git config -l`\n\n查看不同级别的配置文件：\n`git config --system --list   #查看系统config`\n`git config --global  --list   #查看当前用户（global）配置`\n\nGit相关的配置文件（可以直接编辑配置文件，通过命令设置后会响应到这里）：\n\n1）、Git\\etc\\gitconfig  ：Git 安装目录下的 gitconfig     --system 系统级\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b7cd83313c634f0b8dc6f51ee7a9108c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n2）、C:\\Users\\Administrator\\ .gitconfig    只适用于当前登录用户的配置  --global 全局\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a652d12f12ad4421b4352ac00cce15c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n设置用户名与邮箱（用户标识，必要）：\n当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：\n\n`git config --global user.name \"用户名称\"  #名称`\n`git config --global user.email 用户邮箱   #邮箱`\n\n只需要做一次这个设置，如果你传递了--global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要--global选项。总之--global为全局配置，不加为某个项目的特定配置。\n\n# 五：Git基本理论（重要）\n**三个区域**\n\nGit本地有三个工作区域：工作目录（Working Directory）、暂存区(Stage/Index)、资源库(Repository或Git Directory)。如果在加上远程的git仓库(Remote Directory)就可以分为四个工作区域。文件在这四个区域之间的转换关系如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/15d680f6a5774dc194fc45e5955e423b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n+ Workspace：工作区，就是你平时存放项目代码的地方\n+ Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息\n+ Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本\n+ Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换\n\n本地的三个区域确切的说应该是git仓库中HEAD指向的版本：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/fdf64537cd7f49d9b2f13e2430c811c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n+ Directory：使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。\n+ WorkSpace：需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间。\n+ .git：存放Git管理信息的目录，初始化仓库的时候自动创建。\n+ Index/Stage：暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。\n+ Local Repo：本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。\n+ Stash：隐藏，是一个工作状态保存栈，用于保存/恢复WorkSpace中的临时状态。\n\n\n**工作流程**\n\ngit的工作流程一般是这样的：\n\n１、在工作目录中添加、修改文件；\n\n２、将需要进行版本管理的文件放入暂存区域；\n\n３、将暂存区域的文件提交到git仓库。\n\n因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/55e2e0f70334456bbf05b7a5d7496100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n# 六：Git项目搭建\n**创建工作目录与常用指令**\n工作目录（WorkSpace)一般就是你希望Git帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。\n\n日常使用只要记住下图6个命令：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/bfbb0c482f2e435ab5d5ea39bd6e84f5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**本地仓库搭建**\n\n创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。\n\n**创建全新的仓库**\n创建全新的仓库，需要用GIT管理的项目的根目录执行:  `$ git init`\n执行后可以看到，在项目目录多出了一个.git目录，关于版本等的所有信息都在这个目录里面。但.git文件夹是隐藏文件夹，需要勾选查看隐藏文件夹才能看到。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cc8d33e828ee443b8e33c7edc376d62b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**克隆远程仓库**\n另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！\n克隆一个项目和它的整个代码历史(版本信息) ： `$ git clone url `\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f0934ee863994cfa8a00e1262ee412e1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/21e59eb3597445368e151384adcd544d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n# 七：Git基础操作\n**文件的四种状态**\n版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。\n+ Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.\n+ Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件\n+ Modified: 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !\n+ Staged: 暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified\n\n**查看文件状态**\n上面说文件有4种状态，通过如下命令可以查看到文件的状态：\n+ `git status [filename]`  查看指定文件状态\n+ `git status`     查看所有文件状态\n+ `git add [filename]`   添加指定文件到暂存区\n+ `git add .`                  添加所有文件到暂存区\n+ `git commit -m \"消息\"`         提交暂存区中的内容到本地仓库 -m 提交信息\n\n\n**忽略文件**\n有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等\n在主目录下建立\".gitignore\"文件，此文件有如下规则：\n+ 忽略文件中的空行或以井号（#）开始的行将会被忽略。\n+ 可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,...}）代表可选的字符串等。\n+ 如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。\n+ 如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。\n+ 如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。\n\n示例：\n```\n*.txt        #忽略所有 .txt结尾的文件,这样的话上传就不会被选中！\n!lib.txt     #但lib.txt除外\n/temp        #仅忽略项目根目录下的TODO文件,不包括其它目录temp\nbuild/       #忽略build/目录下的所有文件\ndoc/*.txt    #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt\n```\n以下是vue项目中的\".gitignore\"文件配置：\n\n```\n.DS_Store\nnode_modules\n/dist\n\n\n# local env files\n.env.local\n.env.*.local\n\n# Log files\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\n\n# Editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n```\n\n# 八：使用码云\n设置本机绑定SSH公钥，实现免密码登录（免密码登录，这一步挺重要的，码云是远程仓库，我们是平时工作在本地仓库)\n\n进入 C:\\Users\\Administrator\\.ssh 目录，生成公钥，使用命令`ssh-keygen`，或者使用加上加密算法：`ssh-keygen -t rsa`，生成完公钥后会出现两个文件，分别是自己的私钥和公钥。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/55d4a8434f204495859f35c4d0ff8b66.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n用文本编辑器打开公钥文件，将公钥信息public key添加到码云账户中即可！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/01b17348d83642d5b442633886d81855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)然后在git上新建仓库，并且将其克隆到本地：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0a76bf11c82d440caeff689e7805801a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/ea3615ce3541430ab67bca8c6b2cd5dc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**IDEA中集成Git**\n这里我以vscode为例，我新建一个vue项目，然后将之前克隆的文件全部粘贴进脚手架，同名文件可以直接选择覆盖。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/764d3b327f7f48c78ab79a138d9fa6e1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/97f29099a6f7436898bad34b04d98897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)上面的消息输入框可以填入自己的更改内容描述，方便别人阅读代码。提交时先暂存所有更改，然后提交到本地暂存，然后直接推送。一次git提交就完成了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1916dc5dd78b47698a342fad01e13f20.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**GIT分支**\n\n分支在GIT中相对较难，分支就是科幻电影里面的平行宇宙，如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，我们就需要处理一些问题了！\n\ngit分支中常用指令：\n+ 列出所有本地分支          git branch\n+ 列出所有远程分支          git branch -r\n+ 新建一个分支，但依然停留在当前分支          git branch [branch-name]\n+ 新建一个分支，并切换到该分支    git checkout -b [branch]\n+ 合并指定分支到当前分支   $ git merge [branch]\n+ 删除分支   $ git branch -d [branch-name]\n+ 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n\n参考文章：[狂神说Git](https://mp.weixin.qq.com/s/Bf7uVhGiu47uOELjmC5uXQ)","slug":"other/git操作","published":1,"updated":"2021-12-03T14:58:15.207Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958c8004qasdadoxv2dkq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：版本控制\"><a href=\"#一：版本控制\" class=\"headerlink\" title=\"一：版本控制\"></a>一：版本控制</h1><h3 id=\"1-什么是版本控制\"><a href=\"#1-什么是版本控制\" class=\"headerlink\" title=\"1) 什么是版本控制\"></a>1) 什么是版本控制</h3><p>版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。简单说就是用于管理多人协同开发项目的技术。</p>\n<p>版本控制的好处：</p>\n<ul>\n<li>实现跨区域多人协同开发</li>\n<li>追踪和记载一个或者多个文件的历史记录</li>\n<li>组织和保护你的源代码和文档</li>\n<li>统计工作量</li>\n<li>并行开发、提高开发效率</li>\n<li>跟踪记录整个软件的开发过程</li>\n<li>减轻开发人员的负担，节省时间，同时降低人为错误</li>\n</ul>\n<p>没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。</p>\n<p>主流的版本控制器有如下这些：</p>\n<ul>\n<li>Git</li>\n<li>SVN（Subversion）</li>\n<li>CVS（Concurrent Versions System）</li>\n<li>VSS（Micorosoft Visual SourceSafe）</li>\n<li>TFS（Team Foundation Server）</li>\n<li>Visual Studio Online</li>\n</ul>\n<p>版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是Git与SVN。</p>\n<h3 id=\"2-版本控制分类\"><a href=\"#2-版本控制分类\" class=\"headerlink\" title=\"2) 版本控制分类\"></a>2) 版本控制分类</h3><p><strong>本地版本控制</strong><br>记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如RCS。<br><img src=\"https://img-blog.csdnimg.cn/c545e94743ed433782af256febdd8936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>集中版本控制</strong><br>所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改</p>\n<p><img src=\"https://img-blog.csdnimg.cn/03f9906d7cd04310b23a90bb65731fe5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS。</p>\n<p><strong>分布式版本控制</strong><br>每个人都拥有全部的代码！安全隐患！<br>所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时push到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。<br>不会因为服务器损坏或者网络问题，造成不能工作的情况！<br><img src=\"https://img-blog.csdnimg.cn/ce54210959ff4b2dac16106f90625867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>Git与SVN的主要区别</strong></p>\n<p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。</p>\n<p>Git是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git可以直接看到更新了哪些代码和文件！</p>\n<p>Git是目前世界上最先进的分布式版本控制系统。</p>\n<h1 id=\"二：关于Git\"><a href=\"#二：关于Git\" class=\"headerlink\" title=\"二：关于Git\"></a>二：关于Git</h1><p>安装成功后在开始菜单中会有Git项，菜单下有3个程序(任意文件夹下右键也可以看到对应的程序)：</p>\n<p>Git Bash：Unix与Linux风格的命令行，使用最多，推荐最多</p>\n<p>Git CMD：Windows风格的命令行</p>\n<p>Git GUI：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令</p>\n<h1 id=\"三：常用的Linux命令\"><a href=\"#三：常用的Linux命令\" class=\"headerlink\" title=\"三：常用的Linux命令\"></a>三：常用的Linux命令</h1><blockquote>\n<p>cd : 改变目录。</p>\n</blockquote>\n<blockquote>\n<p>cd . . 回退到上一个目录，直接cd进入默认目录</p>\n</blockquote>\n<blockquote>\n<p>pwd : 显示当前所在的目录路径。</p>\n</blockquote>\n<blockquote>\n<p>ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。</p>\n</blockquote>\n<blockquote>\n<p>touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。</p>\n</blockquote>\n<blockquote>\n<p>rm:  删除一个文件, rm index.js 就会把index.js文件删除。</p>\n</blockquote>\n<blockquote>\n<p>mkdir:  新建一个目录,就是新建一个文件夹。</p>\n</blockquote>\n<blockquote>\n<p>rm -r :  删除一个文件夹, rm -r src 删除src目录<br>rm -rf / 切勿在Linux中尝试！删除电脑中全部文件！</p>\n</blockquote>\n<blockquote>\n<p>mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。</p>\n</blockquote>\n<blockquote>\n<p>reset 重新初始化终端/清屏。</p>\n</blockquote>\n<blockquote>\n<p>clear 清屏。</p>\n</blockquote>\n<blockquote>\n<p>history 查看命令历史。</p>\n</blockquote>\n<blockquote>\n<p>help 帮助。</p>\n</blockquote>\n<blockquote>\n<p>exit 退出。</p>\n</blockquote>\n<blockquote>\n<p>#表示注释</p>\n</blockquote>\n<h1 id=\"四：Git配置\"><a href=\"#四：Git配置\" class=\"headerlink\" title=\"四：Git配置\"></a>四：Git配置</h1><p>查看配置：<br><code>git config -l</code></p>\n<p>查看不同级别的配置文件：<br><code>git config --system --list   #查看系统config</code><br><code>git config --global  --list   #查看当前用户（global）配置</code></p>\n<p>Git相关的配置文件（可以直接编辑配置文件，通过命令设置后会响应到这里）：</p>\n<p>1）、Git\\etc\\gitconfig  ：Git 安装目录下的 gitconfig     –system 系统级<br><img src=\"https://img-blog.csdnimg.cn/b7cd83313c634f0b8dc6f51ee7a9108c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2）、C:\\Users\\Administrator\\ .gitconfig    只适用于当前登录用户的配置  –global 全局<br><img src=\"https://img-blog.csdnimg.cn/a652d12f12ad4421b4352ac00cce15c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>设置用户名与邮箱（用户标识，必要）：<br>当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：</p>\n<p><code>git config --global user.name &quot;用户名称&quot;  #名称</code><br><code>git config --global user.email 用户邮箱   #邮箱</code></p>\n<p>只需要做一次这个设置，如果你传递了–global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要–global选项。总之–global为全局配置，不加为某个项目的特定配置。</p>\n<h1 id=\"五：Git基本理论（重要）\"><a href=\"#五：Git基本理论（重要）\" class=\"headerlink\" title=\"五：Git基本理论（重要）\"></a>五：Git基本理论（重要）</h1><p><strong>三个区域</strong></p>\n<p>Git本地有三个工作区域：工作目录（Working Directory）、暂存区(Stage/Index)、资源库(Repository或Git Directory)。如果在加上远程的git仓库(Remote Directory)就可以分为四个工作区域。文件在这四个区域之间的转换关系如下：<br><img src=\"https://img-blog.csdnimg.cn/15d680f6a5774dc194fc45e5955e423b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Workspace：工作区，就是你平时存放项目代码的地方</li>\n<li>Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息</li>\n<li>Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本</li>\n<li>Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换</li>\n</ul>\n<p>本地的三个区域确切的说应该是git仓库中HEAD指向的版本：<br><img src=\"https://img-blog.csdnimg.cn/fdf64537cd7f49d9b2f13e2430c811c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Directory：使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。</li>\n<li>WorkSpace：需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间。</li>\n<li>.git：存放Git管理信息的目录，初始化仓库的时候自动创建。</li>\n<li>Index/Stage：暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。</li>\n<li>Local Repo：本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。</li>\n<li>Stash：隐藏，是一个工作状态保存栈，用于保存/恢复WorkSpace中的临时状态。</li>\n</ul>\n<p><strong>工作流程</strong></p>\n<p>git的工作流程一般是这样的：</p>\n<p>１、在工作目录中添加、修改文件；</p>\n<p>２、将需要进行版本管理的文件放入暂存区域；</p>\n<p>３、将暂存区域的文件提交到git仓库。</p>\n<p>因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)<br><img src=\"https://img-blog.csdnimg.cn/55e2e0f70334456bbf05b7a5d7496100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六：Git项目搭建\"><a href=\"#六：Git项目搭建\" class=\"headerlink\" title=\"六：Git项目搭建\"></a>六：Git项目搭建</h1><p><strong>创建工作目录与常用指令</strong><br>工作目录（WorkSpace)一般就是你希望Git帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。</p>\n<p>日常使用只要记住下图6个命令：<br><img src=\"https://img-blog.csdnimg.cn/bfbb0c482f2e435ab5d5ea39bd6e84f5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>本地仓库搭建</strong></p>\n<p>创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。</p>\n<p><strong>创建全新的仓库</strong><br>创建全新的仓库，需要用GIT管理的项目的根目录执行:  <code>$ git init</code><br>执行后可以看到，在项目目录多出了一个.git目录，关于版本等的所有信息都在这个目录里面。但.git文件夹是隐藏文件夹，需要勾选查看隐藏文件夹才能看到。<br><img src=\"https://img-blog.csdnimg.cn/cc8d33e828ee443b8e33c7edc376d62b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>克隆远程仓库</strong><br>另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！<br>克隆一个项目和它的整个代码历史(版本信息) ： <code>$ git clone url </code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/f0934ee863994cfa8a00e1262ee412e1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/21e59eb3597445368e151384adcd544d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：Git基础操作\"><a href=\"#七：Git基础操作\" class=\"headerlink\" title=\"七：Git基础操作\"></a>七：Git基础操作</h1><p><strong>文件的四种状态</strong><br>版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。</p>\n<ul>\n<li>Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.</li>\n<li>Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件</li>\n<li>Modified: 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !</li>\n<li>Staged: 暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified</li>\n</ul>\n<p><strong>查看文件状态</strong><br>上面说文件有4种状态，通过如下命令可以查看到文件的状态：</p>\n<ul>\n<li><code>git status [filename]</code>  查看指定文件状态</li>\n<li><code>git status</code>     查看所有文件状态</li>\n<li><code>git add [filename]</code>   添加指定文件到暂存区</li>\n<li><code>git add .</code>                  添加所有文件到暂存区</li>\n<li><code>git commit -m &quot;消息&quot;</code>         提交暂存区中的内容到本地仓库 -m 提交信息</li>\n</ul>\n<p><strong>忽略文件</strong><br>有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等<br>在主目录下建立”.gitignore”文件，此文件有如下规则：</p>\n<ul>\n<li>忽略文件中的空行或以井号（#）开始的行将会被忽略。</li>\n<li>可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</li>\n<li>如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。</li>\n<li>如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</li>\n<li>如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.txt        #忽略所有 .txt结尾的文件,这样的话上传就不会被选中！</span><br><span class=\"line\">!lib.txt     #但lib.txt除外</span><br><span class=\"line\">/temp        #仅忽略项目根目录下的TODO文件,不包括其它目录temp</span><br><span class=\"line\">build/       #忽略build/目录下的所有文件</span><br><span class=\"line\">doc/*.txt    #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span><br></pre></td></tr></table></figure>\n<p>以下是vue项目中的”.gitignore”文件配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.DS_Store</span><br><span class=\"line\">node_modules</span><br><span class=\"line\">/dist</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># local env files</span><br><span class=\"line\">.env.local</span><br><span class=\"line\">.env.*.local</span><br><span class=\"line\"></span><br><span class=\"line\"># Log files</span><br><span class=\"line\">npm-debug.log*</span><br><span class=\"line\">yarn-debug.log*</span><br><span class=\"line\">yarn-error.log*</span><br><span class=\"line\">pnpm-debug.log*</span><br><span class=\"line\"></span><br><span class=\"line\"># Editor directories and files</span><br><span class=\"line\">.idea</span><br><span class=\"line\">.vscode</span><br><span class=\"line\">*.suo</span><br><span class=\"line\">*.ntvs*</span><br><span class=\"line\">*.njsproj</span><br><span class=\"line\">*.sln</span><br><span class=\"line\">*.sw?</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"八：使用码云\"><a href=\"#八：使用码云\" class=\"headerlink\" title=\"八：使用码云\"></a>八：使用码云</h1><p>设置本机绑定SSH公钥，实现免密码登录（免密码登录，这一步挺重要的，码云是远程仓库，我们是平时工作在本地仓库)</p>\n<p>进入 C:\\Users\\Administrator.ssh 目录，生成公钥，使用命令<code>ssh-keygen</code>，或者使用加上加密算法：<code>ssh-keygen -t rsa</code>，生成完公钥后会出现两个文件，分别是自己的私钥和公钥。<br><img src=\"https://img-blog.csdnimg.cn/55d4a8434f204495859f35c4d0ff8b66.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>用文本编辑器打开公钥文件，将公钥信息public key添加到码云账户中即可！<br><img src=\"https://img-blog.csdnimg.cn/01b17348d83642d5b442633886d81855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">然后在git上新建仓库，并且将其克隆到本地：<br><img src=\"https://img-blog.csdnimg.cn/0a76bf11c82d440caeff689e7805801a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/ea3615ce3541430ab67bca8c6b2cd5dc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>IDEA中集成Git</strong><br>这里我以vscode为例，我新建一个vue项目，然后将之前克隆的文件全部粘贴进脚手架，同名文件可以直接选择覆盖。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/764d3b327f7f48c78ab79a138d9fa6e1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/97f29099a6f7436898bad34b04d98897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">上面的消息输入框可以填入自己的更改内容描述，方便别人阅读代码。提交时先暂存所有更改，然后提交到本地暂存，然后直接推送。一次git提交就完成了。<br><img src=\"https://img-blog.csdnimg.cn/1916dc5dd78b47698a342fad01e13f20.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>GIT分支</strong></p>\n<p>分支在GIT中相对较难，分支就是科幻电影里面的平行宇宙，如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，我们就需要处理一些问题了！</p>\n<p>git分支中常用指令：</p>\n<ul>\n<li>列出所有本地分支          git branch</li>\n<li>列出所有远程分支          git branch -r</li>\n<li>新建一个分支，但依然停留在当前分支          git branch [branch-name]</li>\n<li>新建一个分支，并切换到该分支    git checkout -b [branch]</li>\n<li>合并指定分支到当前分支   $ git merge [branch]</li>\n<li>删除分支   $ git branch -d [branch-name]</li>\n<li>删除远程分支<br>$ git push origin –delete [branch-name]<br>$ git branch -dr [remote/branch]</li>\n</ul>\n<p>参考文章：<a href=\"https://mp.weixin.qq.com/s/Bf7uVhGiu47uOELjmC5uXQ\">狂神说Git</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：版本控制\"><a href=\"#一：版本控制\" class=\"headerlink\" title=\"一：版本控制\"></a>一：版本控制</h1><h3 id=\"1-什么是版本控制\"><a href=\"#1-什么是版本控制\" class=\"headerlink\" title=\"1) 什么是版本控制\"></a>1) 什么是版本控制</h3><p>版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。简单说就是用于管理多人协同开发项目的技术。</p>\n<p>版本控制的好处：</p>\n<ul>\n<li>实现跨区域多人协同开发</li>\n<li>追踪和记载一个或者多个文件的历史记录</li>\n<li>组织和保护你的源代码和文档</li>\n<li>统计工作量</li>\n<li>并行开发、提高开发效率</li>\n<li>跟踪记录整个软件的开发过程</li>\n<li>减轻开发人员的负担，节省时间，同时降低人为错误</li>\n</ul>\n<p>没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。</p>\n<p>主流的版本控制器有如下这些：</p>\n<ul>\n<li>Git</li>\n<li>SVN（Subversion）</li>\n<li>CVS（Concurrent Versions System）</li>\n<li>VSS（Micorosoft Visual SourceSafe）</li>\n<li>TFS（Team Foundation Server）</li>\n<li>Visual Studio Online</li>\n</ul>\n<p>版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是Git与SVN。</p>\n<h3 id=\"2-版本控制分类\"><a href=\"#2-版本控制分类\" class=\"headerlink\" title=\"2) 版本控制分类\"></a>2) 版本控制分类</h3><p><strong>本地版本控制</strong><br>记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如RCS。<br><img src=\"https://img-blog.csdnimg.cn/c545e94743ed433782af256febdd8936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>集中版本控制</strong><br>所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改</p>\n<p><img src=\"https://img-blog.csdnimg.cn/03f9906d7cd04310b23a90bb65731fe5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS。</p>\n<p><strong>分布式版本控制</strong><br>每个人都拥有全部的代码！安全隐患！<br>所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时push到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。<br>不会因为服务器损坏或者网络问题，造成不能工作的情况！<br><img src=\"https://img-blog.csdnimg.cn/ce54210959ff4b2dac16106f90625867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>Git与SVN的主要区别</strong></p>\n<p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。</p>\n<p>Git是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git可以直接看到更新了哪些代码和文件！</p>\n<p>Git是目前世界上最先进的分布式版本控制系统。</p>\n<h1 id=\"二：关于Git\"><a href=\"#二：关于Git\" class=\"headerlink\" title=\"二：关于Git\"></a>二：关于Git</h1><p>安装成功后在开始菜单中会有Git项，菜单下有3个程序(任意文件夹下右键也可以看到对应的程序)：</p>\n<p>Git Bash：Unix与Linux风格的命令行，使用最多，推荐最多</p>\n<p>Git CMD：Windows风格的命令行</p>\n<p>Git GUI：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令</p>\n<h1 id=\"三：常用的Linux命令\"><a href=\"#三：常用的Linux命令\" class=\"headerlink\" title=\"三：常用的Linux命令\"></a>三：常用的Linux命令</h1><blockquote>\n<p>cd : 改变目录。</p>\n</blockquote>\n<blockquote>\n<p>cd . . 回退到上一个目录，直接cd进入默认目录</p>\n</blockquote>\n<blockquote>\n<p>pwd : 显示当前所在的目录路径。</p>\n</blockquote>\n<blockquote>\n<p>ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。</p>\n</blockquote>\n<blockquote>\n<p>touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。</p>\n</blockquote>\n<blockquote>\n<p>rm:  删除一个文件, rm index.js 就会把index.js文件删除。</p>\n</blockquote>\n<blockquote>\n<p>mkdir:  新建一个目录,就是新建一个文件夹。</p>\n</blockquote>\n<blockquote>\n<p>rm -r :  删除一个文件夹, rm -r src 删除src目录<br>rm -rf / 切勿在Linux中尝试！删除电脑中全部文件！</p>\n</blockquote>\n<blockquote>\n<p>mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。</p>\n</blockquote>\n<blockquote>\n<p>reset 重新初始化终端/清屏。</p>\n</blockquote>\n<blockquote>\n<p>clear 清屏。</p>\n</blockquote>\n<blockquote>\n<p>history 查看命令历史。</p>\n</blockquote>\n<blockquote>\n<p>help 帮助。</p>\n</blockquote>\n<blockquote>\n<p>exit 退出。</p>\n</blockquote>\n<blockquote>\n<p>#表示注释</p>\n</blockquote>\n<h1 id=\"四：Git配置\"><a href=\"#四：Git配置\" class=\"headerlink\" title=\"四：Git配置\"></a>四：Git配置</h1><p>查看配置：<br><code>git config -l</code></p>\n<p>查看不同级别的配置文件：<br><code>git config --system --list   #查看系统config</code><br><code>git config --global  --list   #查看当前用户（global）配置</code></p>\n<p>Git相关的配置文件（可以直接编辑配置文件，通过命令设置后会响应到这里）：</p>\n<p>1）、Git\\etc\\gitconfig  ：Git 安装目录下的 gitconfig     –system 系统级<br><img src=\"https://img-blog.csdnimg.cn/b7cd83313c634f0b8dc6f51ee7a9108c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2）、C:\\Users\\Administrator\\ .gitconfig    只适用于当前登录用户的配置  –global 全局<br><img src=\"https://img-blog.csdnimg.cn/a652d12f12ad4421b4352ac00cce15c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>设置用户名与邮箱（用户标识，必要）：<br>当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：</p>\n<p><code>git config --global user.name &quot;用户名称&quot;  #名称</code><br><code>git config --global user.email 用户邮箱   #邮箱</code></p>\n<p>只需要做一次这个设置，如果你传递了–global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要–global选项。总之–global为全局配置，不加为某个项目的特定配置。</p>\n<h1 id=\"五：Git基本理论（重要）\"><a href=\"#五：Git基本理论（重要）\" class=\"headerlink\" title=\"五：Git基本理论（重要）\"></a>五：Git基本理论（重要）</h1><p><strong>三个区域</strong></p>\n<p>Git本地有三个工作区域：工作目录（Working Directory）、暂存区(Stage/Index)、资源库(Repository或Git Directory)。如果在加上远程的git仓库(Remote Directory)就可以分为四个工作区域。文件在这四个区域之间的转换关系如下：<br><img src=\"https://img-blog.csdnimg.cn/15d680f6a5774dc194fc45e5955e423b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Workspace：工作区，就是你平时存放项目代码的地方</li>\n<li>Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息</li>\n<li>Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本</li>\n<li>Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换</li>\n</ul>\n<p>本地的三个区域确切的说应该是git仓库中HEAD指向的版本：<br><img src=\"https://img-blog.csdnimg.cn/fdf64537cd7f49d9b2f13e2430c811c0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Directory：使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。</li>\n<li>WorkSpace：需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间。</li>\n<li>.git：存放Git管理信息的目录，初始化仓库的时候自动创建。</li>\n<li>Index/Stage：暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。</li>\n<li>Local Repo：本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。</li>\n<li>Stash：隐藏，是一个工作状态保存栈，用于保存/恢复WorkSpace中的临时状态。</li>\n</ul>\n<p><strong>工作流程</strong></p>\n<p>git的工作流程一般是这样的：</p>\n<p>１、在工作目录中添加、修改文件；</p>\n<p>２、将需要进行版本管理的文件放入暂存区域；</p>\n<p>３、将暂存区域的文件提交到git仓库。</p>\n<p>因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)<br><img src=\"https://img-blog.csdnimg.cn/55e2e0f70334456bbf05b7a5d7496100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六：Git项目搭建\"><a href=\"#六：Git项目搭建\" class=\"headerlink\" title=\"六：Git项目搭建\"></a>六：Git项目搭建</h1><p><strong>创建工作目录与常用指令</strong><br>工作目录（WorkSpace)一般就是你希望Git帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。</p>\n<p>日常使用只要记住下图6个命令：<br><img src=\"https://img-blog.csdnimg.cn/bfbb0c482f2e435ab5d5ea39bd6e84f5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>本地仓库搭建</strong></p>\n<p>创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。</p>\n<p><strong>创建全新的仓库</strong><br>创建全新的仓库，需要用GIT管理的项目的根目录执行:  <code>$ git init</code><br>执行后可以看到，在项目目录多出了一个.git目录，关于版本等的所有信息都在这个目录里面。但.git文件夹是隐藏文件夹，需要勾选查看隐藏文件夹才能看到。<br><img src=\"https://img-blog.csdnimg.cn/cc8d33e828ee443b8e33c7edc376d62b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>克隆远程仓库</strong><br>另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！<br>克隆一个项目和它的整个代码历史(版本信息) ： <code>$ git clone url </code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/f0934ee863994cfa8a00e1262ee412e1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/21e59eb3597445368e151384adcd544d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：Git基础操作\"><a href=\"#七：Git基础操作\" class=\"headerlink\" title=\"七：Git基础操作\"></a>七：Git基础操作</h1><p><strong>文件的四种状态</strong><br>版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。</p>\n<ul>\n<li>Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.</li>\n<li>Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件</li>\n<li>Modified: 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !</li>\n<li>Staged: 暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified</li>\n</ul>\n<p><strong>查看文件状态</strong><br>上面说文件有4种状态，通过如下命令可以查看到文件的状态：</p>\n<ul>\n<li><code>git status [filename]</code>  查看指定文件状态</li>\n<li><code>git status</code>     查看所有文件状态</li>\n<li><code>git add [filename]</code>   添加指定文件到暂存区</li>\n<li><code>git add .</code>                  添加所有文件到暂存区</li>\n<li><code>git commit -m &quot;消息&quot;</code>         提交暂存区中的内容到本地仓库 -m 提交信息</li>\n</ul>\n<p><strong>忽略文件</strong><br>有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等<br>在主目录下建立”.gitignore”文件，此文件有如下规则：</p>\n<ul>\n<li>忽略文件中的空行或以井号（#）开始的行将会被忽略。</li>\n<li>可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</li>\n<li>如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。</li>\n<li>如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</li>\n<li>如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.txt        #忽略所有 .txt结尾的文件,这样的话上传就不会被选中！</span><br><span class=\"line\">!lib.txt     #但lib.txt除外</span><br><span class=\"line\">/temp        #仅忽略项目根目录下的TODO文件,不包括其它目录temp</span><br><span class=\"line\">build/       #忽略build/目录下的所有文件</span><br><span class=\"line\">doc/*.txt    #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span><br></pre></td></tr></table></figure>\n<p>以下是vue项目中的”.gitignore”文件配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.DS_Store</span><br><span class=\"line\">node_modules</span><br><span class=\"line\">/dist</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># local env files</span><br><span class=\"line\">.env.local</span><br><span class=\"line\">.env.*.local</span><br><span class=\"line\"></span><br><span class=\"line\"># Log files</span><br><span class=\"line\">npm-debug.log*</span><br><span class=\"line\">yarn-debug.log*</span><br><span class=\"line\">yarn-error.log*</span><br><span class=\"line\">pnpm-debug.log*</span><br><span class=\"line\"></span><br><span class=\"line\"># Editor directories and files</span><br><span class=\"line\">.idea</span><br><span class=\"line\">.vscode</span><br><span class=\"line\">*.suo</span><br><span class=\"line\">*.ntvs*</span><br><span class=\"line\">*.njsproj</span><br><span class=\"line\">*.sln</span><br><span class=\"line\">*.sw?</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"八：使用码云\"><a href=\"#八：使用码云\" class=\"headerlink\" title=\"八：使用码云\"></a>八：使用码云</h1><p>设置本机绑定SSH公钥，实现免密码登录（免密码登录，这一步挺重要的，码云是远程仓库，我们是平时工作在本地仓库)</p>\n<p>进入 C:\\Users\\Administrator.ssh 目录，生成公钥，使用命令<code>ssh-keygen</code>，或者使用加上加密算法：<code>ssh-keygen -t rsa</code>，生成完公钥后会出现两个文件，分别是自己的私钥和公钥。<br><img src=\"https://img-blog.csdnimg.cn/55d4a8434f204495859f35c4d0ff8b66.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>用文本编辑器打开公钥文件，将公钥信息public key添加到码云账户中即可！<br><img src=\"https://img-blog.csdnimg.cn/01b17348d83642d5b442633886d81855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">然后在git上新建仓库，并且将其克隆到本地：<br><img src=\"https://img-blog.csdnimg.cn/0a76bf11c82d440caeff689e7805801a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/ea3615ce3541430ab67bca8c6b2cd5dc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>IDEA中集成Git</strong><br>这里我以vscode为例，我新建一个vue项目，然后将之前克隆的文件全部粘贴进脚手架，同名文件可以直接选择覆盖。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/764d3b327f7f48c78ab79a138d9fa6e1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/97f29099a6f7436898bad34b04d98897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">上面的消息输入框可以填入自己的更改内容描述，方便别人阅读代码。提交时先暂存所有更改，然后提交到本地暂存，然后直接推送。一次git提交就完成了。<br><img src=\"https://img-blog.csdnimg.cn/1916dc5dd78b47698a342fad01e13f20.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>GIT分支</strong></p>\n<p>分支在GIT中相对较难，分支就是科幻电影里面的平行宇宙，如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，我们就需要处理一些问题了！</p>\n<p>git分支中常用指令：</p>\n<ul>\n<li>列出所有本地分支          git branch</li>\n<li>列出所有远程分支          git branch -r</li>\n<li>新建一个分支，但依然停留在当前分支          git branch [branch-name]</li>\n<li>新建一个分支，并切换到该分支    git checkout -b [branch]</li>\n<li>合并指定分支到当前分支   $ git merge [branch]</li>\n<li>删除分支   $ git branch -d [branch-name]</li>\n<li>删除远程分支<br>$ git push origin –delete [branch-name]<br>$ git branch -dr [remote/branch]</li>\n</ul>\n<p>参考文章：<a href=\"https://mp.weixin.qq.com/s/Bf7uVhGiu47uOELjmC5uXQ\">狂神说Git</a></p>\n"},{"title":"使用java.io.File操作文件及文件夹","date":"2021-09-11T09:37:55.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/42.jpg","_content":"\n# 一：File类的概述\njava有个io包，java用于操作流的对象都在io包中，io流简单来说就是input和output流，io流主要是用来处理设备之间的数据传输，Java IO对于数据的操作都是通过流实现的。\n\n在整个java.io包中最重要的就是5个类和一个接口。5个类指的是File、OutputStream、InputStream、Writer、Reader；一个接口指的是Serializable。而这篇博客只会涉及到5个类中的File类。\n\njava.io.File类是文件和目录路径名的抽象表示，主要用于文件和目录的创建查找和删除等操作。在Java中，File 类是 java.io 包中唯一代表磁盘文件本身的对象，但是File 类不能访问文件内容本身，如果需要访问文件内容本身，则需要使用输入/输出流。\n\njava.io.File类的方法：\n+ 创建一个文件/文件夹\n+ 删除一个文件/文件夹\n+ 获取文件/文件夹\n+ 判断文件/文件夹是否存在\n+ 对文件夹进行遍历\n+ 获取文件大小\n\nFile类的学习主要是围绕三个单词：\n+ file: 文件\n+ directory: 文件夹/目录\n+ path: 路径\n\n# 二：File类的静态成员变量\n+ `static String pathSeparator` ：与系统有关的路径分隔符，为了方便，它被表示为一个字符串。\n+ `static char pathSeparatorChar` ：与系统有关的路径分隔符。\n+ `static String separator` ：与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。\n+ `static char separatorChar` ：与系统有关的默认名称分隔符\n\n路径分隔符和文件分隔符在不同操作系统下是不同的，路径分隔符在Windows下是\";\"，Linux下是\":\"，文件名称分隔符在Windows下是\"\\\"，而Linux下是\"/\"。\n\n比如Windows操作系统下有这样一个路径：\n```\nC:\\Windows\\Help\n```\n那么在Linux下就是这样的：\n\n```\nC:/Windows/Help\n```\n因此经行路径相关操作时路径不能绝对化，以上面的路径为例，应该写成这种形式：\n\n```\n\"C\" + File\n```\n\n```java\npackage base.file;\nimport java.io.File;\n\npublic class staticVar {\n    /*\n        static String pathSeparator 与系统有关的路径分隔符，为了方便，它被表示为一个字符串。\n        static char pathSeparatorChar 与系统有关的路径分隔符。\n        static String separator 与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。\n        static char separatorChar 与系统有关的默认名称分隔符\n    */\n    public static void main(String[] args) {\n        String pathSeparator = File.pathSeparator;  // 路径分隔符，Windows下是\";\"，Linux下是\":\"\n        char pathSeparatorChar = File.pathSeparatorChar;\n        String separator = File.separator;  // 文件名称分隔符，Windows下是\"\\\"，而Linux下是\"/\"\n        char separatorChar = File.separatorChar;\n\n        System.out.println(pathSeparator);\n        System.out.println(pathSeparatorChar);\n        System.out.println(separator);\n        System.out.println(separatorChar);\n\n        System.out.println(\"C:\" + File.separator + \"Windows\" + File.separator + \"Help\");\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f9e741cea6994c349ce199b631ab983b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 三：File类的构造方法\nFile 类提供了如下三种形式构造方法。\n+ File(String path)：如果 path 是实际存在的路径，则该 File 对象表示的是目录；如果 path 是文件名，则该 File 对象表示的是文件。\n+ File(String parent, String child)：parent 是路径名，name 是文件名。\n+ File(File dir, String name)：dir 是路径对象，name 是文件名。\n\n三种方法的使用以及一些说明都在代码里：\n```java\npackage base.file;\n\nimport java.io.File;\n\npublic class fileStruct {\n    // 方法一\n    private static void show01() {\n        /*\n            File(String pathname) 通过将给定路径名字符串转换为抽象路径来创建一个新的File实例\n            参数：\n                String pathname: 字符串的路径名称\n                路径可以是文件结尾，也可以是文件夹结尾\n                路径可以是相对路径，也可以是绝对路径\n                创建File对象，只是把字符串路径封装为File对象，不考虑路径的真假情况\n         */\n\n        // 测试一个绝对路径\n        File f1 = new File(\"E:\\\\fileTest\");  // 此处需要写两个反斜杠，因为在java中一个反斜杠代表转义，两个反斜杠才是一个反斜杠的意思\n        System.out.println(f1);  // 输出 \"E:\\fileTest\"，说明重写了Object类的toString方法\n\n        // 测试一个相对路径\n        File f2 = new File(\"fileTest\");\n        System.out.println(f2);  // 输出 fileTest\n    }\n\n    // 方法二\n    private static void show02(String parent, String child) {\n        /*\n            File(String parent, String child) 根据parent路径名字符串和child路径名字符串创建一个新的File实例\n            参数：把路径分成了两部分\n                String parent: 父路径\n                String child: 子路径\n            好处：父路径和子路径可以单独书写，使用起来非常灵活，父路径和子路径都可以变化\n         */\n\n        File file = new File(parent, child);\n        System.out.println(file);\n    }\n\n    // 方法三\n    private static void show03() {\n        /*\n            File(File parent, String child) 根据parent抽象路径名和child路径名字符串创建一个新的File实例\n            参数：把路径分成了两部分\n                File parent: 父路径\n                String child: 子路径\n            好处：\n                父路径和子路径可以单独书写，使用起来非常灵活，父路径和子路径都可以变化\n                父路径是File类型，可以使用File的方法对路径经行一些操作，再使用路径创建对象\n         */\n\n        File parent = new File(\"E:\\\\fileTest\");\n        File file = new File(parent, \"test.txt\");\n        System.out.println(file);\n    }\n\n    // 主函数\n    public static void main(String[] args) {\n        /*\n            File类的构造方法\n         */\n        System.out.println(\"----- 方法一输出 -----\");\n        show01();\n\n        System.out.println(\"----- 方法二输出 -----\");\n        show02(\"E:\\\\fileTest\", \"test.txt\");  // 输出\"E:\\fileTest\\test.txt\"\n        show02(\"D:\\\\fileTest\", \"test.java\");  // 输出\"D:\\fileTest\\test.java\"\n\n        System.out.println(\"----- 方法三输出 -----\");\n        show03();  // 输出\"E:\\fileTest\\test.txt\"\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b2f82472082a4fffbe4fb3ea4b545fc8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 四：File类的常用方法：\n这里只列一个表，后续内容会分类型对一些方法进行说明。\n<table border=\"1\">\n<caption>\n<br>\n表 1&nbsp; File类的常用方法</caption>\n<tbody>\n<tr>\n<th>\n方法名称</th>\n<th>\n说明</th>\n</tr>\n<tr>\n<td>\nboolean canRead()</td>\n<td>\n测试应用程序是否能从指定的文件中进行读取</td>\n</tr>\n<tr>\n<td>\nboolean canWrite()</td>\n<td>\n测试应用程序是否能写当前文件</td>\n</tr>\n<tr>\n<td>\nboolean delete()</td>\n<td>\n删除当前对象指定的文件</td>\n</tr>\n<tr>\n<td>\nboolean exists()</td>\n<td>\n测试当前 File 是否存在</td>\n</tr>\n<tr>\n<td>\nString getAbsolutePath()</td>\n<td>\n返回由该对象表示的文件的绝对路径名</td>\n</tr>\n<tr>\n<td>\nString getName()</td>\n<td>\n返回表示当前对象的文件名或路径名（如果是路径，则返回最后一级子路径名）</td>\n</tr>\n<tr>\n<td>\nString getParent()</td>\n<td>\n返回当前 File 对象所对应目录（最后一级子目录）的父目录名</td>\n</tr>\n<tr>\n<td>\nboolean isAbsolute()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个绝对路径名。该方法消除了不同平台的差异，可以直接判断 file 对象是否为绝对路径。在 UNIX/Linux/BSD 等系统上，如果路径名开头是一条斜线<code>/</code>，则表明该 File 对象对应一个绝对路径；在 Windows 等系统上，如果路径开头是盘符，则说明它是一个绝对路径。</td>\n</tr>\n<tr>\n<td>\nboolean isDirectory()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个路径</td>\n</tr>\n<tr>\n<td>\nboolean isFile()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个“普通”文件</td>\n</tr>\n<tr>\n<td>\nlong lastModified()</td>\n<td>\n返回当前 File 对象表示的文件最后修改的时间</td>\n</tr>\n<tr>\n<td>\nlong length()</td>\n<td>\n返回当前 File 对象表示的文件长度</td>\n</tr>\n<tr>\n<td>\nString[] list()</td>\n<td>\n返回当前 File 对象指定的路径文件列表</td>\n</tr>\n<tr>\n<td>\nString[]&nbsp;list(FilenameFilter)</td>\n<td>\n返回当前 File 对象指定的目录中满足指定过滤器的文件列表</td>\n</tr>\n<tr>\n<td>\nboolean mkdir()</td>\n<td>\n创建一个目录，它的路径名由当前 File 对象指定</td>\n</tr>\n<tr>\n<td>\nboolean mkdirs()</td>\n<td>\n创建一个目录，它的路径名由当前 File 对象指定</td>\n</tr>\n<tr>\n<td>\nboolean renameTo(File)</td>\n<td>\n将当前 File 对象指定的文件更名为给定参数 File 指定的路径名</td>\n</tr>\n</tbody>\n</table>\n\n# 五：File类获取功能的方法\n+ `public String getAbsolutePath()` : 返回此File的绝对路径名字符串\n+ `public String getPath()` : 将此File转换为路径名字符串\n+ `public String getName()` : 返回由此File表示的文件或者目录的名称\n+ `public long length()` : 返回由此File表示的文件的大小，如果路径不存在，则返回0\n\n演示代码如下：\n\n```java\npackage base.file;\nimport java.io.File;\n\npublic class getMethod {\n    /*\n         值得注意的是，如果使用相对路径，那么根路径是项目的根路径，\n         在这个项目中，根路径是code，因此test.txt的相对路径为src\\base\\file\\fileTest\\test.txt\n     */\n    public static void main(String[] args) {\n        File f = new File(\"src\\\\base\\\\file\\\\fileTest\\\\test.txt\");\n        System.out.println(\"文件绝对路径：\" + f.getAbsolutePath());\n        System.out.println(\"文件相对路径：\" + f.getPath());\n        System.out.println(\"文件名称：\" + f.getName());\n        System.out.println(\"文件大小：\" + f.length() + \"字节\");\n\n        File f2 = new File(\"src\\\\base\\\\file\\\\fileTest\");\n        System.out.println(\"目录绝对路径：\" + f2.getAbsolutePath());\n        System.out.println(\"目录相对路径：\" + f2.getPath());\n        System.out.println(\"目录名称：\" + f2.getName());\n        System.out.println(\"目录大小：\" + f2.length());  // 文件夹没有大小概念，因此返回0\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cc80acefae4c417bb9991e3584b744e8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 六：File类判断功能的方法\n+ `public boolean exists()` ：此File表示的文件或目录是否实际存在\n+ `public boolean isDirectory()` ：此File表示的是否为目录\n+ `public boolean isFile()` ：此File表示的是否为文件\n\n演示代码如下：\n```java\npackage base.file;\nimport java.io.File;\n\npublic class fileJudge {\n    public static void main(String[] args) {\n        File f1 = new File(\"src\\\\base\\\\file\\\\fileTest\");  // 文件夹\n        File f2 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\test.txt\");  // 文件\n        File f3 = new File(\"src\\\\base\\\\file\\\\test\");  // 不存在的文件夹\n        File f4 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\demo.txt\");  // 不存在的文件\n\n        System.out.println(f1.exists());  // true\n        System.out.println(f2.exists());  // true\n        System.out.println(f3.exists());  // false\n        System.out.println(f4.exists());  // false\n\n        System.out.println(f1.isDirectory());  // true\n        System.out.println(f2.isDirectory());  // false\n        System.out.println(f3.isDirectory());  // false\n        System.out.println(f4.isDirectory());  // false\n\n        System.out.println(f1.isFile());  // false\n        System.out.println(f2.isFile());  // true\n        System.out.println(f3.isFile());  // false\n        System.out.println(f4.isFile());  // false\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/19d365d3fc504a24bb30bbf086a7b800.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 七：FIle类创建删除功能的方法\n+ `public boolean createNewFile()` ：当且仅当具有该名称的文件尚不存在时，创建一个新的空文件夹\n+ `public boolean delete()` ：删除由此File表示的文件或目录\n+ `public boolean mkdir()` ：创建由此File表示的目录\n+ `public boolean mkdirs` ：创建由此File表示的目录，包括任何必需但不存在的父目录\n\n演示代码如下：\n```java\npackage base.file;\nimport java.io.File;\nimport java.io.IOException;\n\npublic class fileCreateOrDel {\n    // createNewFile()，如果抛出异常，我们调用throws或trycatch捕获处理\n    private static void show01() throws IOException {\n        /*\n            当且仅当具有该名称的文件尚不存在时，创建一个新的空文件夹\n            返回值是布尔值\n            此方法只能创建文件，不能创建文件夹\n            创建文件的路径必须是存在的，否则抛出异常\n         */\n        File f = new File(\"src\\\\base\\\\file\\\\fileTest\\\\new.txt\");\n        boolean b = f.createNewFile();\n        System.out.println(\"b:\" + b);  // true\n    }\n\n    // delete()\n    private static void show02() throws IOException {\n        /*\n            该方法可以删除文件，也可以返回文件夹\n            删除文件夹时如果文件夹有内容则不删除返回false\n            路径不存在则返回false\n            delete是直接在硬盘上删除文件/文件夹，不会经过回收站，因此需要谨慎\n         */\n        File f = new File(\"src\\\\base\\\\file\\\\fileTest\\\\test.txt\");\n        boolean b = f.delete();\n        System.out.println(b);  // true\n    }\n\n    // mkdir()\n    private static void show03() throws IOException {\n        /*\n            创建单级空文件夹\n            文件夹存在会返回false，并且不会创建\n            如果用这个方法创建多级文件夹，会返回false而且不创建\n         */\n        File f1 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\new\");\n        boolean b1 = f1.mkdir();\n        System.out.println(\"b1:\" + b1);  // true\n\n        File f2 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\hhh\\\\aaa\");\n        boolean b2 = f1.mkdir();\n        System.out.println(\"b2:\" + b2);  // false\n    }\n    // mkdirs()\n    private static void show04() throws IOException {\n        /*\n            可以创建单级空文件夹，也可以创建多级空文件夹\n            文件夹存在会返回false，并且不会创建\n         */\n        File f1 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\new2\");\n        boolean b1 = f1.mkdirs();\n        System.out.println(\"b1:\" + b1);  // true\n\n        File f2 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\bbb\\\\ccc\");\n        boolean b2 = f2.mkdirs();\n        System.out.println(\"b2:\" + b2);  // true\n    }\n\n    // 主函数\n    public static void main(String[] args) throws IOException {\n        show01();\n        show02();\n        show03();\n        show04();\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/834ed5c2d0514b89a8314cefbad7443c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 八：File类遍历目录的功能\n+ `public String[] list()` ：返回一个String数组，表示该File目录中的所有子文件或目录\n+ `public File[] listFiles()` ：返回一个File数组，表示该File目录中的所有子文件或目录\n\n注意：\n+ list方法和listFiles方法遍历的是构造方法中给出的目录\n+ 如果构造方法中给出的目录的路径不存在，会抛出空指针异常\n+ 如果构造方法中给出的路径不是一个目录，也会抛出空指针异常\n\n演示代码如下：\n\n```java\npackage base.file;\n\nimport java.io.File;\n\npublic class fileErgodic {\n    // public String[] list()\n    private static void show01() {\n        /*\n            返回一个String数组，表示该File目录中的所有子文件或目录\n            遍历构造方法中给出的目录，会获取当前目录中所有文件/文件夹的名称，把获取到的多个名称存储到一个String类型的数组中\n            只会遍历当前目录，如果当前目录含有一个文件夹，不会遍历该文件夹内部\n         */\n        File f = new File(\"src\\\\base\\\\file\");\n        String[] arr = f.list();\n        for (String fileName : arr) {\n            System.out.println(fileName);\n        }\n    }\n\n    // public File[] listFiles()\n    private static void show02() {\n        /*\n            返回一个File数组，表示该File目录中的所有子文件或目录\n            遍历构造方法中给出的目录，会获取当前目录中所有文件/文件夹，把文件/文件夹封装为File对象，多个File对象存储到File数组中\n         */\n        File f = new File(\"src\\\\base\\\\file\");\n        File[] files = f.listFiles();\n        for (File i : files) {\n            System.out.println(i);\n        }\n    }\n\n    // 主函数\n    public static void main(String[] args) {\n        show01();\n        System.out.println(\"---------------\");\n        show02();\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/79abdda7cf5b4d7ebd3cbeabfd3f461c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 九：递归打印多级目录\n代码如下：\n\n```java\npackage base.file;\nimport java.io.File;\n\npublic class fileRecursion {\n    public static void getAllFile(File dir) {\n        System.out.println(dir);\n        File[] files = dir.listFiles();\n        for (File f : files) {\n            if (f.isDirectory()) {\n                getAllFile(f);\n            } else {\n                System.out.println(f);\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        File file = new File(\"src\\\\base\\\\file\");\n        getAllFile(file);\n    }\n}\n```\n输出结果为：\n\n```\nsrc\\base\\file\nsrc\\base\\file\\fileCreateOrDel.java\nsrc\\base\\file\\fileErgodic.java\nsrc\\base\\file\\fileJudge.java\nsrc\\base\\file\\fileRecursion.java\nsrc\\base\\file\\fileStruct.java\nsrc\\base\\file\\fileTest\nsrc\\base\\file\\fileTest\\bbb\nsrc\\base\\file\\fileTest\\bbb\\ccc\nsrc\\base\\file\\fileTest\\new\nsrc\\base\\file\\fileTest\\new.txt\nsrc\\base\\file\\fileTest\\new2\nsrc\\base\\file\\getMethod.java\nsrc\\base\\file\\staticVar.java\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/441f834c51314a578d50bcb6f8c23567.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)","source":"_posts/java/file操作.md","raw":"---\ntitle: 使用java.io.File操作文件及文件夹\ndate: 2021-09-11 17:37:55\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/42.jpg\ntags: \n  - IO流\n  - 文件\ncategories: java\n---\n\n# 一：File类的概述\njava有个io包，java用于操作流的对象都在io包中，io流简单来说就是input和output流，io流主要是用来处理设备之间的数据传输，Java IO对于数据的操作都是通过流实现的。\n\n在整个java.io包中最重要的就是5个类和一个接口。5个类指的是File、OutputStream、InputStream、Writer、Reader；一个接口指的是Serializable。而这篇博客只会涉及到5个类中的File类。\n\njava.io.File类是文件和目录路径名的抽象表示，主要用于文件和目录的创建查找和删除等操作。在Java中，File 类是 java.io 包中唯一代表磁盘文件本身的对象，但是File 类不能访问文件内容本身，如果需要访问文件内容本身，则需要使用输入/输出流。\n\njava.io.File类的方法：\n+ 创建一个文件/文件夹\n+ 删除一个文件/文件夹\n+ 获取文件/文件夹\n+ 判断文件/文件夹是否存在\n+ 对文件夹进行遍历\n+ 获取文件大小\n\nFile类的学习主要是围绕三个单词：\n+ file: 文件\n+ directory: 文件夹/目录\n+ path: 路径\n\n# 二：File类的静态成员变量\n+ `static String pathSeparator` ：与系统有关的路径分隔符，为了方便，它被表示为一个字符串。\n+ `static char pathSeparatorChar` ：与系统有关的路径分隔符。\n+ `static String separator` ：与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。\n+ `static char separatorChar` ：与系统有关的默认名称分隔符\n\n路径分隔符和文件分隔符在不同操作系统下是不同的，路径分隔符在Windows下是\";\"，Linux下是\":\"，文件名称分隔符在Windows下是\"\\\"，而Linux下是\"/\"。\n\n比如Windows操作系统下有这样一个路径：\n```\nC:\\Windows\\Help\n```\n那么在Linux下就是这样的：\n\n```\nC:/Windows/Help\n```\n因此经行路径相关操作时路径不能绝对化，以上面的路径为例，应该写成这种形式：\n\n```\n\"C\" + File\n```\n\n```java\npackage base.file;\nimport java.io.File;\n\npublic class staticVar {\n    /*\n        static String pathSeparator 与系统有关的路径分隔符，为了方便，它被表示为一个字符串。\n        static char pathSeparatorChar 与系统有关的路径分隔符。\n        static String separator 与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。\n        static char separatorChar 与系统有关的默认名称分隔符\n    */\n    public static void main(String[] args) {\n        String pathSeparator = File.pathSeparator;  // 路径分隔符，Windows下是\";\"，Linux下是\":\"\n        char pathSeparatorChar = File.pathSeparatorChar;\n        String separator = File.separator;  // 文件名称分隔符，Windows下是\"\\\"，而Linux下是\"/\"\n        char separatorChar = File.separatorChar;\n\n        System.out.println(pathSeparator);\n        System.out.println(pathSeparatorChar);\n        System.out.println(separator);\n        System.out.println(separatorChar);\n\n        System.out.println(\"C:\" + File.separator + \"Windows\" + File.separator + \"Help\");\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f9e741cea6994c349ce199b631ab983b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 三：File类的构造方法\nFile 类提供了如下三种形式构造方法。\n+ File(String path)：如果 path 是实际存在的路径，则该 File 对象表示的是目录；如果 path 是文件名，则该 File 对象表示的是文件。\n+ File(String parent, String child)：parent 是路径名，name 是文件名。\n+ File(File dir, String name)：dir 是路径对象，name 是文件名。\n\n三种方法的使用以及一些说明都在代码里：\n```java\npackage base.file;\n\nimport java.io.File;\n\npublic class fileStruct {\n    // 方法一\n    private static void show01() {\n        /*\n            File(String pathname) 通过将给定路径名字符串转换为抽象路径来创建一个新的File实例\n            参数：\n                String pathname: 字符串的路径名称\n                路径可以是文件结尾，也可以是文件夹结尾\n                路径可以是相对路径，也可以是绝对路径\n                创建File对象，只是把字符串路径封装为File对象，不考虑路径的真假情况\n         */\n\n        // 测试一个绝对路径\n        File f1 = new File(\"E:\\\\fileTest\");  // 此处需要写两个反斜杠，因为在java中一个反斜杠代表转义，两个反斜杠才是一个反斜杠的意思\n        System.out.println(f1);  // 输出 \"E:\\fileTest\"，说明重写了Object类的toString方法\n\n        // 测试一个相对路径\n        File f2 = new File(\"fileTest\");\n        System.out.println(f2);  // 输出 fileTest\n    }\n\n    // 方法二\n    private static void show02(String parent, String child) {\n        /*\n            File(String parent, String child) 根据parent路径名字符串和child路径名字符串创建一个新的File实例\n            参数：把路径分成了两部分\n                String parent: 父路径\n                String child: 子路径\n            好处：父路径和子路径可以单独书写，使用起来非常灵活，父路径和子路径都可以变化\n         */\n\n        File file = new File(parent, child);\n        System.out.println(file);\n    }\n\n    // 方法三\n    private static void show03() {\n        /*\n            File(File parent, String child) 根据parent抽象路径名和child路径名字符串创建一个新的File实例\n            参数：把路径分成了两部分\n                File parent: 父路径\n                String child: 子路径\n            好处：\n                父路径和子路径可以单独书写，使用起来非常灵活，父路径和子路径都可以变化\n                父路径是File类型，可以使用File的方法对路径经行一些操作，再使用路径创建对象\n         */\n\n        File parent = new File(\"E:\\\\fileTest\");\n        File file = new File(parent, \"test.txt\");\n        System.out.println(file);\n    }\n\n    // 主函数\n    public static void main(String[] args) {\n        /*\n            File类的构造方法\n         */\n        System.out.println(\"----- 方法一输出 -----\");\n        show01();\n\n        System.out.println(\"----- 方法二输出 -----\");\n        show02(\"E:\\\\fileTest\", \"test.txt\");  // 输出\"E:\\fileTest\\test.txt\"\n        show02(\"D:\\\\fileTest\", \"test.java\");  // 输出\"D:\\fileTest\\test.java\"\n\n        System.out.println(\"----- 方法三输出 -----\");\n        show03();  // 输出\"E:\\fileTest\\test.txt\"\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b2f82472082a4fffbe4fb3ea4b545fc8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 四：File类的常用方法：\n这里只列一个表，后续内容会分类型对一些方法进行说明。\n<table border=\"1\">\n<caption>\n<br>\n表 1&nbsp; File类的常用方法</caption>\n<tbody>\n<tr>\n<th>\n方法名称</th>\n<th>\n说明</th>\n</tr>\n<tr>\n<td>\nboolean canRead()</td>\n<td>\n测试应用程序是否能从指定的文件中进行读取</td>\n</tr>\n<tr>\n<td>\nboolean canWrite()</td>\n<td>\n测试应用程序是否能写当前文件</td>\n</tr>\n<tr>\n<td>\nboolean delete()</td>\n<td>\n删除当前对象指定的文件</td>\n</tr>\n<tr>\n<td>\nboolean exists()</td>\n<td>\n测试当前 File 是否存在</td>\n</tr>\n<tr>\n<td>\nString getAbsolutePath()</td>\n<td>\n返回由该对象表示的文件的绝对路径名</td>\n</tr>\n<tr>\n<td>\nString getName()</td>\n<td>\n返回表示当前对象的文件名或路径名（如果是路径，则返回最后一级子路径名）</td>\n</tr>\n<tr>\n<td>\nString getParent()</td>\n<td>\n返回当前 File 对象所对应目录（最后一级子目录）的父目录名</td>\n</tr>\n<tr>\n<td>\nboolean isAbsolute()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个绝对路径名。该方法消除了不同平台的差异，可以直接判断 file 对象是否为绝对路径。在 UNIX/Linux/BSD 等系统上，如果路径名开头是一条斜线<code>/</code>，则表明该 File 对象对应一个绝对路径；在 Windows 等系统上，如果路径开头是盘符，则说明它是一个绝对路径。</td>\n</tr>\n<tr>\n<td>\nboolean isDirectory()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个路径</td>\n</tr>\n<tr>\n<td>\nboolean isFile()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个“普通”文件</td>\n</tr>\n<tr>\n<td>\nlong lastModified()</td>\n<td>\n返回当前 File 对象表示的文件最后修改的时间</td>\n</tr>\n<tr>\n<td>\nlong length()</td>\n<td>\n返回当前 File 对象表示的文件长度</td>\n</tr>\n<tr>\n<td>\nString[] list()</td>\n<td>\n返回当前 File 对象指定的路径文件列表</td>\n</tr>\n<tr>\n<td>\nString[]&nbsp;list(FilenameFilter)</td>\n<td>\n返回当前 File 对象指定的目录中满足指定过滤器的文件列表</td>\n</tr>\n<tr>\n<td>\nboolean mkdir()</td>\n<td>\n创建一个目录，它的路径名由当前 File 对象指定</td>\n</tr>\n<tr>\n<td>\nboolean mkdirs()</td>\n<td>\n创建一个目录，它的路径名由当前 File 对象指定</td>\n</tr>\n<tr>\n<td>\nboolean renameTo(File)</td>\n<td>\n将当前 File 对象指定的文件更名为给定参数 File 指定的路径名</td>\n</tr>\n</tbody>\n</table>\n\n# 五：File类获取功能的方法\n+ `public String getAbsolutePath()` : 返回此File的绝对路径名字符串\n+ `public String getPath()` : 将此File转换为路径名字符串\n+ `public String getName()` : 返回由此File表示的文件或者目录的名称\n+ `public long length()` : 返回由此File表示的文件的大小，如果路径不存在，则返回0\n\n演示代码如下：\n\n```java\npackage base.file;\nimport java.io.File;\n\npublic class getMethod {\n    /*\n         值得注意的是，如果使用相对路径，那么根路径是项目的根路径，\n         在这个项目中，根路径是code，因此test.txt的相对路径为src\\base\\file\\fileTest\\test.txt\n     */\n    public static void main(String[] args) {\n        File f = new File(\"src\\\\base\\\\file\\\\fileTest\\\\test.txt\");\n        System.out.println(\"文件绝对路径：\" + f.getAbsolutePath());\n        System.out.println(\"文件相对路径：\" + f.getPath());\n        System.out.println(\"文件名称：\" + f.getName());\n        System.out.println(\"文件大小：\" + f.length() + \"字节\");\n\n        File f2 = new File(\"src\\\\base\\\\file\\\\fileTest\");\n        System.out.println(\"目录绝对路径：\" + f2.getAbsolutePath());\n        System.out.println(\"目录相对路径：\" + f2.getPath());\n        System.out.println(\"目录名称：\" + f2.getName());\n        System.out.println(\"目录大小：\" + f2.length());  // 文件夹没有大小概念，因此返回0\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cc80acefae4c417bb9991e3584b744e8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 六：File类判断功能的方法\n+ `public boolean exists()` ：此File表示的文件或目录是否实际存在\n+ `public boolean isDirectory()` ：此File表示的是否为目录\n+ `public boolean isFile()` ：此File表示的是否为文件\n\n演示代码如下：\n```java\npackage base.file;\nimport java.io.File;\n\npublic class fileJudge {\n    public static void main(String[] args) {\n        File f1 = new File(\"src\\\\base\\\\file\\\\fileTest\");  // 文件夹\n        File f2 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\test.txt\");  // 文件\n        File f3 = new File(\"src\\\\base\\\\file\\\\test\");  // 不存在的文件夹\n        File f4 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\demo.txt\");  // 不存在的文件\n\n        System.out.println(f1.exists());  // true\n        System.out.println(f2.exists());  // true\n        System.out.println(f3.exists());  // false\n        System.out.println(f4.exists());  // false\n\n        System.out.println(f1.isDirectory());  // true\n        System.out.println(f2.isDirectory());  // false\n        System.out.println(f3.isDirectory());  // false\n        System.out.println(f4.isDirectory());  // false\n\n        System.out.println(f1.isFile());  // false\n        System.out.println(f2.isFile());  // true\n        System.out.println(f3.isFile());  // false\n        System.out.println(f4.isFile());  // false\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/19d365d3fc504a24bb30bbf086a7b800.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 七：FIle类创建删除功能的方法\n+ `public boolean createNewFile()` ：当且仅当具有该名称的文件尚不存在时，创建一个新的空文件夹\n+ `public boolean delete()` ：删除由此File表示的文件或目录\n+ `public boolean mkdir()` ：创建由此File表示的目录\n+ `public boolean mkdirs` ：创建由此File表示的目录，包括任何必需但不存在的父目录\n\n演示代码如下：\n```java\npackage base.file;\nimport java.io.File;\nimport java.io.IOException;\n\npublic class fileCreateOrDel {\n    // createNewFile()，如果抛出异常，我们调用throws或trycatch捕获处理\n    private static void show01() throws IOException {\n        /*\n            当且仅当具有该名称的文件尚不存在时，创建一个新的空文件夹\n            返回值是布尔值\n            此方法只能创建文件，不能创建文件夹\n            创建文件的路径必须是存在的，否则抛出异常\n         */\n        File f = new File(\"src\\\\base\\\\file\\\\fileTest\\\\new.txt\");\n        boolean b = f.createNewFile();\n        System.out.println(\"b:\" + b);  // true\n    }\n\n    // delete()\n    private static void show02() throws IOException {\n        /*\n            该方法可以删除文件，也可以返回文件夹\n            删除文件夹时如果文件夹有内容则不删除返回false\n            路径不存在则返回false\n            delete是直接在硬盘上删除文件/文件夹，不会经过回收站，因此需要谨慎\n         */\n        File f = new File(\"src\\\\base\\\\file\\\\fileTest\\\\test.txt\");\n        boolean b = f.delete();\n        System.out.println(b);  // true\n    }\n\n    // mkdir()\n    private static void show03() throws IOException {\n        /*\n            创建单级空文件夹\n            文件夹存在会返回false，并且不会创建\n            如果用这个方法创建多级文件夹，会返回false而且不创建\n         */\n        File f1 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\new\");\n        boolean b1 = f1.mkdir();\n        System.out.println(\"b1:\" + b1);  // true\n\n        File f2 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\hhh\\\\aaa\");\n        boolean b2 = f1.mkdir();\n        System.out.println(\"b2:\" + b2);  // false\n    }\n    // mkdirs()\n    private static void show04() throws IOException {\n        /*\n            可以创建单级空文件夹，也可以创建多级空文件夹\n            文件夹存在会返回false，并且不会创建\n         */\n        File f1 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\new2\");\n        boolean b1 = f1.mkdirs();\n        System.out.println(\"b1:\" + b1);  // true\n\n        File f2 = new File(\"src\\\\base\\\\file\\\\fileTest\\\\bbb\\\\ccc\");\n        boolean b2 = f2.mkdirs();\n        System.out.println(\"b2:\" + b2);  // true\n    }\n\n    // 主函数\n    public static void main(String[] args) throws IOException {\n        show01();\n        show02();\n        show03();\n        show04();\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/834ed5c2d0514b89a8314cefbad7443c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 八：File类遍历目录的功能\n+ `public String[] list()` ：返回一个String数组，表示该File目录中的所有子文件或目录\n+ `public File[] listFiles()` ：返回一个File数组，表示该File目录中的所有子文件或目录\n\n注意：\n+ list方法和listFiles方法遍历的是构造方法中给出的目录\n+ 如果构造方法中给出的目录的路径不存在，会抛出空指针异常\n+ 如果构造方法中给出的路径不是一个目录，也会抛出空指针异常\n\n演示代码如下：\n\n```java\npackage base.file;\n\nimport java.io.File;\n\npublic class fileErgodic {\n    // public String[] list()\n    private static void show01() {\n        /*\n            返回一个String数组，表示该File目录中的所有子文件或目录\n            遍历构造方法中给出的目录，会获取当前目录中所有文件/文件夹的名称，把获取到的多个名称存储到一个String类型的数组中\n            只会遍历当前目录，如果当前目录含有一个文件夹，不会遍历该文件夹内部\n         */\n        File f = new File(\"src\\\\base\\\\file\");\n        String[] arr = f.list();\n        for (String fileName : arr) {\n            System.out.println(fileName);\n        }\n    }\n\n    // public File[] listFiles()\n    private static void show02() {\n        /*\n            返回一个File数组，表示该File目录中的所有子文件或目录\n            遍历构造方法中给出的目录，会获取当前目录中所有文件/文件夹，把文件/文件夹封装为File对象，多个File对象存储到File数组中\n         */\n        File f = new File(\"src\\\\base\\\\file\");\n        File[] files = f.listFiles();\n        for (File i : files) {\n            System.out.println(i);\n        }\n    }\n\n    // 主函数\n    public static void main(String[] args) {\n        show01();\n        System.out.println(\"---------------\");\n        show02();\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/79abdda7cf5b4d7ebd3cbeabfd3f461c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 九：递归打印多级目录\n代码如下：\n\n```java\npackage base.file;\nimport java.io.File;\n\npublic class fileRecursion {\n    public static void getAllFile(File dir) {\n        System.out.println(dir);\n        File[] files = dir.listFiles();\n        for (File f : files) {\n            if (f.isDirectory()) {\n                getAllFile(f);\n            } else {\n                System.out.println(f);\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        File file = new File(\"src\\\\base\\\\file\");\n        getAllFile(file);\n    }\n}\n```\n输出结果为：\n\n```\nsrc\\base\\file\nsrc\\base\\file\\fileCreateOrDel.java\nsrc\\base\\file\\fileErgodic.java\nsrc\\base\\file\\fileJudge.java\nsrc\\base\\file\\fileRecursion.java\nsrc\\base\\file\\fileStruct.java\nsrc\\base\\file\\fileTest\nsrc\\base\\file\\fileTest\\bbb\nsrc\\base\\file\\fileTest\\bbb\\ccc\nsrc\\base\\file\\fileTest\\new\nsrc\\base\\file\\fileTest\\new.txt\nsrc\\base\\file\\fileTest\\new2\nsrc\\base\\file\\getMethod.java\nsrc\\base\\file\\staticVar.java\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/441f834c51314a578d50bcb6f8c23567.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)","slug":"java/file操作","published":1,"updated":"2021-12-03T14:57:10.090Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958c9004sasda6lj3gjhb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：File类的概述\"><a href=\"#一：File类的概述\" class=\"headerlink\" title=\"一：File类的概述\"></a>一：File类的概述</h1><p>java有个io包，java用于操作流的对象都在io包中，io流简单来说就是input和output流，io流主要是用来处理设备之间的数据传输，Java IO对于数据的操作都是通过流实现的。</p>\n<p>在整个java.io包中最重要的就是5个类和一个接口。5个类指的是File、OutputStream、InputStream、Writer、Reader；一个接口指的是Serializable。而这篇博客只会涉及到5个类中的File类。</p>\n<p>java.io.File类是文件和目录路径名的抽象表示，主要用于文件和目录的创建查找和删除等操作。在Java中，File 类是 java.io 包中唯一代表磁盘文件本身的对象，但是File 类不能访问文件内容本身，如果需要访问文件内容本身，则需要使用输入/输出流。</p>\n<p>java.io.File类的方法：</p>\n<ul>\n<li>创建一个文件/文件夹</li>\n<li>删除一个文件/文件夹</li>\n<li>获取文件/文件夹</li>\n<li>判断文件/文件夹是否存在</li>\n<li>对文件夹进行遍历</li>\n<li>获取文件大小</li>\n</ul>\n<p>File类的学习主要是围绕三个单词：</p>\n<ul>\n<li>file: 文件</li>\n<li>directory: 文件夹/目录</li>\n<li>path: 路径</li>\n</ul>\n<h1 id=\"二：File类的静态成员变量\"><a href=\"#二：File类的静态成员变量\" class=\"headerlink\" title=\"二：File类的静态成员变量\"></a>二：File类的静态成员变量</h1><ul>\n<li><code>static String pathSeparator</code> ：与系统有关的路径分隔符，为了方便，它被表示为一个字符串。</li>\n<li><code>static char pathSeparatorChar</code> ：与系统有关的路径分隔符。</li>\n<li><code>static String separator</code> ：与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。</li>\n<li><code>static char separatorChar</code> ：与系统有关的默认名称分隔符</li>\n</ul>\n<p>路径分隔符和文件分隔符在不同操作系统下是不同的，路径分隔符在Windows下是”;”，Linux下是”:”，文件名称分隔符在Windows下是”&quot;，而Linux下是”/“。</p>\n<p>比如Windows操作系统下有这样一个路径：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Windows\\Help</span><br></pre></td></tr></table></figure>\n<p>那么在Linux下就是这样的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:/Windows/Help</span><br></pre></td></tr></table></figure>\n<p>因此经行路径相关操作时路径不能绝对化，以上面的路径为例，应该写成这种形式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;C&quot; + File</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">staticVar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        static String pathSeparator 与系统有关的路径分隔符，为了方便，它被表示为一个字符串。</span></span><br><span class=\"line\"><span class=\"comment\">        static char pathSeparatorChar 与系统有关的路径分隔符。</span></span><br><span class=\"line\"><span class=\"comment\">        static String separator 与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。</span></span><br><span class=\"line\"><span class=\"comment\">        static char separatorChar 与系统有关的默认名称分隔符</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        String pathSeparator = File.pathSeparator;  <span class=\"comment\">// 路径分隔符，Windows下是&quot;;&quot;，Linux下是&quot;:&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">char</span> pathSeparatorChar = File.pathSeparatorChar;</span><br><span class=\"line\">        String separator = File.separator;  <span class=\"comment\">// 文件名称分隔符，Windows下是&quot;\\&quot;，而Linux下是&quot;/&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">char</span> separatorChar = File.separatorChar;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(pathSeparator);</span><br><span class=\"line\">        System.out.println(pathSeparatorChar);</span><br><span class=\"line\">        System.out.println(separator);</span><br><span class=\"line\">        System.out.println(separatorChar);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;C:&quot;</span> + File.separator + <span class=\"string\">&quot;Windows&quot;</span> + File.separator + <span class=\"string\">&quot;Help&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/f9e741cea6994c349ce199b631ab983b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：File类的构造方法\"><a href=\"#三：File类的构造方法\" class=\"headerlink\" title=\"三：File类的构造方法\"></a>三：File类的构造方法</h1><p>File 类提供了如下三种形式构造方法。</p>\n<ul>\n<li>File(String path)：如果 path 是实际存在的路径，则该 File 对象表示的是目录；如果 path 是文件名，则该 File 对象表示的是文件。</li>\n<li>File(String parent, String child)：parent 是路径名，name 是文件名。</li>\n<li>File(File dir, String name)：dir 是路径对象，name 是文件名。</li>\n</ul>\n<p>三种方法的使用以及一些说明都在代码里：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileStruct</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 方法一</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            File(String pathname) 通过将给定路径名字符串转换为抽象路径来创建一个新的File实例</span></span><br><span class=\"line\"><span class=\"comment\">            参数：</span></span><br><span class=\"line\"><span class=\"comment\">                String pathname: 字符串的路径名称</span></span><br><span class=\"line\"><span class=\"comment\">                路径可以是文件结尾，也可以是文件夹结尾</span></span><br><span class=\"line\"><span class=\"comment\">                路径可以是相对路径，也可以是绝对路径</span></span><br><span class=\"line\"><span class=\"comment\">                创建File对象，只是把字符串路径封装为File对象，不考虑路径的真假情况</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 测试一个绝对路径</span></span><br><span class=\"line\">        File f1 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;E:\\\\fileTest&quot;</span>);  <span class=\"comment\">// 此处需要写两个反斜杠，因为在java中一个反斜杠代表转义，两个反斜杠才是一个反斜杠的意思</span></span><br><span class=\"line\">        System.out.println(f1);  <span class=\"comment\">// 输出 &quot;E:\\fileTest&quot;，说明重写了Object类的toString方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 测试一个相对路径</span></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;fileTest&quot;</span>);</span><br><span class=\"line\">        System.out.println(f2);  <span class=\"comment\">// 输出 fileTest</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 方法二</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show02</span><span class=\"params\">(String parent, String child)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            File(String parent, String child) 根据parent路径名字符串和child路径名字符串创建一个新的File实例</span></span><br><span class=\"line\"><span class=\"comment\">            参数：把路径分成了两部分</span></span><br><span class=\"line\"><span class=\"comment\">                String parent: 父路径</span></span><br><span class=\"line\"><span class=\"comment\">                String child: 子路径</span></span><br><span class=\"line\"><span class=\"comment\">            好处：父路径和子路径可以单独书写，使用起来非常灵活，父路径和子路径都可以变化</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(parent, child);</span><br><span class=\"line\">        System.out.println(file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 方法三</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show03</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            File(File parent, String child) 根据parent抽象路径名和child路径名字符串创建一个新的File实例</span></span><br><span class=\"line\"><span class=\"comment\">            参数：把路径分成了两部分</span></span><br><span class=\"line\"><span class=\"comment\">                File parent: 父路径</span></span><br><span class=\"line\"><span class=\"comment\">                String child: 子路径</span></span><br><span class=\"line\"><span class=\"comment\">            好处：</span></span><br><span class=\"line\"><span class=\"comment\">                父路径和子路径可以单独书写，使用起来非常灵活，父路径和子路径都可以变化</span></span><br><span class=\"line\"><span class=\"comment\">                父路径是File类型，可以使用File的方法对路径经行一些操作，再使用路径创建对象</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        File parent = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;E:\\\\fileTest&quot;</span>);</span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(parent, <span class=\"string\">&quot;test.txt&quot;</span>);</span><br><span class=\"line\">        System.out.println(file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 主函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            File类的构造方法</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;----- 方法一输出 -----&quot;</span>);</span><br><span class=\"line\">        show01();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;----- 方法二输出 -----&quot;</span>);</span><br><span class=\"line\">        show02(<span class=\"string\">&quot;E:\\\\fileTest&quot;</span>, <span class=\"string\">&quot;test.txt&quot;</span>);  <span class=\"comment\">// 输出&quot;E:\\fileTest\\test.txt&quot;</span></span><br><span class=\"line\">        show02(<span class=\"string\">&quot;D:\\\\fileTest&quot;</span>, <span class=\"string\">&quot;test.java&quot;</span>);  <span class=\"comment\">// 输出&quot;D:\\fileTest\\test.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;----- 方法三输出 -----&quot;</span>);</span><br><span class=\"line\">        show03();  <span class=\"comment\">// 输出&quot;E:\\fileTest\\test.txt&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/b2f82472082a4fffbe4fb3ea4b545fc8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：File类的常用方法：\"><a href=\"#四：File类的常用方法：\" class=\"headerlink\" title=\"四：File类的常用方法：\"></a>四：File类的常用方法：</h1><p>这里只列一个表，后续内容会分类型对一些方法进行说明。</p>\n<table border=\"1\">\n<caption>\n<br>\n表 1&nbsp; File类的常用方法</caption>\n<tbody>\n<tr>\n<th>\n方法名称</th>\n<th>\n说明</th>\n</tr>\n<tr>\n<td>\nboolean canRead()</td>\n<td>\n测试应用程序是否能从指定的文件中进行读取</td>\n</tr>\n<tr>\n<td>\nboolean canWrite()</td>\n<td>\n测试应用程序是否能写当前文件</td>\n</tr>\n<tr>\n<td>\nboolean delete()</td>\n<td>\n删除当前对象指定的文件</td>\n</tr>\n<tr>\n<td>\nboolean exists()</td>\n<td>\n测试当前 File 是否存在</td>\n</tr>\n<tr>\n<td>\nString getAbsolutePath()</td>\n<td>\n返回由该对象表示的文件的绝对路径名</td>\n</tr>\n<tr>\n<td>\nString getName()</td>\n<td>\n返回表示当前对象的文件名或路径名（如果是路径，则返回最后一级子路径名）</td>\n</tr>\n<tr>\n<td>\nString getParent()</td>\n<td>\n返回当前 File 对象所对应目录（最后一级子目录）的父目录名</td>\n</tr>\n<tr>\n<td>\nboolean isAbsolute()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个绝对路径名。该方法消除了不同平台的差异，可以直接判断 file 对象是否为绝对路径。在 UNIX/Linux/BSD 等系统上，如果路径名开头是一条斜线<code>/</code>，则表明该 File 对象对应一个绝对路径；在 Windows 等系统上，如果路径开头是盘符，则说明它是一个绝对路径。</td>\n</tr>\n<tr>\n<td>\nboolean isDirectory()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个路径</td>\n</tr>\n<tr>\n<td>\nboolean isFile()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个“普通”文件</td>\n</tr>\n<tr>\n<td>\nlong lastModified()</td>\n<td>\n返回当前 File 对象表示的文件最后修改的时间</td>\n</tr>\n<tr>\n<td>\nlong length()</td>\n<td>\n返回当前 File 对象表示的文件长度</td>\n</tr>\n<tr>\n<td>\nString[] list()</td>\n<td>\n返回当前 File 对象指定的路径文件列表</td>\n</tr>\n<tr>\n<td>\nString[]&nbsp;list(FilenameFilter)</td>\n<td>\n返回当前 File 对象指定的目录中满足指定过滤器的文件列表</td>\n</tr>\n<tr>\n<td>\nboolean mkdir()</td>\n<td>\n创建一个目录，它的路径名由当前 File 对象指定</td>\n</tr>\n<tr>\n<td>\nboolean mkdirs()</td>\n<td>\n创建一个目录，它的路径名由当前 File 对象指定</td>\n</tr>\n<tr>\n<td>\nboolean renameTo(File)</td>\n<td>\n将当前 File 对象指定的文件更名为给定参数 File 指定的路径名</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"五：File类获取功能的方法\"><a href=\"#五：File类获取功能的方法\" class=\"headerlink\" title=\"五：File类获取功能的方法\"></a>五：File类获取功能的方法</h1><ul>\n<li><code>public String getAbsolutePath()</code> : 返回此File的绝对路径名字符串</li>\n<li><code>public String getPath()</code> : 将此File转换为路径名字符串</li>\n<li><code>public String getName()</code> : 返回由此File表示的文件或者目录的名称</li>\n<li><code>public long length()</code> : 返回由此File表示的文件的大小，如果路径不存在，则返回0</li>\n</ul>\n<p>演示代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getMethod</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         值得注意的是，如果使用相对路径，那么根路径是项目的根路径，</span></span><br><span class=\"line\"><span class=\"comment\">         在这个项目中，根路径是code，因此test.txt的相对路径为src\\base\\file\\fileTest\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\test.txt&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件绝对路径：&quot;</span> + f.getAbsolutePath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件相对路径：&quot;</span> + f.getPath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件名称：&quot;</span> + f.getName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件大小：&quot;</span> + f.length() + <span class=\"string\">&quot;字节&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;目录绝对路径：&quot;</span> + f2.getAbsolutePath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;目录相对路径：&quot;</span> + f2.getPath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;目录名称：&quot;</span> + f2.getName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;目录大小：&quot;</span> + f2.length());  <span class=\"comment\">// 文件夹没有大小概念，因此返回0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/cc80acefae4c417bb9991e3584b744e8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六：File类判断功能的方法\"><a href=\"#六：File类判断功能的方法\" class=\"headerlink\" title=\"六：File类判断功能的方法\"></a>六：File类判断功能的方法</h1><ul>\n<li><code>public boolean exists()</code> ：此File表示的文件或目录是否实际存在</li>\n<li><code>public boolean isDirectory()</code> ：此File表示的是否为目录</li>\n<li><code>public boolean isFile()</code> ：此File表示的是否为文件</li>\n</ul>\n<p>演示代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileJudge</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        File f1 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest&quot;</span>);  <span class=\"comment\">// 文件夹</span></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\test.txt&quot;</span>);  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">        File f3 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\test&quot;</span>);  <span class=\"comment\">// 不存在的文件夹</span></span><br><span class=\"line\">        File f4 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\demo.txt&quot;</span>);  <span class=\"comment\">// 不存在的文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(f1.exists());  <span class=\"comment\">// true</span></span><br><span class=\"line\">        System.out.println(f2.exists());  <span class=\"comment\">// true</span></span><br><span class=\"line\">        System.out.println(f3.exists());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f4.exists());  <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(f1.isDirectory());  <span class=\"comment\">// true</span></span><br><span class=\"line\">        System.out.println(f2.isDirectory());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f3.isDirectory());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f4.isDirectory());  <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(f1.isFile());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f2.isFile());  <span class=\"comment\">// true</span></span><br><span class=\"line\">        System.out.println(f3.isFile());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f4.isFile());  <span class=\"comment\">// false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/19d365d3fc504a24bb30bbf086a7b800.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：FIle类创建删除功能的方法\"><a href=\"#七：FIle类创建删除功能的方法\" class=\"headerlink\" title=\"七：FIle类创建删除功能的方法\"></a>七：FIle类创建删除功能的方法</h1><ul>\n<li><code>public boolean createNewFile()</code> ：当且仅当具有该名称的文件尚不存在时，创建一个新的空文件夹</li>\n<li><code>public boolean delete()</code> ：删除由此File表示的文件或目录</li>\n<li><code>public boolean mkdir()</code> ：创建由此File表示的目录</li>\n<li><code>public boolean mkdirs</code> ：创建由此File表示的目录，包括任何必需但不存在的父目录</li>\n</ul>\n<p>演示代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileCreateOrDel</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// createNewFile()，如果抛出异常，我们调用throws或trycatch捕获处理</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show01</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            当且仅当具有该名称的文件尚不存在时，创建一个新的空文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            返回值是布尔值</span></span><br><span class=\"line\"><span class=\"comment\">            此方法只能创建文件，不能创建文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            创建文件的路径必须是存在的，否则抛出异常</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\new.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b = f.createNewFile();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b:&quot;</span> + b);  <span class=\"comment\">// true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// delete()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show02</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            该方法可以删除文件，也可以返回文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            删除文件夹时如果文件夹有内容则不删除返回false</span></span><br><span class=\"line\"><span class=\"comment\">            路径不存在则返回false</span></span><br><span class=\"line\"><span class=\"comment\">            delete是直接在硬盘上删除文件/文件夹，不会经过回收站，因此需要谨慎</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\test.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b = f.delete();</span><br><span class=\"line\">        System.out.println(b);  <span class=\"comment\">// true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// mkdir()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show03</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            创建单级空文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            文件夹存在会返回false，并且不会创建</span></span><br><span class=\"line\"><span class=\"comment\">            如果用这个方法创建多级文件夹，会返回false而且不创建</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f1 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\new&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b1 = f1.mkdir();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b1:&quot;</span> + b1);  <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\hhh\\\\aaa&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b2 = f1.mkdir();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b2:&quot;</span> + b2);  <span class=\"comment\">// false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// mkdirs()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show04</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            可以创建单级空文件夹，也可以创建多级空文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            文件夹存在会返回false，并且不会创建</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f1 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\new2&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b1 = f1.mkdirs();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b1:&quot;</span> + b1);  <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\bbb\\\\ccc&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b2 = f2.mkdirs();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b2:&quot;</span> + b2);  <span class=\"comment\">// true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 主函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        show01();</span><br><span class=\"line\">        show02();</span><br><span class=\"line\">        show03();</span><br><span class=\"line\">        show04();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/834ed5c2d0514b89a8314cefbad7443c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"八：File类遍历目录的功能\"><a href=\"#八：File类遍历目录的功能\" class=\"headerlink\" title=\"八：File类遍历目录的功能\"></a>八：File类遍历目录的功能</h1><ul>\n<li><code>public String[] list()</code> ：返回一个String数组，表示该File目录中的所有子文件或目录</li>\n<li><code>public File[] listFiles()</code> ：返回一个File数组，表示该File目录中的所有子文件或目录</li>\n</ul>\n<p>注意：</p>\n<ul>\n<li>list方法和listFiles方法遍历的是构造方法中给出的目录</li>\n<li>如果构造方法中给出的目录的路径不存在，会抛出空指针异常</li>\n<li>如果构造方法中给出的路径不是一个目录，也会抛出空指针异常</li>\n</ul>\n<p>演示代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileErgodic</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// public String[] list()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            返回一个String数组，表示该File目录中的所有子文件或目录</span></span><br><span class=\"line\"><span class=\"comment\">            遍历构造方法中给出的目录，会获取当前目录中所有文件/文件夹的名称，把获取到的多个名称存储到一个String类型的数组中</span></span><br><span class=\"line\"><span class=\"comment\">            只会遍历当前目录，如果当前目录含有一个文件夹，不会遍历该文件夹内部</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file&quot;</span>);</span><br><span class=\"line\">        String[] arr = f.list();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String fileName : arr) &#123;</span><br><span class=\"line\">            System.out.println(fileName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// public File[] listFiles()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show02</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            返回一个File数组，表示该File目录中的所有子文件或目录</span></span><br><span class=\"line\"><span class=\"comment\">            遍历构造方法中给出的目录，会获取当前目录中所有文件/文件夹，把文件/文件夹封装为File对象，多个File对象存储到File数组中</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file&quot;</span>);</span><br><span class=\"line\">        File[] files = f.listFiles();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File i : files) &#123;</span><br><span class=\"line\">            System.out.println(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 主函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        show01();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------------&quot;</span>);</span><br><span class=\"line\">        show02();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/79abdda7cf5b4d7ebd3cbeabfd3f461c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"九：递归打印多级目录\"><a href=\"#九：递归打印多级目录\" class=\"headerlink\" title=\"九：递归打印多级目录\"></a>九：递归打印多级目录</h1><p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileRecursion</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">getAllFile</span><span class=\"params\">(File dir)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(dir);</span><br><span class=\"line\">        File[] files = dir.listFiles();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File f : files) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (f.isDirectory()) &#123;</span><br><span class=\"line\">                getAllFile(f);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(f);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file&quot;</span>);</span><br><span class=\"line\">        getAllFile(file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src\\base\\file</span><br><span class=\"line\">src\\base\\file\\fileCreateOrDel.java</span><br><span class=\"line\">src\\base\\file\\fileErgodic.java</span><br><span class=\"line\">src\\base\\file\\fileJudge.java</span><br><span class=\"line\">src\\base\\file\\fileRecursion.java</span><br><span class=\"line\">src\\base\\file\\fileStruct.java</span><br><span class=\"line\">src\\base\\file\\fileTest</span><br><span class=\"line\">src\\base\\file\\fileTest\\bbb</span><br><span class=\"line\">src\\base\\file\\fileTest\\bbb\\ccc</span><br><span class=\"line\">src\\base\\file\\fileTest\\new</span><br><span class=\"line\">src\\base\\file\\fileTest\\new.txt</span><br><span class=\"line\">src\\base\\file\\fileTest\\new2</span><br><span class=\"line\">src\\base\\file\\getMethod.java</span><br><span class=\"line\">src\\base\\file\\staticVar.java</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/441f834c51314a578d50bcb6f8c23567.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：File类的概述\"><a href=\"#一：File类的概述\" class=\"headerlink\" title=\"一：File类的概述\"></a>一：File类的概述</h1><p>java有个io包，java用于操作流的对象都在io包中，io流简单来说就是input和output流，io流主要是用来处理设备之间的数据传输，Java IO对于数据的操作都是通过流实现的。</p>\n<p>在整个java.io包中最重要的就是5个类和一个接口。5个类指的是File、OutputStream、InputStream、Writer、Reader；一个接口指的是Serializable。而这篇博客只会涉及到5个类中的File类。</p>\n<p>java.io.File类是文件和目录路径名的抽象表示，主要用于文件和目录的创建查找和删除等操作。在Java中，File 类是 java.io 包中唯一代表磁盘文件本身的对象，但是File 类不能访问文件内容本身，如果需要访问文件内容本身，则需要使用输入/输出流。</p>\n<p>java.io.File类的方法：</p>\n<ul>\n<li>创建一个文件/文件夹</li>\n<li>删除一个文件/文件夹</li>\n<li>获取文件/文件夹</li>\n<li>判断文件/文件夹是否存在</li>\n<li>对文件夹进行遍历</li>\n<li>获取文件大小</li>\n</ul>\n<p>File类的学习主要是围绕三个单词：</p>\n<ul>\n<li>file: 文件</li>\n<li>directory: 文件夹/目录</li>\n<li>path: 路径</li>\n</ul>\n<h1 id=\"二：File类的静态成员变量\"><a href=\"#二：File类的静态成员变量\" class=\"headerlink\" title=\"二：File类的静态成员变量\"></a>二：File类的静态成员变量</h1><ul>\n<li><code>static String pathSeparator</code> ：与系统有关的路径分隔符，为了方便，它被表示为一个字符串。</li>\n<li><code>static char pathSeparatorChar</code> ：与系统有关的路径分隔符。</li>\n<li><code>static String separator</code> ：与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。</li>\n<li><code>static char separatorChar</code> ：与系统有关的默认名称分隔符</li>\n</ul>\n<p>路径分隔符和文件分隔符在不同操作系统下是不同的，路径分隔符在Windows下是”;”，Linux下是”:”，文件名称分隔符在Windows下是”&quot;，而Linux下是”/“。</p>\n<p>比如Windows操作系统下有这样一个路径：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Windows\\Help</span><br></pre></td></tr></table></figure>\n<p>那么在Linux下就是这样的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:/Windows/Help</span><br></pre></td></tr></table></figure>\n<p>因此经行路径相关操作时路径不能绝对化，以上面的路径为例，应该写成这种形式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;C&quot; + File</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">staticVar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        static String pathSeparator 与系统有关的路径分隔符，为了方便，它被表示为一个字符串。</span></span><br><span class=\"line\"><span class=\"comment\">        static char pathSeparatorChar 与系统有关的路径分隔符。</span></span><br><span class=\"line\"><span class=\"comment\">        static String separator 与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。</span></span><br><span class=\"line\"><span class=\"comment\">        static char separatorChar 与系统有关的默认名称分隔符</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        String pathSeparator = File.pathSeparator;  <span class=\"comment\">// 路径分隔符，Windows下是&quot;;&quot;，Linux下是&quot;:&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">char</span> pathSeparatorChar = File.pathSeparatorChar;</span><br><span class=\"line\">        String separator = File.separator;  <span class=\"comment\">// 文件名称分隔符，Windows下是&quot;\\&quot;，而Linux下是&quot;/&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">char</span> separatorChar = File.separatorChar;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(pathSeparator);</span><br><span class=\"line\">        System.out.println(pathSeparatorChar);</span><br><span class=\"line\">        System.out.println(separator);</span><br><span class=\"line\">        System.out.println(separatorChar);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;C:&quot;</span> + File.separator + <span class=\"string\">&quot;Windows&quot;</span> + File.separator + <span class=\"string\">&quot;Help&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/f9e741cea6994c349ce199b631ab983b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：File类的构造方法\"><a href=\"#三：File类的构造方法\" class=\"headerlink\" title=\"三：File类的构造方法\"></a>三：File类的构造方法</h1><p>File 类提供了如下三种形式构造方法。</p>\n<ul>\n<li>File(String path)：如果 path 是实际存在的路径，则该 File 对象表示的是目录；如果 path 是文件名，则该 File 对象表示的是文件。</li>\n<li>File(String parent, String child)：parent 是路径名，name 是文件名。</li>\n<li>File(File dir, String name)：dir 是路径对象，name 是文件名。</li>\n</ul>\n<p>三种方法的使用以及一些说明都在代码里：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileStruct</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 方法一</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            File(String pathname) 通过将给定路径名字符串转换为抽象路径来创建一个新的File实例</span></span><br><span class=\"line\"><span class=\"comment\">            参数：</span></span><br><span class=\"line\"><span class=\"comment\">                String pathname: 字符串的路径名称</span></span><br><span class=\"line\"><span class=\"comment\">                路径可以是文件结尾，也可以是文件夹结尾</span></span><br><span class=\"line\"><span class=\"comment\">                路径可以是相对路径，也可以是绝对路径</span></span><br><span class=\"line\"><span class=\"comment\">                创建File对象，只是把字符串路径封装为File对象，不考虑路径的真假情况</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 测试一个绝对路径</span></span><br><span class=\"line\">        File f1 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;E:\\\\fileTest&quot;</span>);  <span class=\"comment\">// 此处需要写两个反斜杠，因为在java中一个反斜杠代表转义，两个反斜杠才是一个反斜杠的意思</span></span><br><span class=\"line\">        System.out.println(f1);  <span class=\"comment\">// 输出 &quot;E:\\fileTest&quot;，说明重写了Object类的toString方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 测试一个相对路径</span></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;fileTest&quot;</span>);</span><br><span class=\"line\">        System.out.println(f2);  <span class=\"comment\">// 输出 fileTest</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 方法二</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show02</span><span class=\"params\">(String parent, String child)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            File(String parent, String child) 根据parent路径名字符串和child路径名字符串创建一个新的File实例</span></span><br><span class=\"line\"><span class=\"comment\">            参数：把路径分成了两部分</span></span><br><span class=\"line\"><span class=\"comment\">                String parent: 父路径</span></span><br><span class=\"line\"><span class=\"comment\">                String child: 子路径</span></span><br><span class=\"line\"><span class=\"comment\">            好处：父路径和子路径可以单独书写，使用起来非常灵活，父路径和子路径都可以变化</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(parent, child);</span><br><span class=\"line\">        System.out.println(file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 方法三</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show03</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            File(File parent, String child) 根据parent抽象路径名和child路径名字符串创建一个新的File实例</span></span><br><span class=\"line\"><span class=\"comment\">            参数：把路径分成了两部分</span></span><br><span class=\"line\"><span class=\"comment\">                File parent: 父路径</span></span><br><span class=\"line\"><span class=\"comment\">                String child: 子路径</span></span><br><span class=\"line\"><span class=\"comment\">            好处：</span></span><br><span class=\"line\"><span class=\"comment\">                父路径和子路径可以单独书写，使用起来非常灵活，父路径和子路径都可以变化</span></span><br><span class=\"line\"><span class=\"comment\">                父路径是File类型，可以使用File的方法对路径经行一些操作，再使用路径创建对象</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        File parent = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;E:\\\\fileTest&quot;</span>);</span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(parent, <span class=\"string\">&quot;test.txt&quot;</span>);</span><br><span class=\"line\">        System.out.println(file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 主函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            File类的构造方法</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;----- 方法一输出 -----&quot;</span>);</span><br><span class=\"line\">        show01();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;----- 方法二输出 -----&quot;</span>);</span><br><span class=\"line\">        show02(<span class=\"string\">&quot;E:\\\\fileTest&quot;</span>, <span class=\"string\">&quot;test.txt&quot;</span>);  <span class=\"comment\">// 输出&quot;E:\\fileTest\\test.txt&quot;</span></span><br><span class=\"line\">        show02(<span class=\"string\">&quot;D:\\\\fileTest&quot;</span>, <span class=\"string\">&quot;test.java&quot;</span>);  <span class=\"comment\">// 输出&quot;D:\\fileTest\\test.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;----- 方法三输出 -----&quot;</span>);</span><br><span class=\"line\">        show03();  <span class=\"comment\">// 输出&quot;E:\\fileTest\\test.txt&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/b2f82472082a4fffbe4fb3ea4b545fc8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：File类的常用方法：\"><a href=\"#四：File类的常用方法：\" class=\"headerlink\" title=\"四：File类的常用方法：\"></a>四：File类的常用方法：</h1><p>这里只列一个表，后续内容会分类型对一些方法进行说明。</p>\n<table border=\"1\">\n<caption>\n<br>\n表 1&nbsp; File类的常用方法</caption>\n<tbody>\n<tr>\n<th>\n方法名称</th>\n<th>\n说明</th>\n</tr>\n<tr>\n<td>\nboolean canRead()</td>\n<td>\n测试应用程序是否能从指定的文件中进行读取</td>\n</tr>\n<tr>\n<td>\nboolean canWrite()</td>\n<td>\n测试应用程序是否能写当前文件</td>\n</tr>\n<tr>\n<td>\nboolean delete()</td>\n<td>\n删除当前对象指定的文件</td>\n</tr>\n<tr>\n<td>\nboolean exists()</td>\n<td>\n测试当前 File 是否存在</td>\n</tr>\n<tr>\n<td>\nString getAbsolutePath()</td>\n<td>\n返回由该对象表示的文件的绝对路径名</td>\n</tr>\n<tr>\n<td>\nString getName()</td>\n<td>\n返回表示当前对象的文件名或路径名（如果是路径，则返回最后一级子路径名）</td>\n</tr>\n<tr>\n<td>\nString getParent()</td>\n<td>\n返回当前 File 对象所对应目录（最后一级子目录）的父目录名</td>\n</tr>\n<tr>\n<td>\nboolean isAbsolute()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个绝对路径名。该方法消除了不同平台的差异，可以直接判断 file 对象是否为绝对路径。在 UNIX/Linux/BSD 等系统上，如果路径名开头是一条斜线<code>/</code>，则表明该 File 对象对应一个绝对路径；在 Windows 等系统上，如果路径开头是盘符，则说明它是一个绝对路径。</td>\n</tr>\n<tr>\n<td>\nboolean isDirectory()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个路径</td>\n</tr>\n<tr>\n<td>\nboolean isFile()</td>\n<td>\n测试当前 File 对象表示的文件是否为一个“普通”文件</td>\n</tr>\n<tr>\n<td>\nlong lastModified()</td>\n<td>\n返回当前 File 对象表示的文件最后修改的时间</td>\n</tr>\n<tr>\n<td>\nlong length()</td>\n<td>\n返回当前 File 对象表示的文件长度</td>\n</tr>\n<tr>\n<td>\nString[] list()</td>\n<td>\n返回当前 File 对象指定的路径文件列表</td>\n</tr>\n<tr>\n<td>\nString[]&nbsp;list(FilenameFilter)</td>\n<td>\n返回当前 File 对象指定的目录中满足指定过滤器的文件列表</td>\n</tr>\n<tr>\n<td>\nboolean mkdir()</td>\n<td>\n创建一个目录，它的路径名由当前 File 对象指定</td>\n</tr>\n<tr>\n<td>\nboolean mkdirs()</td>\n<td>\n创建一个目录，它的路径名由当前 File 对象指定</td>\n</tr>\n<tr>\n<td>\nboolean renameTo(File)</td>\n<td>\n将当前 File 对象指定的文件更名为给定参数 File 指定的路径名</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"五：File类获取功能的方法\"><a href=\"#五：File类获取功能的方法\" class=\"headerlink\" title=\"五：File类获取功能的方法\"></a>五：File类获取功能的方法</h1><ul>\n<li><code>public String getAbsolutePath()</code> : 返回此File的绝对路径名字符串</li>\n<li><code>public String getPath()</code> : 将此File转换为路径名字符串</li>\n<li><code>public String getName()</code> : 返回由此File表示的文件或者目录的名称</li>\n<li><code>public long length()</code> : 返回由此File表示的文件的大小，如果路径不存在，则返回0</li>\n</ul>\n<p>演示代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getMethod</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         值得注意的是，如果使用相对路径，那么根路径是项目的根路径，</span></span><br><span class=\"line\"><span class=\"comment\">         在这个项目中，根路径是code，因此test.txt的相对路径为src\\base\\file\\fileTest\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\test.txt&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件绝对路径：&quot;</span> + f.getAbsolutePath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件相对路径：&quot;</span> + f.getPath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件名称：&quot;</span> + f.getName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件大小：&quot;</span> + f.length() + <span class=\"string\">&quot;字节&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;目录绝对路径：&quot;</span> + f2.getAbsolutePath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;目录相对路径：&quot;</span> + f2.getPath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;目录名称：&quot;</span> + f2.getName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;目录大小：&quot;</span> + f2.length());  <span class=\"comment\">// 文件夹没有大小概念，因此返回0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/cc80acefae4c417bb9991e3584b744e8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六：File类判断功能的方法\"><a href=\"#六：File类判断功能的方法\" class=\"headerlink\" title=\"六：File类判断功能的方法\"></a>六：File类判断功能的方法</h1><ul>\n<li><code>public boolean exists()</code> ：此File表示的文件或目录是否实际存在</li>\n<li><code>public boolean isDirectory()</code> ：此File表示的是否为目录</li>\n<li><code>public boolean isFile()</code> ：此File表示的是否为文件</li>\n</ul>\n<p>演示代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileJudge</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        File f1 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest&quot;</span>);  <span class=\"comment\">// 文件夹</span></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\test.txt&quot;</span>);  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">        File f3 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\test&quot;</span>);  <span class=\"comment\">// 不存在的文件夹</span></span><br><span class=\"line\">        File f4 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\demo.txt&quot;</span>);  <span class=\"comment\">// 不存在的文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(f1.exists());  <span class=\"comment\">// true</span></span><br><span class=\"line\">        System.out.println(f2.exists());  <span class=\"comment\">// true</span></span><br><span class=\"line\">        System.out.println(f3.exists());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f4.exists());  <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(f1.isDirectory());  <span class=\"comment\">// true</span></span><br><span class=\"line\">        System.out.println(f2.isDirectory());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f3.isDirectory());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f4.isDirectory());  <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(f1.isFile());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f2.isFile());  <span class=\"comment\">// true</span></span><br><span class=\"line\">        System.out.println(f3.isFile());  <span class=\"comment\">// false</span></span><br><span class=\"line\">        System.out.println(f4.isFile());  <span class=\"comment\">// false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/19d365d3fc504a24bb30bbf086a7b800.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：FIle类创建删除功能的方法\"><a href=\"#七：FIle类创建删除功能的方法\" class=\"headerlink\" title=\"七：FIle类创建删除功能的方法\"></a>七：FIle类创建删除功能的方法</h1><ul>\n<li><code>public boolean createNewFile()</code> ：当且仅当具有该名称的文件尚不存在时，创建一个新的空文件夹</li>\n<li><code>public boolean delete()</code> ：删除由此File表示的文件或目录</li>\n<li><code>public boolean mkdir()</code> ：创建由此File表示的目录</li>\n<li><code>public boolean mkdirs</code> ：创建由此File表示的目录，包括任何必需但不存在的父目录</li>\n</ul>\n<p>演示代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileCreateOrDel</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// createNewFile()，如果抛出异常，我们调用throws或trycatch捕获处理</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show01</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            当且仅当具有该名称的文件尚不存在时，创建一个新的空文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            返回值是布尔值</span></span><br><span class=\"line\"><span class=\"comment\">            此方法只能创建文件，不能创建文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            创建文件的路径必须是存在的，否则抛出异常</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\new.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b = f.createNewFile();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b:&quot;</span> + b);  <span class=\"comment\">// true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// delete()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show02</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            该方法可以删除文件，也可以返回文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            删除文件夹时如果文件夹有内容则不删除返回false</span></span><br><span class=\"line\"><span class=\"comment\">            路径不存在则返回false</span></span><br><span class=\"line\"><span class=\"comment\">            delete是直接在硬盘上删除文件/文件夹，不会经过回收站，因此需要谨慎</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\test.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b = f.delete();</span><br><span class=\"line\">        System.out.println(b);  <span class=\"comment\">// true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// mkdir()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show03</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            创建单级空文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            文件夹存在会返回false，并且不会创建</span></span><br><span class=\"line\"><span class=\"comment\">            如果用这个方法创建多级文件夹，会返回false而且不创建</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f1 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\new&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b1 = f1.mkdir();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b1:&quot;</span> + b1);  <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\hhh\\\\aaa&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b2 = f1.mkdir();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b2:&quot;</span> + b2);  <span class=\"comment\">// false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// mkdirs()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show04</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            可以创建单级空文件夹，也可以创建多级空文件夹</span></span><br><span class=\"line\"><span class=\"comment\">            文件夹存在会返回false，并且不会创建</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f1 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\new2&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b1 = f1.mkdirs();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b1:&quot;</span> + b1);  <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">        File f2 = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file\\\\fileTest\\\\bbb\\\\ccc&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> b2 = f2.mkdirs();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;b2:&quot;</span> + b2);  <span class=\"comment\">// true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 主函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        show01();</span><br><span class=\"line\">        show02();</span><br><span class=\"line\">        show03();</span><br><span class=\"line\">        show04();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/834ed5c2d0514b89a8314cefbad7443c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"八：File类遍历目录的功能\"><a href=\"#八：File类遍历目录的功能\" class=\"headerlink\" title=\"八：File类遍历目录的功能\"></a>八：File类遍历目录的功能</h1><ul>\n<li><code>public String[] list()</code> ：返回一个String数组，表示该File目录中的所有子文件或目录</li>\n<li><code>public File[] listFiles()</code> ：返回一个File数组，表示该File目录中的所有子文件或目录</li>\n</ul>\n<p>注意：</p>\n<ul>\n<li>list方法和listFiles方法遍历的是构造方法中给出的目录</li>\n<li>如果构造方法中给出的目录的路径不存在，会抛出空指针异常</li>\n<li>如果构造方法中给出的路径不是一个目录，也会抛出空指针异常</li>\n</ul>\n<p>演示代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileErgodic</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// public String[] list()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            返回一个String数组，表示该File目录中的所有子文件或目录</span></span><br><span class=\"line\"><span class=\"comment\">            遍历构造方法中给出的目录，会获取当前目录中所有文件/文件夹的名称，把获取到的多个名称存储到一个String类型的数组中</span></span><br><span class=\"line\"><span class=\"comment\">            只会遍历当前目录，如果当前目录含有一个文件夹，不会遍历该文件夹内部</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file&quot;</span>);</span><br><span class=\"line\">        String[] arr = f.list();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String fileName : arr) &#123;</span><br><span class=\"line\">            System.out.println(fileName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// public File[] listFiles()</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show02</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            返回一个File数组，表示该File目录中的所有子文件或目录</span></span><br><span class=\"line\"><span class=\"comment\">            遍历构造方法中给出的目录，会获取当前目录中所有文件/文件夹，把文件/文件夹封装为File对象，多个File对象存储到File数组中</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file&quot;</span>);</span><br><span class=\"line\">        File[] files = f.listFiles();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File i : files) &#123;</span><br><span class=\"line\">            System.out.println(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 主函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        show01();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------------&quot;</span>);</span><br><span class=\"line\">        show02();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/79abdda7cf5b4d7ebd3cbeabfd3f461c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"九：递归打印多级目录\"><a href=\"#九：递归打印多级目录\" class=\"headerlink\" title=\"九：递归打印多级目录\"></a>九：递归打印多级目录</h1><p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> base.file;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fileRecursion</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">getAllFile</span><span class=\"params\">(File dir)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(dir);</span><br><span class=\"line\">        File[] files = dir.listFiles();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File f : files) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (f.isDirectory()) &#123;</span><br><span class=\"line\">                getAllFile(f);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(f);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;src\\\\base\\\\file&quot;</span>);</span><br><span class=\"line\">        getAllFile(file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src\\base\\file</span><br><span class=\"line\">src\\base\\file\\fileCreateOrDel.java</span><br><span class=\"line\">src\\base\\file\\fileErgodic.java</span><br><span class=\"line\">src\\base\\file\\fileJudge.java</span><br><span class=\"line\">src\\base\\file\\fileRecursion.java</span><br><span class=\"line\">src\\base\\file\\fileStruct.java</span><br><span class=\"line\">src\\base\\file\\fileTest</span><br><span class=\"line\">src\\base\\file\\fileTest\\bbb</span><br><span class=\"line\">src\\base\\file\\fileTest\\bbb\\ccc</span><br><span class=\"line\">src\\base\\file\\fileTest\\new</span><br><span class=\"line\">src\\base\\file\\fileTest\\new.txt</span><br><span class=\"line\">src\\base\\file\\fileTest\\new2</span><br><span class=\"line\">src\\base\\file\\getMethod.java</span><br><span class=\"line\">src\\base\\file\\staticVar.java</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/441f834c51314a578d50bcb6f8c23567.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"PHP之GD图像处理","date":"2021-07-28T07:35:02.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/16.jpg","_content":"\n## 一：引入与介绍\n PHP 除了可以处理文本数据外，通过一个叫 GD 的 PHP 扩展库，PHP 还可以动态生成不同格式图像或者对已有图片进行加工处理。\n\n**GD库是什么：** GD 库（也可以称为 GD2 函数库）是一个开源的用于创建图形图像的函数库，该函数库由C语言编写，可以在 Perl，PHP 等多种语言中使用。GD 库中提供了一系列用来处理图片的 API（接口），使用 GD 库可以处理图片、生成图片，也可以给图片加水印等。另外，很多开源项目都对 GD 库提供了很好的技术支持，如 Jpgraph 类库就是基于 GD 库开发的用于制作复杂统计图的类库。\n\n**GD库可以做什么：** 在 PHP 中使用 GD 库可以在页面中绘制各种图形图像，以及统计图，如果与 Ajax 技术相结合还可以制作出各种强大的动态图表。还有就是在网站登陆页面中使用的验证码，也可以使用 GD 库来实现。需要注意的是，GD 库开始时是支持 GIF 格式的，但由于 GIF 使用了有版权争议的 LZW 算法，会引起法律问题，于是从 GD 库 1.6 版起所有的 GIF 支持都移除了，但是又在 GD 库 2.0.28 版起又加了回来。如果使用了二者之间版本的 GD 库时，有关 GIF 相关函数是不可用。\n\n**开启GD库扩展：** GD 库在 PHP5 及以上的版本中是默认安装好的，但是在使用之前需要先开启 GD 库，在 Windows 系统下只需将 php.ini 配置文件中“extension=php_gd2.dll”一项前面的注释删除即可。注意：不同版本的 PHP，它们配置文件中关于 GD 库的配置项也能有所不同，比如在 php7.2 及之后的版本中 GD 库的配置项就变成了“extension=gd2”。\n![展示](https://img-blog.csdnimg.cn/5b7ff3e32013469a874df52426c7b63e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)是否引入成功可以通过phpinfo()函数查看：\n![展示](https://img-blog.csdnimg.cn/0f6c8b1d402b4b94bec720236575375e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)或者通过打印 gd_info() 函数来验证 GD 库是否安装成功：\n![展示](https://img-blog.csdnimg.cn/2a1e32a4f1bb44e18e947eb95de7ab65.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 二：利用画布资源\n在 PHP 中，通过 GD 库处理图像的操作，都是先在内存中处理，操作完成以后再以文件流的方式，输出到浏览器或保存在服务器的磁盘中。创建图像一般分为 4 个基本步骤。\n\n+ 创建画布：所有的绘图设计都需要在一个背景图片上完成，而画布实际上就是在内存中开辟的一块临时区域，用于存储图像的信息。以后的图像操作都将基于这个背景画布，该画布的管理就类似于我们在画画时使用的画布。\n+ 绘制图像：画布创建完成以后，就可以通过这个画布资源，使用各种画像函数设置图像的颜色、填充画布、画点、线段、各种几何图形，以及向图像中添加文本等。\n+ 输出图像：完成整个图像的绘制以后，需要将图像以某种格式保存到服务器指定的文件中，或将图像直接输出到浏览器上显示给用户。在图像输出之前，一定要使用 header() 函数发送 Content-type 通知浏览器，这次发送的是图片不是文本。\n+ 释放资源：图像被输出以后，画布中的内容也不再有用。出于节约系统资源的考虑，需要及时清除画布占用的所有内存资源。\n\n### 1. 创建画布\n1). imagecreate(宽, 高)： 创建一个空白画布(背景是白色)\n2). imagecreatetruecolor(宽, 高)：创建一个真彩画布(背景色是黑色, 需要填充)\n3). imagecreatefromjpeg(图片文件路径)：打开一个jpeg格式的图片资源\n4). imagecreatefromgif(图片文件路径)： 打开一个gif格式图片资源（PHP中无法实现动态）\n5). imagecreatefrompng(图片文件路径)： 打开png格式图片资源\n\n imagecreate(int $width, int $height)和imagecreatetruecolor(int $width, int $height)两个函数都可以创建一张画布，而且成功后都会返回一个资源句柄，失败则返回 FALSE。不同的是它们可以容纳的色彩范围不同，imagecreate() 创建一个基于普通调色板的图像，通常支持 256 色；而 imagecreatetruecolor() 可以创建一个真色彩图像，但是它不能用于 GIF 格式图像。\n\n```php\necho \"<pre>\";\n\n// 创建一个空白画布\n$img1 = @imagecreate(100, 100) or die('图片初始化失败');\nvar_dump($img1);\n// 创建一个真彩画布\n$img2 = @imagecreatetruecolor(100, 100) or die('图片初始化失败');\nvar_dump($img2);\n\n/*\n * 由于没有在画布上执行任何操作，所以浏览器不会输出画布。\n * 但是可以通过 imagesx() 和 imagesy() 来获取图像的宽和高（单位是像素）\n */\necho '画布1的宽度为：'.imagesx($img1).'像素' . '<br>';\necho '画布1的高度为：'.imagesy($img1).'像素' . '<br>';\n\n// 从已有的jpeg图片中打开资源\n$img3 = @imagecreatefromjpeg('../0.image/52.jpeg') or die('图片初始化失败');\nvar_dump($img3);\n```\n\n![展示](https://img-blog.csdnimg.cn/26d8ec645817414493bd6f2322e70068.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### 2. 输出图像\n在 PHP 中可以使用不同的函数输出不同格式的图像，如下表所示是常用的图像输出函数。\n<table>\n<tbody>\n<tr>\n<th>\n函数名</th>\n<th>\n描述</th>\n</tr>\n<tr>\n<td>\nimagegif()</td>\n<td>\n输出一个GIF格式图像到浏览器或文件</td>\n</tr>\n<tr>\n<td>\nimagejpeg()</td>\n<td>\n输出一个JPEG格式图像到浏览器或文件</td>\n</tr>\n<tr>\n<td>\nimagepng()&nbsp;</td>\n<td>\n输出一个PNG格式图像到浏览器或文件</td>\n</tr>\n</tbody>\n</table>\n\n语法格式如下：\n\n```php\nimagegif($image[, $filename]);  // 保存成gif格式图片\n\nimagejpeg($image[, $filename[, $quality]]);  // 保存成jpeg格式图片\n\nimagepng($image[, $filename]);  // 保存成png格式图片\n```\n其中，\\$image 为创建的图像资源；\\$filename 为可选参数，用来设置文件的保存路径，如果设置为 NULL，则将会直接输出原始图像流；\\$quality 为可选参数，用来设置输出图片的质量，范围从 0（最差质量，文件更小）到 100（最佳质量，文件最大）。默认为 IJG 默认的质量值（大约为 75）。\n\n```php\n<?php\n// header() 是用来告诉浏览器以什么形式输出图像的，不能省略。如果省略可能会出现乱码。\nheader('Content-type:image/png');\n\n$image = imagecreatefromjpeg('https://www.runoob.com/images/pulpit.jpg');\nimagepng($image,'php.png');\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e5d276cf2f1e4d98913a2f82f200eb81.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### 3. 释放资源\n在图像的所有资源使用完毕后，通常需要释放图像处理所占用的内存。在 PHP 中可以通过 imagedestroy() 函数来释放图像资源, 另外，释放图像资源的操作是没有输出内容的，其语法格式如下所示：\n\n```php\nimagedestroy($image);\n```\n\n### 4. 绘制图像\n**1). 分配颜色 ：**\n在真彩图片资源中，所有分配的颜色都不会自动给图片资源上色，是用来后续操作图片资源的时候指定着色的。但是如果当前使用的imagecreate创建的图片资源，那么第一个分配的颜色会自动被着色为图片背景色。需要注意的是，凡是给图片上增加内容，基本都要分配颜色(每一个操作图片的函数之前，都需要先调用分配颜色的函数得到一个颜色)\n\n**imagecolorallocate() 函数**\nimagecolorallocate() 函数可以为一个图像资源分配颜色，如果在图像中需要设置多种颜色，只要多次调用该函数即可。函数的语法格式如下所示：\n```php\n imagecolorallocate($image, $red, $green, $blue);\n```\n\n其中，\\$image 为要设置颜色的图像资源，imagecolorallocate() 函数会返回一个标识符，代表了由给定的 RGB 成分组成的颜色；\\$red，\\$green 和\\$blue 分别是所需要的颜色的红，绿，蓝成分，取值范围是 0 到 255 的整数或者十六进制的 0x00 到 0xFF。\n\n**imagecolorallocatealpha() 函数**\nimagecolorallocatealpha() 函数的作用和 imagecolorallocate() 相同，但多了一个额外的设置透明度的参数 alpha，函数的语法格式如下：\n\n```php\nimagecolorallocatealpha($image, $red, $green, $blue, $alpha);\n```\n其中，\\$image 为要设置颜色的图像资源；\\$red，\\$green 和 \\$blue 分别是所需要的颜色的红，绿，蓝成分，取值范围是 0 到 255 的整数或者十六进制的 0x00 到 0xFF；\\$alpha 用来设置颜色的透明的，取值范围在 0 到 127 之间，0 表示完全不透明，127 则表示完全透明。\n\n**2). 填充区域 ：**\n区域填充不可以用来绘制图像，但它可以将一个已存在图像的颜色替换为其它颜色。在 PHP 中通过 imagefill() 函数来执行区域填充，它的语法格式如下所示：\n\n```php\nimagefill($image, $x, $y, $color);\n```\n其中，\\$image 为创建的图像资源；\\$x 和 \\$y 为要设置颜色的横纵坐标；\\$color 为要设置的颜色。\n\nimagefill()的填充逻辑：从指定点开始自动匹配相邻点，如果颜色一致，则自动渲染，扩展到全图。\n\n**3). 画点和直线 ：**\n画点和线是绘制图像中最基本的操作，如果灵活使用，可以通过它们绘制出千变万化的图像。在 PHP 中，使用 imagesetpixel() 函数在画布中绘制一个单一像素的点，并且可以设置点的颜色，函数的语法格式如下：\n\n```php\nimagesetpixel($image, $x, $y, $color);\n```\n该函数可以在第一个参数 \\$image 提供的画布中，在（\\$x，\\$y）的坐标位置上，绘制一个颜色为 \\$color 的一个像素点。在实际开发中还可以通过循环和随机数的结合来绘制更多的像素点。\n\n如果需要绘制一条线段，则可以使用 imageline() 函数，其语法格式如下：\n\n```php\nimageline($image, $x1, $y1, $x2, $y2, $color);\n```\n我们都知道两个点可以确定一条线段，所以该函数可以在 \\$image 提供的画布中，从坐标（\\$x1，\\$y1）到坐标（\\$x2，\\$y2）绘制一条颜色为 \\$color 的线段。\n\n**4). 画矩形 ：**\n在 PHP 中我们可以使用 imagerectangle() 或者 imagefilledrectangle() 函数来绘制一个矩形，与 imagerectangle() 函数不同的是 imagefilledrectangle() 函数会在绘制完成矩形后填充矩形，它们的语法格式如下所示：\n\n```php\nimagerectangle($image, $x1, $y1, $x2, $y2, $color);  // $color是边线颜色\n\nimagefilledrectangle($image, $x1, $y1, $x2, $y2, $color);  // $color是矩阵填充色\n```\n这两个函数的功能类似，都是在 \\$image 画布中画一个矩形，矩形的左上角坐标为（\\$x1，\\$y1），右下角坐标为（\\$x2，\\$y2）。\n\n**5). 画多边形 ：**\n在 PHP 中可以使用 imagepolygon() 函数来绘制一个多边形；也可以使用 imagefilledpolygon() 来绘制并填充一个多边形，它们的语法格式如下所示：\n\n```php\nimagepolygon($image, $points, $num_points, $color);  // $color是边线颜色\n\nimagefilledpolygon($image, $points, $num_points, $color);  // $color是多边形填充色\n```\n这两个函数都是可以在画布\\$image 中画一个多边形；\n第二个参数\\$points 是一个数组，包含了多边形的各个顶点坐标，例如 \\$points[0]=x0，\\$points[1]=y0，\\$points[2]=x1，\\$points[3]=y1，依此类推\n第三个参数 \\$num_points 用来设置多边形的顶点数，必须大于 3\n需要注意的是，\\$points 数组中的顶点坐标数（坐标是成对出现的）不得小于多边形的顶点数 \\$num_points。\n\n**6). 画圆弧 ：**\n在 PHP 中可以使用 imagearc() 函数来画出一条弧线或者圆形，也可以使用 imagefilledarc() 函数来绘制弧线或者圆形并填充，它们的语法格式如下所示：\n\n```php\nimagearc($image, $cx, $cy, $width, $height, $start, $end, $color);\n\nimagefilledarc($image, $cx, $cy, $width, $height, $start, $end, $color, $style);\n```\n这两个函数都可以在画布 \\$image 上绘制一个椭圆弧，其中 \\$cx 和 \\$cy 分别为圆弧中心点的横纵坐标；\\$width 和 \\$height 分别为圆弧的宽度和高度；\\$start 和 \\$end 分别代表圆弧的起点角度和终点角度，0° 为钟表 3 点钟的位置，以顺时针方向递增；至于 \\$color 参数，imagearc() 用来表示圆弧的线条颜色，而 imagefilledarc() 用来表示弧线区域的填充色；\n\nimagefilledarc() 函数比 imagearc() 函数多了一个 $style 参数，它用来设置颜色的填充类型，可以是如下的值：\n+ IMG_ARC_PIE：普通填充，产生圆形边界；\n+ IMG_ARC_CHORD：只使用直线连接起点和终点，与 IMG_ARC_PIE 互斥；\n+ IMG_ARC_NOFILL：指明弧或弦只有轮廓，不填充；\n+ IMG_ARC_EDGED：用直线将起始和结束点与中心点相连，和 IMG_ARC_NOFILL 一起使用是画饼状图轮廓的好方法。\n\n\n**7). 在画布上写字 ：**\n想要在图像中显示文字也需要按坐标位置画上去。在 PHP 中不仅支持多种的字体库，还提供了非常灵活的文字绘制方法。例如，在图像中绘制缩放、倾斜、旋转的文字等。常用的绘制文字的函数如下表所示：\n<table>\n<tbody>\n<tr>\n<th>\n函数名&nbsp;</th>\n<th>\n描述</th>\n</tr>\n<tr>\n<td>\nimagestring()</td>\n<td>\n水平绘制一行字符串</td>\n</tr>\n<tr>\n<td>\nimagestringup()</td>\n<td>\n垂直绘制一行字符串</td>\n</tr>\n<tr>\n<td>\nimagechar()</td>\n<td>\n水平绘制一个字符</td>\n</tr>\n<tr>\n<td>\nimagecharup()</td>\n<td>\n垂直绘制一个字符</td>\n</tr>\n<tr>\n<td>\nimagettftext()</td>\n<td>\n用 TrueType 字体向图像中写入文本</td>\n</tr>\n</tbody>\n</table>\n\n虽然这几个函数的功能有所差异，但调用方式是类似的，尤其是 imagestring()、imagestringup()、imagechar() 以及 imagecharup() 函数，它们的参数都是相同的，因此就不再分开介绍了，这些函数的语法格式如下：\n\n```php\nimagestring($image, $font, $x, $y, $s, $color);\n\nimagestringup($image, $font, $x, $y, $s, $col);\n\nimagechar($image, $font, $x, $y, $c, $color);\n\nimagecharup($image, $font, $x, $y, $c, $color);\n```\n使用这些函数可以在画布 \\$image 上，坐标为（\\$x，$y）的位置，绘制字符串（或字符）\\$s，字符串的颜色为 \\$color，字体为 \\$font。如果 \\$font 是 1，2，3，4 或 5，则使用内置字体。\n\n而imagettftext需要特殊说明：它可以使用 TrueType 字体（Windows 系统中扩展名为 .ttf 格式的字体）向图像中写入文本。\n\n语法格式如下：\n```php\nimagettftext($image, $size, $angle, $x, $y, $color, $fontfile, $text)\n```\n\n参数说明如下：\n+ \\$image：由图像创建函数（例如 imagecreatetruecolor()）返回的图像资源；\n+ \\$size：字体的尺寸；\n+ \\$angle：角度制表示的角度，0 度为从左向右读的文本，数值越高则表示将文本进行逆时针旋转。例如 90 度表示从下向上读的文本；\n+ \\$x、$y：表示文本中第一个字符的坐标点（大概是字符左下角的位置）；\n+ \\$color：用来设置文本的颜色；\n+ \\$fontfile：是要使用的 TrueType 字体文件的路径；\n+ \\$text：UTF-8 编码的文本字符串。\n\n## 三：获得图片信息\n1). 获得图片尺寸\n```php\ngetimagesize($image);\n```\ngetimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通 HTML 文件中 IMG 标记中的 height/width 文本字符串。\n\n2). 获得画布尺寸\n\n```php\nimagex($image);  // 获得图片宽度，单位为像素\n\nimagey($image);  // 获得图片高度，单位为像素\n```\n实例：\n```php\n<?php\n// 定义图片\n$image = 'https://www.runoob.com/images/pulpit.jpg';\n\n// 获得图片全部信息\necho '<pre>';\n$info = getimagesize($image);\nvar_dump($info);\n\n// 打开图片资源\n$img = imagecreatefromjpeg($image);\n\n// 获得图片长宽信息\necho imagesx($img) . '<br>';\necho imagesy($img) . '<br>';\n```\n\n![展示](https://img-blog.csdnimg.cn/b3506e23e2804373a83e43bc4c258d6b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\ngetimagesize($image)内容解读：\n\n```php\narray(7) {\n  [0]=>\n  int(304)\n  [1]=>\n  int(228)\n  [2]=>\n  int(2)\n  [3]=>\n  string(24) \"width=\"304\" height=\"228\"\"\n  [\"bits\"]=>\n  int(8)\n  [\"channels\"]=>\n  int(3)\n  [\"mime\"]=>\n  string(10) \"image/jpeg\"\n}\n```\n\n+ array(0)：  int型图片宽度\n\n+ array(1)：  int型图片高度\n\n+ array(2)： 图像类型的标记：1 = GIF，2 = JPG，3 =PNG，4 = SWF，5 = PSD，6 = BMP，7 = TIFF(intel byte order)，8 =TIFF(motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 =JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM。这些标记与 PHP 4.3.0 新加的 IMAGETYPE 常量对应。\n+ array(3)： 文本字符串，内容为\"height=\"yyy\"width=\"xxx\"\"，可直接用于 IMG 标记。 \n+ array(\"bits\")：代表每种颜色的位数。\n+ array(\"channels\") ：代表图片色系，对于 RGB 图像其值为 3，对于 CMYK 图像其值为 4\n+ array(\"mime\") ：自 PHP 4.3.0 起被引入，代表符合该图像的 MIME 类型。此信息可以用来在 HTTP Content-type 头信息中发送正确的信息。\n\n对于GD库的实际运用，我还写了三篇博客，有兴趣可以看看：\n[GD图像处理——验证码处理](https://blog.csdn.net/tongkongyu/article/details/119154877)\n[GD图像处理——水印图实现](https://blog.csdn.net/tongkongyu/article/details/119154901)\n[GD图像处理——缩略图的实现](https://blog.csdn.net/tongkongyu/article/details/119154890)","source":"_posts/PHP/phpGD.md","raw":"---\ntitle: PHP之GD图像处理\ndate: 2021-07-28 15:35:02\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/16.jpg\ntags: \n  - 图像\n  - GD库\ncategories: PHP\n---\n\n## 一：引入与介绍\n PHP 除了可以处理文本数据外，通过一个叫 GD 的 PHP 扩展库，PHP 还可以动态生成不同格式图像或者对已有图片进行加工处理。\n\n**GD库是什么：** GD 库（也可以称为 GD2 函数库）是一个开源的用于创建图形图像的函数库，该函数库由C语言编写，可以在 Perl，PHP 等多种语言中使用。GD 库中提供了一系列用来处理图片的 API（接口），使用 GD 库可以处理图片、生成图片，也可以给图片加水印等。另外，很多开源项目都对 GD 库提供了很好的技术支持，如 Jpgraph 类库就是基于 GD 库开发的用于制作复杂统计图的类库。\n\n**GD库可以做什么：** 在 PHP 中使用 GD 库可以在页面中绘制各种图形图像，以及统计图，如果与 Ajax 技术相结合还可以制作出各种强大的动态图表。还有就是在网站登陆页面中使用的验证码，也可以使用 GD 库来实现。需要注意的是，GD 库开始时是支持 GIF 格式的，但由于 GIF 使用了有版权争议的 LZW 算法，会引起法律问题，于是从 GD 库 1.6 版起所有的 GIF 支持都移除了，但是又在 GD 库 2.0.28 版起又加了回来。如果使用了二者之间版本的 GD 库时，有关 GIF 相关函数是不可用。\n\n**开启GD库扩展：** GD 库在 PHP5 及以上的版本中是默认安装好的，但是在使用之前需要先开启 GD 库，在 Windows 系统下只需将 php.ini 配置文件中“extension=php_gd2.dll”一项前面的注释删除即可。注意：不同版本的 PHP，它们配置文件中关于 GD 库的配置项也能有所不同，比如在 php7.2 及之后的版本中 GD 库的配置项就变成了“extension=gd2”。\n![展示](https://img-blog.csdnimg.cn/5b7ff3e32013469a874df52426c7b63e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)是否引入成功可以通过phpinfo()函数查看：\n![展示](https://img-blog.csdnimg.cn/0f6c8b1d402b4b94bec720236575375e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)或者通过打印 gd_info() 函数来验证 GD 库是否安装成功：\n![展示](https://img-blog.csdnimg.cn/2a1e32a4f1bb44e18e947eb95de7ab65.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n## 二：利用画布资源\n在 PHP 中，通过 GD 库处理图像的操作，都是先在内存中处理，操作完成以后再以文件流的方式，输出到浏览器或保存在服务器的磁盘中。创建图像一般分为 4 个基本步骤。\n\n+ 创建画布：所有的绘图设计都需要在一个背景图片上完成，而画布实际上就是在内存中开辟的一块临时区域，用于存储图像的信息。以后的图像操作都将基于这个背景画布，该画布的管理就类似于我们在画画时使用的画布。\n+ 绘制图像：画布创建完成以后，就可以通过这个画布资源，使用各种画像函数设置图像的颜色、填充画布、画点、线段、各种几何图形，以及向图像中添加文本等。\n+ 输出图像：完成整个图像的绘制以后，需要将图像以某种格式保存到服务器指定的文件中，或将图像直接输出到浏览器上显示给用户。在图像输出之前，一定要使用 header() 函数发送 Content-type 通知浏览器，这次发送的是图片不是文本。\n+ 释放资源：图像被输出以后，画布中的内容也不再有用。出于节约系统资源的考虑，需要及时清除画布占用的所有内存资源。\n\n### 1. 创建画布\n1). imagecreate(宽, 高)： 创建一个空白画布(背景是白色)\n2). imagecreatetruecolor(宽, 高)：创建一个真彩画布(背景色是黑色, 需要填充)\n3). imagecreatefromjpeg(图片文件路径)：打开一个jpeg格式的图片资源\n4). imagecreatefromgif(图片文件路径)： 打开一个gif格式图片资源（PHP中无法实现动态）\n5). imagecreatefrompng(图片文件路径)： 打开png格式图片资源\n\n imagecreate(int $width, int $height)和imagecreatetruecolor(int $width, int $height)两个函数都可以创建一张画布，而且成功后都会返回一个资源句柄，失败则返回 FALSE。不同的是它们可以容纳的色彩范围不同，imagecreate() 创建一个基于普通调色板的图像，通常支持 256 色；而 imagecreatetruecolor() 可以创建一个真色彩图像，但是它不能用于 GIF 格式图像。\n\n```php\necho \"<pre>\";\n\n// 创建一个空白画布\n$img1 = @imagecreate(100, 100) or die('图片初始化失败');\nvar_dump($img1);\n// 创建一个真彩画布\n$img2 = @imagecreatetruecolor(100, 100) or die('图片初始化失败');\nvar_dump($img2);\n\n/*\n * 由于没有在画布上执行任何操作，所以浏览器不会输出画布。\n * 但是可以通过 imagesx() 和 imagesy() 来获取图像的宽和高（单位是像素）\n */\necho '画布1的宽度为：'.imagesx($img1).'像素' . '<br>';\necho '画布1的高度为：'.imagesy($img1).'像素' . '<br>';\n\n// 从已有的jpeg图片中打开资源\n$img3 = @imagecreatefromjpeg('../0.image/52.jpeg') or die('图片初始化失败');\nvar_dump($img3);\n```\n\n![展示](https://img-blog.csdnimg.cn/26d8ec645817414493bd6f2322e70068.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### 2. 输出图像\n在 PHP 中可以使用不同的函数输出不同格式的图像，如下表所示是常用的图像输出函数。\n<table>\n<tbody>\n<tr>\n<th>\n函数名</th>\n<th>\n描述</th>\n</tr>\n<tr>\n<td>\nimagegif()</td>\n<td>\n输出一个GIF格式图像到浏览器或文件</td>\n</tr>\n<tr>\n<td>\nimagejpeg()</td>\n<td>\n输出一个JPEG格式图像到浏览器或文件</td>\n</tr>\n<tr>\n<td>\nimagepng()&nbsp;</td>\n<td>\n输出一个PNG格式图像到浏览器或文件</td>\n</tr>\n</tbody>\n</table>\n\n语法格式如下：\n\n```php\nimagegif($image[, $filename]);  // 保存成gif格式图片\n\nimagejpeg($image[, $filename[, $quality]]);  // 保存成jpeg格式图片\n\nimagepng($image[, $filename]);  // 保存成png格式图片\n```\n其中，\\$image 为创建的图像资源；\\$filename 为可选参数，用来设置文件的保存路径，如果设置为 NULL，则将会直接输出原始图像流；\\$quality 为可选参数，用来设置输出图片的质量，范围从 0（最差质量，文件更小）到 100（最佳质量，文件最大）。默认为 IJG 默认的质量值（大约为 75）。\n\n```php\n<?php\n// header() 是用来告诉浏览器以什么形式输出图像的，不能省略。如果省略可能会出现乱码。\nheader('Content-type:image/png');\n\n$image = imagecreatefromjpeg('https://www.runoob.com/images/pulpit.jpg');\nimagepng($image,'php.png');\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e5d276cf2f1e4d98913a2f82f200eb81.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### 3. 释放资源\n在图像的所有资源使用完毕后，通常需要释放图像处理所占用的内存。在 PHP 中可以通过 imagedestroy() 函数来释放图像资源, 另外，释放图像资源的操作是没有输出内容的，其语法格式如下所示：\n\n```php\nimagedestroy($image);\n```\n\n### 4. 绘制图像\n**1). 分配颜色 ：**\n在真彩图片资源中，所有分配的颜色都不会自动给图片资源上色，是用来后续操作图片资源的时候指定着色的。但是如果当前使用的imagecreate创建的图片资源，那么第一个分配的颜色会自动被着色为图片背景色。需要注意的是，凡是给图片上增加内容，基本都要分配颜色(每一个操作图片的函数之前，都需要先调用分配颜色的函数得到一个颜色)\n\n**imagecolorallocate() 函数**\nimagecolorallocate() 函数可以为一个图像资源分配颜色，如果在图像中需要设置多种颜色，只要多次调用该函数即可。函数的语法格式如下所示：\n```php\n imagecolorallocate($image, $red, $green, $blue);\n```\n\n其中，\\$image 为要设置颜色的图像资源，imagecolorallocate() 函数会返回一个标识符，代表了由给定的 RGB 成分组成的颜色；\\$red，\\$green 和\\$blue 分别是所需要的颜色的红，绿，蓝成分，取值范围是 0 到 255 的整数或者十六进制的 0x00 到 0xFF。\n\n**imagecolorallocatealpha() 函数**\nimagecolorallocatealpha() 函数的作用和 imagecolorallocate() 相同，但多了一个额外的设置透明度的参数 alpha，函数的语法格式如下：\n\n```php\nimagecolorallocatealpha($image, $red, $green, $blue, $alpha);\n```\n其中，\\$image 为要设置颜色的图像资源；\\$red，\\$green 和 \\$blue 分别是所需要的颜色的红，绿，蓝成分，取值范围是 0 到 255 的整数或者十六进制的 0x00 到 0xFF；\\$alpha 用来设置颜色的透明的，取值范围在 0 到 127 之间，0 表示完全不透明，127 则表示完全透明。\n\n**2). 填充区域 ：**\n区域填充不可以用来绘制图像，但它可以将一个已存在图像的颜色替换为其它颜色。在 PHP 中通过 imagefill() 函数来执行区域填充，它的语法格式如下所示：\n\n```php\nimagefill($image, $x, $y, $color);\n```\n其中，\\$image 为创建的图像资源；\\$x 和 \\$y 为要设置颜色的横纵坐标；\\$color 为要设置的颜色。\n\nimagefill()的填充逻辑：从指定点开始自动匹配相邻点，如果颜色一致，则自动渲染，扩展到全图。\n\n**3). 画点和直线 ：**\n画点和线是绘制图像中最基本的操作，如果灵活使用，可以通过它们绘制出千变万化的图像。在 PHP 中，使用 imagesetpixel() 函数在画布中绘制一个单一像素的点，并且可以设置点的颜色，函数的语法格式如下：\n\n```php\nimagesetpixel($image, $x, $y, $color);\n```\n该函数可以在第一个参数 \\$image 提供的画布中，在（\\$x，\\$y）的坐标位置上，绘制一个颜色为 \\$color 的一个像素点。在实际开发中还可以通过循环和随机数的结合来绘制更多的像素点。\n\n如果需要绘制一条线段，则可以使用 imageline() 函数，其语法格式如下：\n\n```php\nimageline($image, $x1, $y1, $x2, $y2, $color);\n```\n我们都知道两个点可以确定一条线段，所以该函数可以在 \\$image 提供的画布中，从坐标（\\$x1，\\$y1）到坐标（\\$x2，\\$y2）绘制一条颜色为 \\$color 的线段。\n\n**4). 画矩形 ：**\n在 PHP 中我们可以使用 imagerectangle() 或者 imagefilledrectangle() 函数来绘制一个矩形，与 imagerectangle() 函数不同的是 imagefilledrectangle() 函数会在绘制完成矩形后填充矩形，它们的语法格式如下所示：\n\n```php\nimagerectangle($image, $x1, $y1, $x2, $y2, $color);  // $color是边线颜色\n\nimagefilledrectangle($image, $x1, $y1, $x2, $y2, $color);  // $color是矩阵填充色\n```\n这两个函数的功能类似，都是在 \\$image 画布中画一个矩形，矩形的左上角坐标为（\\$x1，\\$y1），右下角坐标为（\\$x2，\\$y2）。\n\n**5). 画多边形 ：**\n在 PHP 中可以使用 imagepolygon() 函数来绘制一个多边形；也可以使用 imagefilledpolygon() 来绘制并填充一个多边形，它们的语法格式如下所示：\n\n```php\nimagepolygon($image, $points, $num_points, $color);  // $color是边线颜色\n\nimagefilledpolygon($image, $points, $num_points, $color);  // $color是多边形填充色\n```\n这两个函数都是可以在画布\\$image 中画一个多边形；\n第二个参数\\$points 是一个数组，包含了多边形的各个顶点坐标，例如 \\$points[0]=x0，\\$points[1]=y0，\\$points[2]=x1，\\$points[3]=y1，依此类推\n第三个参数 \\$num_points 用来设置多边形的顶点数，必须大于 3\n需要注意的是，\\$points 数组中的顶点坐标数（坐标是成对出现的）不得小于多边形的顶点数 \\$num_points。\n\n**6). 画圆弧 ：**\n在 PHP 中可以使用 imagearc() 函数来画出一条弧线或者圆形，也可以使用 imagefilledarc() 函数来绘制弧线或者圆形并填充，它们的语法格式如下所示：\n\n```php\nimagearc($image, $cx, $cy, $width, $height, $start, $end, $color);\n\nimagefilledarc($image, $cx, $cy, $width, $height, $start, $end, $color, $style);\n```\n这两个函数都可以在画布 \\$image 上绘制一个椭圆弧，其中 \\$cx 和 \\$cy 分别为圆弧中心点的横纵坐标；\\$width 和 \\$height 分别为圆弧的宽度和高度；\\$start 和 \\$end 分别代表圆弧的起点角度和终点角度，0° 为钟表 3 点钟的位置，以顺时针方向递增；至于 \\$color 参数，imagearc() 用来表示圆弧的线条颜色，而 imagefilledarc() 用来表示弧线区域的填充色；\n\nimagefilledarc() 函数比 imagearc() 函数多了一个 $style 参数，它用来设置颜色的填充类型，可以是如下的值：\n+ IMG_ARC_PIE：普通填充，产生圆形边界；\n+ IMG_ARC_CHORD：只使用直线连接起点和终点，与 IMG_ARC_PIE 互斥；\n+ IMG_ARC_NOFILL：指明弧或弦只有轮廓，不填充；\n+ IMG_ARC_EDGED：用直线将起始和结束点与中心点相连，和 IMG_ARC_NOFILL 一起使用是画饼状图轮廓的好方法。\n\n\n**7). 在画布上写字 ：**\n想要在图像中显示文字也需要按坐标位置画上去。在 PHP 中不仅支持多种的字体库，还提供了非常灵活的文字绘制方法。例如，在图像中绘制缩放、倾斜、旋转的文字等。常用的绘制文字的函数如下表所示：\n<table>\n<tbody>\n<tr>\n<th>\n函数名&nbsp;</th>\n<th>\n描述</th>\n</tr>\n<tr>\n<td>\nimagestring()</td>\n<td>\n水平绘制一行字符串</td>\n</tr>\n<tr>\n<td>\nimagestringup()</td>\n<td>\n垂直绘制一行字符串</td>\n</tr>\n<tr>\n<td>\nimagechar()</td>\n<td>\n水平绘制一个字符</td>\n</tr>\n<tr>\n<td>\nimagecharup()</td>\n<td>\n垂直绘制一个字符</td>\n</tr>\n<tr>\n<td>\nimagettftext()</td>\n<td>\n用 TrueType 字体向图像中写入文本</td>\n</tr>\n</tbody>\n</table>\n\n虽然这几个函数的功能有所差异，但调用方式是类似的，尤其是 imagestring()、imagestringup()、imagechar() 以及 imagecharup() 函数，它们的参数都是相同的，因此就不再分开介绍了，这些函数的语法格式如下：\n\n```php\nimagestring($image, $font, $x, $y, $s, $color);\n\nimagestringup($image, $font, $x, $y, $s, $col);\n\nimagechar($image, $font, $x, $y, $c, $color);\n\nimagecharup($image, $font, $x, $y, $c, $color);\n```\n使用这些函数可以在画布 \\$image 上，坐标为（\\$x，$y）的位置，绘制字符串（或字符）\\$s，字符串的颜色为 \\$color，字体为 \\$font。如果 \\$font 是 1，2，3，4 或 5，则使用内置字体。\n\n而imagettftext需要特殊说明：它可以使用 TrueType 字体（Windows 系统中扩展名为 .ttf 格式的字体）向图像中写入文本。\n\n语法格式如下：\n```php\nimagettftext($image, $size, $angle, $x, $y, $color, $fontfile, $text)\n```\n\n参数说明如下：\n+ \\$image：由图像创建函数（例如 imagecreatetruecolor()）返回的图像资源；\n+ \\$size：字体的尺寸；\n+ \\$angle：角度制表示的角度，0 度为从左向右读的文本，数值越高则表示将文本进行逆时针旋转。例如 90 度表示从下向上读的文本；\n+ \\$x、$y：表示文本中第一个字符的坐标点（大概是字符左下角的位置）；\n+ \\$color：用来设置文本的颜色；\n+ \\$fontfile：是要使用的 TrueType 字体文件的路径；\n+ \\$text：UTF-8 编码的文本字符串。\n\n## 三：获得图片信息\n1). 获得图片尺寸\n```php\ngetimagesize($image);\n```\ngetimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通 HTML 文件中 IMG 标记中的 height/width 文本字符串。\n\n2). 获得画布尺寸\n\n```php\nimagex($image);  // 获得图片宽度，单位为像素\n\nimagey($image);  // 获得图片高度，单位为像素\n```\n实例：\n```php\n<?php\n// 定义图片\n$image = 'https://www.runoob.com/images/pulpit.jpg';\n\n// 获得图片全部信息\necho '<pre>';\n$info = getimagesize($image);\nvar_dump($info);\n\n// 打开图片资源\n$img = imagecreatefromjpeg($image);\n\n// 获得图片长宽信息\necho imagesx($img) . '<br>';\necho imagesy($img) . '<br>';\n```\n\n![展示](https://img-blog.csdnimg.cn/b3506e23e2804373a83e43bc4c258d6b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\ngetimagesize($image)内容解读：\n\n```php\narray(7) {\n  [0]=>\n  int(304)\n  [1]=>\n  int(228)\n  [2]=>\n  int(2)\n  [3]=>\n  string(24) \"width=\"304\" height=\"228\"\"\n  [\"bits\"]=>\n  int(8)\n  [\"channels\"]=>\n  int(3)\n  [\"mime\"]=>\n  string(10) \"image/jpeg\"\n}\n```\n\n+ array(0)：  int型图片宽度\n\n+ array(1)：  int型图片高度\n\n+ array(2)： 图像类型的标记：1 = GIF，2 = JPG，3 =PNG，4 = SWF，5 = PSD，6 = BMP，7 = TIFF(intel byte order)，8 =TIFF(motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 =JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM。这些标记与 PHP 4.3.0 新加的 IMAGETYPE 常量对应。\n+ array(3)： 文本字符串，内容为\"height=\"yyy\"width=\"xxx\"\"，可直接用于 IMG 标记。 \n+ array(\"bits\")：代表每种颜色的位数。\n+ array(\"channels\") ：代表图片色系，对于 RGB 图像其值为 3，对于 CMYK 图像其值为 4\n+ array(\"mime\") ：自 PHP 4.3.0 起被引入，代表符合该图像的 MIME 类型。此信息可以用来在 HTTP Content-type 头信息中发送正确的信息。\n\n对于GD库的实际运用，我还写了三篇博客，有兴趣可以看看：\n[GD图像处理——验证码处理](https://blog.csdn.net/tongkongyu/article/details/119154877)\n[GD图像处理——水印图实现](https://blog.csdn.net/tongkongyu/article/details/119154901)\n[GD图像处理——缩略图的实现](https://blog.csdn.net/tongkongyu/article/details/119154890)","slug":"PHP/phpGD","published":1,"updated":"2021-12-03T14:59:48.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958cb004uasda16ifba0w","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"一：引入与介绍\"><a href=\"#一：引入与介绍\" class=\"headerlink\" title=\"一：引入与介绍\"></a>一：引入与介绍</h2><p> PHP 除了可以处理文本数据外，通过一个叫 GD 的 PHP 扩展库，PHP 还可以动态生成不同格式图像或者对已有图片进行加工处理。</p>\n<p><strong>GD库是什么：</strong> GD 库（也可以称为 GD2 函数库）是一个开源的用于创建图形图像的函数库，该函数库由C语言编写，可以在 Perl，PHP 等多种语言中使用。GD 库中提供了一系列用来处理图片的 API（接口），使用 GD 库可以处理图片、生成图片，也可以给图片加水印等。另外，很多开源项目都对 GD 库提供了很好的技术支持，如 Jpgraph 类库就是基于 GD 库开发的用于制作复杂统计图的类库。</p>\n<p><strong>GD库可以做什么：</strong> 在 PHP 中使用 GD 库可以在页面中绘制各种图形图像，以及统计图，如果与 Ajax 技术相结合还可以制作出各种强大的动态图表。还有就是在网站登陆页面中使用的验证码，也可以使用 GD 库来实现。需要注意的是，GD 库开始时是支持 GIF 格式的，但由于 GIF 使用了有版权争议的 LZW 算法，会引起法律问题，于是从 GD 库 1.6 版起所有的 GIF 支持都移除了，但是又在 GD 库 2.0.28 版起又加了回来。如果使用了二者之间版本的 GD 库时，有关 GIF 相关函数是不可用。</p>\n<p><strong>开启GD库扩展：</strong> GD 库在 PHP5 及以上的版本中是默认安装好的，但是在使用之前需要先开启 GD 库，在 Windows 系统下只需将 php.ini 配置文件中“extension=php_gd2.dll”一项前面的注释删除即可。注意：不同版本的 PHP，它们配置文件中关于 GD 库的配置项也能有所不同，比如在 php7.2 及之后的版本中 GD 库的配置项就变成了“extension=gd2”。<br><img src=\"https://img-blog.csdnimg.cn/5b7ff3e32013469a874df52426c7b63e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">是否引入成功可以通过phpinfo()函数查看：<br><img src=\"https://img-blog.csdnimg.cn/0f6c8b1d402b4b94bec720236575375e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">或者通过打印 gd_info() 函数来验证 GD 库是否安装成功：<br><img src=\"https://img-blog.csdnimg.cn/2a1e32a4f1bb44e18e947eb95de7ab65.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"二：利用画布资源\"><a href=\"#二：利用画布资源\" class=\"headerlink\" title=\"二：利用画布资源\"></a>二：利用画布资源</h2><p>在 PHP 中，通过 GD 库处理图像的操作，都是先在内存中处理，操作完成以后再以文件流的方式，输出到浏览器或保存在服务器的磁盘中。创建图像一般分为 4 个基本步骤。</p>\n<ul>\n<li>创建画布：所有的绘图设计都需要在一个背景图片上完成，而画布实际上就是在内存中开辟的一块临时区域，用于存储图像的信息。以后的图像操作都将基于这个背景画布，该画布的管理就类似于我们在画画时使用的画布。</li>\n<li>绘制图像：画布创建完成以后，就可以通过这个画布资源，使用各种画像函数设置图像的颜色、填充画布、画点、线段、各种几何图形，以及向图像中添加文本等。</li>\n<li>输出图像：完成整个图像的绘制以后，需要将图像以某种格式保存到服务器指定的文件中，或将图像直接输出到浏览器上显示给用户。在图像输出之前，一定要使用 header() 函数发送 Content-type 通知浏览器，这次发送的是图片不是文本。</li>\n<li>释放资源：图像被输出以后，画布中的内容也不再有用。出于节约系统资源的考虑，需要及时清除画布占用的所有内存资源。</li>\n</ul>\n<h3 id=\"1-创建画布\"><a href=\"#1-创建画布\" class=\"headerlink\" title=\"1. 创建画布\"></a>1. 创建画布</h3><p>1). imagecreate(宽, 高)： 创建一个空白画布(背景是白色)<br>2). imagecreatetruecolor(宽, 高)：创建一个真彩画布(背景色是黑色, 需要填充)<br>3). imagecreatefromjpeg(图片文件路径)：打开一个jpeg格式的图片资源<br>4). imagecreatefromgif(图片文件路径)： 打开一个gif格式图片资源（PHP中无法实现动态）<br>5). imagecreatefrompng(图片文件路径)： 打开png格式图片资源</p>\n<p> imagecreate(int $width, int $height)和imagecreatetruecolor(int $width, int $height)两个函数都可以创建一张画布，而且成功后都会返回一个资源句柄，失败则返回 FALSE。不同的是它们可以容纳的色彩范围不同，imagecreate() 创建一个基于普通调色板的图像，通常支持 256 色；而 imagecreatetruecolor() 可以创建一个真色彩图像，但是它不能用于 GIF 格式图像。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个空白画布</span></span><br><span class=\"line\"><span class=\"variable\">$img1</span> = @imagecreate(<span class=\"number\">100</span>, <span class=\"number\">100</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;图片初始化失败&#x27;</span>);</span><br><span class=\"line\">var_dump(<span class=\"variable\">$img1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个真彩画布</span></span><br><span class=\"line\"><span class=\"variable\">$img2</span> = @imagecreatetruecolor(<span class=\"number\">100</span>, <span class=\"number\">100</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;图片初始化失败&#x27;</span>);</span><br><span class=\"line\">var_dump(<span class=\"variable\">$img2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 由于没有在画布上执行任何操作，所以浏览器不会输出画布。</span></span><br><span class=\"line\"><span class=\"comment\"> * 但是可以通过 imagesx() 和 imagesy() 来获取图像的宽和高（单位是像素）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;画布1的宽度为：&#x27;</span>.imagesx(<span class=\"variable\">$img1</span>).<span class=\"string\">&#x27;像素&#x27;</span> . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;画布1的高度为：&#x27;</span>.imagesy(<span class=\"variable\">$img1</span>).<span class=\"string\">&#x27;像素&#x27;</span> . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从已有的jpeg图片中打开资源</span></span><br><span class=\"line\"><span class=\"variable\">$img3</span> = @imagecreatefromjpeg(<span class=\"string\">&#x27;../0.image/52.jpeg&#x27;</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;图片初始化失败&#x27;</span>);</span><br><span class=\"line\">var_dump(<span class=\"variable\">$img3</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/26d8ec645817414493bd6f2322e70068.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"2-输出图像\"><a href=\"#2-输出图像\" class=\"headerlink\" title=\"2. 输出图像\"></a>2. 输出图像</h3><p>在 PHP 中可以使用不同的函数输出不同格式的图像，如下表所示是常用的图像输出函数。</p>\n<table>\n<tbody>\n<tr>\n<th>\n函数名</th>\n<th>\n描述</th>\n</tr>\n<tr>\n<td>\nimagegif()</td>\n<td>\n输出一个GIF格式图像到浏览器或文件</td>\n</tr>\n<tr>\n<td>\nimagejpeg()</td>\n<td>\n输出一个JPEG格式图像到浏览器或文件</td>\n</tr>\n<tr>\n<td>\nimagepng()&nbsp;</td>\n<td>\n输出一个PNG格式图像到浏览器或文件</td>\n</tr>\n</tbody>\n</table>\n\n<p>语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagegif(<span class=\"variable\">$image</span>[, <span class=\"variable\">$filename</span>]);  <span class=\"comment\">// 保存成gif格式图片</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagejpeg(<span class=\"variable\">$image</span>[, <span class=\"variable\">$filename</span>[, <span class=\"variable\">$quality</span>]]);  <span class=\"comment\">// 保存成jpeg格式图片</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagepng(<span class=\"variable\">$image</span>[, <span class=\"variable\">$filename</span>]);  <span class=\"comment\">// 保存成png格式图片</span></span><br></pre></td></tr></table></figure>\n<p>其中，$image 为创建的图像资源；$filename 为可选参数，用来设置文件的保存路径，如果设置为 NULL，则将会直接输出原始图像流；$quality 为可选参数，用来设置输出图片的质量，范围从 0（最差质量，文件更小）到 100（最佳质量，文件最大）。默认为 IJG 默认的质量值（大约为 75）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// header() 是用来告诉浏览器以什么形式输出图像的，不能省略。如果省略可能会出现乱码。</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/png&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$image</span> = imagecreatefromjpeg(<span class=\"string\">&#x27;https://www.runoob.com/images/pulpit.jpg&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$image</span>,<span class=\"string\">&#x27;php.png&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/e5d276cf2f1e4d98913a2f82f200eb81.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-释放资源\"><a href=\"#3-释放资源\" class=\"headerlink\" title=\"3. 释放资源\"></a>3. 释放资源</h3><p>在图像的所有资源使用完毕后，通常需要释放图像处理所占用的内存。在 PHP 中可以通过 imagedestroy() 函数来释放图像资源, 另外，释放图像资源的操作是没有输出内容的，其语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagedestroy(<span class=\"variable\">$image</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-绘制图像\"><a href=\"#4-绘制图像\" class=\"headerlink\" title=\"4. 绘制图像\"></a>4. 绘制图像</h3><p><strong>1). 分配颜色 ：</strong><br>在真彩图片资源中，所有分配的颜色都不会自动给图片资源上色，是用来后续操作图片资源的时候指定着色的。但是如果当前使用的imagecreate创建的图片资源，那么第一个分配的颜色会自动被着色为图片背景色。需要注意的是，凡是给图片上增加内容，基本都要分配颜色(每一个操作图片的函数之前，都需要先调用分配颜色的函数得到一个颜色)</p>\n<p><strong>imagecolorallocate() 函数</strong><br>imagecolorallocate() 函数可以为一个图像资源分配颜色，如果在图像中需要设置多种颜色，只要多次调用该函数即可。函数的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagecolorallocate(<span class=\"variable\">$image</span>, <span class=\"variable\">$red</span>, <span class=\"variable\">$green</span>, <span class=\"variable\">$blue</span>);</span><br></pre></td></tr></table></figure>\n\n<p>其中，$image 为要设置颜色的图像资源，imagecolorallocate() 函数会返回一个标识符，代表了由给定的 RGB 成分组成的颜色；$red，$green 和$blue 分别是所需要的颜色的红，绿，蓝成分，取值范围是 0 到 255 的整数或者十六进制的 0x00 到 0xFF。</p>\n<p><strong>imagecolorallocatealpha() 函数</strong><br>imagecolorallocatealpha() 函数的作用和 imagecolorallocate() 相同，但多了一个额外的设置透明度的参数 alpha，函数的语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagecolorallocatealpha(<span class=\"variable\">$image</span>, <span class=\"variable\">$red</span>, <span class=\"variable\">$green</span>, <span class=\"variable\">$blue</span>, <span class=\"variable\">$alpha</span>);</span><br></pre></td></tr></table></figure>\n<p>其中，$image 为要设置颜色的图像资源；$red，$green 和 $blue 分别是所需要的颜色的红，绿，蓝成分，取值范围是 0 到 255 的整数或者十六进制的 0x00 到 0xFF；$alpha 用来设置颜色的透明的，取值范围在 0 到 127 之间，0 表示完全不透明，127 则表示完全透明。</p>\n<p><strong>2). 填充区域 ：</strong><br>区域填充不可以用来绘制图像，但它可以将一个已存在图像的颜色替换为其它颜色。在 PHP 中通过 imagefill() 函数来执行区域填充，它的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagefill(<span class=\"variable\">$image</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$color</span>);</span><br></pre></td></tr></table></figure>\n<p>其中，$image 为创建的图像资源；$x 和 $y 为要设置颜色的横纵坐标；$color 为要设置的颜色。</p>\n<p>imagefill()的填充逻辑：从指定点开始自动匹配相邻点，如果颜色一致，则自动渲染，扩展到全图。</p>\n<p><strong>3). 画点和直线 ：</strong><br>画点和线是绘制图像中最基本的操作，如果灵活使用，可以通过它们绘制出千变万化的图像。在 PHP 中，使用 imagesetpixel() 函数在画布中绘制一个单一像素的点，并且可以设置点的颜色，函数的语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagesetpixel(<span class=\"variable\">$image</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$color</span>);</span><br></pre></td></tr></table></figure>\n<p>该函数可以在第一个参数 $image 提供的画布中，在（$x，$y）的坐标位置上，绘制一个颜色为 $color 的一个像素点。在实际开发中还可以通过循环和随机数的结合来绘制更多的像素点。</p>\n<p>如果需要绘制一条线段，则可以使用 imageline() 函数，其语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imageline(<span class=\"variable\">$image</span>, <span class=\"variable\">$x1</span>, <span class=\"variable\">$y1</span>, <span class=\"variable\">$x2</span>, <span class=\"variable\">$y2</span>, <span class=\"variable\">$color</span>);</span><br></pre></td></tr></table></figure>\n<p>我们都知道两个点可以确定一条线段，所以该函数可以在 $image 提供的画布中，从坐标（$x1，$y1）到坐标（$x2，$y2）绘制一条颜色为 $color 的线段。</p>\n<p><strong>4). 画矩形 ：</strong><br>在 PHP 中我们可以使用 imagerectangle() 或者 imagefilledrectangle() 函数来绘制一个矩形，与 imagerectangle() 函数不同的是 imagefilledrectangle() 函数会在绘制完成矩形后填充矩形，它们的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagerectangle(<span class=\"variable\">$image</span>, <span class=\"variable\">$x1</span>, <span class=\"variable\">$y1</span>, <span class=\"variable\">$x2</span>, <span class=\"variable\">$y2</span>, <span class=\"variable\">$color</span>);  <span class=\"comment\">// $color是边线颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagefilledrectangle(<span class=\"variable\">$image</span>, <span class=\"variable\">$x1</span>, <span class=\"variable\">$y1</span>, <span class=\"variable\">$x2</span>, <span class=\"variable\">$y2</span>, <span class=\"variable\">$color</span>);  <span class=\"comment\">// $color是矩阵填充色</span></span><br></pre></td></tr></table></figure>\n<p>这两个函数的功能类似，都是在 $image 画布中画一个矩形，矩形的左上角坐标为（$x1，$y1），右下角坐标为（$x2，$y2）。</p>\n<p><strong>5). 画多边形 ：</strong><br>在 PHP 中可以使用 imagepolygon() 函数来绘制一个多边形；也可以使用 imagefilledpolygon() 来绘制并填充一个多边形，它们的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagepolygon(<span class=\"variable\">$image</span>, <span class=\"variable\">$points</span>, <span class=\"variable\">$num_points</span>, <span class=\"variable\">$color</span>);  <span class=\"comment\">// $color是边线颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagefilledpolygon(<span class=\"variable\">$image</span>, <span class=\"variable\">$points</span>, <span class=\"variable\">$num_points</span>, <span class=\"variable\">$color</span>);  <span class=\"comment\">// $color是多边形填充色</span></span><br></pre></td></tr></table></figure>\n<p>这两个函数都是可以在画布$image 中画一个多边形；<br>第二个参数$points 是一个数组，包含了多边形的各个顶点坐标，例如 $points[0]=x0，$points[1]=y0，$points[2]=x1，$points[3]=y1，依此类推<br>第三个参数 $num_points 用来设置多边形的顶点数，必须大于 3<br>需要注意的是，$points 数组中的顶点坐标数（坐标是成对出现的）不得小于多边形的顶点数 $num_points。</p>\n<p><strong>6). 画圆弧 ：</strong><br>在 PHP 中可以使用 imagearc() 函数来画出一条弧线或者圆形，也可以使用 imagefilledarc() 函数来绘制弧线或者圆形并填充，它们的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagearc(<span class=\"variable\">$image</span>, <span class=\"variable\">$cx</span>, <span class=\"variable\">$cy</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"variable\">$start</span>, <span class=\"variable\">$end</span>, <span class=\"variable\">$color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagefilledarc(<span class=\"variable\">$image</span>, <span class=\"variable\">$cx</span>, <span class=\"variable\">$cy</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"variable\">$start</span>, <span class=\"variable\">$end</span>, <span class=\"variable\">$color</span>, <span class=\"variable\">$style</span>);</span><br></pre></td></tr></table></figure>\n<p>这两个函数都可以在画布 $image 上绘制一个椭圆弧，其中 $cx 和 $cy 分别为圆弧中心点的横纵坐标；$width 和 $height 分别为圆弧的宽度和高度；$start 和 $end 分别代表圆弧的起点角度和终点角度，0° 为钟表 3 点钟的位置，以顺时针方向递增；至于 $color 参数，imagearc() 用来表示圆弧的线条颜色，而 imagefilledarc() 用来表示弧线区域的填充色；</p>\n<p>imagefilledarc() 函数比 imagearc() 函数多了一个 $style 参数，它用来设置颜色的填充类型，可以是如下的值：</p>\n<ul>\n<li>IMG_ARC_PIE：普通填充，产生圆形边界；</li>\n<li>IMG_ARC_CHORD：只使用直线连接起点和终点，与 IMG_ARC_PIE 互斥；</li>\n<li>IMG_ARC_NOFILL：指明弧或弦只有轮廓，不填充；</li>\n<li>IMG_ARC_EDGED：用直线将起始和结束点与中心点相连，和 IMG_ARC_NOFILL 一起使用是画饼状图轮廓的好方法。</li>\n</ul>\n<p><strong>7). 在画布上写字 ：</strong><br>想要在图像中显示文字也需要按坐标位置画上去。在 PHP 中不仅支持多种的字体库，还提供了非常灵活的文字绘制方法。例如，在图像中绘制缩放、倾斜、旋转的文字等。常用的绘制文字的函数如下表所示：</p>\n<table>\n<tbody>\n<tr>\n<th>\n函数名&nbsp;</th>\n<th>\n描述</th>\n</tr>\n<tr>\n<td>\nimagestring()</td>\n<td>\n水平绘制一行字符串</td>\n</tr>\n<tr>\n<td>\nimagestringup()</td>\n<td>\n垂直绘制一行字符串</td>\n</tr>\n<tr>\n<td>\nimagechar()</td>\n<td>\n水平绘制一个字符</td>\n</tr>\n<tr>\n<td>\nimagecharup()</td>\n<td>\n垂直绘制一个字符</td>\n</tr>\n<tr>\n<td>\nimagettftext()</td>\n<td>\n用 TrueType 字体向图像中写入文本</td>\n</tr>\n</tbody>\n</table>\n\n<p>虽然这几个函数的功能有所差异，但调用方式是类似的，尤其是 imagestring()、imagestringup()、imagechar() 以及 imagecharup() 函数，它们的参数都是相同的，因此就不再分开介绍了，这些函数的语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagestring(<span class=\"variable\">$image</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$s</span>, <span class=\"variable\">$color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagestringup(<span class=\"variable\">$image</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$s</span>, <span class=\"variable\">$col</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagechar(<span class=\"variable\">$image</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$c</span>, <span class=\"variable\">$color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagecharup(<span class=\"variable\">$image</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$c</span>, <span class=\"variable\">$color</span>);</span><br></pre></td></tr></table></figure>\n<p>使用这些函数可以在画布 $image 上，坐标为（$x，$y）的位置，绘制字符串（或字符）$s，字符串的颜色为 $color，字体为 $font。如果 $font 是 1，2，3，4 或 5，则使用内置字体。</p>\n<p>而imagettftext需要特殊说明：它可以使用 TrueType 字体（Windows 系统中扩展名为 .ttf 格式的字体）向图像中写入文本。</p>\n<p>语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagettftext(<span class=\"variable\">$image</span>, <span class=\"variable\">$size</span>, <span class=\"variable\">$angle</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$color</span>, <span class=\"variable\">$fontfile</span>, <span class=\"variable\">$text</span>)</span><br></pre></td></tr></table></figure>\n\n<p>参数说明如下：</p>\n<ul>\n<li>$image：由图像创建函数（例如 imagecreatetruecolor()）返回的图像资源；</li>\n<li>$size：字体的尺寸；</li>\n<li>$angle：角度制表示的角度，0 度为从左向右读的文本，数值越高则表示将文本进行逆时针旋转。例如 90 度表示从下向上读的文本；</li>\n<li>$x、$y：表示文本中第一个字符的坐标点（大概是字符左下角的位置）；</li>\n<li>$color：用来设置文本的颜色；</li>\n<li>$fontfile：是要使用的 TrueType 字体文件的路径；</li>\n<li>$text：UTF-8 编码的文本字符串。</li>\n</ul>\n<h2 id=\"三：获得图片信息\"><a href=\"#三：获得图片信息\" class=\"headerlink\" title=\"三：获得图片信息\"></a>三：获得图片信息</h2><p>1). 获得图片尺寸</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getimagesize(<span class=\"variable\">$image</span>);</span><br></pre></td></tr></table></figure>\n<p>getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通 HTML 文件中 IMG 标记中的 height/width 文本字符串。</p>\n<p>2). 获得画布尺寸</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagex(<span class=\"variable\">$image</span>);  <span class=\"comment\">// 获得图片宽度，单位为像素</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagey(<span class=\"variable\">$image</span>);  <span class=\"comment\">// 获得图片高度，单位为像素</span></span><br></pre></td></tr></table></figure>\n<p>实例：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 定义图片</span></span><br><span class=\"line\"><span class=\"variable\">$image</span> = <span class=\"string\">&#x27;https://www.runoob.com/images/pulpit.jpg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得图片全部信息</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$info</span> = getimagesize(<span class=\"variable\">$image</span>);</span><br><span class=\"line\">var_dump(<span class=\"variable\">$info</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打开图片资源</span></span><br><span class=\"line\"><span class=\"variable\">$img</span> = imagecreatefromjpeg(<span class=\"variable\">$image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得图片长宽信息</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> imagesx(<span class=\"variable\">$img</span>) . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> imagesy(<span class=\"variable\">$img</span>) . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b3506e23e2804373a83e43bc4c258d6b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>getimagesize($image)内容解读：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"number\">7</span>) &#123;</span><br><span class=\"line\">  [<span class=\"number\">0</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">304</span>)</span><br><span class=\"line\">  [<span class=\"number\">1</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">228</span>)</span><br><span class=\"line\">  [<span class=\"number\">2</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\">  [<span class=\"number\">3</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">string</span>(<span class=\"number\">24</span>) <span class=\"string\">&quot;width=&quot;</span><span class=\"number\">304</span><span class=\"string\">&quot; height=&quot;</span><span class=\"number\">228</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  [<span class=\"string\">&quot;bits&quot;</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">8</span>)</span><br><span class=\"line\">  [<span class=\"string\">&quot;channels&quot;</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\">  [<span class=\"string\">&quot;mime&quot;</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">string</span>(<span class=\"number\">10</span>) <span class=\"string\">&quot;image/jpeg&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>array(0)：  int型图片宽度</p>\n</li>\n<li><p>array(1)：  int型图片高度</p>\n</li>\n<li><p>array(2)： 图像类型的标记：1 = GIF，2 = JPG，3 =PNG，4 = SWF，5 = PSD，6 = BMP，7 = TIFF(intel byte order)，8 =TIFF(motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 =JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM。这些标记与 PHP 4.3.0 新加的 IMAGETYPE 常量对应。</p>\n</li>\n<li><p>array(3)： 文本字符串，内容为”height=”yyy”width=”xxx””，可直接用于 IMG 标记。 </p>\n</li>\n<li><p>array(“bits”)：代表每种颜色的位数。</p>\n</li>\n<li><p>array(“channels”) ：代表图片色系，对于 RGB 图像其值为 3，对于 CMYK 图像其值为 4</p>\n</li>\n<li><p>array(“mime”) ：自 PHP 4.3.0 起被引入，代表符合该图像的 MIME 类型。此信息可以用来在 HTTP Content-type 头信息中发送正确的信息。</p>\n</li>\n</ul>\n<p>对于GD库的实际运用，我还写了三篇博客，有兴趣可以看看：<br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154877\">GD图像处理——验证码处理</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154901\">GD图像处理——水印图实现</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154890\">GD图像处理——缩略图的实现</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一：引入与介绍\"><a href=\"#一：引入与介绍\" class=\"headerlink\" title=\"一：引入与介绍\"></a>一：引入与介绍</h2><p> PHP 除了可以处理文本数据外，通过一个叫 GD 的 PHP 扩展库，PHP 还可以动态生成不同格式图像或者对已有图片进行加工处理。</p>\n<p><strong>GD库是什么：</strong> GD 库（也可以称为 GD2 函数库）是一个开源的用于创建图形图像的函数库，该函数库由C语言编写，可以在 Perl，PHP 等多种语言中使用。GD 库中提供了一系列用来处理图片的 API（接口），使用 GD 库可以处理图片、生成图片，也可以给图片加水印等。另外，很多开源项目都对 GD 库提供了很好的技术支持，如 Jpgraph 类库就是基于 GD 库开发的用于制作复杂统计图的类库。</p>\n<p><strong>GD库可以做什么：</strong> 在 PHP 中使用 GD 库可以在页面中绘制各种图形图像，以及统计图，如果与 Ajax 技术相结合还可以制作出各种强大的动态图表。还有就是在网站登陆页面中使用的验证码，也可以使用 GD 库来实现。需要注意的是，GD 库开始时是支持 GIF 格式的，但由于 GIF 使用了有版权争议的 LZW 算法，会引起法律问题，于是从 GD 库 1.6 版起所有的 GIF 支持都移除了，但是又在 GD 库 2.0.28 版起又加了回来。如果使用了二者之间版本的 GD 库时，有关 GIF 相关函数是不可用。</p>\n<p><strong>开启GD库扩展：</strong> GD 库在 PHP5 及以上的版本中是默认安装好的，但是在使用之前需要先开启 GD 库，在 Windows 系统下只需将 php.ini 配置文件中“extension=php_gd2.dll”一项前面的注释删除即可。注意：不同版本的 PHP，它们配置文件中关于 GD 库的配置项也能有所不同，比如在 php7.2 及之后的版本中 GD 库的配置项就变成了“extension=gd2”。<br><img src=\"https://img-blog.csdnimg.cn/5b7ff3e32013469a874df52426c7b63e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">是否引入成功可以通过phpinfo()函数查看：<br><img src=\"https://img-blog.csdnimg.cn/0f6c8b1d402b4b94bec720236575375e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">或者通过打印 gd_info() 函数来验证 GD 库是否安装成功：<br><img src=\"https://img-blog.csdnimg.cn/2a1e32a4f1bb44e18e947eb95de7ab65.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"二：利用画布资源\"><a href=\"#二：利用画布资源\" class=\"headerlink\" title=\"二：利用画布资源\"></a>二：利用画布资源</h2><p>在 PHP 中，通过 GD 库处理图像的操作，都是先在内存中处理，操作完成以后再以文件流的方式，输出到浏览器或保存在服务器的磁盘中。创建图像一般分为 4 个基本步骤。</p>\n<ul>\n<li>创建画布：所有的绘图设计都需要在一个背景图片上完成，而画布实际上就是在内存中开辟的一块临时区域，用于存储图像的信息。以后的图像操作都将基于这个背景画布，该画布的管理就类似于我们在画画时使用的画布。</li>\n<li>绘制图像：画布创建完成以后，就可以通过这个画布资源，使用各种画像函数设置图像的颜色、填充画布、画点、线段、各种几何图形，以及向图像中添加文本等。</li>\n<li>输出图像：完成整个图像的绘制以后，需要将图像以某种格式保存到服务器指定的文件中，或将图像直接输出到浏览器上显示给用户。在图像输出之前，一定要使用 header() 函数发送 Content-type 通知浏览器，这次发送的是图片不是文本。</li>\n<li>释放资源：图像被输出以后，画布中的内容也不再有用。出于节约系统资源的考虑，需要及时清除画布占用的所有内存资源。</li>\n</ul>\n<h3 id=\"1-创建画布\"><a href=\"#1-创建画布\" class=\"headerlink\" title=\"1. 创建画布\"></a>1. 创建画布</h3><p>1). imagecreate(宽, 高)： 创建一个空白画布(背景是白色)<br>2). imagecreatetruecolor(宽, 高)：创建一个真彩画布(背景色是黑色, 需要填充)<br>3). imagecreatefromjpeg(图片文件路径)：打开一个jpeg格式的图片资源<br>4). imagecreatefromgif(图片文件路径)： 打开一个gif格式图片资源（PHP中无法实现动态）<br>5). imagecreatefrompng(图片文件路径)： 打开png格式图片资源</p>\n<p> imagecreate(int $width, int $height)和imagecreatetruecolor(int $width, int $height)两个函数都可以创建一张画布，而且成功后都会返回一个资源句柄，失败则返回 FALSE。不同的是它们可以容纳的色彩范围不同，imagecreate() 创建一个基于普通调色板的图像，通常支持 256 色；而 imagecreatetruecolor() 可以创建一个真色彩图像，但是它不能用于 GIF 格式图像。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个空白画布</span></span><br><span class=\"line\"><span class=\"variable\">$img1</span> = @imagecreate(<span class=\"number\">100</span>, <span class=\"number\">100</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;图片初始化失败&#x27;</span>);</span><br><span class=\"line\">var_dump(<span class=\"variable\">$img1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 创建一个真彩画布</span></span><br><span class=\"line\"><span class=\"variable\">$img2</span> = @imagecreatetruecolor(<span class=\"number\">100</span>, <span class=\"number\">100</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;图片初始化失败&#x27;</span>);</span><br><span class=\"line\">var_dump(<span class=\"variable\">$img2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 由于没有在画布上执行任何操作，所以浏览器不会输出画布。</span></span><br><span class=\"line\"><span class=\"comment\"> * 但是可以通过 imagesx() 和 imagesy() 来获取图像的宽和高（单位是像素）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;画布1的宽度为：&#x27;</span>.imagesx(<span class=\"variable\">$img1</span>).<span class=\"string\">&#x27;像素&#x27;</span> . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;画布1的高度为：&#x27;</span>.imagesy(<span class=\"variable\">$img1</span>).<span class=\"string\">&#x27;像素&#x27;</span> . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从已有的jpeg图片中打开资源</span></span><br><span class=\"line\"><span class=\"variable\">$img3</span> = @imagecreatefromjpeg(<span class=\"string\">&#x27;../0.image/52.jpeg&#x27;</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;图片初始化失败&#x27;</span>);</span><br><span class=\"line\">var_dump(<span class=\"variable\">$img3</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/26d8ec645817414493bd6f2322e70068.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"2-输出图像\"><a href=\"#2-输出图像\" class=\"headerlink\" title=\"2. 输出图像\"></a>2. 输出图像</h3><p>在 PHP 中可以使用不同的函数输出不同格式的图像，如下表所示是常用的图像输出函数。</p>\n<table>\n<tbody>\n<tr>\n<th>\n函数名</th>\n<th>\n描述</th>\n</tr>\n<tr>\n<td>\nimagegif()</td>\n<td>\n输出一个GIF格式图像到浏览器或文件</td>\n</tr>\n<tr>\n<td>\nimagejpeg()</td>\n<td>\n输出一个JPEG格式图像到浏览器或文件</td>\n</tr>\n<tr>\n<td>\nimagepng()&nbsp;</td>\n<td>\n输出一个PNG格式图像到浏览器或文件</td>\n</tr>\n</tbody>\n</table>\n\n<p>语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagegif(<span class=\"variable\">$image</span>[, <span class=\"variable\">$filename</span>]);  <span class=\"comment\">// 保存成gif格式图片</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagejpeg(<span class=\"variable\">$image</span>[, <span class=\"variable\">$filename</span>[, <span class=\"variable\">$quality</span>]]);  <span class=\"comment\">// 保存成jpeg格式图片</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagepng(<span class=\"variable\">$image</span>[, <span class=\"variable\">$filename</span>]);  <span class=\"comment\">// 保存成png格式图片</span></span><br></pre></td></tr></table></figure>\n<p>其中，$image 为创建的图像资源；$filename 为可选参数，用来设置文件的保存路径，如果设置为 NULL，则将会直接输出原始图像流；$quality 为可选参数，用来设置输出图片的质量，范围从 0（最差质量，文件更小）到 100（最佳质量，文件最大）。默认为 IJG 默认的质量值（大约为 75）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// header() 是用来告诉浏览器以什么形式输出图像的，不能省略。如果省略可能会出现乱码。</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:image/png&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$image</span> = imagecreatefromjpeg(<span class=\"string\">&#x27;https://www.runoob.com/images/pulpit.jpg&#x27;</span>);</span><br><span class=\"line\">imagepng(<span class=\"variable\">$image</span>,<span class=\"string\">&#x27;php.png&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/e5d276cf2f1e4d98913a2f82f200eb81.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-释放资源\"><a href=\"#3-释放资源\" class=\"headerlink\" title=\"3. 释放资源\"></a>3. 释放资源</h3><p>在图像的所有资源使用完毕后，通常需要释放图像处理所占用的内存。在 PHP 中可以通过 imagedestroy() 函数来释放图像资源, 另外，释放图像资源的操作是没有输出内容的，其语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagedestroy(<span class=\"variable\">$image</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-绘制图像\"><a href=\"#4-绘制图像\" class=\"headerlink\" title=\"4. 绘制图像\"></a>4. 绘制图像</h3><p><strong>1). 分配颜色 ：</strong><br>在真彩图片资源中，所有分配的颜色都不会自动给图片资源上色，是用来后续操作图片资源的时候指定着色的。但是如果当前使用的imagecreate创建的图片资源，那么第一个分配的颜色会自动被着色为图片背景色。需要注意的是，凡是给图片上增加内容，基本都要分配颜色(每一个操作图片的函数之前，都需要先调用分配颜色的函数得到一个颜色)</p>\n<p><strong>imagecolorallocate() 函数</strong><br>imagecolorallocate() 函数可以为一个图像资源分配颜色，如果在图像中需要设置多种颜色，只要多次调用该函数即可。函数的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagecolorallocate(<span class=\"variable\">$image</span>, <span class=\"variable\">$red</span>, <span class=\"variable\">$green</span>, <span class=\"variable\">$blue</span>);</span><br></pre></td></tr></table></figure>\n\n<p>其中，$image 为要设置颜色的图像资源，imagecolorallocate() 函数会返回一个标识符，代表了由给定的 RGB 成分组成的颜色；$red，$green 和$blue 分别是所需要的颜色的红，绿，蓝成分，取值范围是 0 到 255 的整数或者十六进制的 0x00 到 0xFF。</p>\n<p><strong>imagecolorallocatealpha() 函数</strong><br>imagecolorallocatealpha() 函数的作用和 imagecolorallocate() 相同，但多了一个额外的设置透明度的参数 alpha，函数的语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagecolorallocatealpha(<span class=\"variable\">$image</span>, <span class=\"variable\">$red</span>, <span class=\"variable\">$green</span>, <span class=\"variable\">$blue</span>, <span class=\"variable\">$alpha</span>);</span><br></pre></td></tr></table></figure>\n<p>其中，$image 为要设置颜色的图像资源；$red，$green 和 $blue 分别是所需要的颜色的红，绿，蓝成分，取值范围是 0 到 255 的整数或者十六进制的 0x00 到 0xFF；$alpha 用来设置颜色的透明的，取值范围在 0 到 127 之间，0 表示完全不透明，127 则表示完全透明。</p>\n<p><strong>2). 填充区域 ：</strong><br>区域填充不可以用来绘制图像，但它可以将一个已存在图像的颜色替换为其它颜色。在 PHP 中通过 imagefill() 函数来执行区域填充，它的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagefill(<span class=\"variable\">$image</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$color</span>);</span><br></pre></td></tr></table></figure>\n<p>其中，$image 为创建的图像资源；$x 和 $y 为要设置颜色的横纵坐标；$color 为要设置的颜色。</p>\n<p>imagefill()的填充逻辑：从指定点开始自动匹配相邻点，如果颜色一致，则自动渲染，扩展到全图。</p>\n<p><strong>3). 画点和直线 ：</strong><br>画点和线是绘制图像中最基本的操作，如果灵活使用，可以通过它们绘制出千变万化的图像。在 PHP 中，使用 imagesetpixel() 函数在画布中绘制一个单一像素的点，并且可以设置点的颜色，函数的语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagesetpixel(<span class=\"variable\">$image</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$color</span>);</span><br></pre></td></tr></table></figure>\n<p>该函数可以在第一个参数 $image 提供的画布中，在（$x，$y）的坐标位置上，绘制一个颜色为 $color 的一个像素点。在实际开发中还可以通过循环和随机数的结合来绘制更多的像素点。</p>\n<p>如果需要绘制一条线段，则可以使用 imageline() 函数，其语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imageline(<span class=\"variable\">$image</span>, <span class=\"variable\">$x1</span>, <span class=\"variable\">$y1</span>, <span class=\"variable\">$x2</span>, <span class=\"variable\">$y2</span>, <span class=\"variable\">$color</span>);</span><br></pre></td></tr></table></figure>\n<p>我们都知道两个点可以确定一条线段，所以该函数可以在 $image 提供的画布中，从坐标（$x1，$y1）到坐标（$x2，$y2）绘制一条颜色为 $color 的线段。</p>\n<p><strong>4). 画矩形 ：</strong><br>在 PHP 中我们可以使用 imagerectangle() 或者 imagefilledrectangle() 函数来绘制一个矩形，与 imagerectangle() 函数不同的是 imagefilledrectangle() 函数会在绘制完成矩形后填充矩形，它们的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagerectangle(<span class=\"variable\">$image</span>, <span class=\"variable\">$x1</span>, <span class=\"variable\">$y1</span>, <span class=\"variable\">$x2</span>, <span class=\"variable\">$y2</span>, <span class=\"variable\">$color</span>);  <span class=\"comment\">// $color是边线颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagefilledrectangle(<span class=\"variable\">$image</span>, <span class=\"variable\">$x1</span>, <span class=\"variable\">$y1</span>, <span class=\"variable\">$x2</span>, <span class=\"variable\">$y2</span>, <span class=\"variable\">$color</span>);  <span class=\"comment\">// $color是矩阵填充色</span></span><br></pre></td></tr></table></figure>\n<p>这两个函数的功能类似，都是在 $image 画布中画一个矩形，矩形的左上角坐标为（$x1，$y1），右下角坐标为（$x2，$y2）。</p>\n<p><strong>5). 画多边形 ：</strong><br>在 PHP 中可以使用 imagepolygon() 函数来绘制一个多边形；也可以使用 imagefilledpolygon() 来绘制并填充一个多边形，它们的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagepolygon(<span class=\"variable\">$image</span>, <span class=\"variable\">$points</span>, <span class=\"variable\">$num_points</span>, <span class=\"variable\">$color</span>);  <span class=\"comment\">// $color是边线颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagefilledpolygon(<span class=\"variable\">$image</span>, <span class=\"variable\">$points</span>, <span class=\"variable\">$num_points</span>, <span class=\"variable\">$color</span>);  <span class=\"comment\">// $color是多边形填充色</span></span><br></pre></td></tr></table></figure>\n<p>这两个函数都是可以在画布$image 中画一个多边形；<br>第二个参数$points 是一个数组，包含了多边形的各个顶点坐标，例如 $points[0]=x0，$points[1]=y0，$points[2]=x1，$points[3]=y1，依此类推<br>第三个参数 $num_points 用来设置多边形的顶点数，必须大于 3<br>需要注意的是，$points 数组中的顶点坐标数（坐标是成对出现的）不得小于多边形的顶点数 $num_points。</p>\n<p><strong>6). 画圆弧 ：</strong><br>在 PHP 中可以使用 imagearc() 函数来画出一条弧线或者圆形，也可以使用 imagefilledarc() 函数来绘制弧线或者圆形并填充，它们的语法格式如下所示：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagearc(<span class=\"variable\">$image</span>, <span class=\"variable\">$cx</span>, <span class=\"variable\">$cy</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"variable\">$start</span>, <span class=\"variable\">$end</span>, <span class=\"variable\">$color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagefilledarc(<span class=\"variable\">$image</span>, <span class=\"variable\">$cx</span>, <span class=\"variable\">$cy</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"variable\">$start</span>, <span class=\"variable\">$end</span>, <span class=\"variable\">$color</span>, <span class=\"variable\">$style</span>);</span><br></pre></td></tr></table></figure>\n<p>这两个函数都可以在画布 $image 上绘制一个椭圆弧，其中 $cx 和 $cy 分别为圆弧中心点的横纵坐标；$width 和 $height 分别为圆弧的宽度和高度；$start 和 $end 分别代表圆弧的起点角度和终点角度，0° 为钟表 3 点钟的位置，以顺时针方向递增；至于 $color 参数，imagearc() 用来表示圆弧的线条颜色，而 imagefilledarc() 用来表示弧线区域的填充色；</p>\n<p>imagefilledarc() 函数比 imagearc() 函数多了一个 $style 参数，它用来设置颜色的填充类型，可以是如下的值：</p>\n<ul>\n<li>IMG_ARC_PIE：普通填充，产生圆形边界；</li>\n<li>IMG_ARC_CHORD：只使用直线连接起点和终点，与 IMG_ARC_PIE 互斥；</li>\n<li>IMG_ARC_NOFILL：指明弧或弦只有轮廓，不填充；</li>\n<li>IMG_ARC_EDGED：用直线将起始和结束点与中心点相连，和 IMG_ARC_NOFILL 一起使用是画饼状图轮廓的好方法。</li>\n</ul>\n<p><strong>7). 在画布上写字 ：</strong><br>想要在图像中显示文字也需要按坐标位置画上去。在 PHP 中不仅支持多种的字体库，还提供了非常灵活的文字绘制方法。例如，在图像中绘制缩放、倾斜、旋转的文字等。常用的绘制文字的函数如下表所示：</p>\n<table>\n<tbody>\n<tr>\n<th>\n函数名&nbsp;</th>\n<th>\n描述</th>\n</tr>\n<tr>\n<td>\nimagestring()</td>\n<td>\n水平绘制一行字符串</td>\n</tr>\n<tr>\n<td>\nimagestringup()</td>\n<td>\n垂直绘制一行字符串</td>\n</tr>\n<tr>\n<td>\nimagechar()</td>\n<td>\n水平绘制一个字符</td>\n</tr>\n<tr>\n<td>\nimagecharup()</td>\n<td>\n垂直绘制一个字符</td>\n</tr>\n<tr>\n<td>\nimagettftext()</td>\n<td>\n用 TrueType 字体向图像中写入文本</td>\n</tr>\n</tbody>\n</table>\n\n<p>虽然这几个函数的功能有所差异，但调用方式是类似的，尤其是 imagestring()、imagestringup()、imagechar() 以及 imagecharup() 函数，它们的参数都是相同的，因此就不再分开介绍了，这些函数的语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagestring(<span class=\"variable\">$image</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$s</span>, <span class=\"variable\">$color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagestringup(<span class=\"variable\">$image</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$s</span>, <span class=\"variable\">$col</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagechar(<span class=\"variable\">$image</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$c</span>, <span class=\"variable\">$color</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">imagecharup(<span class=\"variable\">$image</span>, <span class=\"variable\">$font</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$c</span>, <span class=\"variable\">$color</span>);</span><br></pre></td></tr></table></figure>\n<p>使用这些函数可以在画布 $image 上，坐标为（$x，$y）的位置，绘制字符串（或字符）$s，字符串的颜色为 $color，字体为 $font。如果 $font 是 1，2，3，4 或 5，则使用内置字体。</p>\n<p>而imagettftext需要特殊说明：它可以使用 TrueType 字体（Windows 系统中扩展名为 .ttf 格式的字体）向图像中写入文本。</p>\n<p>语法格式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagettftext(<span class=\"variable\">$image</span>, <span class=\"variable\">$size</span>, <span class=\"variable\">$angle</span>, <span class=\"variable\">$x</span>, <span class=\"variable\">$y</span>, <span class=\"variable\">$color</span>, <span class=\"variable\">$fontfile</span>, <span class=\"variable\">$text</span>)</span><br></pre></td></tr></table></figure>\n\n<p>参数说明如下：</p>\n<ul>\n<li>$image：由图像创建函数（例如 imagecreatetruecolor()）返回的图像资源；</li>\n<li>$size：字体的尺寸；</li>\n<li>$angle：角度制表示的角度，0 度为从左向右读的文本，数值越高则表示将文本进行逆时针旋转。例如 90 度表示从下向上读的文本；</li>\n<li>$x、$y：表示文本中第一个字符的坐标点（大概是字符左下角的位置）；</li>\n<li>$color：用来设置文本的颜色；</li>\n<li>$fontfile：是要使用的 TrueType 字体文件的路径；</li>\n<li>$text：UTF-8 编码的文本字符串。</li>\n</ul>\n<h2 id=\"三：获得图片信息\"><a href=\"#三：获得图片信息\" class=\"headerlink\" title=\"三：获得图片信息\"></a>三：获得图片信息</h2><p>1). 获得图片尺寸</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getimagesize(<span class=\"variable\">$image</span>);</span><br></pre></td></tr></table></figure>\n<p>getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通 HTML 文件中 IMG 标记中的 height/width 文本字符串。</p>\n<p>2). 获得画布尺寸</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagex(<span class=\"variable\">$image</span>);  <span class=\"comment\">// 获得图片宽度，单位为像素</span></span><br><span class=\"line\"></span><br><span class=\"line\">imagey(<span class=\"variable\">$image</span>);  <span class=\"comment\">// 获得图片高度，单位为像素</span></span><br></pre></td></tr></table></figure>\n<p>实例：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 定义图片</span></span><br><span class=\"line\"><span class=\"variable\">$image</span> = <span class=\"string\">&#x27;https://www.runoob.com/images/pulpit.jpg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得图片全部信息</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$info</span> = getimagesize(<span class=\"variable\">$image</span>);</span><br><span class=\"line\">var_dump(<span class=\"variable\">$info</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打开图片资源</span></span><br><span class=\"line\"><span class=\"variable\">$img</span> = imagecreatefromjpeg(<span class=\"variable\">$image</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获得图片长宽信息</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> imagesx(<span class=\"variable\">$img</span>) . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> imagesy(<span class=\"variable\">$img</span>) . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b3506e23e2804373a83e43bc4c258d6b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br>getimagesize($image)内容解读：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"number\">7</span>) &#123;</span><br><span class=\"line\">  [<span class=\"number\">0</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">304</span>)</span><br><span class=\"line\">  [<span class=\"number\">1</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">228</span>)</span><br><span class=\"line\">  [<span class=\"number\">2</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\">  [<span class=\"number\">3</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">string</span>(<span class=\"number\">24</span>) <span class=\"string\">&quot;width=&quot;</span><span class=\"number\">304</span><span class=\"string\">&quot; height=&quot;</span><span class=\"number\">228</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  [<span class=\"string\">&quot;bits&quot;</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">8</span>)</span><br><span class=\"line\">  [<span class=\"string\">&quot;channels&quot;</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">int</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\">  [<span class=\"string\">&quot;mime&quot;</span>]=&gt;</span><br><span class=\"line\">  <span class=\"keyword\">string</span>(<span class=\"number\">10</span>) <span class=\"string\">&quot;image/jpeg&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>array(0)：  int型图片宽度</p>\n</li>\n<li><p>array(1)：  int型图片高度</p>\n</li>\n<li><p>array(2)： 图像类型的标记：1 = GIF，2 = JPG，3 =PNG，4 = SWF，5 = PSD，6 = BMP，7 = TIFF(intel byte order)，8 =TIFF(motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 =JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM。这些标记与 PHP 4.3.0 新加的 IMAGETYPE 常量对应。</p>\n</li>\n<li><p>array(3)： 文本字符串，内容为”height=”yyy”width=”xxx””，可直接用于 IMG 标记。 </p>\n</li>\n<li><p>array(“bits”)：代表每种颜色的位数。</p>\n</li>\n<li><p>array(“channels”) ：代表图片色系，对于 RGB 图像其值为 3，对于 CMYK 图像其值为 4</p>\n</li>\n<li><p>array(“mime”) ：自 PHP 4.3.0 起被引入，代表符合该图像的 MIME 类型。此信息可以用来在 HTTP Content-type 头信息中发送正确的信息。</p>\n</li>\n</ul>\n<p>对于GD库的实际运用，我还写了三篇博客，有兴趣可以看看：<br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154877\">GD图像处理——验证码处理</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154901\">GD图像处理——水印图实现</a><br><a href=\"https://blog.csdn.net/tongkongyu/article/details/119154890\">GD图像处理——缩略图的实现</a></p>\n"},{"title":"PHP文件上传","date":"2021-07-24T07:55:12.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/70.jpg","_content":"\n## PHP文件上传\n**文件上传的概念：** 文件从用户本地电脑通过传输方式(Web表单)保存到服务器所在电脑指定的目录下。\n\n**文件上传的原理：**\n1. 增加文件上传的表单：浏览器请求一个服务器的HTML脚本(包含文件上传表单)\n2. 用户从本地选择一个文件(点击上传框按钮)\n3. 用户点击上传：文件会通过物联网传输到服务器上\n4. 服务器操作系统会将文件保存到临时目录：是以临时文件格式保存(windows下是tmp格式)\n5. 服务器脚本开始工作：判断文件有效\n6. 服务器脚本将有效文件从临时目录移动到指定的目录下\n\n![展示](https://img-blog.csdnimg.cn/e813d15882274139a20ca546904f4c26.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (1). 表单制作\n1). method属性：表单提交方式必须为POST，因为GET方式传输对文件大小有要求。\n2). enctype属性：form表单属性，主要是规范表单数据的编码方式，一般选multipart/form-data\n可选属性值如下：\n<table>\n<tbody><tr>\n<th width=\"40%\">值</th>\n    <th width=\"60%\">描述</th>\n  </tr>\n<tr>\n<td>application/x-www-form-urlencoded</td>\n    <td>默认。在发送前对所有字符进行编码（将空格转换为 \"+\" 符号，特殊字符转换为 ASCII HEX 值）。</td>\n  </tr>\n<tr>\n<td>multipart/form-data</td>\n    <td>不对字符编码。当使用有文件上传控件的表单时，该值是必需的。</td>\n  </tr>\n<tr>\n<td>text/plain</td>\n    <td>将空格转换为 \"+\" 符号，但不编码特殊字符。适用于GET传输</td>\n  </tr>\n</tbody></table>\n\n3). 上传表单：file表单\n\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--单文件上传-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image\" />\n    <input type=\"submit\" name=\"btn\" value=\"upload\" />\n</form>\n\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/b28b522370a0446a90f4486a2618edf1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (2). $_FILES详解\n\\$_FILES这个预定义变量是专门用来储存用户上传的文件的。\n\n先检查一下\\$_FILES和\\$_POST能接收到什么。\n![展示](https://img-blog.csdnimg.cn/b04b3c3c16664bf9a4de5b056b61ca14.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/b57d8971eef544b7b431bdce0806bf09.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)因此可见$_FILES变量的详细内容如下：\n1). name: 文件在用户(浏览器端)电脑上实际存在的名字(实际用来保留后缀)\n2). tmp_name: 文件上传到服务器后操作系统保存的临时路径(实际用来给PHP后期使用)\n3). type: MIME(多功能互联网邮件扩展)类型，用来在计算机中客户端识别文件类型(确定软件)\n4). error: 文件上传的代号, 用来告知应用软件(php)文件接收过程出了什么问题(php后期根据代码进行文件判断)\n5). size: 文件大小(php根据实际需求来确定是否应该保留)\n\n文件上传错误信息说明：\n\n```\n从 PHP 4.2.0 开始，PHP 将随文件信息数组一起返回一个对应的错误代码。\n该代码可以在文件上传时生成的文件数组中的 error 字段中被找到，也就是 $_FILES['userfile']['error']。\n \nUPLOAD_ERR_OK\n其值为 0，没有错误发生，文件上传成功。\n \nUPLOAD_ERR_INI_SIZE\n其值为 1，上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。\n \nUPLOAD_ERR_FORM_SIZE\n其值为 2，上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。\nMAX_FILE_SIZE是php设置的一种浏览器端限制大小的标准，但W3C没有承认。\n \nUPLOAD_ERR_PARTIAL\n其值为 3，文件只有部分被上传。可能是因为自身网络不稳定导致丢包，也有可能是系统不安全。\n \nUPLOAD_ERR_NO_FILE\n其值为 4，没有文件被上传。可能是用户没有选择需要上传的文件就点击上传了。\n \nUPLOAD_ERR_NO_TMP_DIR\n其值为 6，找不到临时文件夹。PHP 4.3.10 和 PHP 5.0.3 引进。即操作系统对应的临时文件夹不存在。\n \nUPLOAD_ERR_CANT_WRITE\n其值为 7，文件写入失败。PHP 5.1.0 引进。\n通常是因为PHP没有权限将临时文件移动到指定目录，在windows中基本不存在，但在linux系统中经常发生。\n```\n### (3). 保存上传文件\n文件上传后会保存在$_FILES中，那么访问文件信息的形式就是\\$_FILES['name属性值']['元素信息']\n保存上传文件即移动临时文件到目标位置，步骤如下：\n1). 判断是否为上传的文件(保障数据安全)： is_uploaded_file()\n2). 移动文件： move_uploaded_file()\n\nis_uploaded_file()函数判断指定的文件是否是通过 HTTP POST 上传的。如果 file 所给出的文件是通过 HTTP POST 上传的则返回 TRUE。该函数可以用于确保恶意的用户无法欺骗脚本去访问本不能访问的文件，例如 /etc/passwd。这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。另外，该函数的结果会被缓存。请使用 clearstatcache() 来清除缓存。\n\nmove_uploaded_file() 函数将上传的文件移动到新位置。若成功，则返回 true，否则返回 false。该函数有两个参数move_uploaded_file(file,newloc)，参数file规定要移动的文件，参数newloc规定文件的新位置，**且新位置需要是包括文件自身名字**。这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。此函数仅用于通过 HTTP POST 上传的文件。注意：如果目标文件已经存在，将会被覆盖。\n\nform_upload.html文件代码：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--单文件上传-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image\" />\n    <input type=\"submit\" name=\"btn\" value=\"upload\" />\n</form>\n\n</body>\n</html>\n```\nform_upload.php文件代码：\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// 1.获得文件信息\n$file = $_FILES['image'];\n\n// 2.判断是否是上传文件\nif (is_uploaded_file($file['tmp_name'])){\n    // 是上传文件\n    if (move_uploaded_file($file['tmp_name'], 'newplace/'.$file['name'])){\n        echo \"文件保存成功!\";\n    } else{\n        echo \"文件保存失败!\";\n    }\n} else{\n    // 不是上传文件\n    echo \"文件上传失败!\" . \"<br>\";\n}\n```\n![展示](https://img-blog.csdnimg.cn/dc5f8262c25840ac93e46838f2a40de3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/817a9675b76c40198f63e7c9c6f52cb3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (4). 多文件上传\n当商品需要上传多个图片进行展示的时候，那么需要使用多文件上传\n&emsp;&emsp;&emsp;针对一个内容但是不同文件说明：同名表单\n当商品需要进行多个维度图片说明的时后，需要使用多文件上传\n&emsp;&emsp;&emsp;针对的是不同内容所以表单名字不一样：批量解决问题\n\n<br>\n\n#### 多文件上传的$_FILES变量的数据结构形式：\n\n**同名表单：** 将表单名字形成一个数组，而且同时将文件对应的五个要素：name、Tmp_name、size、type、error都形成对应数量的数组。每个文件上传对应数组元素的下标都是一样的：\n\nform_upload.html 文件代码如下：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--多文件上传(同名)-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"submit\" name=\"btn\" value=\"同名文件批量上传\" />\n</form>\n\n</body>\n</html>\n```\nform_upload.php 文件代码如下：\n\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// 查看文件信息\necho \"<pre>\";\nvar_dump($_FILES);\n```\n![展示](https://img-blog.csdnimg.cn/ab1fc555faf94c07bfb40722da00d3e4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**不同名表单：** 每个文件都会形成一个属于自己独立的5个元素数组\nform_upload.html 文件代码如下：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--多文件上传(不同名)-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image1\" />\n    <input type=\"file\" name=\"image2\" />\n    <input type=\"file\" name=\"image3\" />\n    <input type=\"submit\" name=\"btn\" value=\"不同名文件批量上传\" />\n</form>\n\n</body>\n</html>\n```\nform_upload.php 文件代码如下：\n\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// 查看文件信息\necho \"<pre>\";\nvar_dump($_FILES);\n```\n![展示](https://img-blog.csdnimg.cn/5ee66c11be684a96974ae494ee3d0371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### 对多文件信息的遍历读取和处理\n**同名多文件上传处理方式：** 想办法得到一个文件对应的五个元素数组。从\\$_FILES中把对应的name \\ tmp_name \\ size \\ error \\ type 信息挨个取出。然后存放到不同的数组中。\n\nform_upload.html 文件代码：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--多文件上传(同名)-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"submit\" name=\"btn3\" value=\"同名文件批量上传\" />\n</form>\n\n</body>\n</html>\n```\n\nform_upload.php 文件代码：\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n// 判断元素存在而且是数组： 有name则代表是文件， name元素有多个(数组)则代表是同名批量上传\nif (isset($_FILES['images']['name']) && is_array($_FILES['images']['name'])) {\n    // 遍历构造数组元素\n    $images = array();  // 存储所有文件信息，一个元素代表一个文件(数组)\n    foreach ($_FILES['images']['name'] as $k => $file) {\n        $images[] = array(\n            'name' => $file,\n            'tmp_name' => $_FILES['images']['tmp_name'][$k],\n            'type' => $_FILES['images']['type'][$k],\n            'error' => $_FILES['images']['error'][$k],\n            'size' => $_FILES['images']['size'][$k]\n        );\n    }\n// 处理完后执行长传操作\n    foreach ($images as $files) {  // $files就是一个完整的上传文件信息\n        // 找到临时路径，指定存放路径\n        if (is_uploaded_file($files['tmp_name'])) {\n            // 是上传文件，则执行存储操作\n            if (move_uploaded_file($files['tmp_name'], 'newplace/' . $files['name'])) {\n                echo \"文件保存成功！\" . \"<br>\";\n            } else {\n                echo \"文件保存失败！\" . \"<br>\";\n            }\n        } else {\n            // 不是上传文件\n            echo \"文件上传失败！\" . \"<br>\";\n        }\n    }\n}\n```\n![展示](https://img-blog.csdnimg.cn/fdb50f3b9d654b4e948a950a4e9fb3df.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/731e5133ab324973a1f9ce7402a378ba.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**不同名多文件上传处理方式：** 按照表单名字从$_FILES中取出来就可以直接使用(明确知道表单中有多少个文件上传)，如果不确定表单中有多少个文件上传，就不适合挨个去取(效率不高)，可以通过遍历数组\\$_FILES数组挨个取出。\n\nform_upload.html文件代码:\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--多文件上传(不同名)-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image1\" />\n    <input type=\"file\" name=\"image2\" />\n    <input type=\"file\" name=\"image3\" />\n    <input type=\"submit\" name=\"btn3\" value=\"不同名批量上传\" />\n</form>\n\n</body>\n</html>\n```\nform_upload.php文件代码:\n\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// 不同名文件遍历处理方式\nforeach ($_FILES as $file){  // $file就是一个完整的上传文件信息\n    // 找到临时路径，指定存放路径\n    if(is_uploaded_file($file['tmp_name'])){\n        // 是上传文件，则执行存储操作\n        if (move_uploaded_file($file['tmp_name'], 'newplace/'.$file['name'])){\n            echo \"文件保存成功！\" . \"<br>\";\n        } else{\n            echo \"文件保存失败！\" . \"<br>\";\n        }\n    } else{\n        // 不是上传文件\n        echo \"文件上传失败！\" . \"<br>\";\n    }\n}\n```\n\n效果展示：\n![展示](https://img-blog.csdnimg.cn/ed3995585bde4c1481697b300c9d495a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/9d9d4dd9d86e46c48dbaaff5191f1c98.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (5). 函数封装\n实现上传功能代码的重复利用：封装文件上传函数\n功能： 上传文件\n条件：条件判断\n1. 文件类型是否合适？外部指定MIME类型\n2. 文件存储到什么位置？外部指定\n3. 文件格式限制(文件后缀)?外部限定\n4. 文件大小限制？外部指定\n\n过程：\n1). 封装出一个上传函数\n2). 判断文件是否有效\n3). 判断保存路径是否有效\n4). 判断文件本身上传的过程中是否有错误：error\n5). 文件类型的处理：通过MIME匹配\n6). 文件格式的处理：后缀名问题\n7). 文件大小的处理\n8). 命名冲突的处理：上传同名文件？名字里出现中文？\n9). 移动到指定目录\n\n结果：实现文件上传\n5. 成功：结果能够在以后看到：需要将文件的路径和文件名字返回(存储到数据库)\n6. 失败：返回false，指定错误原因(引用参数)\n\nform_upload.html 文件代码：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image\" />\n    <input type=\"submit\" name=\"btn\" value=\"单文件上传\" />\n</form>\n\n</body>\n</html>\n```\n\nform_upload.php 文件代码：\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// PHP文件上传功能封装函数\n\n/*\n * 实现文件上传(单文件)\n * @param1 array $file,  需要上传的文件信息：一维五元素数组(name\\tmp_name\\error\\size\\type)\n * @param2 array $allow_type， 允许上传的MIME类型\n * @param3 string $path,  存储的路径\n * @param4 string &$error,  如果出现错误的原因\n * @param5 array $allow_format = array(),  允许上传的文件格式\n * @param6 int $max_size = 2000000,  允许上传的最大值，单位为字节\n */\n\n// 封装一个上传函数\nfunction upload_single($file, $allow_type, $path, &$error, $allow_format = array(), $max_size = 2000000)\n{\n    // 判断文件是否有效\n    if (!is_array($file) || !isset($file['error'])){\n        // 文件无效\n        $error = '不是一个有效的上传文件！';\n        return false;\n    }\n\n    // 判断保存路径有效\n    if (!is_dir($path)){\n        // 路径不存在\n        $error = '文件存储路径不存在！';\n        return false;\n    }\n\n    // 判断文件上传过程是否出错\n    switch ($file['error']){\n        case 1:\n        case 2:\n            $error = '文件超出服务器允许的大小！';\n            return false;\n        case 3:\n            $error = '文件上传过程中出现问题，只上传了一部分！';\n            return false;\n        case 4:\n            $error = '用户没有选中要上传的文件！';\n            return false;\n        case 6:\n        case 7:\n            $error = '文件保存失败！';\n            return false;\n    }\n\n    // 判断MIME类型\n    if (!in_array($file['type'], $allow_type)){\n        // 该文件类型不允许上传\n        $error = '当前文件类型不允许上传!';\n        return false;\n    }\n\n    // 判断后缀名是否允许\n    $ext = ltrim(strrchr($file['name'], '.'), '.');  // 取出后缀名\n    if (!empty($allow_format) && !in_array($ext, $allow_format)){\n        // 不允许上传\n        $error = '当前文件的格式不允许上传!';\n        return false;\n    }\n\n    // 判断当前文件大小是否满足当前需求\n    if ($file['size'] > $max_size){\n        // 文件过大\n        $error = '当前上传的文件超出大小，最大允许' . $max_size . '字节';\n        return false;\n    }\n\n    // 构造文件名字，防止名字冲突以及中文乱码：类型_年月日_随机字符串.$ext\n    $fullname = strstr($file['type'], '/', TRUE) . date('Ymd');\n    for ($i = 0; $i < 4; $i++){  // 产生随机字符串\n        $fullname .= chr(mt_rand(65, 90));\n    }\n    $fullname .= '.' . $ext;  // 拼接后缀\n\n    // 能执行到这就说明文件满足需求，现在将文件移动到指定目录\n    if (!is_uploaded_file($file['tmp_name'])){\n        // 文件不是上传的\n        return false;\n    } else{\n        if (move_uploaded_file($file['tmp_name'], $path . '/' . $fullname)){\n            // 移动成功\n            return $fullname;\n        } else{\n            // 移动失败\n            $error = '文件上传失败!';\n            return false;\n        }\n    }\n}\n\n// 提供数据\n$file = $_FILES['image'];\n$allow_type = array('image/jpg', 'image/jpeg', 'image/jpg', 'image/png', 'image/gif');\n$path = 'newplace';\n$allow_format = array('jpg', 'jpeg', 'png', 'gif');\n$max_size = 8000000;\n\n// 调用函数\nif ($filename = upload_single($file, $allow_type, $path, $error, $allow_format = array(), $max_size = 2000000))\n{\n    echo $filename;\n} else{\n    echo $error;\n}\n```\n效果展示：\n![展示](https://img-blog.csdnimg.cn/175b4028a65f49e184163eda5ad021f6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/8dcb3de2b75f41a59c810a5f05bc0b0e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","source":"_posts/PHP/php文件.md","raw":"---\ntitle: PHP文件上传\ndate: 2021-07-24 15:55:12\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/70.jpg\ntags: \n  - 文件\ncategories: PHP\n---\n\n## PHP文件上传\n**文件上传的概念：** 文件从用户本地电脑通过传输方式(Web表单)保存到服务器所在电脑指定的目录下。\n\n**文件上传的原理：**\n1. 增加文件上传的表单：浏览器请求一个服务器的HTML脚本(包含文件上传表单)\n2. 用户从本地选择一个文件(点击上传框按钮)\n3. 用户点击上传：文件会通过物联网传输到服务器上\n4. 服务器操作系统会将文件保存到临时目录：是以临时文件格式保存(windows下是tmp格式)\n5. 服务器脚本开始工作：判断文件有效\n6. 服务器脚本将有效文件从临时目录移动到指定的目录下\n\n![展示](https://img-blog.csdnimg.cn/e813d15882274139a20ca546904f4c26.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (1). 表单制作\n1). method属性：表单提交方式必须为POST，因为GET方式传输对文件大小有要求。\n2). enctype属性：form表单属性，主要是规范表单数据的编码方式，一般选multipart/form-data\n可选属性值如下：\n<table>\n<tbody><tr>\n<th width=\"40%\">值</th>\n    <th width=\"60%\">描述</th>\n  </tr>\n<tr>\n<td>application/x-www-form-urlencoded</td>\n    <td>默认。在发送前对所有字符进行编码（将空格转换为 \"+\" 符号，特殊字符转换为 ASCII HEX 值）。</td>\n  </tr>\n<tr>\n<td>multipart/form-data</td>\n    <td>不对字符编码。当使用有文件上传控件的表单时，该值是必需的。</td>\n  </tr>\n<tr>\n<td>text/plain</td>\n    <td>将空格转换为 \"+\" 符号，但不编码特殊字符。适用于GET传输</td>\n  </tr>\n</tbody></table>\n\n3). 上传表单：file表单\n\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--单文件上传-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image\" />\n    <input type=\"submit\" name=\"btn\" value=\"upload\" />\n</form>\n\n</body>\n</html>\n```\n![展示](https://img-blog.csdnimg.cn/b28b522370a0446a90f4486a2618edf1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (2). $_FILES详解\n\\$_FILES这个预定义变量是专门用来储存用户上传的文件的。\n\n先检查一下\\$_FILES和\\$_POST能接收到什么。\n![展示](https://img-blog.csdnimg.cn/b04b3c3c16664bf9a4de5b056b61ca14.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/b57d8971eef544b7b431bdce0806bf09.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)因此可见$_FILES变量的详细内容如下：\n1). name: 文件在用户(浏览器端)电脑上实际存在的名字(实际用来保留后缀)\n2). tmp_name: 文件上传到服务器后操作系统保存的临时路径(实际用来给PHP后期使用)\n3). type: MIME(多功能互联网邮件扩展)类型，用来在计算机中客户端识别文件类型(确定软件)\n4). error: 文件上传的代号, 用来告知应用软件(php)文件接收过程出了什么问题(php后期根据代码进行文件判断)\n5). size: 文件大小(php根据实际需求来确定是否应该保留)\n\n文件上传错误信息说明：\n\n```\n从 PHP 4.2.0 开始，PHP 将随文件信息数组一起返回一个对应的错误代码。\n该代码可以在文件上传时生成的文件数组中的 error 字段中被找到，也就是 $_FILES['userfile']['error']。\n \nUPLOAD_ERR_OK\n其值为 0，没有错误发生，文件上传成功。\n \nUPLOAD_ERR_INI_SIZE\n其值为 1，上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。\n \nUPLOAD_ERR_FORM_SIZE\n其值为 2，上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。\nMAX_FILE_SIZE是php设置的一种浏览器端限制大小的标准，但W3C没有承认。\n \nUPLOAD_ERR_PARTIAL\n其值为 3，文件只有部分被上传。可能是因为自身网络不稳定导致丢包，也有可能是系统不安全。\n \nUPLOAD_ERR_NO_FILE\n其值为 4，没有文件被上传。可能是用户没有选择需要上传的文件就点击上传了。\n \nUPLOAD_ERR_NO_TMP_DIR\n其值为 6，找不到临时文件夹。PHP 4.3.10 和 PHP 5.0.3 引进。即操作系统对应的临时文件夹不存在。\n \nUPLOAD_ERR_CANT_WRITE\n其值为 7，文件写入失败。PHP 5.1.0 引进。\n通常是因为PHP没有权限将临时文件移动到指定目录，在windows中基本不存在，但在linux系统中经常发生。\n```\n### (3). 保存上传文件\n文件上传后会保存在$_FILES中，那么访问文件信息的形式就是\\$_FILES['name属性值']['元素信息']\n保存上传文件即移动临时文件到目标位置，步骤如下：\n1). 判断是否为上传的文件(保障数据安全)： is_uploaded_file()\n2). 移动文件： move_uploaded_file()\n\nis_uploaded_file()函数判断指定的文件是否是通过 HTTP POST 上传的。如果 file 所给出的文件是通过 HTTP POST 上传的则返回 TRUE。该函数可以用于确保恶意的用户无法欺骗脚本去访问本不能访问的文件，例如 /etc/passwd。这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。另外，该函数的结果会被缓存。请使用 clearstatcache() 来清除缓存。\n\nmove_uploaded_file() 函数将上传的文件移动到新位置。若成功，则返回 true，否则返回 false。该函数有两个参数move_uploaded_file(file,newloc)，参数file规定要移动的文件，参数newloc规定文件的新位置，**且新位置需要是包括文件自身名字**。这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。此函数仅用于通过 HTTP POST 上传的文件。注意：如果目标文件已经存在，将会被覆盖。\n\nform_upload.html文件代码：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--单文件上传-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image\" />\n    <input type=\"submit\" name=\"btn\" value=\"upload\" />\n</form>\n\n</body>\n</html>\n```\nform_upload.php文件代码：\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// 1.获得文件信息\n$file = $_FILES['image'];\n\n// 2.判断是否是上传文件\nif (is_uploaded_file($file['tmp_name'])){\n    // 是上传文件\n    if (move_uploaded_file($file['tmp_name'], 'newplace/'.$file['name'])){\n        echo \"文件保存成功!\";\n    } else{\n        echo \"文件保存失败!\";\n    }\n} else{\n    // 不是上传文件\n    echo \"文件上传失败!\" . \"<br>\";\n}\n```\n![展示](https://img-blog.csdnimg.cn/dc5f8262c25840ac93e46838f2a40de3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/817a9675b76c40198f63e7c9c6f52cb3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (4). 多文件上传\n当商品需要上传多个图片进行展示的时候，那么需要使用多文件上传\n&emsp;&emsp;&emsp;针对一个内容但是不同文件说明：同名表单\n当商品需要进行多个维度图片说明的时后，需要使用多文件上传\n&emsp;&emsp;&emsp;针对的是不同内容所以表单名字不一样：批量解决问题\n\n<br>\n\n#### 多文件上传的$_FILES变量的数据结构形式：\n\n**同名表单：** 将表单名字形成一个数组，而且同时将文件对应的五个要素：name、Tmp_name、size、type、error都形成对应数量的数组。每个文件上传对应数组元素的下标都是一样的：\n\nform_upload.html 文件代码如下：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--多文件上传(同名)-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"submit\" name=\"btn\" value=\"同名文件批量上传\" />\n</form>\n\n</body>\n</html>\n```\nform_upload.php 文件代码如下：\n\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// 查看文件信息\necho \"<pre>\";\nvar_dump($_FILES);\n```\n![展示](https://img-blog.csdnimg.cn/ab1fc555faf94c07bfb40722da00d3e4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**不同名表单：** 每个文件都会形成一个属于自己独立的5个元素数组\nform_upload.html 文件代码如下：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--多文件上传(不同名)-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image1\" />\n    <input type=\"file\" name=\"image2\" />\n    <input type=\"file\" name=\"image3\" />\n    <input type=\"submit\" name=\"btn\" value=\"不同名文件批量上传\" />\n</form>\n\n</body>\n</html>\n```\nform_upload.php 文件代码如下：\n\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// 查看文件信息\necho \"<pre>\";\nvar_dump($_FILES);\n```\n![展示](https://img-blog.csdnimg.cn/5ee66c11be684a96974ae494ee3d0371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### 对多文件信息的遍历读取和处理\n**同名多文件上传处理方式：** 想办法得到一个文件对应的五个元素数组。从\\$_FILES中把对应的name \\ tmp_name \\ size \\ error \\ type 信息挨个取出。然后存放到不同的数组中。\n\nform_upload.html 文件代码：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--多文件上传(同名)-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"file\" name=\"images[]\" />\n    <input type=\"submit\" name=\"btn3\" value=\"同名文件批量上传\" />\n</form>\n\n</body>\n</html>\n```\n\nform_upload.php 文件代码：\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n// 判断元素存在而且是数组： 有name则代表是文件， name元素有多个(数组)则代表是同名批量上传\nif (isset($_FILES['images']['name']) && is_array($_FILES['images']['name'])) {\n    // 遍历构造数组元素\n    $images = array();  // 存储所有文件信息，一个元素代表一个文件(数组)\n    foreach ($_FILES['images']['name'] as $k => $file) {\n        $images[] = array(\n            'name' => $file,\n            'tmp_name' => $_FILES['images']['tmp_name'][$k],\n            'type' => $_FILES['images']['type'][$k],\n            'error' => $_FILES['images']['error'][$k],\n            'size' => $_FILES['images']['size'][$k]\n        );\n    }\n// 处理完后执行长传操作\n    foreach ($images as $files) {  // $files就是一个完整的上传文件信息\n        // 找到临时路径，指定存放路径\n        if (is_uploaded_file($files['tmp_name'])) {\n            // 是上传文件，则执行存储操作\n            if (move_uploaded_file($files['tmp_name'], 'newplace/' . $files['name'])) {\n                echo \"文件保存成功！\" . \"<br>\";\n            } else {\n                echo \"文件保存失败！\" . \"<br>\";\n            }\n        } else {\n            // 不是上传文件\n            echo \"文件上传失败！\" . \"<br>\";\n        }\n    }\n}\n```\n![展示](https://img-blog.csdnimg.cn/fdb50f3b9d654b4e948a950a4e9fb3df.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/731e5133ab324973a1f9ce7402a378ba.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**不同名多文件上传处理方式：** 按照表单名字从$_FILES中取出来就可以直接使用(明确知道表单中有多少个文件上传)，如果不确定表单中有多少个文件上传，就不适合挨个去取(效率不高)，可以通过遍历数组\\$_FILES数组挨个取出。\n\nform_upload.html文件代码:\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<!--多文件上传(不同名)-->\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image1\" />\n    <input type=\"file\" name=\"image2\" />\n    <input type=\"file\" name=\"image3\" />\n    <input type=\"submit\" name=\"btn3\" value=\"不同名批量上传\" />\n</form>\n\n</body>\n</html>\n```\nform_upload.php文件代码:\n\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// 不同名文件遍历处理方式\nforeach ($_FILES as $file){  // $file就是一个完整的上传文件信息\n    // 找到临时路径，指定存放路径\n    if(is_uploaded_file($file['tmp_name'])){\n        // 是上传文件，则执行存储操作\n        if (move_uploaded_file($file['tmp_name'], 'newplace/'.$file['name'])){\n            echo \"文件保存成功！\" . \"<br>\";\n        } else{\n            echo \"文件保存失败！\" . \"<br>\";\n        }\n    } else{\n        // 不是上传文件\n        echo \"文件上传失败！\" . \"<br>\";\n    }\n}\n```\n\n效果展示：\n![展示](https://img-blog.csdnimg.cn/ed3995585bde4c1481697b300c9d495a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/9d9d4dd9d86e46c48dbaaff5191f1c98.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (5). 函数封装\n实现上传功能代码的重复利用：封装文件上传函数\n功能： 上传文件\n条件：条件判断\n1. 文件类型是否合适？外部指定MIME类型\n2. 文件存储到什么位置？外部指定\n3. 文件格式限制(文件后缀)?外部限定\n4. 文件大小限制？外部指定\n\n过程：\n1). 封装出一个上传函数\n2). 判断文件是否有效\n3). 判断保存路径是否有效\n4). 判断文件本身上传的过程中是否有错误：error\n5). 文件类型的处理：通过MIME匹配\n6). 文件格式的处理：后缀名问题\n7). 文件大小的处理\n8). 命名冲突的处理：上传同名文件？名字里出现中文？\n9). 移动到指定目录\n\n结果：实现文件上传\n5. 成功：结果能够在以后看到：需要将文件的路径和文件名字返回(存储到数据库)\n6. 失败：返回false，指定错误原因(引用参数)\n\nform_upload.html 文件代码：\n```html\n<!DOCTYPE html>\n<html lang=\"th\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"form_upload.php\">\n    <input type=\"file\" name=\"image\" />\n    <input type=\"submit\" name=\"btn\" value=\"单文件上传\" />\n</form>\n\n</body>\n</html>\n```\n\nform_upload.php 文件代码：\n```php\n<?php\nheader('Content-type:text/html;charset=utf-8');\n\n// PHP文件上传功能封装函数\n\n/*\n * 实现文件上传(单文件)\n * @param1 array $file,  需要上传的文件信息：一维五元素数组(name\\tmp_name\\error\\size\\type)\n * @param2 array $allow_type， 允许上传的MIME类型\n * @param3 string $path,  存储的路径\n * @param4 string &$error,  如果出现错误的原因\n * @param5 array $allow_format = array(),  允许上传的文件格式\n * @param6 int $max_size = 2000000,  允许上传的最大值，单位为字节\n */\n\n// 封装一个上传函数\nfunction upload_single($file, $allow_type, $path, &$error, $allow_format = array(), $max_size = 2000000)\n{\n    // 判断文件是否有效\n    if (!is_array($file) || !isset($file['error'])){\n        // 文件无效\n        $error = '不是一个有效的上传文件！';\n        return false;\n    }\n\n    // 判断保存路径有效\n    if (!is_dir($path)){\n        // 路径不存在\n        $error = '文件存储路径不存在！';\n        return false;\n    }\n\n    // 判断文件上传过程是否出错\n    switch ($file['error']){\n        case 1:\n        case 2:\n            $error = '文件超出服务器允许的大小！';\n            return false;\n        case 3:\n            $error = '文件上传过程中出现问题，只上传了一部分！';\n            return false;\n        case 4:\n            $error = '用户没有选中要上传的文件！';\n            return false;\n        case 6:\n        case 7:\n            $error = '文件保存失败！';\n            return false;\n    }\n\n    // 判断MIME类型\n    if (!in_array($file['type'], $allow_type)){\n        // 该文件类型不允许上传\n        $error = '当前文件类型不允许上传!';\n        return false;\n    }\n\n    // 判断后缀名是否允许\n    $ext = ltrim(strrchr($file['name'], '.'), '.');  // 取出后缀名\n    if (!empty($allow_format) && !in_array($ext, $allow_format)){\n        // 不允许上传\n        $error = '当前文件的格式不允许上传!';\n        return false;\n    }\n\n    // 判断当前文件大小是否满足当前需求\n    if ($file['size'] > $max_size){\n        // 文件过大\n        $error = '当前上传的文件超出大小，最大允许' . $max_size . '字节';\n        return false;\n    }\n\n    // 构造文件名字，防止名字冲突以及中文乱码：类型_年月日_随机字符串.$ext\n    $fullname = strstr($file['type'], '/', TRUE) . date('Ymd');\n    for ($i = 0; $i < 4; $i++){  // 产生随机字符串\n        $fullname .= chr(mt_rand(65, 90));\n    }\n    $fullname .= '.' . $ext;  // 拼接后缀\n\n    // 能执行到这就说明文件满足需求，现在将文件移动到指定目录\n    if (!is_uploaded_file($file['tmp_name'])){\n        // 文件不是上传的\n        return false;\n    } else{\n        if (move_uploaded_file($file['tmp_name'], $path . '/' . $fullname)){\n            // 移动成功\n            return $fullname;\n        } else{\n            // 移动失败\n            $error = '文件上传失败!';\n            return false;\n        }\n    }\n}\n\n// 提供数据\n$file = $_FILES['image'];\n$allow_type = array('image/jpg', 'image/jpeg', 'image/jpg', 'image/png', 'image/gif');\n$path = 'newplace';\n$allow_format = array('jpg', 'jpeg', 'png', 'gif');\n$max_size = 8000000;\n\n// 调用函数\nif ($filename = upload_single($file, $allow_type, $path, $error, $allow_format = array(), $max_size = 2000000))\n{\n    echo $filename;\n} else{\n    echo $error;\n}\n```\n效果展示：\n![展示](https://img-blog.csdnimg.cn/175b4028a65f49e184163eda5ad021f6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/8dcb3de2b75f41a59c810a5f05bc0b0e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","slug":"PHP/php文件","published":1,"updated":"2021-12-03T14:58:55.243Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958cc004xasda9zub3202","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"PHP文件上传\"><a href=\"#PHP文件上传\" class=\"headerlink\" title=\"PHP文件上传\"></a>PHP文件上传</h2><p><strong>文件上传的概念：</strong> 文件从用户本地电脑通过传输方式(Web表单)保存到服务器所在电脑指定的目录下。</p>\n<p><strong>文件上传的原理：</strong></p>\n<ol>\n<li>增加文件上传的表单：浏览器请求一个服务器的HTML脚本(包含文件上传表单)</li>\n<li>用户从本地选择一个文件(点击上传框按钮)</li>\n<li>用户点击上传：文件会通过物联网传输到服务器上</li>\n<li>服务器操作系统会将文件保存到临时目录：是以临时文件格式保存(windows下是tmp格式)</li>\n<li>服务器脚本开始工作：判断文件有效</li>\n<li>服务器脚本将有效文件从临时目录移动到指定的目录下</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/e813d15882274139a20ca546904f4c26.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"1-表单制作\"><a href=\"#1-表单制作\" class=\"headerlink\" title=\"(1). 表单制作\"></a>(1). 表单制作</h3><p>1). method属性：表单提交方式必须为POST，因为GET方式传输对文件大小有要求。<br>2). enctype属性：form表单属性，主要是规范表单数据的编码方式，一般选multipart/form-data<br>可选属性值如下：</p>\n<table>\n<tbody><tr>\n<th width=\"40%\">值</th>\n    <th width=\"60%\">描述</th>\n  </tr>\n<tr>\n<td>application/x-www-form-urlencoded</td>\n    <td>默认。在发送前对所有字符进行编码（将空格转换为 \"+\" 符号，特殊字符转换为 ASCII HEX 值）。</td>\n  </tr>\n<tr>\n<td>multipart/form-data</td>\n    <td>不对字符编码。当使用有文件上传控件的表单时，该值是必需的。</td>\n  </tr>\n<tr>\n<td>text/plain</td>\n    <td>将空格转换为 \"+\" 符号，但不编码特殊字符。适用于GET传输</td>\n  </tr>\n</tbody></table>\n\n<p>3). 上传表单：file表单</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--单文件上传--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;upload&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/b28b522370a0446a90f4486a2618edf1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"2-FILES详解\"><a href=\"#2-FILES详解\" class=\"headerlink\" title=\"(2). $_FILES详解\"></a>(2). $_FILES详解</h3><p>$_FILES这个预定义变量是专门用来储存用户上传的文件的。</p>\n<p>先检查一下$_FILES和$_POST能接收到什么。<br><img src=\"https://img-blog.csdnimg.cn/b04b3c3c16664bf9a4de5b056b61ca14.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/b57d8971eef544b7b431bdce0806bf09.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">因此可见$_FILES变量的详细内容如下：<br>1). name: 文件在用户(浏览器端)电脑上实际存在的名字(实际用来保留后缀)<br>2). tmp_name: 文件上传到服务器后操作系统保存的临时路径(实际用来给PHP后期使用)<br>3). type: MIME(多功能互联网邮件扩展)类型，用来在计算机中客户端识别文件类型(确定软件)<br>4). error: 文件上传的代号, 用来告知应用软件(php)文件接收过程出了什么问题(php后期根据代码进行文件判断)<br>5). size: 文件大小(php根据实际需求来确定是否应该保留)</p>\n<p>文件上传错误信息说明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从 PHP 4.2.0 开始，PHP 将随文件信息数组一起返回一个对应的错误代码。</span><br><span class=\"line\">该代码可以在文件上传时生成的文件数组中的 error 字段中被找到，也就是 $_FILES[&#x27;userfile&#x27;][&#x27;error&#x27;]。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_OK</span><br><span class=\"line\">其值为 0，没有错误发生，文件上传成功。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_INI_SIZE</span><br><span class=\"line\">其值为 1，上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_FORM_SIZE</span><br><span class=\"line\">其值为 2，上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。</span><br><span class=\"line\">MAX_FILE_SIZE是php设置的一种浏览器端限制大小的标准，但W3C没有承认。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_PARTIAL</span><br><span class=\"line\">其值为 3，文件只有部分被上传。可能是因为自身网络不稳定导致丢包，也有可能是系统不安全。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_NO_FILE</span><br><span class=\"line\">其值为 4，没有文件被上传。可能是用户没有选择需要上传的文件就点击上传了。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_NO_TMP_DIR</span><br><span class=\"line\">其值为 6，找不到临时文件夹。PHP 4.3.10 和 PHP 5.0.3 引进。即操作系统对应的临时文件夹不存在。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_CANT_WRITE</span><br><span class=\"line\">其值为 7，文件写入失败。PHP 5.1.0 引进。</span><br><span class=\"line\">通常是因为PHP没有权限将临时文件移动到指定目录，在windows中基本不存在，但在linux系统中经常发生。</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-保存上传文件\"><a href=\"#3-保存上传文件\" class=\"headerlink\" title=\"(3). 保存上传文件\"></a>(3). 保存上传文件</h3><p>文件上传后会保存在$_FILES中，那么访问文件信息的形式就是$_FILES[‘name属性值’][‘元素信息’]<br>保存上传文件即移动临时文件到目标位置，步骤如下：<br>1). 判断是否为上传的文件(保障数据安全)： is_uploaded_file()<br>2). 移动文件： move_uploaded_file()</p>\n<p>is_uploaded_file()函数判断指定的文件是否是通过 HTTP POST 上传的。如果 file 所给出的文件是通过 HTTP POST 上传的则返回 TRUE。该函数可以用于确保恶意的用户无法欺骗脚本去访问本不能访问的文件，例如 /etc/passwd。这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。另外，该函数的结果会被缓存。请使用 clearstatcache() 来清除缓存。</p>\n<p>move_uploaded_file() 函数将上传的文件移动到新位置。若成功，则返回 true，否则返回 false。该函数有两个参数move_uploaded_file(file,newloc)，参数file规定要移动的文件，参数newloc规定文件的新位置，<strong>且新位置需要是包括文件自身名字</strong>。这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。此函数仅用于通过 HTTP POST 上传的文件。注意：如果目标文件已经存在，将会被覆盖。</p>\n<p>form_upload.html文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--单文件上传--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;upload&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>form_upload.php文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1.获得文件信息</span></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;image&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.判断是否是上传文件</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (is_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 是上传文件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>], <span class=\"string\">&#x27;newplace/&#x27;</span>.<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;name&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存成功!&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存失败!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 不是上传文件</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件上传失败!&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/dc5f8262c25840ac93e46838f2a40de3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/817a9675b76c40198f63e7c9c6f52cb3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"4-多文件上传\"><a href=\"#4-多文件上传\" class=\"headerlink\" title=\"(4). 多文件上传\"></a>(4). 多文件上传</h3><p>当商品需要上传多个图片进行展示的时候，那么需要使用多文件上传<br>&emsp;&emsp;&emsp;针对一个内容但是不同文件说明：同名表单<br>当商品需要进行多个维度图片说明的时后，需要使用多文件上传<br>&emsp;&emsp;&emsp;针对的是不同内容所以表单名字不一样：批量解决问题</p>\n<br>\n\n<h4 id=\"多文件上传的-FILES变量的数据结构形式：\"><a href=\"#多文件上传的-FILES变量的数据结构形式：\" class=\"headerlink\" title=\"多文件上传的$_FILES变量的数据结构形式：\"></a>多文件上传的$_FILES变量的数据结构形式：</h4><p><strong>同名表单：</strong> 将表单名字形成一个数组，而且同时将文件对应的五个要素：name、Tmp_name、size、type、error都形成对应数量的数组。每个文件上传对应数组元素的下标都是一样的：</p>\n<p>form_upload.html 文件代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多文件上传(同名)--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;同名文件批量上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>form_upload.php 文件代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查看文件信息</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class=\"line\">var_dump(<span class=\"variable\">$_FILES</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/ab1fc555faf94c07bfb40722da00d3e4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br><strong>不同名表单：</strong> 每个文件都会形成一个属于自己独立的5个元素数组<br>form_upload.html 文件代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多文件上传(不同名)--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image1&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image2&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image3&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;不同名文件批量上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>form_upload.php 文件代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查看文件信息</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class=\"line\">var_dump(<span class=\"variable\">$_FILES</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/5ee66c11be684a96974ae494ee3d0371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h4 id=\"对多文件信息的遍历读取和处理\"><a href=\"#对多文件信息的遍历读取和处理\" class=\"headerlink\" title=\"对多文件信息的遍历读取和处理\"></a>对多文件信息的遍历读取和处理</h4><p><strong>同名多文件上传处理方式：</strong> 想办法得到一个文件对应的五个元素数组。从$_FILES中把对应的name \\ tmp_name \\ size \\ error \\ type 信息挨个取出。然后存放到不同的数组中。</p>\n<p>form_upload.html 文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多文件上传(同名)--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn3&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;同名文件批量上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>form_upload.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 判断元素存在而且是数组： 有name则代表是文件， name元素有多个(数组)则代表是同名批量上传</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]) &amp;&amp; is_array(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历构造数组元素</span></span><br><span class=\"line\">    <span class=\"variable\">$images</span> = <span class=\"keyword\">array</span>();  <span class=\"comment\">// 存储所有文件信息，一个元素代表一个文件(数组)</span></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>] <span class=\"keyword\">as</span> <span class=\"variable\">$k</span> =&gt; <span class=\"variable\">$file</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$images</span>[] = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"variable\">$file</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;tmp_name&#x27;</span> =&gt; <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>][<span class=\"variable\">$k</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;type&#x27;</span> =&gt; <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;type&#x27;</span>][<span class=\"variable\">$k</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;error&#x27;</span> =&gt; <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;error&#x27;</span>][<span class=\"variable\">$k</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;size&#x27;</span> =&gt; <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;size&#x27;</span>][<span class=\"variable\">$k</span>]</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 处理完后执行长传操作</span></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$images</span> <span class=\"keyword\">as</span> <span class=\"variable\">$files</span>) &#123;  <span class=\"comment\">// $files就是一个完整的上传文件信息</span></span><br><span class=\"line\">        <span class=\"comment\">// 找到临时路径，指定存放路径</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (is_uploaded_file(<span class=\"variable\">$files</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 是上传文件，则执行存储操作</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$files</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>], <span class=\"string\">&#x27;newplace/&#x27;</span> . <span class=\"variable\">$files</span>[<span class=\"string\">&#x27;name&#x27;</span>])) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存成功！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存失败！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 不是上传文件</span></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件上传失败！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/fdb50f3b9d654b4e948a950a4e9fb3df.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/731e5133ab324973a1f9ce7402a378ba.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p><strong>不同名多文件上传处理方式：</strong> 按照表单名字从$_FILES中取出来就可以直接使用(明确知道表单中有多少个文件上传)，如果不确定表单中有多少个文件上传，就不适合挨个去取(效率不高)，可以通过遍历数组$_FILES数组挨个取出。</p>\n<p>form_upload.html文件代码:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多文件上传(不同名)--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image1&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image2&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image3&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn3&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;不同名批量上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>form_upload.php文件代码:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不同名文件遍历处理方式</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$_FILES</span> <span class=\"keyword\">as</span> <span class=\"variable\">$file</span>)&#123;  <span class=\"comment\">// $file就是一个完整的上传文件信息</span></span><br><span class=\"line\">    <span class=\"comment\">// 找到临时路径，指定存放路径</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(is_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 是上传文件，则执行存储操作</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>], <span class=\"string\">&#x27;newplace/&#x27;</span>.<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;name&#x27;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存成功！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存失败！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 不是上传文件</span></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件上传失败！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/ed3995585bde4c1481697b300c9d495a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/9d9d4dd9d86e46c48dbaaff5191f1c98.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-函数封装\"><a href=\"#5-函数封装\" class=\"headerlink\" title=\"(5). 函数封装\"></a>(5). 函数封装</h3><p>实现上传功能代码的重复利用：封装文件上传函数<br>功能： 上传文件<br>条件：条件判断</p>\n<ol>\n<li>文件类型是否合适？外部指定MIME类型</li>\n<li>文件存储到什么位置？外部指定</li>\n<li>文件格式限制(文件后缀)?外部限定</li>\n<li>文件大小限制？外部指定</li>\n</ol>\n<p>过程：<br>1). 封装出一个上传函数<br>2). 判断文件是否有效<br>3). 判断保存路径是否有效<br>4). 判断文件本身上传的过程中是否有错误：error<br>5). 文件类型的处理：通过MIME匹配<br>6). 文件格式的处理：后缀名问题<br>7). 文件大小的处理<br>8). 命名冲突的处理：上传同名文件？名字里出现中文？<br>9). 移动到指定目录</p>\n<p>结果：实现文件上传<br>5. 成功：结果能够在以后看到：需要将文件的路径和文件名字返回(存储到数据库)<br>6. 失败：返回false，指定错误原因(引用参数)</p>\n<p>form_upload.html 文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;单文件上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>form_upload.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// PHP文件上传功能封装函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现文件上传(单文件)</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>1 array $file,  需要上传的文件信息：一维五元素数组(name\\tmp_name\\error\\size\\type)</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>2 array $allow_type， 允许上传的MIME类型</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>3 string $path,  存储的路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>4 string &amp;$error,  如果出现错误的原因</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>5 array $allow_format = array(),  允许上传的文件格式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>6 int $max_size = 2000000,  允许上传的最大值，单位为字节</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 封装一个上传函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_single</span>(<span class=\"params\"><span class=\"variable\">$file</span>, <span class=\"variable\">$allow_type</span>, <span class=\"variable\">$path</span>, &amp;<span class=\"variable\">$error</span>, <span class=\"variable\">$allow_format</span> = <span class=\"keyword\">array</span>(<span class=\"params\"></span>), <span class=\"variable\">$max_size</span> = <span class=\"number\">2000000</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断文件是否有效</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!is_array(<span class=\"variable\">$file</span>) || !<span class=\"keyword\">isset</span>(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;error&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 文件无效</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;不是一个有效的上传文件！&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断保存路径有效</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!is_dir(<span class=\"variable\">$path</span>))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 路径不存在</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件存储路径不存在！&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断文件上传过程是否出错</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;error&#x27;</span>])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件超出服务器允许的大小！&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件上传过程中出现问题，只上传了一部分！&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;用户没有选中要上传的文件！&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件保存失败！&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断MIME类型</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;type&#x27;</span>], <span class=\"variable\">$allow_type</span>))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 该文件类型不允许上传</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;当前文件类型不允许上传!&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断后缀名是否允许</span></span><br><span class=\"line\">    <span class=\"variable\">$ext</span> = ltrim(strrchr(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;name&#x27;</span>], <span class=\"string\">&#x27;.&#x27;</span>), <span class=\"string\">&#x27;.&#x27;</span>);  <span class=\"comment\">// 取出后缀名</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>(<span class=\"variable\">$allow_format</span>) &amp;&amp; !in_array(<span class=\"variable\">$ext</span>, <span class=\"variable\">$allow_format</span>))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 不允许上传</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;当前文件的格式不允许上传!&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断当前文件大小是否满足当前需求</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;size&#x27;</span>] &gt; <span class=\"variable\">$max_size</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 文件过大</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;当前上传的文件超出大小，最大允许&#x27;</span> . <span class=\"variable\">$max_size</span> . <span class=\"string\">&#x27;字节&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造文件名字，防止名字冲突以及中文乱码：类型_年月日_随机字符串.$ext</span></span><br><span class=\"line\">    <span class=\"variable\">$fullname</span> = strstr(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;type&#x27;</span>], <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"literal\">TRUE</span>) . date(<span class=\"string\">&#x27;Ymd&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">4</span>; <span class=\"variable\">$i</span>++)&#123;  <span class=\"comment\">// 产生随机字符串</span></span><br><span class=\"line\">        <span class=\"variable\">$fullname</span> .= chr(mt_rand(<span class=\"number\">65</span>, <span class=\"number\">90</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$fullname</span> .= <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>;  <span class=\"comment\">// 拼接后缀</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 能执行到这就说明文件满足需求，现在将文件移动到指定目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!is_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 文件不是上传的</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>], <span class=\"variable\">$path</span> . <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"variable\">$fullname</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 移动成功</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable\">$fullname</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 移动失败</span></span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件上传失败!&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 提供数据</span></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;image&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$allow_type</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;image/jpg&#x27;</span>, <span class=\"string\">&#x27;image/jpeg&#x27;</span>, <span class=\"string\">&#x27;image/jpg&#x27;</span>, <span class=\"string\">&#x27;image/png&#x27;</span>, <span class=\"string\">&#x27;image/gif&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$path</span> = <span class=\"string\">&#x27;newplace&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$allow_format</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;jpg&#x27;</span>, <span class=\"string\">&#x27;jpeg&#x27;</span>, <span class=\"string\">&#x27;png&#x27;</span>, <span class=\"string\">&#x27;gif&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$max_size</span> = <span class=\"number\">8000000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$filename</span> = upload_single(<span class=\"variable\">$file</span>, <span class=\"variable\">$allow_type</span>, <span class=\"variable\">$path</span>, <span class=\"variable\">$error</span>, <span class=\"variable\">$allow_format</span> = <span class=\"keyword\">array</span>(), <span class=\"variable\">$max_size</span> = <span class=\"number\">2000000</span>))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$error</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/175b4028a65f49e184163eda5ad021f6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/8dcb3de2b75f41a59c810a5f05bc0b0e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"PHP文件上传\"><a href=\"#PHP文件上传\" class=\"headerlink\" title=\"PHP文件上传\"></a>PHP文件上传</h2><p><strong>文件上传的概念：</strong> 文件从用户本地电脑通过传输方式(Web表单)保存到服务器所在电脑指定的目录下。</p>\n<p><strong>文件上传的原理：</strong></p>\n<ol>\n<li>增加文件上传的表单：浏览器请求一个服务器的HTML脚本(包含文件上传表单)</li>\n<li>用户从本地选择一个文件(点击上传框按钮)</li>\n<li>用户点击上传：文件会通过物联网传输到服务器上</li>\n<li>服务器操作系统会将文件保存到临时目录：是以临时文件格式保存(windows下是tmp格式)</li>\n<li>服务器脚本开始工作：判断文件有效</li>\n<li>服务器脚本将有效文件从临时目录移动到指定的目录下</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/e813d15882274139a20ca546904f4c26.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"1-表单制作\"><a href=\"#1-表单制作\" class=\"headerlink\" title=\"(1). 表单制作\"></a>(1). 表单制作</h3><p>1). method属性：表单提交方式必须为POST，因为GET方式传输对文件大小有要求。<br>2). enctype属性：form表单属性，主要是规范表单数据的编码方式，一般选multipart/form-data<br>可选属性值如下：</p>\n<table>\n<tbody><tr>\n<th width=\"40%\">值</th>\n    <th width=\"60%\">描述</th>\n  </tr>\n<tr>\n<td>application/x-www-form-urlencoded</td>\n    <td>默认。在发送前对所有字符进行编码（将空格转换为 \"+\" 符号，特殊字符转换为 ASCII HEX 值）。</td>\n  </tr>\n<tr>\n<td>multipart/form-data</td>\n    <td>不对字符编码。当使用有文件上传控件的表单时，该值是必需的。</td>\n  </tr>\n<tr>\n<td>text/plain</td>\n    <td>将空格转换为 \"+\" 符号，但不编码特殊字符。适用于GET传输</td>\n  </tr>\n</tbody></table>\n\n<p>3). 上传表单：file表单</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--单文件上传--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;upload&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/b28b522370a0446a90f4486a2618edf1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"2-FILES详解\"><a href=\"#2-FILES详解\" class=\"headerlink\" title=\"(2). $_FILES详解\"></a>(2). $_FILES详解</h3><p>$_FILES这个预定义变量是专门用来储存用户上传的文件的。</p>\n<p>先检查一下$_FILES和$_POST能接收到什么。<br><img src=\"https://img-blog.csdnimg.cn/b04b3c3c16664bf9a4de5b056b61ca14.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/b57d8971eef544b7b431bdce0806bf09.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">因此可见$_FILES变量的详细内容如下：<br>1). name: 文件在用户(浏览器端)电脑上实际存在的名字(实际用来保留后缀)<br>2). tmp_name: 文件上传到服务器后操作系统保存的临时路径(实际用来给PHP后期使用)<br>3). type: MIME(多功能互联网邮件扩展)类型，用来在计算机中客户端识别文件类型(确定软件)<br>4). error: 文件上传的代号, 用来告知应用软件(php)文件接收过程出了什么问题(php后期根据代码进行文件判断)<br>5). size: 文件大小(php根据实际需求来确定是否应该保留)</p>\n<p>文件上传错误信息说明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从 PHP 4.2.0 开始，PHP 将随文件信息数组一起返回一个对应的错误代码。</span><br><span class=\"line\">该代码可以在文件上传时生成的文件数组中的 error 字段中被找到，也就是 $_FILES[&#x27;userfile&#x27;][&#x27;error&#x27;]。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_OK</span><br><span class=\"line\">其值为 0，没有错误发生，文件上传成功。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_INI_SIZE</span><br><span class=\"line\">其值为 1，上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_FORM_SIZE</span><br><span class=\"line\">其值为 2，上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。</span><br><span class=\"line\">MAX_FILE_SIZE是php设置的一种浏览器端限制大小的标准，但W3C没有承认。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_PARTIAL</span><br><span class=\"line\">其值为 3，文件只有部分被上传。可能是因为自身网络不稳定导致丢包，也有可能是系统不安全。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_NO_FILE</span><br><span class=\"line\">其值为 4，没有文件被上传。可能是用户没有选择需要上传的文件就点击上传了。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_NO_TMP_DIR</span><br><span class=\"line\">其值为 6，找不到临时文件夹。PHP 4.3.10 和 PHP 5.0.3 引进。即操作系统对应的临时文件夹不存在。</span><br><span class=\"line\"> </span><br><span class=\"line\">UPLOAD_ERR_CANT_WRITE</span><br><span class=\"line\">其值为 7，文件写入失败。PHP 5.1.0 引进。</span><br><span class=\"line\">通常是因为PHP没有权限将临时文件移动到指定目录，在windows中基本不存在，但在linux系统中经常发生。</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-保存上传文件\"><a href=\"#3-保存上传文件\" class=\"headerlink\" title=\"(3). 保存上传文件\"></a>(3). 保存上传文件</h3><p>文件上传后会保存在$_FILES中，那么访问文件信息的形式就是$_FILES[‘name属性值’][‘元素信息’]<br>保存上传文件即移动临时文件到目标位置，步骤如下：<br>1). 判断是否为上传的文件(保障数据安全)： is_uploaded_file()<br>2). 移动文件： move_uploaded_file()</p>\n<p>is_uploaded_file()函数判断指定的文件是否是通过 HTTP POST 上传的。如果 file 所给出的文件是通过 HTTP POST 上传的则返回 TRUE。该函数可以用于确保恶意的用户无法欺骗脚本去访问本不能访问的文件，例如 /etc/passwd。这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。另外，该函数的结果会被缓存。请使用 clearstatcache() 来清除缓存。</p>\n<p>move_uploaded_file() 函数将上传的文件移动到新位置。若成功，则返回 true，否则返回 false。该函数有两个参数move_uploaded_file(file,newloc)，参数file规定要移动的文件，参数newloc规定文件的新位置，<strong>且新位置需要是包括文件自身名字</strong>。这种检查显得格外重要，如果上传的文件有可能会造成对用户或本系统的其他用户显示其内容的话。此函数仅用于通过 HTTP POST 上传的文件。注意：如果目标文件已经存在，将会被覆盖。</p>\n<p>form_upload.html文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--单文件上传--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;upload&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>form_upload.php文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1.获得文件信息</span></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;image&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.判断是否是上传文件</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (is_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 是上传文件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>], <span class=\"string\">&#x27;newplace/&#x27;</span>.<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;name&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存成功!&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存失败!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 不是上传文件</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件上传失败!&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/dc5f8262c25840ac93e46838f2a40de3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/817a9675b76c40198f63e7c9c6f52cb3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"4-多文件上传\"><a href=\"#4-多文件上传\" class=\"headerlink\" title=\"(4). 多文件上传\"></a>(4). 多文件上传</h3><p>当商品需要上传多个图片进行展示的时候，那么需要使用多文件上传<br>&emsp;&emsp;&emsp;针对一个内容但是不同文件说明：同名表单<br>当商品需要进行多个维度图片说明的时后，需要使用多文件上传<br>&emsp;&emsp;&emsp;针对的是不同内容所以表单名字不一样：批量解决问题</p>\n<br>\n\n<h4 id=\"多文件上传的-FILES变量的数据结构形式：\"><a href=\"#多文件上传的-FILES变量的数据结构形式：\" class=\"headerlink\" title=\"多文件上传的$_FILES变量的数据结构形式：\"></a>多文件上传的$_FILES变量的数据结构形式：</h4><p><strong>同名表单：</strong> 将表单名字形成一个数组，而且同时将文件对应的五个要素：name、Tmp_name、size、type、error都形成对应数量的数组。每个文件上传对应数组元素的下标都是一样的：</p>\n<p>form_upload.html 文件代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多文件上传(同名)--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;同名文件批量上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>form_upload.php 文件代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查看文件信息</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class=\"line\">var_dump(<span class=\"variable\">$_FILES</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/ab1fc555faf94c07bfb40722da00d3e4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br><strong>不同名表单：</strong> 每个文件都会形成一个属于自己独立的5个元素数组<br>form_upload.html 文件代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多文件上传(不同名)--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image1&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image2&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image3&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;不同名文件批量上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>form_upload.php 文件代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查看文件信息</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class=\"line\">var_dump(<span class=\"variable\">$_FILES</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/5ee66c11be684a96974ae494ee3d0371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h4 id=\"对多文件信息的遍历读取和处理\"><a href=\"#对多文件信息的遍历读取和处理\" class=\"headerlink\" title=\"对多文件信息的遍历读取和处理\"></a>对多文件信息的遍历读取和处理</h4><p><strong>同名多文件上传处理方式：</strong> 想办法得到一个文件对应的五个元素数组。从$_FILES中把对应的name \\ tmp_name \\ size \\ error \\ type 信息挨个取出。然后存放到不同的数组中。</p>\n<p>form_upload.html 文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多文件上传(同名)--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;images[]&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn3&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;同名文件批量上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>form_upload.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 判断元素存在而且是数组： 有name则代表是文件， name元素有多个(数组)则代表是同名批量上传</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]) &amp;&amp; is_array(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历构造数组元素</span></span><br><span class=\"line\">    <span class=\"variable\">$images</span> = <span class=\"keyword\">array</span>();  <span class=\"comment\">// 存储所有文件信息，一个元素代表一个文件(数组)</span></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>] <span class=\"keyword\">as</span> <span class=\"variable\">$k</span> =&gt; <span class=\"variable\">$file</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$images</span>[] = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"variable\">$file</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;tmp_name&#x27;</span> =&gt; <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>][<span class=\"variable\">$k</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;type&#x27;</span> =&gt; <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;type&#x27;</span>][<span class=\"variable\">$k</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;error&#x27;</span> =&gt; <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;error&#x27;</span>][<span class=\"variable\">$k</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;size&#x27;</span> =&gt; <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;images&#x27;</span>][<span class=\"string\">&#x27;size&#x27;</span>][<span class=\"variable\">$k</span>]</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 处理完后执行长传操作</span></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$images</span> <span class=\"keyword\">as</span> <span class=\"variable\">$files</span>) &#123;  <span class=\"comment\">// $files就是一个完整的上传文件信息</span></span><br><span class=\"line\">        <span class=\"comment\">// 找到临时路径，指定存放路径</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (is_uploaded_file(<span class=\"variable\">$files</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 是上传文件，则执行存储操作</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$files</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>], <span class=\"string\">&#x27;newplace/&#x27;</span> . <span class=\"variable\">$files</span>[<span class=\"string\">&#x27;name&#x27;</span>])) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存成功！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存失败！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 不是上传文件</span></span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件上传失败！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/fdb50f3b9d654b4e948a950a4e9fb3df.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/731e5133ab324973a1f9ce7402a378ba.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p><strong>不同名多文件上传处理方式：</strong> 按照表单名字从$_FILES中取出来就可以直接使用(明确知道表单中有多少个文件上传)，如果不确定表单中有多少个文件上传，就不适合挨个去取(效率不高)，可以通过遍历数组$_FILES数组挨个取出。</p>\n<p>form_upload.html文件代码:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多文件上传(不同名)--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image1&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image2&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image3&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn3&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;不同名批量上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>form_upload.php文件代码:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不同名文件遍历处理方式</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$_FILES</span> <span class=\"keyword\">as</span> <span class=\"variable\">$file</span>)&#123;  <span class=\"comment\">// $file就是一个完整的上传文件信息</span></span><br><span class=\"line\">    <span class=\"comment\">// 找到临时路径，指定存放路径</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(is_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 是上传文件，则执行存储操作</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>], <span class=\"string\">&#x27;newplace/&#x27;</span>.<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;name&#x27;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存成功！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件保存失败！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 不是上传文件</span></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;文件上传失败！&quot;</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/ed3995585bde4c1481697b300c9d495a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/9d9d4dd9d86e46c48dbaaff5191f1c98.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-函数封装\"><a href=\"#5-函数封装\" class=\"headerlink\" title=\"(5). 函数封装\"></a>(5). 函数封装</h3><p>实现上传功能代码的重复利用：封装文件上传函数<br>功能： 上传文件<br>条件：条件判断</p>\n<ol>\n<li>文件类型是否合适？外部指定MIME类型</li>\n<li>文件存储到什么位置？外部指定</li>\n<li>文件格式限制(文件后缀)?外部限定</li>\n<li>文件大小限制？外部指定</li>\n</ol>\n<p>过程：<br>1). 封装出一个上传函数<br>2). 判断文件是否有效<br>3). 判断保存路径是否有效<br>4). 判断文件本身上传的过程中是否有错误：error<br>5). 文件类型的处理：通过MIME匹配<br>6). 文件格式的处理：后缀名问题<br>7). 文件大小的处理<br>8). 命名冲突的处理：上传同名文件？名字里出现中文？<br>9). 移动到指定目录</p>\n<p>结果：实现文件上传<br>5. 成功：结果能够在以后看到：需要将文件的路径和文件名字返回(存储到数据库)<br>6. 失败：返回false，指定错误原因(引用参数)</p>\n<p>form_upload.html 文件代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;th&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;form_upload.php&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;image&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;单文件上传&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>form_upload.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// PHP文件上传功能封装函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现文件上传(单文件)</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>1 array $file,  需要上传的文件信息：一维五元素数组(name\\tmp_name\\error\\size\\type)</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>2 array $allow_type， 允许上传的MIME类型</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>3 string $path,  存储的路径</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>4 string &amp;$error,  如果出现错误的原因</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>5 array $allow_format = array(),  允许上传的文件格式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>6 int $max_size = 2000000,  允许上传的最大值，单位为字节</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 封装一个上传函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_single</span>(<span class=\"params\"><span class=\"variable\">$file</span>, <span class=\"variable\">$allow_type</span>, <span class=\"variable\">$path</span>, &amp;<span class=\"variable\">$error</span>, <span class=\"variable\">$allow_format</span> = <span class=\"keyword\">array</span>(<span class=\"params\"></span>), <span class=\"variable\">$max_size</span> = <span class=\"number\">2000000</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断文件是否有效</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!is_array(<span class=\"variable\">$file</span>) || !<span class=\"keyword\">isset</span>(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;error&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 文件无效</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;不是一个有效的上传文件！&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断保存路径有效</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!is_dir(<span class=\"variable\">$path</span>))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 路径不存在</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件存储路径不存在！&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断文件上传过程是否出错</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;error&#x27;</span>])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件超出服务器允许的大小！&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件上传过程中出现问题，只上传了一部分！&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;用户没有选中要上传的文件！&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件保存失败！&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断MIME类型</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;type&#x27;</span>], <span class=\"variable\">$allow_type</span>))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 该文件类型不允许上传</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;当前文件类型不允许上传!&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断后缀名是否允许</span></span><br><span class=\"line\">    <span class=\"variable\">$ext</span> = ltrim(strrchr(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;name&#x27;</span>], <span class=\"string\">&#x27;.&#x27;</span>), <span class=\"string\">&#x27;.&#x27;</span>);  <span class=\"comment\">// 取出后缀名</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>(<span class=\"variable\">$allow_format</span>) &amp;&amp; !in_array(<span class=\"variable\">$ext</span>, <span class=\"variable\">$allow_format</span>))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 不允许上传</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;当前文件的格式不允许上传!&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断当前文件大小是否满足当前需求</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;size&#x27;</span>] &gt; <span class=\"variable\">$max_size</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 文件过大</span></span><br><span class=\"line\">        <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;当前上传的文件超出大小，最大允许&#x27;</span> . <span class=\"variable\">$max_size</span> . <span class=\"string\">&#x27;字节&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造文件名字，防止名字冲突以及中文乱码：类型_年月日_随机字符串.$ext</span></span><br><span class=\"line\">    <span class=\"variable\">$fullname</span> = strstr(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;type&#x27;</span>], <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"literal\">TRUE</span>) . date(<span class=\"string\">&#x27;Ymd&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">4</span>; <span class=\"variable\">$i</span>++)&#123;  <span class=\"comment\">// 产生随机字符串</span></span><br><span class=\"line\">        <span class=\"variable\">$fullname</span> .= chr(mt_rand(<span class=\"number\">65</span>, <span class=\"number\">90</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$fullname</span> .= <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$ext</span>;  <span class=\"comment\">// 拼接后缀</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 能执行到这就说明文件满足需求，现在将文件移动到指定目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!is_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 文件不是上传的</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$file</span>[<span class=\"string\">&#x27;tmp_name&#x27;</span>], <span class=\"variable\">$path</span> . <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"variable\">$fullname</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 移动成功</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable\">$fullname</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 移动失败</span></span><br><span class=\"line\">            <span class=\"variable\">$error</span> = <span class=\"string\">&#x27;文件上传失败!&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 提供数据</span></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;image&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$allow_type</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;image/jpg&#x27;</span>, <span class=\"string\">&#x27;image/jpeg&#x27;</span>, <span class=\"string\">&#x27;image/jpg&#x27;</span>, <span class=\"string\">&#x27;image/png&#x27;</span>, <span class=\"string\">&#x27;image/gif&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$path</span> = <span class=\"string\">&#x27;newplace&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$allow_format</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;jpg&#x27;</span>, <span class=\"string\">&#x27;jpeg&#x27;</span>, <span class=\"string\">&#x27;png&#x27;</span>, <span class=\"string\">&#x27;gif&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$max_size</span> = <span class=\"number\">8000000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$filename</span> = upload_single(<span class=\"variable\">$file</span>, <span class=\"variable\">$allow_type</span>, <span class=\"variable\">$path</span>, <span class=\"variable\">$error</span>, <span class=\"variable\">$allow_format</span> = <span class=\"keyword\">array</span>(), <span class=\"variable\">$max_size</span> = <span class=\"number\">2000000</span>))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$error</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果展示：<br><img src=\"https://img-blog.csdnimg.cn/175b4028a65f49e184163eda5ad021f6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/8dcb3de2b75f41a59c810a5f05bc0b0e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n"},{"title":"PHP会话技术(cookie与session)详解","date":"2021-07-25T17:47:31.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/66.jpg","_content":"\n## 一：会话技术初步认识\n**会话技术介绍：** web会话可以简单理解为：用户打开一个浏览器，访问某一个web站点，在这个站点点击多个超链接，访问服务器多个web资源，然后关闭浏览器，整个过程称之为一个会话。\n\nHTTP协议的特点是无状态/无连接，当一个浏览器连续多次请求同一个web服务器时，服务器是无法区分多个操作是否来自于同一个浏览器(用户)。会话技术就是通过HTTP协议想办法让服务器能够识别来自同一个浏览器的多次请求，从而方便浏览器(用户)在访问同一个网站的多次操作中，能够持续进行而不需要进行额外的身份验证。\n\n**会话技术分类：**\n1). cookie技术\ncookie技术是在HTTP协议下，服务器或脚本可以维持客户工作站上信息的一种方式，cookie是由Web服务器保存在用户浏览器(客户端)上的小文本文件(HTTP协议响应头)，它可以包含有关用户的信息。无论何时用户链接到服务器，Web站点都可以访问cookie信息。\n\n2). session技术\nsession直接翻译成中文比较困难，一般都翻译成时域，在计算机专业术语中，session是指一个终端用户与交互系统进行通信的时间间隔，通常指从注册进入系统到注销退出系统之间所经历的时间。以及如果需要的话，可能还有一定的操作空间。session技术是将数据保存到服务器端，无论何时用户链接到服务器，Web站点都可以访问session信息。session技术的实现是依赖cookie技术的。\n\n3). 两种会话技术的区别\na). 安全性方面：\nsession存储在服务器端，安全性高\ncookie存储在浏览器端，安全性低\nb). 数据大小方面\nsession数据存储不限\ncookie的数量和大小都有限制(一个网站最多20个cookie，长度最多4k)\nc). 可用数据类型\nsession 可以存复杂数据(自动序列化)\ncookie只能存储简单数据，数值或字符串\n\n## 二：PHP 的 COOKIE 技术\n### (1). COOKIE 工作原理\ncookie技术：服务器将数据通过HTTP相应到浏览器上，浏览器可以在以后携带对应的cookie数据访问服务器。\n\n1、第一次请求时，PHP通过setcookie函数将数据通过http协议响应头传输给浏览器\n2、浏览器在第一次响应的时候将cookie数据保存到浏览器\n3、浏览器后续请求同一个网站时，会自动检测是否存在cookie数据，如果存在，就将在请求头中将数据携带到服务器\n4、PHP执行时会自动判断浏览器请求中是否携带cookie，如果携带，则自动保存在\\$_COOKIE中\n5、利用\\$_COOKIE访问cookie数据\n\n![展示](https://img-blog.csdnimg.cn/e0f152cb25574b80837f08e8f15231ce.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (2). COOKIE 基本使用\n**设置COOKIE信息**\nsetcookie()函数用来设定cookie信息\n其参数为： setcookie(名字, 值)\n\n1). cookie名的设置： 字符串， 第一个参数\n2). cookie值的设置： 第二个参数\n3). cookie值的类型要求： 必须是简单类型中的整数或者字符串\n\n以下是演示：\n![展示](https://img-blog.csdnimg.cn/43ac1f6e5f184f999fd01d367afd82e0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)打开浏览器设置，查看网站cookie信息，可见cookie已经设置成功了。\n![展示](https://img-blog.csdnimg.cn/85d53223856546c6b5fa0f88388abea5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/47a5b199fb634777ba57e60093a6f38b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**读取COOKIE信息**\n可以使用\\$_COOKIE数组获得COOKIE信息。\n\n由下图可见，因为setcookie.php文件和getcookie.php文件在同一服务器下，所以getcookie.php可以拿到setcookie.php设置的cookie信息。\n![展示](https://img-blog.csdnimg.cn/1c1923560d724871a06f48e9616d48cf.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (3). COOKIE 高级——生命周期\nCOOKIE生命周期：COOKIE在浏览器生存时间（浏览器在下次访问服务器时是否携带对应的COOKIE）\n\n1). 默认(不设定)时的生命周期：不设定周期默认是关闭浏览器(即会话结束)\n2).设定为一个常规日期戳的周期： 通过setcookie函数第三个参数可以限定生命周期，是用时间戳管理，从格林威治时间开始\n3).设定为“0”的周期：设置生命周期时用0代替时间戳，表示普通设置，会话结束就过期\n4).删除一个cookie的做法：服务器没有权限去操作浏览器上的内容，因此无法直接删除，但可以通过设置生命周期来让浏览器自动判定cookie是否有效，无效的话浏览器会自动清除。\n![展示](https://img-blog.csdnimg.cn/367c2c99a0c54529b35ed8b6932c8f8c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (4). COOKIE 高级——作用范围\n作用范围：不同的文件夹层级中，设定的COOKIE默认是在不同文件夹下有访问限制，上层文件夹中设定的COOKIE可以在下层(子文件夹)中访问，而子文件夹中设定的COOKIE不能在上层文件夹中访问。\n```php\nsetcookie(名字, 值, 生命周期, 作用范围)\n```\n\n1). 默认(不设定)的范围： 就是使用COOKIE默认的作用范围\n\n2). 设定为 “/” 的含义： 告知浏览器当前COOKIE的作用范围是网站根目录，在setcookie的第四个参数里设置。例如下面的设置,该cookie名为password，值为12345，7天后过期，作用范围是网站根目录，即网站下所有页面都可以访问该cookie。\n\n```php\nsetcookie('password', 12345, time() + 7*24*60*60, '/');\n```\n\n### (5). COOKIE 高级——跨子域\n跨子域：在同一级别域名下，一个一级域名可以有多个子域名，他们之间是搭建在不同服务器上,比如腾讯官网是www.qq.com，腾讯公益是gongyi.qq.com。它们之间是搭建在不同服务器上的，但是可以通过COOKIE设置实现对应的COOKIE共享访问（默认是不允许的）。\n\n1). 设定cookie的有效域名：不同域名(包含主机)之间不能共享COOKIE，可以通过设置setcookie的第五个参数来控制。\n```php\nsetcookie(名字, 值, 生命周期, 作用范围, 有效域名)\n```\n\n2). 不设定时的默认有效域名是不跨域的。如下实例，在www.qq.com执行这行代码默认不共享COOKIE，即为默认值。\n```php\nsetcookie('password', 12345, time() + 7*24*60*60, '/', 'www.qq.com');\n```\n3). 跨子域的设定方法：在设定域名访问的时候用设定上级域名即可。如下实例，这行代码执行后，所有qq.com的域名都可以共享该COOKIE。\n```php\nsetcookie('password', 12345, time() + 7*24*60*60, '/', 'qq.com');\n```\n### (6). COOKIE 高级——数组数据\ncookie本身只支持简单数据(数字或者字符串)，能够保留的数据本身有限，也不成体系，如果需要使用cookie来保留一组数据的话，就要想办法凑成数组(cookie不支持数组)。\n\n下图可见，cookie本身不支持保存数组\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0136236f0ffe46458beb077756c93e79.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n因此需要伪装数组：\n\n1). 设置形式：setcookie('c1[k1]', 值)\n\n```php\n<?php\n\n// 伪装数组\nsetcookie('goods_ids[0]', 1);\nsetcookie('goods_ids[1]', 2);\nsetcookie('goods_ids[2]', 3);\nsetcookie('goods_ids[3]', 4);\n\necho '<pre>';\nvar_dump($_COOKIE);\n```\n效果如下，值得注意的是，我第一次打开并没有读取到goods_ids的cookie，刷新后拿到了，推测应该是虽然是先执行setcookie函数，但浏览器先执行完成var_dump(\\$_COOKIE)。\n![展示](https://img-blog.csdnimg.cn/6fa6ef16584a4193a05849d1f25030e2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n由下图浏览器设置所示，推测应该在\\$_COOKIE中以数组形式存在，但在浏览器中，依然是个体存在。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7b44890eb96d4db9a5dd813ee4643e9d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n2).读取形式： \\$_COOKIE['c1']['k1']\n\n![展示](https://img-blog.csdnimg.cn/cdfe04d253b5403ca7ca9d938ab77bb8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n## 三：PHP 的 SESSION 技术\n### (1). SESSION 工作原理\nsession与浏览器无关，但是与cookie有关。\n+ PHP碰到 session_start() 时开启 session 会话，会自动检测 sessionID\n     - 如果 cookie 中存在，则使用现成的\n     - 如果 cookie 中不存在，则创建一个 sessionID ，并通过响应头以 cookie 形式保存到浏览器上。\n+ 初始化超全局变量 \\$_SESSION 为一个空数组\n+ PHP通过 sessionID 去指定位置( session 文件存储位置)匹配对应的文件\n     + 不存在该文件，则创建一个 sessionID 命名文件\n     + 存在该文件，则读取文件内容(反序列化)， 将数据存储到 \\$_SESSION 中\n+ 脚本执行结束，将 \\$_SESSION 中保存的所有数据序列化存储到 sessionID 对应的文件中\n![展示](https://img-blog.csdnimg.cn/a2a732f8189b414a9f46afa04121faae.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (2). SESSION 基本使用\n启用 session ，任何时候都需要开启 session (脚本使用到\\$_SESSION 就开启一次)\n\\$_SESSION 是通过 session_start() 函数的调用才会定义的，没有直接定义。因此下图用法是错误的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cbd9f3fa51e64bec9f4c5394867cda24.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n这才是正确的用法，session 的使用需要开启session_start()\n![展示](https://img-blog.csdnimg.cn/bcc1e6aca0274baa9ae991fa9fd260d6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**设置 SESSION 信息**\n如果想存储数据到 session 中， 那么只要不断给\\$_SESSION 数组添加元素即可。\n![展示](https://img-blog.csdnimg.cn/8ce99bc2ae8f4545a18e6fc08a6e5027.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**读取 SESSION 信息**\n\\$_SESSION 就是一个数组，存储什么数据，什么方式存储的，就可以通过什么方式访问。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/58ffa775a682421caed3e30a46a8e411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)会话技术的目的就是实现跨脚本共享数据：在一个脚本中定义数据，在另一个脚本中保存数据。\n![展示](https://img-blog.csdnimg.cn/805f42f36cc54f76a6bc003ae233ee2a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)由图中红色字体部分可知，为什么 session_use.php 脚本能拿到 session.php 设置的值了。\n![展示](https://img-blog.csdnimg.cn/3e2f35c19b134199b9c3e994064a6970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### (3). SESSION 删除数据\n删除 session 就是将 session 数据清理掉(\\$_SESSION拿不到)\n**删除一个SESSION信息**\n\n```php\nunset($_SESSION['名字'])\n```\n![展示](https://img-blog.csdnimg.cn/18716f222a9947a7abe032fee1a70ebb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**删除全部SESSION信息**\n删除全部 session 就是让 \\$_SESSION 变成一个空数组。下面方式只是清除数据，而非清除session文件。清除 session 文件的方法在后面的销毁session会介绍。\n\n```php\n$_SESSION = array();\n```\n![展示](https://img-blog.csdnimg.cn/6e8d68f619ab43df9c8801e88232beee.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### (4). SESSION 相关配置\n#### SESSION 的基础配置\n1). session.name ： 指session名字，即保存到cookie中sessionID对应的名字\n![展示](https://img-blog.csdnimg.cn/056a1b9aac454ccba212a2a04d2d4528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n2). session.auto_start ：是否自动开启session(即无需手动session_start())，默认是关闭的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c76c50f9923144f68adfcdda2b8780c8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n3). session.save_handler ： session 数据的保存方式，默认是文件形式\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d11bac16dc814ebba91cf40a19c728f4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n4). session.save_path ： session 文件默认存储的位置\n如果你的session.save_path显示是在'\\tmp'中，那么说明文件默认被存储在系统临时文件夹中，这是不安全的，因为有可能面临访问权限问题。因此建议修改路径。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/95abce898d374255b35edbd9e416f1cc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n然后我们可以根据上面的存储路径找到服务器的session文件，如下所示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ab966a7c349f4b39a4da2e872bdf54a8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n#### SESSION 的常用配置\n1). session.cookie_lifetime ： sessionID在浏览器端对应的COOKIE的生命周期，默认是会话结束，即浏览器关闭。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a6e7ead88b9847aea2e58db52a901c24.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n2). session.cookie_path ： sessionID 在浏览器存储之后允许服务器访问的路径(COOKIE有作用范围)。默认是网站根目录。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f5d529fc1ee5452caf6f38a5cd51d710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n3). session.cookie_domain ： COOKIE允许访问的子域(COOKIE可以跨子域)，默认是不能跨子域\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a68ca9e38a9849b4b490792a698c78b9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### SESSION 配置的两种形式\n1). 在php.ini中配置，即全局配置， 配置方法见上图。\n2). 在脚本中配置，指PHP可以通过 ini_set 函数在运行中设定某些配置项(只会对当前运行的脚本有效)， 一般把这种配置称之为项目级。\n\nPHP ini_set 函数格式：\n```php\nstring ini_set(string $varname, string $newvalue)  \n```\n\n以下是一个示例，考虑到早期版本可能没有ini_set函数，因此在前面加一个错误抑制符。\n```php\n@ini_set('session.save_path', 'E:/');\n```\n\n### (5). SESSION 销毁session\n系统提供了函数： session_destroy()， 该函数会自动根据 session_start() 得到的 sessionID 去找到指定的 session 文件， 并把其删除。\n![展示](https://img-blog.csdnimg.cn/360845b3de6c4c68bae682fc16308b1c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/db3421463e5d4f29a2a54366ad352034.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### (6). SESSION 垃圾回收\nsession会话技术诞生后， session文件并不会自动清除，如果每天有大量session文件产生但又都是失效的，那么会增加服务器的压力并且影响session效率。\n垃圾回收，是指session机制提供了一种解决垃圾session文件的方式，给session文件指定周期，通过session文件最后更改时间与生命周期进行结合判定，如果已经过期则删除对应的session文件，如果没有过期则保留，这样就可以及时清理无效的僵尸文件，从而提升空间利用率和session工作效率。\n\n1). 任何一次session开启(session_start)，session都会尝试去读取session文件\n2). 读取session文件后，有可能触发垃圾回收机制(在session系统中也是一个函数：自己有一定几率调用)\n3). 垃圾回收机制会自动读取所有session文件的最后编辑时间，然后加上生命周期(配置文件)与当前时间进行比较(所有session文件)，过期则删除，有效则保留。\n\n**垃圾回收参数设置**\n1). session.gc_maxlifetime = 1440 : 规定的session文件最大的生命周期是1440秒，即24分钟。\n2). session.gc_probability = 1 ：垃圾回收概率因子(分子)\n3). session.gc_divisor = 1000 : 垃圾回收概率分母\n由session.gc_probability和session.gc_divisor知默认触发回收的概率是千分之一。实际开发中可以根据用户量进行调整。\n![展示](https://img-blog.csdnimg.cn/58265dfa63104d7893e94b41904473c2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### (7). SESSION 禁用cookie时使用session\n设置浏览器禁止cookie：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a2ba0e723f17440b96238143458f96a7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)依次执行 session.php 文件和 session_use.php 文件，发现 session_use.php 已经无法拿到 session\n数据了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/3c526986514a4605b6abbc45f92e8833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n\n**禁止COOKIE不能使用SESSION的原因**\nsession技术需要利用到cookie技术来保存sessionID，从而使得PHP能够在跨脚本的时候得到相同的sessionID，从而访问同一个session文件。\n\n**禁止COOKIE后如何使用SESSION**\n让session_start在开启之前 拿到原来的sessionID（另一个脚本的）\n\n**实现无COOKIE使用SESSION**\n方案一： 利用PHP提供的session函数： session_id 和 session_name 来获得和设置sessionID或者name从而解决session_start产生新的sessionID的情况(手动操作)\n1). 在session保存数据的脚本中获取sessionID和名字\n\n```php\n<?php\n\n// 开启 session\nsession_start();\n\n// 获取sessionID和名字\n$id = session_id();  // 获取是在session_start执行之后\n$name = session_name();  // 拿到名字(即php.ini 中的 session.name)\n\necho $name . '=' . $id;\n```\n\n![展示](https://img-blog.csdnimg.cn/38354433804941a39faf750c63f5e64e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)2). 接下来就是想办法把数据传递给另外一个脚本：表单传值(URL或form表单)\n\nsession.php 文件代码：\n```php\n<?php\n\n// 开启 session\nsession_start();\n\n// 设置内容\n$_SESSION['name'] = 'eyes';\n\n// 获取sessionID和名字\n$id = session_id();  // 获取是在session_start执行之后\n$name = session_name();  // 拿到名字(即php.ini 中的 session.name)\n\n// 传递给另外一个脚本\necho \"<a href='session_use.php?{$name}={$id}'>click</a>\";\n```\nsession_use.php 文件代码：\n```php\n<?php\n\n// 接收数据\n$name = session_name();\n$id = $_GET[$name];\n\n// 设定sessionID，该操作可以阻止session_start产生新的ID\nsession_id($id);\n\n// 开启session\nsession_start();\n\n// 访问\nvar_dump($_SESSION);\n```\n\n![展示](https://img-blog.csdnimg.cn/5088585f34f046628e6a434afa11263d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n方案二： 利用session机制中的已经提供的解决方案自动操作（通过配置实现）\n原因1：默认session配置只允许使用cookie保存sessionID： cookie_only\n原因2: 默认关闭了其它能够传递数据的方式，只保留了cookie\n1). 修改PHP配置文件，开启其他方式传输sessionID，关闭只允许使用cookie传输功能。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9f315cca3954423989841fb363a93ee3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/377ae02e3f2444598c9ff423ce3c7df8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)2). 重启apache。一旦配置开启，PHP会自动将sessionID和session名字在其他位置绑定数据，同时还会在session_start的时候，考虑通过表单传递数据，而非只有cookie。\n\n![展示](https://img-blog.csdnimg.cn/1932f52fded94aecb1d5a27231afecac.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","source":"_posts/PHP/php会话技术.md","raw":"---\ntitle: PHP会话技术(cookie与session)详解\ndate: 2021-07-26 01:47:31\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/66.jpg\ntags: \n  - cookie\n  - session\n  - 会话\ncategories: PHP\n---\n\n## 一：会话技术初步认识\n**会话技术介绍：** web会话可以简单理解为：用户打开一个浏览器，访问某一个web站点，在这个站点点击多个超链接，访问服务器多个web资源，然后关闭浏览器，整个过程称之为一个会话。\n\nHTTP协议的特点是无状态/无连接，当一个浏览器连续多次请求同一个web服务器时，服务器是无法区分多个操作是否来自于同一个浏览器(用户)。会话技术就是通过HTTP协议想办法让服务器能够识别来自同一个浏览器的多次请求，从而方便浏览器(用户)在访问同一个网站的多次操作中，能够持续进行而不需要进行额外的身份验证。\n\n**会话技术分类：**\n1). cookie技术\ncookie技术是在HTTP协议下，服务器或脚本可以维持客户工作站上信息的一种方式，cookie是由Web服务器保存在用户浏览器(客户端)上的小文本文件(HTTP协议响应头)，它可以包含有关用户的信息。无论何时用户链接到服务器，Web站点都可以访问cookie信息。\n\n2). session技术\nsession直接翻译成中文比较困难，一般都翻译成时域，在计算机专业术语中，session是指一个终端用户与交互系统进行通信的时间间隔，通常指从注册进入系统到注销退出系统之间所经历的时间。以及如果需要的话，可能还有一定的操作空间。session技术是将数据保存到服务器端，无论何时用户链接到服务器，Web站点都可以访问session信息。session技术的实现是依赖cookie技术的。\n\n3). 两种会话技术的区别\na). 安全性方面：\nsession存储在服务器端，安全性高\ncookie存储在浏览器端，安全性低\nb). 数据大小方面\nsession数据存储不限\ncookie的数量和大小都有限制(一个网站最多20个cookie，长度最多4k)\nc). 可用数据类型\nsession 可以存复杂数据(自动序列化)\ncookie只能存储简单数据，数值或字符串\n\n## 二：PHP 的 COOKIE 技术\n### (1). COOKIE 工作原理\ncookie技术：服务器将数据通过HTTP相应到浏览器上，浏览器可以在以后携带对应的cookie数据访问服务器。\n\n1、第一次请求时，PHP通过setcookie函数将数据通过http协议响应头传输给浏览器\n2、浏览器在第一次响应的时候将cookie数据保存到浏览器\n3、浏览器后续请求同一个网站时，会自动检测是否存在cookie数据，如果存在，就将在请求头中将数据携带到服务器\n4、PHP执行时会自动判断浏览器请求中是否携带cookie，如果携带，则自动保存在\\$_COOKIE中\n5、利用\\$_COOKIE访问cookie数据\n\n![展示](https://img-blog.csdnimg.cn/e0f152cb25574b80837f08e8f15231ce.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (2). COOKIE 基本使用\n**设置COOKIE信息**\nsetcookie()函数用来设定cookie信息\n其参数为： setcookie(名字, 值)\n\n1). cookie名的设置： 字符串， 第一个参数\n2). cookie值的设置： 第二个参数\n3). cookie值的类型要求： 必须是简单类型中的整数或者字符串\n\n以下是演示：\n![展示](https://img-blog.csdnimg.cn/43ac1f6e5f184f999fd01d367afd82e0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)打开浏览器设置，查看网站cookie信息，可见cookie已经设置成功了。\n![展示](https://img-blog.csdnimg.cn/85d53223856546c6b5fa0f88388abea5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![展示](https://img-blog.csdnimg.cn/47a5b199fb634777ba57e60093a6f38b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**读取COOKIE信息**\n可以使用\\$_COOKIE数组获得COOKIE信息。\n\n由下图可见，因为setcookie.php文件和getcookie.php文件在同一服务器下，所以getcookie.php可以拿到setcookie.php设置的cookie信息。\n![展示](https://img-blog.csdnimg.cn/1c1923560d724871a06f48e9616d48cf.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (3). COOKIE 高级——生命周期\nCOOKIE生命周期：COOKIE在浏览器生存时间（浏览器在下次访问服务器时是否携带对应的COOKIE）\n\n1). 默认(不设定)时的生命周期：不设定周期默认是关闭浏览器(即会话结束)\n2).设定为一个常规日期戳的周期： 通过setcookie函数第三个参数可以限定生命周期，是用时间戳管理，从格林威治时间开始\n3).设定为“0”的周期：设置生命周期时用0代替时间戳，表示普通设置，会话结束就过期\n4).删除一个cookie的做法：服务器没有权限去操作浏览器上的内容，因此无法直接删除，但可以通过设置生命周期来让浏览器自动判定cookie是否有效，无效的话浏览器会自动清除。\n![展示](https://img-blog.csdnimg.cn/367c2c99a0c54529b35ed8b6932c8f8c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (4). COOKIE 高级——作用范围\n作用范围：不同的文件夹层级中，设定的COOKIE默认是在不同文件夹下有访问限制，上层文件夹中设定的COOKIE可以在下层(子文件夹)中访问，而子文件夹中设定的COOKIE不能在上层文件夹中访问。\n```php\nsetcookie(名字, 值, 生命周期, 作用范围)\n```\n\n1). 默认(不设定)的范围： 就是使用COOKIE默认的作用范围\n\n2). 设定为 “/” 的含义： 告知浏览器当前COOKIE的作用范围是网站根目录，在setcookie的第四个参数里设置。例如下面的设置,该cookie名为password，值为12345，7天后过期，作用范围是网站根目录，即网站下所有页面都可以访问该cookie。\n\n```php\nsetcookie('password', 12345, time() + 7*24*60*60, '/');\n```\n\n### (5). COOKIE 高级——跨子域\n跨子域：在同一级别域名下，一个一级域名可以有多个子域名，他们之间是搭建在不同服务器上,比如腾讯官网是www.qq.com，腾讯公益是gongyi.qq.com。它们之间是搭建在不同服务器上的，但是可以通过COOKIE设置实现对应的COOKIE共享访问（默认是不允许的）。\n\n1). 设定cookie的有效域名：不同域名(包含主机)之间不能共享COOKIE，可以通过设置setcookie的第五个参数来控制。\n```php\nsetcookie(名字, 值, 生命周期, 作用范围, 有效域名)\n```\n\n2). 不设定时的默认有效域名是不跨域的。如下实例，在www.qq.com执行这行代码默认不共享COOKIE，即为默认值。\n```php\nsetcookie('password', 12345, time() + 7*24*60*60, '/', 'www.qq.com');\n```\n3). 跨子域的设定方法：在设定域名访问的时候用设定上级域名即可。如下实例，这行代码执行后，所有qq.com的域名都可以共享该COOKIE。\n```php\nsetcookie('password', 12345, time() + 7*24*60*60, '/', 'qq.com');\n```\n### (6). COOKIE 高级——数组数据\ncookie本身只支持简单数据(数字或者字符串)，能够保留的数据本身有限，也不成体系，如果需要使用cookie来保留一组数据的话，就要想办法凑成数组(cookie不支持数组)。\n\n下图可见，cookie本身不支持保存数组\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0136236f0ffe46458beb077756c93e79.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n因此需要伪装数组：\n\n1). 设置形式：setcookie('c1[k1]', 值)\n\n```php\n<?php\n\n// 伪装数组\nsetcookie('goods_ids[0]', 1);\nsetcookie('goods_ids[1]', 2);\nsetcookie('goods_ids[2]', 3);\nsetcookie('goods_ids[3]', 4);\n\necho '<pre>';\nvar_dump($_COOKIE);\n```\n效果如下，值得注意的是，我第一次打开并没有读取到goods_ids的cookie，刷新后拿到了，推测应该是虽然是先执行setcookie函数，但浏览器先执行完成var_dump(\\$_COOKIE)。\n![展示](https://img-blog.csdnimg.cn/6fa6ef16584a4193a05849d1f25030e2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n由下图浏览器设置所示，推测应该在\\$_COOKIE中以数组形式存在，但在浏览器中，依然是个体存在。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7b44890eb96d4db9a5dd813ee4643e9d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n2).读取形式： \\$_COOKIE['c1']['k1']\n\n![展示](https://img-blog.csdnimg.cn/cdfe04d253b5403ca7ca9d938ab77bb8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n## 三：PHP 的 SESSION 技术\n### (1). SESSION 工作原理\nsession与浏览器无关，但是与cookie有关。\n+ PHP碰到 session_start() 时开启 session 会话，会自动检测 sessionID\n     - 如果 cookie 中存在，则使用现成的\n     - 如果 cookie 中不存在，则创建一个 sessionID ，并通过响应头以 cookie 形式保存到浏览器上。\n+ 初始化超全局变量 \\$_SESSION 为一个空数组\n+ PHP通过 sessionID 去指定位置( session 文件存储位置)匹配对应的文件\n     + 不存在该文件，则创建一个 sessionID 命名文件\n     + 存在该文件，则读取文件内容(反序列化)， 将数据存储到 \\$_SESSION 中\n+ 脚本执行结束，将 \\$_SESSION 中保存的所有数据序列化存储到 sessionID 对应的文件中\n![展示](https://img-blog.csdnimg.cn/a2a732f8189b414a9f46afa04121faae.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n### (2). SESSION 基本使用\n启用 session ，任何时候都需要开启 session (脚本使用到\\$_SESSION 就开启一次)\n\\$_SESSION 是通过 session_start() 函数的调用才会定义的，没有直接定义。因此下图用法是错误的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cbd9f3fa51e64bec9f4c5394867cda24.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n这才是正确的用法，session 的使用需要开启session_start()\n![展示](https://img-blog.csdnimg.cn/bcc1e6aca0274baa9ae991fa9fd260d6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**设置 SESSION 信息**\n如果想存储数据到 session 中， 那么只要不断给\\$_SESSION 数组添加元素即可。\n![展示](https://img-blog.csdnimg.cn/8ce99bc2ae8f4545a18e6fc08a6e5027.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n**读取 SESSION 信息**\n\\$_SESSION 就是一个数组，存储什么数据，什么方式存储的，就可以通过什么方式访问。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/58ffa775a682421caed3e30a46a8e411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)会话技术的目的就是实现跨脚本共享数据：在一个脚本中定义数据，在另一个脚本中保存数据。\n![展示](https://img-blog.csdnimg.cn/805f42f36cc54f76a6bc003ae233ee2a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)由图中红色字体部分可知，为什么 session_use.php 脚本能拿到 session.php 设置的值了。\n![展示](https://img-blog.csdnimg.cn/3e2f35c19b134199b9c3e994064a6970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### (3). SESSION 删除数据\n删除 session 就是将 session 数据清理掉(\\$_SESSION拿不到)\n**删除一个SESSION信息**\n\n```php\nunset($_SESSION['名字'])\n```\n![展示](https://img-blog.csdnimg.cn/18716f222a9947a7abe032fee1a70ebb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n**删除全部SESSION信息**\n删除全部 session 就是让 \\$_SESSION 变成一个空数组。下面方式只是清除数据，而非清除session文件。清除 session 文件的方法在后面的销毁session会介绍。\n\n```php\n$_SESSION = array();\n```\n![展示](https://img-blog.csdnimg.cn/6e8d68f619ab43df9c8801e88232beee.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### (4). SESSION 相关配置\n#### SESSION 的基础配置\n1). session.name ： 指session名字，即保存到cookie中sessionID对应的名字\n![展示](https://img-blog.csdnimg.cn/056a1b9aac454ccba212a2a04d2d4528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n2). session.auto_start ：是否自动开启session(即无需手动session_start())，默认是关闭的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c76c50f9923144f68adfcdda2b8780c8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n3). session.save_handler ： session 数据的保存方式，默认是文件形式\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d11bac16dc814ebba91cf40a19c728f4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n4). session.save_path ： session 文件默认存储的位置\n如果你的session.save_path显示是在'\\tmp'中，那么说明文件默认被存储在系统临时文件夹中，这是不安全的，因为有可能面临访问权限问题。因此建议修改路径。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/95abce898d374255b35edbd9e416f1cc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n然后我们可以根据上面的存储路径找到服务器的session文件，如下所示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ab966a7c349f4b39a4da2e872bdf54a8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n#### SESSION 的常用配置\n1). session.cookie_lifetime ： sessionID在浏览器端对应的COOKIE的生命周期，默认是会话结束，即浏览器关闭。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a6e7ead88b9847aea2e58db52a901c24.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n2). session.cookie_path ： sessionID 在浏览器存储之后允许服务器访问的路径(COOKIE有作用范围)。默认是网站根目录。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f5d529fc1ee5452caf6f38a5cd51d710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n3). session.cookie_domain ： COOKIE允许访问的子域(COOKIE可以跨子域)，默认是不能跨子域\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a68ca9e38a9849b4b490792a698c78b9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n#### SESSION 配置的两种形式\n1). 在php.ini中配置，即全局配置， 配置方法见上图。\n2). 在脚本中配置，指PHP可以通过 ini_set 函数在运行中设定某些配置项(只会对当前运行的脚本有效)， 一般把这种配置称之为项目级。\n\nPHP ini_set 函数格式：\n```php\nstring ini_set(string $varname, string $newvalue)  \n```\n\n以下是一个示例，考虑到早期版本可能没有ini_set函数，因此在前面加一个错误抑制符。\n```php\n@ini_set('session.save_path', 'E:/');\n```\n\n### (5). SESSION 销毁session\n系统提供了函数： session_destroy()， 该函数会自动根据 session_start() 得到的 sessionID 去找到指定的 session 文件， 并把其删除。\n![展示](https://img-blog.csdnimg.cn/360845b3de6c4c68bae682fc16308b1c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/db3421463e5d4f29a2a54366ad352034.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### (6). SESSION 垃圾回收\nsession会话技术诞生后， session文件并不会自动清除，如果每天有大量session文件产生但又都是失效的，那么会增加服务器的压力并且影响session效率。\n垃圾回收，是指session机制提供了一种解决垃圾session文件的方式，给session文件指定周期，通过session文件最后更改时间与生命周期进行结合判定，如果已经过期则删除对应的session文件，如果没有过期则保留，这样就可以及时清理无效的僵尸文件，从而提升空间利用率和session工作效率。\n\n1). 任何一次session开启(session_start)，session都会尝试去读取session文件\n2). 读取session文件后，有可能触发垃圾回收机制(在session系统中也是一个函数：自己有一定几率调用)\n3). 垃圾回收机制会自动读取所有session文件的最后编辑时间，然后加上生命周期(配置文件)与当前时间进行比较(所有session文件)，过期则删除，有效则保留。\n\n**垃圾回收参数设置**\n1). session.gc_maxlifetime = 1440 : 规定的session文件最大的生命周期是1440秒，即24分钟。\n2). session.gc_probability = 1 ：垃圾回收概率因子(分子)\n3). session.gc_divisor = 1000 : 垃圾回收概率分母\n由session.gc_probability和session.gc_divisor知默认触发回收的概率是千分之一。实际开发中可以根据用户量进行调整。\n![展示](https://img-blog.csdnimg.cn/58265dfa63104d7893e94b41904473c2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n### (7). SESSION 禁用cookie时使用session\n设置浏览器禁止cookie：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a2ba0e723f17440b96238143458f96a7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)依次执行 session.php 文件和 session_use.php 文件，发现 session_use.php 已经无法拿到 session\n数据了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/3c526986514a4605b6abbc45f92e8833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n\n**禁止COOKIE不能使用SESSION的原因**\nsession技术需要利用到cookie技术来保存sessionID，从而使得PHP能够在跨脚本的时候得到相同的sessionID，从而访问同一个session文件。\n\n**禁止COOKIE后如何使用SESSION**\n让session_start在开启之前 拿到原来的sessionID（另一个脚本的）\n\n**实现无COOKIE使用SESSION**\n方案一： 利用PHP提供的session函数： session_id 和 session_name 来获得和设置sessionID或者name从而解决session_start产生新的sessionID的情况(手动操作)\n1). 在session保存数据的脚本中获取sessionID和名字\n\n```php\n<?php\n\n// 开启 session\nsession_start();\n\n// 获取sessionID和名字\n$id = session_id();  // 获取是在session_start执行之后\n$name = session_name();  // 拿到名字(即php.ini 中的 session.name)\n\necho $name . '=' . $id;\n```\n\n![展示](https://img-blog.csdnimg.cn/38354433804941a39faf750c63f5e64e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)2). 接下来就是想办法把数据传递给另外一个脚本：表单传值(URL或form表单)\n\nsession.php 文件代码：\n```php\n<?php\n\n// 开启 session\nsession_start();\n\n// 设置内容\n$_SESSION['name'] = 'eyes';\n\n// 获取sessionID和名字\n$id = session_id();  // 获取是在session_start执行之后\n$name = session_name();  // 拿到名字(即php.ini 中的 session.name)\n\n// 传递给另外一个脚本\necho \"<a href='session_use.php?{$name}={$id}'>click</a>\";\n```\nsession_use.php 文件代码：\n```php\n<?php\n\n// 接收数据\n$name = session_name();\n$id = $_GET[$name];\n\n// 设定sessionID，该操作可以阻止session_start产生新的ID\nsession_id($id);\n\n// 开启session\nsession_start();\n\n// 访问\nvar_dump($_SESSION);\n```\n\n![展示](https://img-blog.csdnimg.cn/5088585f34f046628e6a434afa11263d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)\n\n方案二： 利用session机制中的已经提供的解决方案自动操作（通过配置实现）\n原因1：默认session配置只允许使用cookie保存sessionID： cookie_only\n原因2: 默认关闭了其它能够传递数据的方式，只保留了cookie\n1). 修改PHP配置文件，开启其他方式传输sessionID，关闭只允许使用cookie传输功能。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9f315cca3954423989841fb363a93ee3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/377ae02e3f2444598c9ff423ce3c7df8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)2). 重启apache。一旦配置开启，PHP会自动将sessionID和session名字在其他位置绑定数据，同时还会在session_start的时候，考虑通过表单传递数据，而非只有cookie。\n\n![展示](https://img-blog.csdnimg.cn/1932f52fded94aecb1d5a27231afecac.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70)","slug":"PHP/php会话技术","published":1,"updated":"2021-12-04T02:55:10.024Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958cd0051asda7iov2t7g","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"一：会话技术初步认识\"><a href=\"#一：会话技术初步认识\" class=\"headerlink\" title=\"一：会话技术初步认识\"></a>一：会话技术初步认识</h2><p><strong>会话技术介绍：</strong> web会话可以简单理解为：用户打开一个浏览器，访问某一个web站点，在这个站点点击多个超链接，访问服务器多个web资源，然后关闭浏览器，整个过程称之为一个会话。</p>\n<p>HTTP协议的特点是无状态/无连接，当一个浏览器连续多次请求同一个web服务器时，服务器是无法区分多个操作是否来自于同一个浏览器(用户)。会话技术就是通过HTTP协议想办法让服务器能够识别来自同一个浏览器的多次请求，从而方便浏览器(用户)在访问同一个网站的多次操作中，能够持续进行而不需要进行额外的身份验证。</p>\n<p><strong>会话技术分类：</strong><br>1). cookie技术<br>cookie技术是在HTTP协议下，服务器或脚本可以维持客户工作站上信息的一种方式，cookie是由Web服务器保存在用户浏览器(客户端)上的小文本文件(HTTP协议响应头)，它可以包含有关用户的信息。无论何时用户链接到服务器，Web站点都可以访问cookie信息。</p>\n<p>2). session技术<br>session直接翻译成中文比较困难，一般都翻译成时域，在计算机专业术语中，session是指一个终端用户与交互系统进行通信的时间间隔，通常指从注册进入系统到注销退出系统之间所经历的时间。以及如果需要的话，可能还有一定的操作空间。session技术是将数据保存到服务器端，无论何时用户链接到服务器，Web站点都可以访问session信息。session技术的实现是依赖cookie技术的。</p>\n<p>3). 两种会话技术的区别<br>a). 安全性方面：<br>session存储在服务器端，安全性高<br>cookie存储在浏览器端，安全性低<br>b). 数据大小方面<br>session数据存储不限<br>cookie的数量和大小都有限制(一个网站最多20个cookie，长度最多4k)<br>c). 可用数据类型<br>session 可以存复杂数据(自动序列化)<br>cookie只能存储简单数据，数值或字符串</p>\n<h2 id=\"二：PHP-的-COOKIE-技术\"><a href=\"#二：PHP-的-COOKIE-技术\" class=\"headerlink\" title=\"二：PHP 的 COOKIE 技术\"></a>二：PHP 的 COOKIE 技术</h2><h3 id=\"1-COOKIE-工作原理\"><a href=\"#1-COOKIE-工作原理\" class=\"headerlink\" title=\"(1). COOKIE 工作原理\"></a>(1). COOKIE 工作原理</h3><p>cookie技术：服务器将数据通过HTTP相应到浏览器上，浏览器可以在以后携带对应的cookie数据访问服务器。</p>\n<p>1、第一次请求时，PHP通过setcookie函数将数据通过http协议响应头传输给浏览器<br>2、浏览器在第一次响应的时候将cookie数据保存到浏览器<br>3、浏览器后续请求同一个网站时，会自动检测是否存在cookie数据，如果存在，就将在请求头中将数据携带到服务器<br>4、PHP执行时会自动判断浏览器请求中是否携带cookie，如果携带，则自动保存在$_COOKIE中<br>5、利用$_COOKIE访问cookie数据</p>\n<p><img src=\"https://img-blog.csdnimg.cn/e0f152cb25574b80837f08e8f15231ce.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"2-COOKIE-基本使用\"><a href=\"#2-COOKIE-基本使用\" class=\"headerlink\" title=\"(2). COOKIE 基本使用\"></a>(2). COOKIE 基本使用</h3><p><strong>设置COOKIE信息</strong><br>setcookie()函数用来设定cookie信息<br>其参数为： setcookie(名字, 值)</p>\n<p>1). cookie名的设置： 字符串， 第一个参数<br>2). cookie值的设置： 第二个参数<br>3). cookie值的类型要求： 必须是简单类型中的整数或者字符串</p>\n<p>以下是演示：<br><img src=\"https://img-blog.csdnimg.cn/43ac1f6e5f184f999fd01d367afd82e0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">打开浏览器设置，查看网站cookie信息，可见cookie已经设置成功了。<br><img src=\"https://img-blog.csdnimg.cn/85d53223856546c6b5fa0f88388abea5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/47a5b199fb634777ba57e60093a6f38b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p><strong>读取COOKIE信息</strong><br>可以使用$_COOKIE数组获得COOKIE信息。</p>\n<p>由下图可见，因为setcookie.php文件和getcookie.php文件在同一服务器下，所以getcookie.php可以拿到setcookie.php设置的cookie信息。<br><img src=\"https://img-blog.csdnimg.cn/1c1923560d724871a06f48e9616d48cf.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"3-COOKIE-高级——生命周期\"><a href=\"#3-COOKIE-高级——生命周期\" class=\"headerlink\" title=\"(3). COOKIE 高级——生命周期\"></a>(3). COOKIE 高级——生命周期</h3><p>COOKIE生命周期：COOKIE在浏览器生存时间（浏览器在下次访问服务器时是否携带对应的COOKIE）</p>\n<p>1). 默认(不设定)时的生命周期：不设定周期默认是关闭浏览器(即会话结束)<br>2).设定为一个常规日期戳的周期： 通过setcookie函数第三个参数可以限定生命周期，是用时间戳管理，从格林威治时间开始<br>3).设定为“0”的周期：设置生命周期时用0代替时间戳，表示普通设置，会话结束就过期<br>4).删除一个cookie的做法：服务器没有权限去操作浏览器上的内容，因此无法直接删除，但可以通过设置生命周期来让浏览器自动判定cookie是否有效，无效的话浏览器会自动清除。<br><img src=\"https://img-blog.csdnimg.cn/367c2c99a0c54529b35ed8b6932c8f8c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"4-COOKIE-高级——作用范围\"><a href=\"#4-COOKIE-高级——作用范围\" class=\"headerlink\" title=\"(4). COOKIE 高级——作用范围\"></a>(4). COOKIE 高级——作用范围</h3><p>作用范围：不同的文件夹层级中，设定的COOKIE默认是在不同文件夹下有访问限制，上层文件夹中设定的COOKIE可以在下层(子文件夹)中访问，而子文件夹中设定的COOKIE不能在上层文件夹中访问。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(名字, 值, 生命周期, 作用范围)</span><br></pre></td></tr></table></figure>\n\n<p>1). 默认(不设定)的范围： 就是使用COOKIE默认的作用范围</p>\n<p>2). 设定为 “/” 的含义： 告知浏览器当前COOKIE的作用范围是网站根目录，在setcookie的第四个参数里设置。例如下面的设置,该cookie名为password，值为12345，7天后过期，作用范围是网站根目录，即网站下所有页面都可以访问该cookie。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"number\">12345</span>, time() + <span class=\"number\">7</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-COOKIE-高级——跨子域\"><a href=\"#5-COOKIE-高级——跨子域\" class=\"headerlink\" title=\"(5). COOKIE 高级——跨子域\"></a>(5). COOKIE 高级——跨子域</h3><p>跨子域：在同一级别域名下，一个一级域名可以有多个子域名，他们之间是搭建在不同服务器上,比如腾讯官网是<a href=\"http://www.qq.com,腾讯公益是gongyi.qq.com.它们之间是搭建在不同服务器上的,但是可以通过cookie设置实现对应的cookie共享访问(默认是不允许的)./\">www.qq.com，腾讯公益是gongyi.qq.com。它们之间是搭建在不同服务器上的，但是可以通过COOKIE设置实现对应的COOKIE共享访问（默认是不允许的）。</a></p>\n<p>1). 设定cookie的有效域名：不同域名(包含主机)之间不能共享COOKIE，可以通过设置setcookie的第五个参数来控制。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(名字, 值, 生命周期, 作用范围, 有效域名)</span><br></pre></td></tr></table></figure>\n\n<p>2). 不设定时的默认有效域名是不跨域的。如下实例，在<a href=\"http://www.qq.com执行这行代码默认不共享cookie,即为默认值./\">www.qq.com执行这行代码默认不共享COOKIE，即为默认值。</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"number\">12345</span>, time() + <span class=\"number\">7</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&#x27;www.qq.com&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>3). 跨子域的设定方法：在设定域名访问的时候用设定上级域名即可。如下实例，这行代码执行后，所有qq.com的域名都可以共享该COOKIE。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"number\">12345</span>, time() + <span class=\"number\">7</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&#x27;qq.com&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-COOKIE-高级——数组数据\"><a href=\"#6-COOKIE-高级——数组数据\" class=\"headerlink\" title=\"(6). COOKIE 高级——数组数据\"></a>(6). COOKIE 高级——数组数据</h3><p>cookie本身只支持简单数据(数字或者字符串)，能够保留的数据本身有限，也不成体系，如果需要使用cookie来保留一组数据的话，就要想办法凑成数组(cookie不支持数组)。</p>\n<p>下图可见，cookie本身不支持保存数组<br><img src=\"https://img-blog.csdnimg.cn/0136236f0ffe46458beb077756c93e79.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>因此需要伪装数组：</p>\n<p>1). 设置形式：setcookie(‘c1[k1]’, 值)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 伪装数组</span></span><br><span class=\"line\">setcookie(<span class=\"string\">&#x27;goods_ids[0]&#x27;</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">setcookie(<span class=\"string\">&#x27;goods_ids[1]&#x27;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">setcookie(<span class=\"string\">&#x27;goods_ids[2]&#x27;</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">setcookie(<span class=\"string\">&#x27;goods_ids[3]&#x27;</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class=\"line\">var_dump(<span class=\"variable\">$_COOKIE</span>);</span><br></pre></td></tr></table></figure>\n<p>效果如下，值得注意的是，我第一次打开并没有读取到goods_ids的cookie，刷新后拿到了，推测应该是虽然是先执行setcookie函数，但浏览器先执行完成var_dump($_COOKIE)。<br><img src=\"https://img-blog.csdnimg.cn/6fa6ef16584a4193a05849d1f25030e2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>由下图浏览器设置所示，推测应该在$_COOKIE中以数组形式存在，但在浏览器中，依然是个体存在。<br><img src=\"https://img-blog.csdnimg.cn/7b44890eb96d4db9a5dd813ee4643e9d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>2).读取形式： $_COOKIE[‘c1’][‘k1’]</p>\n<p><img src=\"https://img-blog.csdnimg.cn/cdfe04d253b5403ca7ca9d938ab77bb8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"三：PHP-的-SESSION-技术\"><a href=\"#三：PHP-的-SESSION-技术\" class=\"headerlink\" title=\"三：PHP 的 SESSION 技术\"></a>三：PHP 的 SESSION 技术</h2><h3 id=\"1-SESSION-工作原理\"><a href=\"#1-SESSION-工作原理\" class=\"headerlink\" title=\"(1). SESSION 工作原理\"></a>(1). SESSION 工作原理</h3><p>session与浏览器无关，但是与cookie有关。</p>\n<ul>\n<li>PHP碰到 session_start() 时开启 session 会话，会自动检测 sessionID<ul>\n<li>如果 cookie 中存在，则使用现成的</li>\n<li>如果 cookie 中不存在，则创建一个 sessionID ，并通过响应头以 cookie 形式保存到浏览器上。</li>\n</ul>\n</li>\n<li>初始化超全局变量 $_SESSION 为一个空数组</li>\n<li>PHP通过 sessionID 去指定位置( session 文件存储位置)匹配对应的文件<ul>\n<li>不存在该文件，则创建一个 sessionID 命名文件</li>\n<li>存在该文件，则读取文件内容(反序列化)， 将数据存储到 $_SESSION 中</li>\n</ul>\n</li>\n<li>脚本执行结束，将 $_SESSION 中保存的所有数据序列化存储到 sessionID 对应的文件中<br><img src=\"https://img-blog.csdnimg.cn/a2a732f8189b414a9f46afa04121faae.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><h3 id=\"2-SESSION-基本使用\"><a href=\"#2-SESSION-基本使用\" class=\"headerlink\" title=\"(2). SESSION 基本使用\"></a>(2). SESSION 基本使用</h3>启用 session ，任何时候都需要开启 session (脚本使用到$_SESSION 就开启一次)<br>$_SESSION 是通过 session_start() 函数的调用才会定义的，没有直接定义。因此下图用法是错误的。<br><img src=\"https://img-blog.csdnimg.cn/cbd9f3fa51e64bec9f4c5394867cda24.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这才是正确的用法，session 的使用需要开启session_start()<br><img src=\"https://img-blog.csdnimg.cn/bcc1e6aca0274baa9ae991fa9fd260d6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></li>\n</ul>\n<p><strong>设置 SESSION 信息</strong><br>如果想存储数据到 session 中， 那么只要不断给$_SESSION 数组添加元素即可。<br><img src=\"https://img-blog.csdnimg.cn/8ce99bc2ae8f4545a18e6fc08a6e5027.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p><strong>读取 SESSION 信息</strong><br>$_SESSION 就是一个数组，存储什么数据，什么方式存储的，就可以通过什么方式访问。<br><img src=\"https://img-blog.csdnimg.cn/58ffa775a682421caed3e30a46a8e411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">会话技术的目的就是实现跨脚本共享数据：在一个脚本中定义数据，在另一个脚本中保存数据。<br><img src=\"https://img-blog.csdnimg.cn/805f42f36cc54f76a6bc003ae233ee2a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">由图中红色字体部分可知，为什么 session_use.php 脚本能拿到 session.php 设置的值了。<br><img src=\"https://img-blog.csdnimg.cn/3e2f35c19b134199b9c3e994064a6970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"3-SESSION-删除数据\"><a href=\"#3-SESSION-删除数据\" class=\"headerlink\" title=\"(3). SESSION 删除数据\"></a>(3). SESSION 删除数据</h3><p>删除 session 就是将 session 数据清理掉($_SESSION拿不到)<br><strong>删除一个SESSION信息</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">unset</span>(<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;名字&#x27;</span>])</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/18716f222a9947a7abe032fee1a70ebb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br><strong>删除全部SESSION信息</strong><br>删除全部 session 就是让 $_SESSION 变成一个空数组。下面方式只是清除数据，而非清除session文件。清除 session 文件的方法在后面的销毁session会介绍。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$_SESSION</span> = <span class=\"keyword\">array</span>();</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/6e8d68f619ab43df9c8801e88232beee.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"4-SESSION-相关配置\"><a href=\"#4-SESSION-相关配置\" class=\"headerlink\" title=\"(4). SESSION 相关配置\"></a>(4). SESSION 相关配置</h3><h4 id=\"SESSION-的基础配置\"><a href=\"#SESSION-的基础配置\" class=\"headerlink\" title=\"SESSION 的基础配置\"></a>SESSION 的基础配置</h4><p>1). session.name ： 指session名字，即保存到cookie中sessionID对应的名字<br><img src=\"https://img-blog.csdnimg.cn/056a1b9aac454ccba212a2a04d2d4528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>2). session.auto_start ：是否自动开启session(即无需手动session_start())，默认是关闭的。<br><img src=\"https://img-blog.csdnimg.cn/c76c50f9923144f68adfcdda2b8780c8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>3). session.save_handler ： session 数据的保存方式，默认是文件形式<br><img src=\"https://img-blog.csdnimg.cn/d11bac16dc814ebba91cf40a19c728f4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>4). session.save_path ： session 文件默认存储的位置<br>如果你的session.save_path显示是在’\\tmp’中，那么说明文件默认被存储在系统临时文件夹中，这是不安全的，因为有可能面临访问权限问题。因此建议修改路径。<br><img src=\"https://img-blog.csdnimg.cn/95abce898d374255b35edbd9e416f1cc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后我们可以根据上面的存储路径找到服务器的session文件，如下所示<br><img src=\"https://img-blog.csdnimg.cn/ab966a7c349f4b39a4da2e872bdf54a8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"SESSION-的常用配置\"><a href=\"#SESSION-的常用配置\" class=\"headerlink\" title=\"SESSION 的常用配置\"></a>SESSION 的常用配置</h4><p>1). session.cookie_lifetime ： sessionID在浏览器端对应的COOKIE的生命周期，默认是会话结束，即浏览器关闭。<br><img src=\"https://img-blog.csdnimg.cn/a6e7ead88b9847aea2e58db52a901c24.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>2). session.cookie_path ： sessionID 在浏览器存储之后允许服务器访问的路径(COOKIE有作用范围)。默认是网站根目录。<br><img src=\"https://img-blog.csdnimg.cn/f5d529fc1ee5452caf6f38a5cd51d710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>3). session.cookie_domain ： COOKIE允许访问的子域(COOKIE可以跨子域)，默认是不能跨子域<br><img src=\"https://img-blog.csdnimg.cn/a68ca9e38a9849b4b490792a698c78b9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"SESSION-配置的两种形式\"><a href=\"#SESSION-配置的两种形式\" class=\"headerlink\" title=\"SESSION 配置的两种形式\"></a>SESSION 配置的两种形式</h4><p>1). 在php.ini中配置，即全局配置， 配置方法见上图。<br>2). 在脚本中配置，指PHP可以通过 ini_set 函数在运行中设定某些配置项(只会对当前运行的脚本有效)， 一般把这种配置称之为项目级。</p>\n<p>PHP ini_set 函数格式：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> ini_set(<span class=\"keyword\">string</span> <span class=\"variable\">$varname</span>, <span class=\"keyword\">string</span> <span class=\"variable\">$newvalue</span>)  </span><br></pre></td></tr></table></figure>\n\n<p>以下是一个示例，考虑到早期版本可能没有ini_set函数，因此在前面加一个错误抑制符。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@ini_set(<span class=\"string\">&#x27;session.save_path&#x27;</span>, <span class=\"string\">&#x27;E:/&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-SESSION-销毁session\"><a href=\"#5-SESSION-销毁session\" class=\"headerlink\" title=\"(5). SESSION 销毁session\"></a>(5). SESSION 销毁session</h3><p>系统提供了函数： session_destroy()， 该函数会自动根据 session_start() 得到的 sessionID 去找到指定的 session 文件， 并把其删除。<br><img src=\"https://img-blog.csdnimg.cn/360845b3de6c4c68bae682fc16308b1c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/db3421463e5d4f29a2a54366ad352034.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-SESSION-垃圾回收\"><a href=\"#6-SESSION-垃圾回收\" class=\"headerlink\" title=\"(6). SESSION 垃圾回收\"></a>(6). SESSION 垃圾回收</h3><p>session会话技术诞生后， session文件并不会自动清除，如果每天有大量session文件产生但又都是失效的，那么会增加服务器的压力并且影响session效率。<br>垃圾回收，是指session机制提供了一种解决垃圾session文件的方式，给session文件指定周期，通过session文件最后更改时间与生命周期进行结合判定，如果已经过期则删除对应的session文件，如果没有过期则保留，这样就可以及时清理无效的僵尸文件，从而提升空间利用率和session工作效率。</p>\n<p>1). 任何一次session开启(session_start)，session都会尝试去读取session文件<br>2). 读取session文件后，有可能触发垃圾回收机制(在session系统中也是一个函数：自己有一定几率调用)<br>3). 垃圾回收机制会自动读取所有session文件的最后编辑时间，然后加上生命周期(配置文件)与当前时间进行比较(所有session文件)，过期则删除，有效则保留。</p>\n<p><strong>垃圾回收参数设置</strong><br>1). session.gc_maxlifetime = 1440 : 规定的session文件最大的生命周期是1440秒，即24分钟。<br>2). session.gc_probability = 1 ：垃圾回收概率因子(分子)<br>3). session.gc_divisor = 1000 : 垃圾回收概率分母<br>由session.gc_probability和session.gc_divisor知默认触发回收的概率是千分之一。实际开发中可以根据用户量进行调整。<br><img src=\"https://img-blog.csdnimg.cn/58265dfa63104d7893e94b41904473c2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"7-SESSION-禁用cookie时使用session\"><a href=\"#7-SESSION-禁用cookie时使用session\" class=\"headerlink\" title=\"(7). SESSION 禁用cookie时使用session\"></a>(7). SESSION 禁用cookie时使用session</h3><p>设置浏览器禁止cookie：<br><img src=\"https://img-blog.csdnimg.cn/a2ba0e723f17440b96238143458f96a7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">依次执行 session.php 文件和 session_use.php 文件，发现 session_use.php 已经无法拿到 session<br>数据了。<br><img src=\"https://img-blog.csdnimg.cn/3c526986514a4605b6abbc45f92e8833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>禁止COOKIE不能使用SESSION的原因</strong><br>session技术需要利用到cookie技术来保存sessionID，从而使得PHP能够在跨脚本的时候得到相同的sessionID，从而访问同一个session文件。</p>\n<p><strong>禁止COOKIE后如何使用SESSION</strong><br>让session_start在开启之前 拿到原来的sessionID（另一个脚本的）</p>\n<p><strong>实现无COOKIE使用SESSION</strong><br>方案一： 利用PHP提供的session函数： session_id 和 session_name 来获得和设置sessionID或者name从而解决session_start产生新的sessionID的情况(手动操作)<br>1). 在session保存数据的脚本中获取sessionID和名字</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开启 session</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取sessionID和名字</span></span><br><span class=\"line\"><span class=\"variable\">$id</span> = session_id();  <span class=\"comment\">// 获取是在session_start执行之后</span></span><br><span class=\"line\"><span class=\"variable\">$name</span> = session_name();  <span class=\"comment\">// 拿到名字(即php.ini 中的 session.name)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$name</span> . <span class=\"string\">&#x27;=&#x27;</span> . <span class=\"variable\">$id</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/38354433804941a39faf750c63f5e64e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">2). 接下来就是想办法把数据传递给另外一个脚本：表单传值(URL或form表单)</p>\n<p>session.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开启 session</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置内容</span></span><br><span class=\"line\"><span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;name&#x27;</span>] = <span class=\"string\">&#x27;eyes&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取sessionID和名字</span></span><br><span class=\"line\"><span class=\"variable\">$id</span> = session_id();  <span class=\"comment\">// 获取是在session_start执行之后</span></span><br><span class=\"line\"><span class=\"variable\">$name</span> = session_name();  <span class=\"comment\">// 拿到名字(即php.ini 中的 session.name)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 传递给另外一个脚本</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;a href=&#x27;session_use.php?<span class=\"subst\">&#123;$name&#125;</span>=<span class=\"subst\">&#123;$id&#125;</span>&#x27;&gt;click&lt;/a&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>session_use.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接收数据</span></span><br><span class=\"line\"><span class=\"variable\">$name</span> = session_name();</span><br><span class=\"line\"><span class=\"variable\">$id</span> = <span class=\"variable\">$_GET</span>[<span class=\"variable\">$name</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定sessionID，该操作可以阻止session_start产生新的ID</span></span><br><span class=\"line\">session_id(<span class=\"variable\">$id</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开启session</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 访问</span></span><br><span class=\"line\">var_dump(<span class=\"variable\">$_SESSION</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/5088585f34f046628e6a434afa11263d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>方案二： 利用session机制中的已经提供的解决方案自动操作（通过配置实现）<br>原因1：默认session配置只允许使用cookie保存sessionID： cookie_only<br>原因2: 默认关闭了其它能够传递数据的方式，只保留了cookie<br>1). 修改PHP配置文件，开启其他方式传输sessionID，关闭只允许使用cookie传输功能。<br><img src=\"https://img-blog.csdnimg.cn/9f315cca3954423989841fb363a93ee3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/377ae02e3f2444598c9ff423ce3c7df8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">2). 重启apache。一旦配置开启，PHP会自动将sessionID和session名字在其他位置绑定数据，同时还会在session_start的时候，考虑通过表单传递数据，而非只有cookie。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1932f52fded94aecb1d5a27231afecac.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一：会话技术初步认识\"><a href=\"#一：会话技术初步认识\" class=\"headerlink\" title=\"一：会话技术初步认识\"></a>一：会话技术初步认识</h2><p><strong>会话技术介绍：</strong> web会话可以简单理解为：用户打开一个浏览器，访问某一个web站点，在这个站点点击多个超链接，访问服务器多个web资源，然后关闭浏览器，整个过程称之为一个会话。</p>\n<p>HTTP协议的特点是无状态/无连接，当一个浏览器连续多次请求同一个web服务器时，服务器是无法区分多个操作是否来自于同一个浏览器(用户)。会话技术就是通过HTTP协议想办法让服务器能够识别来自同一个浏览器的多次请求，从而方便浏览器(用户)在访问同一个网站的多次操作中，能够持续进行而不需要进行额外的身份验证。</p>\n<p><strong>会话技术分类：</strong><br>1). cookie技术<br>cookie技术是在HTTP协议下，服务器或脚本可以维持客户工作站上信息的一种方式，cookie是由Web服务器保存在用户浏览器(客户端)上的小文本文件(HTTP协议响应头)，它可以包含有关用户的信息。无论何时用户链接到服务器，Web站点都可以访问cookie信息。</p>\n<p>2). session技术<br>session直接翻译成中文比较困难，一般都翻译成时域，在计算机专业术语中，session是指一个终端用户与交互系统进行通信的时间间隔，通常指从注册进入系统到注销退出系统之间所经历的时间。以及如果需要的话，可能还有一定的操作空间。session技术是将数据保存到服务器端，无论何时用户链接到服务器，Web站点都可以访问session信息。session技术的实现是依赖cookie技术的。</p>\n<p>3). 两种会话技术的区别<br>a). 安全性方面：<br>session存储在服务器端，安全性高<br>cookie存储在浏览器端，安全性低<br>b). 数据大小方面<br>session数据存储不限<br>cookie的数量和大小都有限制(一个网站最多20个cookie，长度最多4k)<br>c). 可用数据类型<br>session 可以存复杂数据(自动序列化)<br>cookie只能存储简单数据，数值或字符串</p>\n<h2 id=\"二：PHP-的-COOKIE-技术\"><a href=\"#二：PHP-的-COOKIE-技术\" class=\"headerlink\" title=\"二：PHP 的 COOKIE 技术\"></a>二：PHP 的 COOKIE 技术</h2><h3 id=\"1-COOKIE-工作原理\"><a href=\"#1-COOKIE-工作原理\" class=\"headerlink\" title=\"(1). COOKIE 工作原理\"></a>(1). COOKIE 工作原理</h3><p>cookie技术：服务器将数据通过HTTP相应到浏览器上，浏览器可以在以后携带对应的cookie数据访问服务器。</p>\n<p>1、第一次请求时，PHP通过setcookie函数将数据通过http协议响应头传输给浏览器<br>2、浏览器在第一次响应的时候将cookie数据保存到浏览器<br>3、浏览器后续请求同一个网站时，会自动检测是否存在cookie数据，如果存在，就将在请求头中将数据携带到服务器<br>4、PHP执行时会自动判断浏览器请求中是否携带cookie，如果携带，则自动保存在$_COOKIE中<br>5、利用$_COOKIE访问cookie数据</p>\n<p><img src=\"https://img-blog.csdnimg.cn/e0f152cb25574b80837f08e8f15231ce.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"2-COOKIE-基本使用\"><a href=\"#2-COOKIE-基本使用\" class=\"headerlink\" title=\"(2). COOKIE 基本使用\"></a>(2). COOKIE 基本使用</h3><p><strong>设置COOKIE信息</strong><br>setcookie()函数用来设定cookie信息<br>其参数为： setcookie(名字, 值)</p>\n<p>1). cookie名的设置： 字符串， 第一个参数<br>2). cookie值的设置： 第二个参数<br>3). cookie值的类型要求： 必须是简单类型中的整数或者字符串</p>\n<p>以下是演示：<br><img src=\"https://img-blog.csdnimg.cn/43ac1f6e5f184f999fd01d367afd82e0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">打开浏览器设置，查看网站cookie信息，可见cookie已经设置成功了。<br><img src=\"https://img-blog.csdnimg.cn/85d53223856546c6b5fa0f88388abea5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/47a5b199fb634777ba57e60093a6f38b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p><strong>读取COOKIE信息</strong><br>可以使用$_COOKIE数组获得COOKIE信息。</p>\n<p>由下图可见，因为setcookie.php文件和getcookie.php文件在同一服务器下，所以getcookie.php可以拿到setcookie.php设置的cookie信息。<br><img src=\"https://img-blog.csdnimg.cn/1c1923560d724871a06f48e9616d48cf.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"3-COOKIE-高级——生命周期\"><a href=\"#3-COOKIE-高级——生命周期\" class=\"headerlink\" title=\"(3). COOKIE 高级——生命周期\"></a>(3). COOKIE 高级——生命周期</h3><p>COOKIE生命周期：COOKIE在浏览器生存时间（浏览器在下次访问服务器时是否携带对应的COOKIE）</p>\n<p>1). 默认(不设定)时的生命周期：不设定周期默认是关闭浏览器(即会话结束)<br>2).设定为一个常规日期戳的周期： 通过setcookie函数第三个参数可以限定生命周期，是用时间戳管理，从格林威治时间开始<br>3).设定为“0”的周期：设置生命周期时用0代替时间戳，表示普通设置，会话结束就过期<br>4).删除一个cookie的做法：服务器没有权限去操作浏览器上的内容，因此无法直接删除，但可以通过设置生命周期来让浏览器自动判定cookie是否有效，无效的话浏览器会自动清除。<br><img src=\"https://img-blog.csdnimg.cn/367c2c99a0c54529b35ed8b6932c8f8c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"4-COOKIE-高级——作用范围\"><a href=\"#4-COOKIE-高级——作用范围\" class=\"headerlink\" title=\"(4). COOKIE 高级——作用范围\"></a>(4). COOKIE 高级——作用范围</h3><p>作用范围：不同的文件夹层级中，设定的COOKIE默认是在不同文件夹下有访问限制，上层文件夹中设定的COOKIE可以在下层(子文件夹)中访问，而子文件夹中设定的COOKIE不能在上层文件夹中访问。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(名字, 值, 生命周期, 作用范围)</span><br></pre></td></tr></table></figure>\n\n<p>1). 默认(不设定)的范围： 就是使用COOKIE默认的作用范围</p>\n<p>2). 设定为 “/” 的含义： 告知浏览器当前COOKIE的作用范围是网站根目录，在setcookie的第四个参数里设置。例如下面的设置,该cookie名为password，值为12345，7天后过期，作用范围是网站根目录，即网站下所有页面都可以访问该cookie。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"number\">12345</span>, time() + <span class=\"number\">7</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-COOKIE-高级——跨子域\"><a href=\"#5-COOKIE-高级——跨子域\" class=\"headerlink\" title=\"(5). COOKIE 高级——跨子域\"></a>(5). COOKIE 高级——跨子域</h3><p>跨子域：在同一级别域名下，一个一级域名可以有多个子域名，他们之间是搭建在不同服务器上,比如腾讯官网是<a href=\"http://www.qq.com,腾讯公益是gongyi.qq.com.它们之间是搭建在不同服务器上的,但是可以通过cookie设置实现对应的cookie共享访问(默认是不允许的)./\">www.qq.com，腾讯公益是gongyi.qq.com。它们之间是搭建在不同服务器上的，但是可以通过COOKIE设置实现对应的COOKIE共享访问（默认是不允许的）。</a></p>\n<p>1). 设定cookie的有效域名：不同域名(包含主机)之间不能共享COOKIE，可以通过设置setcookie的第五个参数来控制。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(名字, 值, 生命周期, 作用范围, 有效域名)</span><br></pre></td></tr></table></figure>\n\n<p>2). 不设定时的默认有效域名是不跨域的。如下实例，在<a href=\"http://www.qq.com执行这行代码默认不共享cookie,即为默认值./\">www.qq.com执行这行代码默认不共享COOKIE，即为默认值。</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"number\">12345</span>, time() + <span class=\"number\">7</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&#x27;www.qq.com&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>3). 跨子域的设定方法：在设定域名访问的时候用设定上级域名即可。如下实例，这行代码执行后，所有qq.com的域名都可以共享该COOKIE。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"number\">12345</span>, time() + <span class=\"number\">7</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&#x27;qq.com&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-COOKIE-高级——数组数据\"><a href=\"#6-COOKIE-高级——数组数据\" class=\"headerlink\" title=\"(6). COOKIE 高级——数组数据\"></a>(6). COOKIE 高级——数组数据</h3><p>cookie本身只支持简单数据(数字或者字符串)，能够保留的数据本身有限，也不成体系，如果需要使用cookie来保留一组数据的话，就要想办法凑成数组(cookie不支持数组)。</p>\n<p>下图可见，cookie本身不支持保存数组<br><img src=\"https://img-blog.csdnimg.cn/0136236f0ffe46458beb077756c93e79.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>因此需要伪装数组：</p>\n<p>1). 设置形式：setcookie(‘c1[k1]’, 值)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 伪装数组</span></span><br><span class=\"line\">setcookie(<span class=\"string\">&#x27;goods_ids[0]&#x27;</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">setcookie(<span class=\"string\">&#x27;goods_ids[1]&#x27;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">setcookie(<span class=\"string\">&#x27;goods_ids[2]&#x27;</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">setcookie(<span class=\"string\">&#x27;goods_ids[3]&#x27;</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class=\"line\">var_dump(<span class=\"variable\">$_COOKIE</span>);</span><br></pre></td></tr></table></figure>\n<p>效果如下，值得注意的是，我第一次打开并没有读取到goods_ids的cookie，刷新后拿到了，推测应该是虽然是先执行setcookie函数，但浏览器先执行完成var_dump($_COOKIE)。<br><img src=\"https://img-blog.csdnimg.cn/6fa6ef16584a4193a05849d1f25030e2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>由下图浏览器设置所示，推测应该在$_COOKIE中以数组形式存在，但在浏览器中，依然是个体存在。<br><img src=\"https://img-blog.csdnimg.cn/7b44890eb96d4db9a5dd813ee4643e9d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>2).读取形式： $_COOKIE[‘c1’][‘k1’]</p>\n<p><img src=\"https://img-blog.csdnimg.cn/cdfe04d253b5403ca7ca9d938ab77bb8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h2 id=\"三：PHP-的-SESSION-技术\"><a href=\"#三：PHP-的-SESSION-技术\" class=\"headerlink\" title=\"三：PHP 的 SESSION 技术\"></a>三：PHP 的 SESSION 技术</h2><h3 id=\"1-SESSION-工作原理\"><a href=\"#1-SESSION-工作原理\" class=\"headerlink\" title=\"(1). SESSION 工作原理\"></a>(1). SESSION 工作原理</h3><p>session与浏览器无关，但是与cookie有关。</p>\n<ul>\n<li>PHP碰到 session_start() 时开启 session 会话，会自动检测 sessionID<ul>\n<li>如果 cookie 中存在，则使用现成的</li>\n<li>如果 cookie 中不存在，则创建一个 sessionID ，并通过响应头以 cookie 形式保存到浏览器上。</li>\n</ul>\n</li>\n<li>初始化超全局变量 $_SESSION 为一个空数组</li>\n<li>PHP通过 sessionID 去指定位置( session 文件存储位置)匹配对应的文件<ul>\n<li>不存在该文件，则创建一个 sessionID 命名文件</li>\n<li>存在该文件，则读取文件内容(反序列化)， 将数据存储到 $_SESSION 中</li>\n</ul>\n</li>\n<li>脚本执行结束，将 $_SESSION 中保存的所有数据序列化存储到 sessionID 对应的文件中<br><img src=\"https://img-blog.csdnimg.cn/a2a732f8189b414a9f46afa04121faae.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><h3 id=\"2-SESSION-基本使用\"><a href=\"#2-SESSION-基本使用\" class=\"headerlink\" title=\"(2). SESSION 基本使用\"></a>(2). SESSION 基本使用</h3>启用 session ，任何时候都需要开启 session (脚本使用到$_SESSION 就开启一次)<br>$_SESSION 是通过 session_start() 函数的调用才会定义的，没有直接定义。因此下图用法是错误的。<br><img src=\"https://img-blog.csdnimg.cn/cbd9f3fa51e64bec9f4c5394867cda24.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这才是正确的用法，session 的使用需要开启session_start()<br><img src=\"https://img-blog.csdnimg.cn/bcc1e6aca0274baa9ae991fa9fd260d6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></li>\n</ul>\n<p><strong>设置 SESSION 信息</strong><br>如果想存储数据到 session 中， 那么只要不断给$_SESSION 数组添加元素即可。<br><img src=\"https://img-blog.csdnimg.cn/8ce99bc2ae8f4545a18e6fc08a6e5027.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p><strong>读取 SESSION 信息</strong><br>$_SESSION 就是一个数组，存储什么数据，什么方式存储的，就可以通过什么方式访问。<br><img src=\"https://img-blog.csdnimg.cn/58ffa775a682421caed3e30a46a8e411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">会话技术的目的就是实现跨脚本共享数据：在一个脚本中定义数据，在另一个脚本中保存数据。<br><img src=\"https://img-blog.csdnimg.cn/805f42f36cc54f76a6bc003ae233ee2a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">由图中红色字体部分可知，为什么 session_use.php 脚本能拿到 session.php 设置的值了。<br><img src=\"https://img-blog.csdnimg.cn/3e2f35c19b134199b9c3e994064a6970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"3-SESSION-删除数据\"><a href=\"#3-SESSION-删除数据\" class=\"headerlink\" title=\"(3). SESSION 删除数据\"></a>(3). SESSION 删除数据</h3><p>删除 session 就是将 session 数据清理掉($_SESSION拿不到)<br><strong>删除一个SESSION信息</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">unset</span>(<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;名字&#x27;</span>])</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/18716f222a9947a7abe032fee1a70ebb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><br><strong>删除全部SESSION信息</strong><br>删除全部 session 就是让 $_SESSION 变成一个空数组。下面方式只是清除数据，而非清除session文件。清除 session 文件的方法在后面的销毁session会介绍。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$_SESSION</span> = <span class=\"keyword\">array</span>();</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/6e8d68f619ab43df9c8801e88232beee.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"4-SESSION-相关配置\"><a href=\"#4-SESSION-相关配置\" class=\"headerlink\" title=\"(4). SESSION 相关配置\"></a>(4). SESSION 相关配置</h3><h4 id=\"SESSION-的基础配置\"><a href=\"#SESSION-的基础配置\" class=\"headerlink\" title=\"SESSION 的基础配置\"></a>SESSION 的基础配置</h4><p>1). session.name ： 指session名字，即保存到cookie中sessionID对应的名字<br><img src=\"https://img-blog.csdnimg.cn/056a1b9aac454ccba212a2a04d2d4528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>2). session.auto_start ：是否自动开启session(即无需手动session_start())，默认是关闭的。<br><img src=\"https://img-blog.csdnimg.cn/c76c50f9923144f68adfcdda2b8780c8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>3). session.save_handler ： session 数据的保存方式，默认是文件形式<br><img src=\"https://img-blog.csdnimg.cn/d11bac16dc814ebba91cf40a19c728f4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>4). session.save_path ： session 文件默认存储的位置<br>如果你的session.save_path显示是在’\\tmp’中，那么说明文件默认被存储在系统临时文件夹中，这是不安全的，因为有可能面临访问权限问题。因此建议修改路径。<br><img src=\"https://img-blog.csdnimg.cn/95abce898d374255b35edbd9e416f1cc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后我们可以根据上面的存储路径找到服务器的session文件，如下所示<br><img src=\"https://img-blog.csdnimg.cn/ab966a7c349f4b39a4da2e872bdf54a8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"SESSION-的常用配置\"><a href=\"#SESSION-的常用配置\" class=\"headerlink\" title=\"SESSION 的常用配置\"></a>SESSION 的常用配置</h4><p>1). session.cookie_lifetime ： sessionID在浏览器端对应的COOKIE的生命周期，默认是会话结束，即浏览器关闭。<br><img src=\"https://img-blog.csdnimg.cn/a6e7ead88b9847aea2e58db52a901c24.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>2). session.cookie_path ： sessionID 在浏览器存储之后允许服务器访问的路径(COOKIE有作用范围)。默认是网站根目录。<br><img src=\"https://img-blog.csdnimg.cn/f5d529fc1ee5452caf6f38a5cd51d710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>3). session.cookie_domain ： COOKIE允许访问的子域(COOKIE可以跨子域)，默认是不能跨子域<br><img src=\"https://img-blog.csdnimg.cn/a68ca9e38a9849b4b490792a698c78b9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"SESSION-配置的两种形式\"><a href=\"#SESSION-配置的两种形式\" class=\"headerlink\" title=\"SESSION 配置的两种形式\"></a>SESSION 配置的两种形式</h4><p>1). 在php.ini中配置，即全局配置， 配置方法见上图。<br>2). 在脚本中配置，指PHP可以通过 ini_set 函数在运行中设定某些配置项(只会对当前运行的脚本有效)， 一般把这种配置称之为项目级。</p>\n<p>PHP ini_set 函数格式：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> ini_set(<span class=\"keyword\">string</span> <span class=\"variable\">$varname</span>, <span class=\"keyword\">string</span> <span class=\"variable\">$newvalue</span>)  </span><br></pre></td></tr></table></figure>\n\n<p>以下是一个示例，考虑到早期版本可能没有ini_set函数，因此在前面加一个错误抑制符。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@ini_set(<span class=\"string\">&#x27;session.save_path&#x27;</span>, <span class=\"string\">&#x27;E:/&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-SESSION-销毁session\"><a href=\"#5-SESSION-销毁session\" class=\"headerlink\" title=\"(5). SESSION 销毁session\"></a>(5). SESSION 销毁session</h3><p>系统提供了函数： session_destroy()， 该函数会自动根据 session_start() 得到的 sessionID 去找到指定的 session 文件， 并把其删除。<br><img src=\"https://img-blog.csdnimg.cn/360845b3de6c4c68bae682fc16308b1c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"><img src=\"https://img-blog.csdnimg.cn/db3421463e5d4f29a2a54366ad352034.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-SESSION-垃圾回收\"><a href=\"#6-SESSION-垃圾回收\" class=\"headerlink\" title=\"(6). SESSION 垃圾回收\"></a>(6). SESSION 垃圾回收</h3><p>session会话技术诞生后， session文件并不会自动清除，如果每天有大量session文件产生但又都是失效的，那么会增加服务器的压力并且影响session效率。<br>垃圾回收，是指session机制提供了一种解决垃圾session文件的方式，给session文件指定周期，通过session文件最后更改时间与生命周期进行结合判定，如果已经过期则删除对应的session文件，如果没有过期则保留，这样就可以及时清理无效的僵尸文件，从而提升空间利用率和session工作效率。</p>\n<p>1). 任何一次session开启(session_start)，session都会尝试去读取session文件<br>2). 读取session文件后，有可能触发垃圾回收机制(在session系统中也是一个函数：自己有一定几率调用)<br>3). 垃圾回收机制会自动读取所有session文件的最后编辑时间，然后加上生命周期(配置文件)与当前时间进行比较(所有session文件)，过期则删除，有效则保留。</p>\n<p><strong>垃圾回收参数设置</strong><br>1). session.gc_maxlifetime = 1440 : 规定的session文件最大的生命周期是1440秒，即24分钟。<br>2). session.gc_probability = 1 ：垃圾回收概率因子(分子)<br>3). session.gc_divisor = 1000 : 垃圾回收概率分母<br>由session.gc_probability和session.gc_divisor知默认触发回收的概率是千分之一。实际开发中可以根据用户量进行调整。<br><img src=\"https://img-blog.csdnimg.cn/58265dfa63104d7893e94b41904473c2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<h3 id=\"7-SESSION-禁用cookie时使用session\"><a href=\"#7-SESSION-禁用cookie时使用session\" class=\"headerlink\" title=\"(7). SESSION 禁用cookie时使用session\"></a>(7). SESSION 禁用cookie时使用session</h3><p>设置浏览器禁止cookie：<br><img src=\"https://img-blog.csdnimg.cn/a2ba0e723f17440b96238143458f96a7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">依次执行 session.php 文件和 session_use.php 文件，发现 session_use.php 已经无法拿到 session<br>数据了。<br><img src=\"https://img-blog.csdnimg.cn/3c526986514a4605b6abbc45f92e8833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>禁止COOKIE不能使用SESSION的原因</strong><br>session技术需要利用到cookie技术来保存sessionID，从而使得PHP能够在跨脚本的时候得到相同的sessionID，从而访问同一个session文件。</p>\n<p><strong>禁止COOKIE后如何使用SESSION</strong><br>让session_start在开启之前 拿到原来的sessionID（另一个脚本的）</p>\n<p><strong>实现无COOKIE使用SESSION</strong><br>方案一： 利用PHP提供的session函数： session_id 和 session_name 来获得和设置sessionID或者name从而解决session_start产生新的sessionID的情况(手动操作)<br>1). 在session保存数据的脚本中获取sessionID和名字</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开启 session</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取sessionID和名字</span></span><br><span class=\"line\"><span class=\"variable\">$id</span> = session_id();  <span class=\"comment\">// 获取是在session_start执行之后</span></span><br><span class=\"line\"><span class=\"variable\">$name</span> = session_name();  <span class=\"comment\">// 拿到名字(即php.ini 中的 session.name)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$name</span> . <span class=\"string\">&#x27;=&#x27;</span> . <span class=\"variable\">$id</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/38354433804941a39faf750c63f5e64e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\">2). 接下来就是想办法把数据传递给另外一个脚本：表单传值(URL或form表单)</p>\n<p>session.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开启 session</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置内容</span></span><br><span class=\"line\"><span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;name&#x27;</span>] = <span class=\"string\">&#x27;eyes&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取sessionID和名字</span></span><br><span class=\"line\"><span class=\"variable\">$id</span> = session_id();  <span class=\"comment\">// 获取是在session_start执行之后</span></span><br><span class=\"line\"><span class=\"variable\">$name</span> = session_name();  <span class=\"comment\">// 拿到名字(即php.ini 中的 session.name)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 传递给另外一个脚本</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;a href=&#x27;session_use.php?<span class=\"subst\">&#123;$name&#125;</span>=<span class=\"subst\">&#123;$id&#125;</span>&#x27;&gt;click&lt;/a&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>session_use.php 文件代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接收数据</span></span><br><span class=\"line\"><span class=\"variable\">$name</span> = session_name();</span><br><span class=\"line\"><span class=\"variable\">$id</span> = <span class=\"variable\">$_GET</span>[<span class=\"variable\">$name</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定sessionID，该操作可以阻止session_start产生新的ID</span></span><br><span class=\"line\">session_id(<span class=\"variable\">$id</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开启session</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 访问</span></span><br><span class=\"line\">var_dump(<span class=\"variable\">$_SESSION</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/5088585f34f046628e6a434afa11263d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n<p>方案二： 利用session机制中的已经提供的解决方案自动操作（通过配置实现）<br>原因1：默认session配置只允许使用cookie保存sessionID： cookie_only<br>原因2: 默认关闭了其它能够传递数据的方式，只保留了cookie<br>1). 修改PHP配置文件，开启其他方式传输sessionID，关闭只允许使用cookie传输功能。<br><img src=\"https://img-blog.csdnimg.cn/9f315cca3954423989841fb363a93ee3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/377ae02e3f2444598c9ff423ce3c7df8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">2). 重启apache。一旦配置开启，PHP会自动将sessionID和session名字在其他位置绑定数据，同时还会在session_start的时候，考虑通过表单传递数据，而非只有cookie。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1932f52fded94aecb1d5a27231afecac.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rvbmdrb25neXU=,size_16,color_FFFFFF,t_70\" alt=\"展示\"></p>\n"},{"title":"thinkphp模型","date":"2021-08-28T09:19:35.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/15.jpg","_content":"# 一：定义\n> 模型定义\n\n模型会自动对应数据表，模型类的命名规则是除去表前缀的数据表名称，采用驼峰法命名，并且首字母大写。\n模型自动对应的数据表名称都是遵循小写+下划线规范，如果你的表名有大写的情况，必须通过设置模型的table属性。\n<table><thead><tr><th>模型名</th><th>约定对应数据表（假设数据库的前缀定义是 <code>think_</code>）</th></tr></thead><tbody><tr><td>User</td><td>think_user</td></tr><tr><td>UserType</td><td>think_user_type</td></tr></tbody></table>\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7902f3ffed664a1e812ca60e9fc5b2d7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 模型设置\n\n模型的默认主键为id，如果你没有使用id作为主键名，需要在模型中设置属性，常用的模型设置属性包括（以下属性都不是必须设置）：\n<table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>模型名（相当于不带数据表前后缀的表名，默认为当前模型类名）</td></tr><tr><td>table</td><td>数据表名（默认自动获取）</td></tr><tr><td>suffix</td><td>数据表后缀（默认为空）</td></tr><tr><td>pk</td><td>主键名（默认为<code>id</code>）</td></tr><tr><td>connection</td><td>数据库连接（默认读取数据库配置）</td></tr><tr><td>query</td><td>模型使用的查询类名称</td></tr><tr><td>field</td><td>模型允许写入的字段列表（数组）</td></tr><tr><td>schema</td><td>模型对应数据表字段及类型</td></tr><tr><td>type</td><td>模型需要自动转换的字段及类型</td></tr><tr><td>strict</td><td>是否严格区分字段大小写（默认为true）</td></tr><tr><td>disuse</td><td>数据表废弃字段（数组）</td></tr></tbody></table>\n\n设置方式如下：\n\n```php\n<?php\nnamespace app\\model;\nuse think\\Model;\n\nclass Employees extends Model\n{\n    // 设置模型名(相当于不带数据表前后缀的表名，默认为当前模型类名)\n    protected $name = 'Employees';\n\n    // 设置对应的表名\n    protected $table = 'employees';\n\n    // 设置主键(默认为id)\n    protected $pk = 'employee_id';\n\n    // 严格区分字段大小写\n    protected $strict = true;\n}\n```\n> 模型初始化\n\ninit必须是静态方法，并且只在第一次实例化的时候执行，并且只会执行一次\n```php\nprotected static function init()\n{\n    //TODO:初始化内容\n}\n```\n\n> 模型操作\n\n在模型中除了可以调用数据库类的方法之外（换句话说，数据库的所有查询构造器方法模型中都可以支持），可以定义自己的方法，所以也可以把模型看成是数据库的增强版。模型的操作方法无需和数据库查询一样调用必须首先调用table或者name方法，因为模型会按照规则自动匹配对应的数据表，例如：\n\n```php\nDb::name('user')->where('id','>',10)->select();\n```\n改成模型操作的话就变成:\n\n```php\nUser::where('id','>',10)->select();\n```\n虽然看起来是相同的查询条件，但一个最明显的区别是查询结果的类型不同。第一种方式的查询结果是一个（二维）数组，而第二种方式的查询结果是包含了模型（集合）的数据集。不过，在大多数情况下，这二种返回类型的使用方式并无明显区别。\n\n模型操作和数据库操作的另外一个显著区别是模型支持包括获取器、修改器、自动时间写入在内的一系列自动化操作和事件，简化了数据的存取操作，自动帮你处理了一些原本需要手动处理的操作。\n\n> 动态切换后缀\n\n新版模型增加了一个数据表后缀属性，可以用于多语言或者数据分表的模型查询，省去为多个相同结构的表定义多个模型的麻烦(默认的数据表后缀可以在模型类里面直接定义suffix属性)。\n\n模型提供了动态切换方法suffix和setSuffix\n\n```php\n// suffix方法用于静态查询\n$blog = Blog::suffix('_en')->find();\n$blog->name = 'test';\n$blog->save();\n\n// setSuffix用于动态设置\n$blog = new Blog($data);\n$blog->setSuffix('_en')->save();\n```\n>\n# 二：模型字段\n+ 模型的数据字段和表字段是对应关系，默认会自动获取，包括字段的类型\n+ 自动获取会导致增加一次查询，如果在模型中配置字段信息，会减少内存开销\n+ 可以在模型设置$schema 字段，明确定义字段信息，字段需要对应表**写完整**；\n![在这里插入图片描述](https://img-blog.csdnimg.cn/94d8ff39fb9f4afc9489a26cbdd75c86.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ 字段类型的定义可以使用PHP类型或者数据库的字段类型都可以，字段类型定义的作用主要用于查询的参数自动绑定类型。\n+ 时间字段尽量采用实际的数据库类型定义，便于时间查询的字段自动识别。如果是json类型直接定义为json即可\n+ schema属性一旦定义，就必须定义完整的数据表字段类型。如果你只希望对某个字段定义需要自动转换的类型，可以使用type属性\n\n```php\n<?php\nnamespace app\\model;\n\nuse think\\Model;\n\nclass User extends Model\n{\n    // 设置字段自动转换类型\n    protected $type = [\n        'score'       => 'float',\n    ];\n}\n```\n\n# 三：新增\n模型数据的新增和数据库的新增数据有所区别，数据库的新增只是单纯的写入给定的数据，而模型的数据写入会包含修改器、自动完成以及模型事件等环节。\n\n> 通过数组添加数据\n\n示例是批量新增，所以\\$data是二维数组，增加单个数据只要换成一维数组就行了，另外，不要在同一个实例里面多次新增数据，如果确实需要多次新增，可以使用后面的静态方法处理。\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data=[\n            [\n                'employee_id'  =>  96,\n                'first_name'   =>  '鸡哥',\n                'last_name'    =>  'aa'\n            ],\n            [\n                'employee_id'  =>  95,\n                'first_name'   =>  '超哥',\n                'last_name'    =>  'cc'\n            ]\n        ];\n        $res=new Employees();\n        return $res->saveAll($data);\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2a6bf50dca55477799878af839a6071f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> replace写入\n\nsave方法可以支持replace写入:\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data=[\n            'employee_id'  =>  94,\n            'first_name'   =>  '李四',\n            'last_name'    =>  'ab'\n        ];\n        $res=new Employees();\n        return $res->replace()->save($data);\n    }\n}\n```\n\n> 获取自增ID\n\n这里其实获取自增ID就是获取模型的主键，如果你的主键不是id，而是employee_id的话，其实获取自增ID就变成这样：\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data=[\n            'first_name'   =>  '王五',\n            'last_name'    =>  'df'\n        ];\n        $res=new Employees();\n        $res->replace()->save($data);\n        return $res->employee_id;\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d54cc562ba594dca9fd4e7ea89907a34.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 静态方法\n\n还可以直接静态调用create方法创建并写入\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n//        貌似create方法不支持批量添加数据\n//        $data=[\n//            [\n//                'first_name'   =>  '赵六',\n//                'last_name'    =>  'db'\n//            ],\n//            [\n//                'first_name'   =>  '麻子',\n//                'last_name'    =>  'cs'\n//            ]\n//        ];\n        $data=[\n            'first_name'   =>  '赵六',\n            'last_name'    =>  'db'\n        ];\n        $res = Employees::create($data);\n        return $res;\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cd13c48accbf42d6b5996409c60fc95e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\ncreate方法默认会过滤不是数据表的字段信息，可以在第二个参数可以传入允许写入的字段列表，同时也支持replace操作，使用下面的方法：\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data=[\n            'first_name'   =>  '麻子',\n            'last_name'    =>  'cs'\n        ];\n        // 第二个参数是允许写入的字段，第三个参数是使用replace操作。\n        $res = Employees::create($data,['first_name', 'last_name'],true);\n        return $res;\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1d9142a004df453ea1827c63907b75c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 总结\n\n新增数据的最佳实践原则：**使用create方法新增数据，使用saveAll批量新增数据**。\n\n# 四：更新\n和模型新增一样，更新操作同样也会经过修改器、自动完成以及模型事件等处理，并不等同于数据库的数据更新，而且更新方法和新增方法使用的是同一个方法，通常系统会自动判断需要新增还是更新数据。\n\n> 查找并更新\n\n在取出数据后，**更改字段内容后使用save方法更新数据**。这种方式是最佳的更新方式。\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $employee = Employees::where('first_name', '鸡哥')->find();\n        $employee->first_name = '阿鸡';\n        $employee->last_name = 'aj';\n        $employee->save();\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2f720814c2f240a49aa6edb209953ecd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 批量更新\n\n以使用saveAll方法批量更新数据，只需要在批量更新的数据中包含主键即可。\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data = [\n            [\n                'employee_id'       =>      97,\n                'first_name'        =>      '大东'\n            ],\n            [\n                'employee_id'       =>      98,\n                'first_name'        =>      '阿虚'\n            ]\n        ];\n//        这么调用是错的\n//        Employees::saveAll($data);\n        $res = new Employees();\n        $res->saveAll($data);\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ceff335488364679bf0d36465cfb2323.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 直接更新（静态方法）\n\n默认情况下会过滤非数据表字段的数据，如果你通过外部提交赋值给模型，并且希望指定某些字段写入，可以使用：\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data = [\n            'employee_id'       =>      99,\n            'first_name'        =>      'eyes'\n        ];\n        Employees::update($data);\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/bfede5049416440482995fc33dfd6d3d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n事实上update静态方法可以传入三个参数：\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        // 第一个参数是更新内容，第二个参数是更新条件(如果第一个参数包含主键，则无需填入)，第三个参数是允许更新字段\n        Employees::update(['first_name'=>'李五'],['employee_id'=>94],['first_name']);\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8e0ae5fdc7c64ff8a78944ccf42cced4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 总结\n\n不要调用save方法进行多次数据写入。更新的最佳实践原则是：**如果需要使用模型事件，那么就先查询后更新，如果不需要使用事件或者不查询直接更新，直接使用静态的Update方法进行条件更新，如非必要，尽量不要使用批量更新**。\n\n# 五：删除\n模型的删除和数据库的删除方法区别在于，模型的删除会包含模型的事件处理\n\n> 删除当前模型\n\n删除模型数据，可以在查询后调用delete方法\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $employee = new Employees();\n        // 先查找\n        $res = $employee->find(94);\n        // 再删除(因为返回值是布尔型，所以返回报错，但执行正常)\n        return $res->delete();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/427c96034b31406497cf6ee68a49a64e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 根据主键删除\n\n或者直接调用静态方法（根据主键删除），当destroy方法传入空值（包括空字符串和空数组）的时候不会做任何的数据删除操作，但传入0则是有效的\n\n```php\nUser::destroy(1);\n// 支持批量删除多个数据\nUser::destroy([1,2,3]);\n```\n\n> 条件删除\n\n还支持使用闭包删除:\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        Employees::destroy(function ($query){\n            $query->where('first_name', '麻子');\n        });\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8b9dfe2e87b84f5ca87ddb5c75e8ca58.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n或者通过数据库类的查询条件删除(直接调用数据库的delete方法的话无法调用模型事件):\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        Employees::where('first_name', '赵六')->limit(1)->delete();\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/84109042cfab496db846a7f7810a8e39.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 总结\n\n删除的最佳实践原则是：**如果删除当前模型数据，用delete方法，如果需要直接删除数据，使用destroy静态方法**。\n\n# 六：查询\n如果你是在模型内部获取数据，请不要使用`$this->name`的方式来获取数据，请使用`$this->getAttr('name')` 替代。\n> 获取单个数据\n\n```php\n// 取出主键为1的数据\n$user = User::find(1);\necho $user->name;\n\n// 使用查询构造器查询满足条件的数据\n$user = User::where('name', 'thinkphp')->find();\necho $user->name;\n```\n或者可以先判断是否为空模型再输出：\n\n```php\n$user = User::where('name', 'thinkphp')->findOrEmpty();\nif (!$user->isEmpty()) {\n    echo $user->name;\n}\n```\n\n> 获取多个数据\n\n```php\n// 根据主键获取多个数据\n$list = User::select([1,2,3]);\n// 对数据集进行遍历操作\nforeach($list as $key=>$user){\n    echo $user->name;\n}\n```\n要更多的查询支持，一样可以使用查询构造器(查询构造器方式的查询可以支持更多的连贯操作，包括排序、数量限制等):\n\n```php\n// 使用查询构造器查询\n$list = User::where('status', 1)->limit(3)->order('id', 'asc')->select();\nforeach($list as $key=>$user){\n    echo $user->name;\n}\n```","source":"_posts/PHP/thinkphp模型.md","raw":"---\ntitle: thinkphp模型\ndate: 2021-08-28 17:19:35\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/15.jpg\ntags: \n  - thinkphp\n  - 模型\ncategories: PHP\n---\n# 一：定义\n> 模型定义\n\n模型会自动对应数据表，模型类的命名规则是除去表前缀的数据表名称，采用驼峰法命名，并且首字母大写。\n模型自动对应的数据表名称都是遵循小写+下划线规范，如果你的表名有大写的情况，必须通过设置模型的table属性。\n<table><thead><tr><th>模型名</th><th>约定对应数据表（假设数据库的前缀定义是 <code>think_</code>）</th></tr></thead><tbody><tr><td>User</td><td>think_user</td></tr><tr><td>UserType</td><td>think_user_type</td></tr></tbody></table>\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7902f3ffed664a1e812ca60e9fc5b2d7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 模型设置\n\n模型的默认主键为id，如果你没有使用id作为主键名，需要在模型中设置属性，常用的模型设置属性包括（以下属性都不是必须设置）：\n<table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>模型名（相当于不带数据表前后缀的表名，默认为当前模型类名）</td></tr><tr><td>table</td><td>数据表名（默认自动获取）</td></tr><tr><td>suffix</td><td>数据表后缀（默认为空）</td></tr><tr><td>pk</td><td>主键名（默认为<code>id</code>）</td></tr><tr><td>connection</td><td>数据库连接（默认读取数据库配置）</td></tr><tr><td>query</td><td>模型使用的查询类名称</td></tr><tr><td>field</td><td>模型允许写入的字段列表（数组）</td></tr><tr><td>schema</td><td>模型对应数据表字段及类型</td></tr><tr><td>type</td><td>模型需要自动转换的字段及类型</td></tr><tr><td>strict</td><td>是否严格区分字段大小写（默认为true）</td></tr><tr><td>disuse</td><td>数据表废弃字段（数组）</td></tr></tbody></table>\n\n设置方式如下：\n\n```php\n<?php\nnamespace app\\model;\nuse think\\Model;\n\nclass Employees extends Model\n{\n    // 设置模型名(相当于不带数据表前后缀的表名，默认为当前模型类名)\n    protected $name = 'Employees';\n\n    // 设置对应的表名\n    protected $table = 'employees';\n\n    // 设置主键(默认为id)\n    protected $pk = 'employee_id';\n\n    // 严格区分字段大小写\n    protected $strict = true;\n}\n```\n> 模型初始化\n\ninit必须是静态方法，并且只在第一次实例化的时候执行，并且只会执行一次\n```php\nprotected static function init()\n{\n    //TODO:初始化内容\n}\n```\n\n> 模型操作\n\n在模型中除了可以调用数据库类的方法之外（换句话说，数据库的所有查询构造器方法模型中都可以支持），可以定义自己的方法，所以也可以把模型看成是数据库的增强版。模型的操作方法无需和数据库查询一样调用必须首先调用table或者name方法，因为模型会按照规则自动匹配对应的数据表，例如：\n\n```php\nDb::name('user')->where('id','>',10)->select();\n```\n改成模型操作的话就变成:\n\n```php\nUser::where('id','>',10)->select();\n```\n虽然看起来是相同的查询条件，但一个最明显的区别是查询结果的类型不同。第一种方式的查询结果是一个（二维）数组，而第二种方式的查询结果是包含了模型（集合）的数据集。不过，在大多数情况下，这二种返回类型的使用方式并无明显区别。\n\n模型操作和数据库操作的另外一个显著区别是模型支持包括获取器、修改器、自动时间写入在内的一系列自动化操作和事件，简化了数据的存取操作，自动帮你处理了一些原本需要手动处理的操作。\n\n> 动态切换后缀\n\n新版模型增加了一个数据表后缀属性，可以用于多语言或者数据分表的模型查询，省去为多个相同结构的表定义多个模型的麻烦(默认的数据表后缀可以在模型类里面直接定义suffix属性)。\n\n模型提供了动态切换方法suffix和setSuffix\n\n```php\n// suffix方法用于静态查询\n$blog = Blog::suffix('_en')->find();\n$blog->name = 'test';\n$blog->save();\n\n// setSuffix用于动态设置\n$blog = new Blog($data);\n$blog->setSuffix('_en')->save();\n```\n>\n# 二：模型字段\n+ 模型的数据字段和表字段是对应关系，默认会自动获取，包括字段的类型\n+ 自动获取会导致增加一次查询，如果在模型中配置字段信息，会减少内存开销\n+ 可以在模型设置$schema 字段，明确定义字段信息，字段需要对应表**写完整**；\n![在这里插入图片描述](https://img-blog.csdnimg.cn/94d8ff39fb9f4afc9489a26cbdd75c86.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ 字段类型的定义可以使用PHP类型或者数据库的字段类型都可以，字段类型定义的作用主要用于查询的参数自动绑定类型。\n+ 时间字段尽量采用实际的数据库类型定义，便于时间查询的字段自动识别。如果是json类型直接定义为json即可\n+ schema属性一旦定义，就必须定义完整的数据表字段类型。如果你只希望对某个字段定义需要自动转换的类型，可以使用type属性\n\n```php\n<?php\nnamespace app\\model;\n\nuse think\\Model;\n\nclass User extends Model\n{\n    // 设置字段自动转换类型\n    protected $type = [\n        'score'       => 'float',\n    ];\n}\n```\n\n# 三：新增\n模型数据的新增和数据库的新增数据有所区别，数据库的新增只是单纯的写入给定的数据，而模型的数据写入会包含修改器、自动完成以及模型事件等环节。\n\n> 通过数组添加数据\n\n示例是批量新增，所以\\$data是二维数组，增加单个数据只要换成一维数组就行了，另外，不要在同一个实例里面多次新增数据，如果确实需要多次新增，可以使用后面的静态方法处理。\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data=[\n            [\n                'employee_id'  =>  96,\n                'first_name'   =>  '鸡哥',\n                'last_name'    =>  'aa'\n            ],\n            [\n                'employee_id'  =>  95,\n                'first_name'   =>  '超哥',\n                'last_name'    =>  'cc'\n            ]\n        ];\n        $res=new Employees();\n        return $res->saveAll($data);\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2a6bf50dca55477799878af839a6071f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> replace写入\n\nsave方法可以支持replace写入:\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data=[\n            'employee_id'  =>  94,\n            'first_name'   =>  '李四',\n            'last_name'    =>  'ab'\n        ];\n        $res=new Employees();\n        return $res->replace()->save($data);\n    }\n}\n```\n\n> 获取自增ID\n\n这里其实获取自增ID就是获取模型的主键，如果你的主键不是id，而是employee_id的话，其实获取自增ID就变成这样：\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data=[\n            'first_name'   =>  '王五',\n            'last_name'    =>  'df'\n        ];\n        $res=new Employees();\n        $res->replace()->save($data);\n        return $res->employee_id;\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d54cc562ba594dca9fd4e7ea89907a34.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 静态方法\n\n还可以直接静态调用create方法创建并写入\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n//        貌似create方法不支持批量添加数据\n//        $data=[\n//            [\n//                'first_name'   =>  '赵六',\n//                'last_name'    =>  'db'\n//            ],\n//            [\n//                'first_name'   =>  '麻子',\n//                'last_name'    =>  'cs'\n//            ]\n//        ];\n        $data=[\n            'first_name'   =>  '赵六',\n            'last_name'    =>  'db'\n        ];\n        $res = Employees::create($data);\n        return $res;\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cd13c48accbf42d6b5996409c60fc95e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\ncreate方法默认会过滤不是数据表的字段信息，可以在第二个参数可以传入允许写入的字段列表，同时也支持replace操作，使用下面的方法：\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data=[\n            'first_name'   =>  '麻子',\n            'last_name'    =>  'cs'\n        ];\n        // 第二个参数是允许写入的字段，第三个参数是使用replace操作。\n        $res = Employees::create($data,['first_name', 'last_name'],true);\n        return $res;\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1d9142a004df453ea1827c63907b75c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 总结\n\n新增数据的最佳实践原则：**使用create方法新增数据，使用saveAll批量新增数据**。\n\n# 四：更新\n和模型新增一样，更新操作同样也会经过修改器、自动完成以及模型事件等处理，并不等同于数据库的数据更新，而且更新方法和新增方法使用的是同一个方法，通常系统会自动判断需要新增还是更新数据。\n\n> 查找并更新\n\n在取出数据后，**更改字段内容后使用save方法更新数据**。这种方式是最佳的更新方式。\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $employee = Employees::where('first_name', '鸡哥')->find();\n        $employee->first_name = '阿鸡';\n        $employee->last_name = 'aj';\n        $employee->save();\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2f720814c2f240a49aa6edb209953ecd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 批量更新\n\n以使用saveAll方法批量更新数据，只需要在批量更新的数据中包含主键即可。\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data = [\n            [\n                'employee_id'       =>      97,\n                'first_name'        =>      '大东'\n            ],\n            [\n                'employee_id'       =>      98,\n                'first_name'        =>      '阿虚'\n            ]\n        ];\n//        这么调用是错的\n//        Employees::saveAll($data);\n        $res = new Employees();\n        $res->saveAll($data);\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ceff335488364679bf0d36465cfb2323.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 直接更新（静态方法）\n\n默认情况下会过滤非数据表字段的数据，如果你通过外部提交赋值给模型，并且希望指定某些字段写入，可以使用：\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data = [\n            'employee_id'       =>      99,\n            'first_name'        =>      'eyes'\n        ];\n        Employees::update($data);\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/bfede5049416440482995fc33dfd6d3d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n事实上update静态方法可以传入三个参数：\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        // 第一个参数是更新内容，第二个参数是更新条件(如果第一个参数包含主键，则无需填入)，第三个参数是允许更新字段\n        Employees::update(['first_name'=>'李五'],['employee_id'=>94],['first_name']);\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8e0ae5fdc7c64ff8a78944ccf42cced4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 总结\n\n不要调用save方法进行多次数据写入。更新的最佳实践原则是：**如果需要使用模型事件，那么就先查询后更新，如果不需要使用事件或者不查询直接更新，直接使用静态的Update方法进行条件更新，如非必要，尽量不要使用批量更新**。\n\n# 五：删除\n模型的删除和数据库的删除方法区别在于，模型的删除会包含模型的事件处理\n\n> 删除当前模型\n\n删除模型数据，可以在查询后调用delete方法\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $employee = new Employees();\n        // 先查找\n        $res = $employee->find(94);\n        // 再删除(因为返回值是布尔型，所以返回报错，但执行正常)\n        return $res->delete();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/427c96034b31406497cf6ee68a49a64e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 根据主键删除\n\n或者直接调用静态方法（根据主键删除），当destroy方法传入空值（包括空字符串和空数组）的时候不会做任何的数据删除操作，但传入0则是有效的\n\n```php\nUser::destroy(1);\n// 支持批量删除多个数据\nUser::destroy([1,2,3]);\n```\n\n> 条件删除\n\n还支持使用闭包删除:\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        Employees::destroy(function ($query){\n            $query->where('first_name', '麻子');\n        });\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8b9dfe2e87b84f5ca87ddb5c75e8ca58.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n或者通过数据库类的查询条件删除(直接调用数据库的delete方法的话无法调用模型事件):\n\n```php\n<?php\nnamespace app\\controller;\nuse app\\model\\Employees;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        Employees::where('first_name', '赵六')->limit(1)->delete();\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/84109042cfab496db846a7f7810a8e39.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 总结\n\n删除的最佳实践原则是：**如果删除当前模型数据，用delete方法，如果需要直接删除数据，使用destroy静态方法**。\n\n# 六：查询\n如果你是在模型内部获取数据，请不要使用`$this->name`的方式来获取数据，请使用`$this->getAttr('name')` 替代。\n> 获取单个数据\n\n```php\n// 取出主键为1的数据\n$user = User::find(1);\necho $user->name;\n\n// 使用查询构造器查询满足条件的数据\n$user = User::where('name', 'thinkphp')->find();\necho $user->name;\n```\n或者可以先判断是否为空模型再输出：\n\n```php\n$user = User::where('name', 'thinkphp')->findOrEmpty();\nif (!$user->isEmpty()) {\n    echo $user->name;\n}\n```\n\n> 获取多个数据\n\n```php\n// 根据主键获取多个数据\n$list = User::select([1,2,3]);\n// 对数据集进行遍历操作\nforeach($list as $key=>$user){\n    echo $user->name;\n}\n```\n要更多的查询支持，一样可以使用查询构造器(查询构造器方式的查询可以支持更多的连贯操作，包括排序、数量限制等):\n\n```php\n// 使用查询构造器查询\n$list = User::where('status', 1)->limit(3)->order('id', 'asc')->select();\nforeach($list as $key=>$user){\n    echo $user->name;\n}\n```","slug":"PHP/thinkphp模型","published":1,"updated":"2021-12-03T14:59:55.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958cd0054asda588111nb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：定义\"><a href=\"#一：定义\" class=\"headerlink\" title=\"一：定义\"></a>一：定义</h1><blockquote>\n<p>模型定义</p>\n</blockquote>\n<p>模型会自动对应数据表，模型类的命名规则是除去表前缀的数据表名称，采用驼峰法命名，并且首字母大写。<br>模型自动对应的数据表名称都是遵循小写+下划线规范，如果你的表名有大写的情况，必须通过设置模型的table属性。</p>\n<table><thead><tr><th>模型名</th><th>约定对应数据表（假设数据库的前缀定义是 <code>think_</code>）</th></tr></thead><tbody><tr><td>User</td><td>think_user</td></tr><tr><td>UserType</td><td>think_user_type</td></tr></tbody></table>\n\n<p><img src=\"https://img-blog.csdnimg.cn/7902f3ffed664a1e812ca60e9fc5b2d7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>模型设置</p>\n</blockquote>\n<p>模型的默认主键为id，如果你没有使用id作为主键名，需要在模型中设置属性，常用的模型设置属性包括（以下属性都不是必须设置）：</p>\n<table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>模型名（相当于不带数据表前后缀的表名，默认为当前模型类名）</td></tr><tr><td>table</td><td>数据表名（默认自动获取）</td></tr><tr><td>suffix</td><td>数据表后缀（默认为空）</td></tr><tr><td>pk</td><td>主键名（默认为<code>id</code>）</td></tr><tr><td>connection</td><td>数据库连接（默认读取数据库配置）</td></tr><tr><td>query</td><td>模型使用的查询类名称</td></tr><tr><td>field</td><td>模型允许写入的字段列表（数组）</td></tr><tr><td>schema</td><td>模型对应数据表字段及类型</td></tr><tr><td>type</td><td>模型需要自动转换的字段及类型</td></tr><tr><td>strict</td><td>是否严格区分字段大小写（默认为true）</td></tr><tr><td>disuse</td><td>数据表废弃字段（数组）</td></tr></tbody></table>\n\n<p>设置方式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">Model</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Employees</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 设置模型名(相当于不带数据表前后缀的表名，默认为当前模型类名)</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$name</span> = <span class=\"string\">&#x27;Employees&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设置对应的表名</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$table</span> = <span class=\"string\">&#x27;employees&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设置主键(默认为id)</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$pk</span> = <span class=\"string\">&#x27;employee_id&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 严格区分字段大小写</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$strict</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>模型初始化</p>\n</blockquote>\n<p>init必须是静态方法，并且只在第一次实例化的时候执行，并且只会执行一次</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>初始化内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>模型操作</p>\n</blockquote>\n<p>在模型中除了可以调用数据库类的方法之外（换句话说，数据库的所有查询构造器方法模型中都可以支持），可以定义自己的方法，所以也可以把模型看成是数据库的增强版。模型的操作方法无需和数据库查询一样调用必须首先调用table或者name方法，因为模型会按照规则自动匹配对应的数据表，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::name(<span class=\"string\">&#x27;user&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"number\">10</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n<p>改成模型操作的话就变成:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User::where(<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"number\">10</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n<p>虽然看起来是相同的查询条件，但一个最明显的区别是查询结果的类型不同。第一种方式的查询结果是一个（二维）数组，而第二种方式的查询结果是包含了模型（集合）的数据集。不过，在大多数情况下，这二种返回类型的使用方式并无明显区别。</p>\n<p>模型操作和数据库操作的另外一个显著区别是模型支持包括获取器、修改器、自动时间写入在内的一系列自动化操作和事件，简化了数据的存取操作，自动帮你处理了一些原本需要手动处理的操作。</p>\n<blockquote>\n<p>动态切换后缀</p>\n</blockquote>\n<p>新版模型增加了一个数据表后缀属性，可以用于多语言或者数据分表的模型查询，省去为多个相同结构的表定义多个模型的麻烦(默认的数据表后缀可以在模型类里面直接定义suffix属性)。</p>\n<p>模型提供了动态切换方法suffix和setSuffix</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// suffix方法用于静态查询</span></span><br><span class=\"line\"><span class=\"variable\">$blog</span> = Blog::suffix(<span class=\"string\">&#x27;_en&#x27;</span>)-&gt;find();</span><br><span class=\"line\"><span class=\"variable\">$blog</span>-&gt;name = <span class=\"string\">&#x27;test&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$blog</span>-&gt;save();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// setSuffix用于动态设置</span></span><br><span class=\"line\"><span class=\"variable\">$blog</span> = <span class=\"keyword\">new</span> Blog(<span class=\"variable\">$data</span>);</span><br><span class=\"line\"><span class=\"variable\">$blog</span>-&gt;setSuffix(<span class=\"string\">&#x27;_en&#x27;</span>)-&gt;save();</span><br></pre></td></tr></table></figure>\n<blockquote>\n</blockquote>\n<h1 id=\"二：模型字段\"><a href=\"#二：模型字段\" class=\"headerlink\" title=\"二：模型字段\"></a>二：模型字段</h1><ul>\n<li>模型的数据字段和表字段是对应关系，默认会自动获取，包括字段的类型</li>\n<li>自动获取会导致增加一次查询，如果在模型中配置字段信息，会减少内存开销</li>\n<li>可以在模型设置$schema 字段，明确定义字段信息，字段需要对应表<strong>写完整</strong>；<br><img src=\"https://img-blog.csdnimg.cn/94d8ff39fb9f4afc9489a26cbdd75c86.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></li>\n<li>字段类型的定义可以使用PHP类型或者数据库的字段类型都可以，字段类型定义的作用主要用于查询的参数自动绑定类型。</li>\n<li>时间字段尽量采用实际的数据库类型定义，便于时间查询的字段自动识别。如果是json类型直接定义为json即可</li>\n<li>schema属性一旦定义，就必须定义完整的数据表字段类型。如果你只希望对某个字段定义需要自动转换的类型，可以使用type属性</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">Model</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 设置字段自动转换类型</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$type</span> = [</span><br><span class=\"line\">        <span class=\"string\">&#x27;score&#x27;</span>       =&gt; <span class=\"string\">&#x27;float&#x27;</span>,</span><br><span class=\"line\">    ];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三：新增\"><a href=\"#三：新增\" class=\"headerlink\" title=\"三：新增\"></a>三：新增</h1><p>模型数据的新增和数据库的新增数据有所区别，数据库的新增只是单纯的写入给定的数据，而模型的数据写入会包含修改器、自动完成以及模型事件等环节。</p>\n<blockquote>\n<p>通过数组添加数据</p>\n</blockquote>\n<p>示例是批量新增，所以$data是二维数组，增加单个数据只要换成一维数组就行了，另外，不要在同一个实例里面多次新增数据，如果确实需要多次新增，可以使用后面的静态方法处理。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>  =&gt;  <span class=\"number\">96</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;鸡哥&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;aa&#x27;</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>  =&gt;  <span class=\"number\">95</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;超哥&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;cc&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"variable\">$res</span>=<span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>-&gt;saveAll(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2a6bf50dca55477799878af839a6071f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>replace写入</p>\n</blockquote>\n<p>save方法可以支持replace写入:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            <span class=\"string\">&#x27;employee_id&#x27;</span>  =&gt;  <span class=\"number\">94</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;李四&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;ab&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"variable\">$res</span>=<span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>-&gt;replace()-&gt;save(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>获取自增ID</p>\n</blockquote>\n<p>这里其实获取自增ID就是获取模型的主键，如果你的主键不是id，而是employee_id的话，其实获取自增ID就变成这样：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;王五&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;df&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"variable\">$res</span>=<span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"variable\">$res</span>-&gt;replace()-&gt;save(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>-&gt;employee_id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/d54cc562ba594dca9fd4e7ea89907a34.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>静态方法</p>\n</blockquote>\n<p>还可以直接静态调用create方法创建并写入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//        貌似create方法不支持批量添加数据</span></span><br><span class=\"line\"><span class=\"comment\">//        $data=[</span></span><br><span class=\"line\"><span class=\"comment\">//            [</span></span><br><span class=\"line\"><span class=\"comment\">//                &#x27;first_name&#x27;   =&gt;  &#x27;赵六&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">//                &#x27;last_name&#x27;    =&gt;  &#x27;db&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//            ],</span></span><br><span class=\"line\"><span class=\"comment\">//            [</span></span><br><span class=\"line\"><span class=\"comment\">//                &#x27;first_name&#x27;   =&gt;  &#x27;麻子&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">//                &#x27;last_name&#x27;    =&gt;  &#x27;cs&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//            ]</span></span><br><span class=\"line\"><span class=\"comment\">//        ];</span></span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;赵六&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;db&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"variable\">$res</span> = Employees::create(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/cd13c48accbf42d6b5996409c60fc95e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>create方法默认会过滤不是数据表的字段信息，可以在第二个参数可以传入允许写入的字段列表，同时也支持replace操作，使用下面的方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;麻子&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;cs&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"comment\">// 第二个参数是允许写入的字段，第三个参数是使用replace操作。</span></span><br><span class=\"line\">        <span class=\"variable\">$res</span> = Employees::create(<span class=\"variable\">$data</span>,[<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;last_name&#x27;</span>],<span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/1d9142a004df453ea1827c63907b75c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>总结</p>\n</blockquote>\n<p>新增数据的最佳实践原则：<strong>使用create方法新增数据，使用saveAll批量新增数据</strong>。</p>\n<h1 id=\"四：更新\"><a href=\"#四：更新\" class=\"headerlink\" title=\"四：更新\"></a>四：更新</h1><p>和模型新增一样，更新操作同样也会经过修改器、自动完成以及模型事件等处理，并不等同于数据库的数据更新，而且更新方法和新增方法使用的是同一个方法，通常系统会自动判断需要新增还是更新数据。</p>\n<blockquote>\n<p>查找并更新</p>\n</blockquote>\n<p>在取出数据后，<strong>更改字段内容后使用save方法更新数据</strong>。这种方式是最佳的更新方式。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$employee</span> = Employees::where(<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;鸡哥&#x27;</span>)-&gt;find();</span><br><span class=\"line\">        <span class=\"variable\">$employee</span>-&gt;first_name = <span class=\"string\">&#x27;阿鸡&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$employee</span>-&gt;last_name = <span class=\"string\">&#x27;aj&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$employee</span>-&gt;save();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/2f720814c2f240a49aa6edb209953ecd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>批量更新</p>\n</blockquote>\n<p>以使用saveAll方法批量更新数据，只需要在批量更新的数据中包含主键即可。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> = [</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>       =&gt;      <span class=\"number\">97</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>        =&gt;      <span class=\"string\">&#x27;大东&#x27;</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>       =&gt;      <span class=\"number\">98</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>        =&gt;      <span class=\"string\">&#x27;阿虚&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        ];</span><br><span class=\"line\"><span class=\"comment\">//        这么调用是错的</span></span><br><span class=\"line\"><span class=\"comment\">//        Employees::saveAll($data);</span></span><br><span class=\"line\">        <span class=\"variable\">$res</span> = <span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"variable\">$res</span>-&gt;saveAll(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/ceff335488364679bf0d36465cfb2323.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>直接更新（静态方法）</p>\n</blockquote>\n<p>默认情况下会过滤非数据表字段的数据，如果你通过外部提交赋值给模型，并且希望指定某些字段写入，可以使用：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> = [</span><br><span class=\"line\">            <span class=\"string\">&#x27;employee_id&#x27;</span>       =&gt;      <span class=\"number\">99</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>        =&gt;      <span class=\"string\">&#x27;eyes&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        Employees::update(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/bfede5049416440482995fc33dfd6d3d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>事实上update静态方法可以传入三个参数：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第一个参数是更新内容，第二个参数是更新条件(如果第一个参数包含主键，则无需填入)，第三个参数是允许更新字段</span></span><br><span class=\"line\">        Employees::update([<span class=\"string\">&#x27;first_name&#x27;</span>=&gt;<span class=\"string\">&#x27;李五&#x27;</span>],[<span class=\"string\">&#x27;employee_id&#x27;</span>=&gt;<span class=\"number\">94</span>],[<span class=\"string\">&#x27;first_name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8e0ae5fdc7c64ff8a78944ccf42cced4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>总结</p>\n</blockquote>\n<p>不要调用save方法进行多次数据写入。更新的最佳实践原则是：<strong>如果需要使用模型事件，那么就先查询后更新，如果不需要使用事件或者不查询直接更新，直接使用静态的Update方法进行条件更新，如非必要，尽量不要使用批量更新</strong>。</p>\n<h1 id=\"五：删除\"><a href=\"#五：删除\" class=\"headerlink\" title=\"五：删除\"></a>五：删除</h1><p>模型的删除和数据库的删除方法区别在于，模型的删除会包含模型的事件处理</p>\n<blockquote>\n<p>删除当前模型</p>\n</blockquote>\n<p>删除模型数据，可以在查询后调用delete方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$employee</span> = <span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"comment\">// 先查找</span></span><br><span class=\"line\">        <span class=\"variable\">$res</span> = <span class=\"variable\">$employee</span>-&gt;find(<span class=\"number\">94</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 再删除(因为返回值是布尔型，所以返回报错，但执行正常)</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>-&gt;delete();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/427c96034b31406497cf6ee68a49a64e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>根据主键删除</p>\n</blockquote>\n<p>或者直接调用静态方法（根据主键删除），当destroy方法传入空值（包括空字符串和空数组）的时候不会做任何的数据删除操作，但传入0则是有效的</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User::destroy(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 支持批量删除多个数据</span></span><br><span class=\"line\">User::destroy([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>条件删除</p>\n</blockquote>\n<p>还支持使用闭包删除:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Employees::destroy(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$query</span></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$query</span>-&gt;where(<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;麻子&#x27;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8b9dfe2e87b84f5ca87ddb5c75e8ca58.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>或者通过数据库类的查询条件删除(直接调用数据库的delete方法的话无法调用模型事件):</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Employees::where(<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;赵六&#x27;</span>)-&gt;limit(<span class=\"number\">1</span>)-&gt;delete();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/84109042cfab496db846a7f7810a8e39.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>总结</p>\n</blockquote>\n<p>删除的最佳实践原则是：<strong>如果删除当前模型数据，用delete方法，如果需要直接删除数据，使用destroy静态方法</strong>。</p>\n<h1 id=\"六：查询\"><a href=\"#六：查询\" class=\"headerlink\" title=\"六：查询\"></a>六：查询</h1><p>如果你是在模型内部获取数据，请不要使用<code>$this-&gt;name</code>的方式来获取数据，请使用<code>$this-&gt;getAttr(&#39;name&#39;)</code> 替代。</p>\n<blockquote>\n<p>获取单个数据</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 取出主键为1的数据</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = User::find(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用查询构造器查询满足条件的数据</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = User::where(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;thinkphp&#x27;</span>)-&gt;find();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br></pre></td></tr></table></figure>\n<p>或者可以先判断是否为空模型再输出：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$user</span> = User::where(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;thinkphp&#x27;</span>)-&gt;findOrEmpty();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"variable\">$user</span>-&gt;isEmpty()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>获取多个数据</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据主键获取多个数据</span></span><br><span class=\"line\"><span class=\"variable\">$list</span> = User::select([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 对数据集进行遍历操作</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>(<span class=\"variable\">$list</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span>=&gt;<span class=\"variable\">$user</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>要更多的查询支持，一样可以使用查询构造器(查询构造器方式的查询可以支持更多的连贯操作，包括排序、数量限制等):</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用查询构造器查询</span></span><br><span class=\"line\"><span class=\"variable\">$list</span> = User::where(<span class=\"string\">&#x27;status&#x27;</span>, <span class=\"number\">1</span>)-&gt;limit(<span class=\"number\">3</span>)-&gt;order(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;asc&#x27;</span>)-&gt;select();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>(<span class=\"variable\">$list</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span>=&gt;<span class=\"variable\">$user</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：定义\"><a href=\"#一：定义\" class=\"headerlink\" title=\"一：定义\"></a>一：定义</h1><blockquote>\n<p>模型定义</p>\n</blockquote>\n<p>模型会自动对应数据表，模型类的命名规则是除去表前缀的数据表名称，采用驼峰法命名，并且首字母大写。<br>模型自动对应的数据表名称都是遵循小写+下划线规范，如果你的表名有大写的情况，必须通过设置模型的table属性。</p>\n<table><thead><tr><th>模型名</th><th>约定对应数据表（假设数据库的前缀定义是 <code>think_</code>）</th></tr></thead><tbody><tr><td>User</td><td>think_user</td></tr><tr><td>UserType</td><td>think_user_type</td></tr></tbody></table>\n\n<p><img src=\"https://img-blog.csdnimg.cn/7902f3ffed664a1e812ca60e9fc5b2d7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>模型设置</p>\n</blockquote>\n<p>模型的默认主键为id，如果你没有使用id作为主键名，需要在模型中设置属性，常用的模型设置属性包括（以下属性都不是必须设置）：</p>\n<table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>模型名（相当于不带数据表前后缀的表名，默认为当前模型类名）</td></tr><tr><td>table</td><td>数据表名（默认自动获取）</td></tr><tr><td>suffix</td><td>数据表后缀（默认为空）</td></tr><tr><td>pk</td><td>主键名（默认为<code>id</code>）</td></tr><tr><td>connection</td><td>数据库连接（默认读取数据库配置）</td></tr><tr><td>query</td><td>模型使用的查询类名称</td></tr><tr><td>field</td><td>模型允许写入的字段列表（数组）</td></tr><tr><td>schema</td><td>模型对应数据表字段及类型</td></tr><tr><td>type</td><td>模型需要自动转换的字段及类型</td></tr><tr><td>strict</td><td>是否严格区分字段大小写（默认为true）</td></tr><tr><td>disuse</td><td>数据表废弃字段（数组）</td></tr></tbody></table>\n\n<p>设置方式如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">Model</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Employees</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 设置模型名(相当于不带数据表前后缀的表名，默认为当前模型类名)</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$name</span> = <span class=\"string\">&#x27;Employees&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设置对应的表名</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$table</span> = <span class=\"string\">&#x27;employees&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设置主键(默认为id)</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$pk</span> = <span class=\"string\">&#x27;employee_id&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 严格区分字段大小写</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$strict</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>模型初始化</p>\n</blockquote>\n<p>init必须是静态方法，并且只在第一次实例化的时候执行，并且只会执行一次</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>初始化内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>模型操作</p>\n</blockquote>\n<p>在模型中除了可以调用数据库类的方法之外（换句话说，数据库的所有查询构造器方法模型中都可以支持），可以定义自己的方法，所以也可以把模型看成是数据库的增强版。模型的操作方法无需和数据库查询一样调用必须首先调用table或者name方法，因为模型会按照规则自动匹配对应的数据表，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::name(<span class=\"string\">&#x27;user&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"number\">10</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n<p>改成模型操作的话就变成:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User::where(<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"number\">10</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n<p>虽然看起来是相同的查询条件，但一个最明显的区别是查询结果的类型不同。第一种方式的查询结果是一个（二维）数组，而第二种方式的查询结果是包含了模型（集合）的数据集。不过，在大多数情况下，这二种返回类型的使用方式并无明显区别。</p>\n<p>模型操作和数据库操作的另外一个显著区别是模型支持包括获取器、修改器、自动时间写入在内的一系列自动化操作和事件，简化了数据的存取操作，自动帮你处理了一些原本需要手动处理的操作。</p>\n<blockquote>\n<p>动态切换后缀</p>\n</blockquote>\n<p>新版模型增加了一个数据表后缀属性，可以用于多语言或者数据分表的模型查询，省去为多个相同结构的表定义多个模型的麻烦(默认的数据表后缀可以在模型类里面直接定义suffix属性)。</p>\n<p>模型提供了动态切换方法suffix和setSuffix</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// suffix方法用于静态查询</span></span><br><span class=\"line\"><span class=\"variable\">$blog</span> = Blog::suffix(<span class=\"string\">&#x27;_en&#x27;</span>)-&gt;find();</span><br><span class=\"line\"><span class=\"variable\">$blog</span>-&gt;name = <span class=\"string\">&#x27;test&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$blog</span>-&gt;save();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// setSuffix用于动态设置</span></span><br><span class=\"line\"><span class=\"variable\">$blog</span> = <span class=\"keyword\">new</span> Blog(<span class=\"variable\">$data</span>);</span><br><span class=\"line\"><span class=\"variable\">$blog</span>-&gt;setSuffix(<span class=\"string\">&#x27;_en&#x27;</span>)-&gt;save();</span><br></pre></td></tr></table></figure>\n<blockquote>\n</blockquote>\n<h1 id=\"二：模型字段\"><a href=\"#二：模型字段\" class=\"headerlink\" title=\"二：模型字段\"></a>二：模型字段</h1><ul>\n<li>模型的数据字段和表字段是对应关系，默认会自动获取，包括字段的类型</li>\n<li>自动获取会导致增加一次查询，如果在模型中配置字段信息，会减少内存开销</li>\n<li>可以在模型设置$schema 字段，明确定义字段信息，字段需要对应表<strong>写完整</strong>；<br><img src=\"https://img-blog.csdnimg.cn/94d8ff39fb9f4afc9489a26cbdd75c86.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></li>\n<li>字段类型的定义可以使用PHP类型或者数据库的字段类型都可以，字段类型定义的作用主要用于查询的参数自动绑定类型。</li>\n<li>时间字段尽量采用实际的数据库类型定义，便于时间查询的字段自动识别。如果是json类型直接定义为json即可</li>\n<li>schema属性一旦定义，就必须定义完整的数据表字段类型。如果你只希望对某个字段定义需要自动转换的类型，可以使用type属性</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">Model</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 设置字段自动转换类型</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$type</span> = [</span><br><span class=\"line\">        <span class=\"string\">&#x27;score&#x27;</span>       =&gt; <span class=\"string\">&#x27;float&#x27;</span>,</span><br><span class=\"line\">    ];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三：新增\"><a href=\"#三：新增\" class=\"headerlink\" title=\"三：新增\"></a>三：新增</h1><p>模型数据的新增和数据库的新增数据有所区别，数据库的新增只是单纯的写入给定的数据，而模型的数据写入会包含修改器、自动完成以及模型事件等环节。</p>\n<blockquote>\n<p>通过数组添加数据</p>\n</blockquote>\n<p>示例是批量新增，所以$data是二维数组，增加单个数据只要换成一维数组就行了，另外，不要在同一个实例里面多次新增数据，如果确实需要多次新增，可以使用后面的静态方法处理。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>  =&gt;  <span class=\"number\">96</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;鸡哥&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;aa&#x27;</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>  =&gt;  <span class=\"number\">95</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;超哥&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;cc&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"variable\">$res</span>=<span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>-&gt;saveAll(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2a6bf50dca55477799878af839a6071f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>replace写入</p>\n</blockquote>\n<p>save方法可以支持replace写入:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            <span class=\"string\">&#x27;employee_id&#x27;</span>  =&gt;  <span class=\"number\">94</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;李四&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;ab&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"variable\">$res</span>=<span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>-&gt;replace()-&gt;save(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>获取自增ID</p>\n</blockquote>\n<p>这里其实获取自增ID就是获取模型的主键，如果你的主键不是id，而是employee_id的话，其实获取自增ID就变成这样：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;王五&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;df&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"variable\">$res</span>=<span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"variable\">$res</span>-&gt;replace()-&gt;save(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>-&gt;employee_id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/d54cc562ba594dca9fd4e7ea89907a34.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>静态方法</p>\n</blockquote>\n<p>还可以直接静态调用create方法创建并写入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//        貌似create方法不支持批量添加数据</span></span><br><span class=\"line\"><span class=\"comment\">//        $data=[</span></span><br><span class=\"line\"><span class=\"comment\">//            [</span></span><br><span class=\"line\"><span class=\"comment\">//                &#x27;first_name&#x27;   =&gt;  &#x27;赵六&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">//                &#x27;last_name&#x27;    =&gt;  &#x27;db&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//            ],</span></span><br><span class=\"line\"><span class=\"comment\">//            [</span></span><br><span class=\"line\"><span class=\"comment\">//                &#x27;first_name&#x27;   =&gt;  &#x27;麻子&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">//                &#x27;last_name&#x27;    =&gt;  &#x27;cs&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//            ]</span></span><br><span class=\"line\"><span class=\"comment\">//        ];</span></span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;赵六&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;db&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"variable\">$res</span> = Employees::create(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/cd13c48accbf42d6b5996409c60fc95e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>create方法默认会过滤不是数据表的字段信息，可以在第二个参数可以传入允许写入的字段列表，同时也支持replace操作，使用下面的方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span>=[</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>   =&gt;  <span class=\"string\">&#x27;麻子&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;cs&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"comment\">// 第二个参数是允许写入的字段，第三个参数是使用replace操作。</span></span><br><span class=\"line\">        <span class=\"variable\">$res</span> = Employees::create(<span class=\"variable\">$data</span>,[<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;last_name&#x27;</span>],<span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/1d9142a004df453ea1827c63907b75c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>总结</p>\n</blockquote>\n<p>新增数据的最佳实践原则：<strong>使用create方法新增数据，使用saveAll批量新增数据</strong>。</p>\n<h1 id=\"四：更新\"><a href=\"#四：更新\" class=\"headerlink\" title=\"四：更新\"></a>四：更新</h1><p>和模型新增一样，更新操作同样也会经过修改器、自动完成以及模型事件等处理，并不等同于数据库的数据更新，而且更新方法和新增方法使用的是同一个方法，通常系统会自动判断需要新增还是更新数据。</p>\n<blockquote>\n<p>查找并更新</p>\n</blockquote>\n<p>在取出数据后，<strong>更改字段内容后使用save方法更新数据</strong>。这种方式是最佳的更新方式。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$employee</span> = Employees::where(<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;鸡哥&#x27;</span>)-&gt;find();</span><br><span class=\"line\">        <span class=\"variable\">$employee</span>-&gt;first_name = <span class=\"string\">&#x27;阿鸡&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$employee</span>-&gt;last_name = <span class=\"string\">&#x27;aj&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$employee</span>-&gt;save();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/2f720814c2f240a49aa6edb209953ecd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>批量更新</p>\n</blockquote>\n<p>以使用saveAll方法批量更新数据，只需要在批量更新的数据中包含主键即可。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> = [</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>       =&gt;      <span class=\"number\">97</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>        =&gt;      <span class=\"string\">&#x27;大东&#x27;</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>       =&gt;      <span class=\"number\">98</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>        =&gt;      <span class=\"string\">&#x27;阿虚&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        ];</span><br><span class=\"line\"><span class=\"comment\">//        这么调用是错的</span></span><br><span class=\"line\"><span class=\"comment\">//        Employees::saveAll($data);</span></span><br><span class=\"line\">        <span class=\"variable\">$res</span> = <span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"variable\">$res</span>-&gt;saveAll(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/ceff335488364679bf0d36465cfb2323.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>直接更新（静态方法）</p>\n</blockquote>\n<p>默认情况下会过滤非数据表字段的数据，如果你通过外部提交赋值给模型，并且希望指定某些字段写入，可以使用：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> = [</span><br><span class=\"line\">            <span class=\"string\">&#x27;employee_id&#x27;</span>       =&gt;      <span class=\"number\">99</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>        =&gt;      <span class=\"string\">&#x27;eyes&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        Employees::update(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/bfede5049416440482995fc33dfd6d3d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>事实上update静态方法可以传入三个参数：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第一个参数是更新内容，第二个参数是更新条件(如果第一个参数包含主键，则无需填入)，第三个参数是允许更新字段</span></span><br><span class=\"line\">        Employees::update([<span class=\"string\">&#x27;first_name&#x27;</span>=&gt;<span class=\"string\">&#x27;李五&#x27;</span>],[<span class=\"string\">&#x27;employee_id&#x27;</span>=&gt;<span class=\"number\">94</span>],[<span class=\"string\">&#x27;first_name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8e0ae5fdc7c64ff8a78944ccf42cced4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>总结</p>\n</blockquote>\n<p>不要调用save方法进行多次数据写入。更新的最佳实践原则是：<strong>如果需要使用模型事件，那么就先查询后更新，如果不需要使用事件或者不查询直接更新，直接使用静态的Update方法进行条件更新，如非必要，尽量不要使用批量更新</strong>。</p>\n<h1 id=\"五：删除\"><a href=\"#五：删除\" class=\"headerlink\" title=\"五：删除\"></a>五：删除</h1><p>模型的删除和数据库的删除方法区别在于，模型的删除会包含模型的事件处理</p>\n<blockquote>\n<p>删除当前模型</p>\n</blockquote>\n<p>删除模型数据，可以在查询后调用delete方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$employee</span> = <span class=\"keyword\">new</span> Employees();</span><br><span class=\"line\">        <span class=\"comment\">// 先查找</span></span><br><span class=\"line\">        <span class=\"variable\">$res</span> = <span class=\"variable\">$employee</span>-&gt;find(<span class=\"number\">94</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 再删除(因为返回值是布尔型，所以返回报错，但执行正常)</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$res</span>-&gt;delete();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/427c96034b31406497cf6ee68a49a64e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>根据主键删除</p>\n</blockquote>\n<p>或者直接调用静态方法（根据主键删除），当destroy方法传入空值（包括空字符串和空数组）的时候不会做任何的数据删除操作，但传入0则是有效的</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User::destroy(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// 支持批量删除多个数据</span></span><br><span class=\"line\">User::destroy([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>条件删除</p>\n</blockquote>\n<p>还支持使用闭包删除:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Employees::destroy(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$query</span></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$query</span>-&gt;where(<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;麻子&#x27;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8b9dfe2e87b84f5ca87ddb5c75e8ca58.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>或者通过数据库类的查询条件删除(直接调用数据库的delete方法的话无法调用模型事件):</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Employees</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Employees::where(<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;赵六&#x27;</span>)-&gt;limit(<span class=\"number\">1</span>)-&gt;delete();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/84109042cfab496db846a7f7810a8e39.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>总结</p>\n</blockquote>\n<p>删除的最佳实践原则是：<strong>如果删除当前模型数据，用delete方法，如果需要直接删除数据，使用destroy静态方法</strong>。</p>\n<h1 id=\"六：查询\"><a href=\"#六：查询\" class=\"headerlink\" title=\"六：查询\"></a>六：查询</h1><p>如果你是在模型内部获取数据，请不要使用<code>$this-&gt;name</code>的方式来获取数据，请使用<code>$this-&gt;getAttr(&#39;name&#39;)</code> 替代。</p>\n<blockquote>\n<p>获取单个数据</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 取出主键为1的数据</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = User::find(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用查询构造器查询满足条件的数据</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = User::where(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;thinkphp&#x27;</span>)-&gt;find();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br></pre></td></tr></table></figure>\n<p>或者可以先判断是否为空模型再输出：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$user</span> = User::where(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;thinkphp&#x27;</span>)-&gt;findOrEmpty();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"variable\">$user</span>-&gt;isEmpty()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>获取多个数据</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据主键获取多个数据</span></span><br><span class=\"line\"><span class=\"variable\">$list</span> = User::select([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 对数据集进行遍历操作</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>(<span class=\"variable\">$list</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span>=&gt;<span class=\"variable\">$user</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>要更多的查询支持，一样可以使用查询构造器(查询构造器方式的查询可以支持更多的连贯操作，包括排序、数量限制等):</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用查询构造器查询</span></span><br><span class=\"line\"><span class=\"variable\">$list</span> = User::where(<span class=\"string\">&#x27;status&#x27;</span>, <span class=\"number\">1</span>)-&gt;limit(<span class=\"number\">3</span>)-&gt;order(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;asc&#x27;</span>)-&gt;select();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>(<span class=\"variable\">$list</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span>=&gt;<span class=\"variable\">$user</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$user</span>-&gt;name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"使用Webpack5打包各类资源","date":"2021-10-14T12:00:02.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/108.jpg","_content":"\n\n# 一：webpack五个核心概念\n+ **Entry：** 入口(Entry)指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图。\n+ **Output：** 输出(Output)指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。\n+ **Loader：** Loader 让 webpack 能 够 去 处 理 那 些 非 JavaScript 文 件 (webpack 自 身 只 理 解 JavaScript) \n+ **Plugins：** 插件(Plugins)可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩， 一直到重新定义环境中的变量等。\n+ **Mode：** 模式(Mode)指示 webpack 使用相应模式的配置。\n\nmode的两个选项：\n| 选项 | 描述 | 特点 |\n|--|--|--|\n| development | 会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 development。<br>启用 NamedChunksPlugin 和 NamedModulesPlugin。 | 能让代码本地调试运行的环境 |\n| production | 会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 production。<br>启用 FlagDependencyUsagePlugin, FlagIncludedChunksPlugin, ModuleConcatenationPlugin, NoEmitOnErrorsPlugin, OccurrenceOrderPlugin, SideEffectsFlagPlugin 和 TerserPlugin。 | 能让代码优化上线运行的环境 |\n\n# 二：webpack初体验\n进入指定目录，输入命令：\n\n```shell\nnpm init --yes\n```\n`npm init`是初始化npm环境的命令，而`--yes`表示全部配置项为默认值。\n\n然后全局安装webpack：\n\n```shell\nnpm install webpack webpack-cli -g\n```\n\n然后本地安装webpack:\n\n\n\n```shell\nnpm install webpack-cli -D\n```\n安装成功的标志：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/94b07b4ec0cf47439bea4f7927bb2b7d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n安装成功后目录下会出现这两个文件以及一个文件夹\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9840397b307449318389310c80957baf.png)\n而一个标准的文件目录格式如下，需要自己再建一个build文件夹，用以存放打包后的代码，这个代码可以由浏览器运行，另外还要创建一个src文件夹，用以存放自己写的代码，src内创建index.js文件作为webpack打包入口文件。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/06016419bb064395a3c1cb6e2ce9dc15.png)\n在index.js写下如下代码：\n\n```js\nfunction add(x, y) {\n    return x + y;\n}\n\nconsole.log(\"hello world\")\n```\n然后再测试打包效果，webpack开发环境打包指令如下：\n\n```shell\nwebpack ./src/index.js -o ./build/built --mode=development\n```\n该指令的意思是：webpack以./src/index.js作为入口文件，-o是输出的意思，即打包输出到./build/built目录，且整体打包环境是开发环境。\n\n运行后在build目录下会出现一个文件夹built\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c8b5da97db004a44915f17c358e7336b.png)\n其中main.js内容如下,因为是开发环境打包，因此并没有压缩代码量的效果\n```javascript\n/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ (() => {\n\neval(\"function add(x, y) {\\r\\n    return x + y;\\r\\n}\\r\\n\\r\\nconsole.log(\\\"hello world\\\")\\n\\n//# sourceURL=webpack://test/./src/index.js?\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval devtool is used.\n/******/ \tvar __webpack_exports__ = {};\n/******/ \t__webpack_modules__[\"./src/index.js\"]();\n/******/ \t\n/******/ })()\n;\n```\n然后我们就可以试试生产环境下的打包，结果只有一个输出语句，因为那个add函数没有调用，因此直接省略掉了，注释也没了，可见打包还是很节约空间的。\n\n```shell\nwebpack ./src/index.js -o ./build/built --mode=production\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7ddccae1256e498ebcf8c0669abf5df7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 三：打包样式资源\n在打包前，需要现在项目根目录建一个webpack.config.js文件，该文件作为webpack的配置文件而存在，作用是指示webpack如何运行，即运行webpack指令时，会加载里面的配置。里面使用commonjs语法(目前所有构建工具都是基于nodejs平台运行，模块化默认采用commonjs)\n\n下面是webpack.config.js文件的基础配置格式：\n\n```javascript\n// resolve用来拼接绝对路径的方法\nconst { resolve } = require(\"path\");\n\nmodule.exports = {\n    // 入口起点\n    entry: \"./src/index.js\",\n    // 输出\n    output: {\n        // 输出文件名\n        filename: \"built.js\",\n        // 输出路径\n        // __dirname 是nodejs的变量，代表当前文件的目录绝对路径\n        path: resolve(__dirname, \"build\")\n    },\n    // loader的配置\n    module: {\n        rules: [\n            // 详细loader配置\n        ]\n    },\n    // plugins的配置\n    plugins: [\n        // 详细plugins的配置\n    ],\n    // 打包模式\n    mode: \"development\"  // mode: \"production\"\n}\n```\n\n而打包样式资源需要使用css-loader与style-loader，其中css-loader会将css文件变成commonjs模块加载到js中，里面内容是样式字符串。而style-loader会创建style标签，将js中的样式资源插入进去，添加到head中生效。使用时需要在webpack.config.js需要进行配置，只要改变module的内容就可以了，如下：\n\n```javascript\n    module: {\n        rules: [\n            // 详细loader配置\n            {\n                // 匹配哪些文件\n                test: /\\.css$/,\n                // 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上\n                use: [\n                    \"style-loader\",\n                    \"css-loader\"\n                ]\n            }\n        ]\n    },\n```\n配置好后就是下载css-loader与style-loader了：\n\n```shell\nnpm i css-loader style-loader -D\n```\n下载好后就可以打包样式文件了，在src目录新建css目录，创建文件index.css，写下如下代码：\n\n```css\nhtml {\n    height: 100%;\n    background-color: aqua;\n}\n```\n在index.js中引入：\n\n```javascript\nimport \"./css/index.css\"\n\nfunction add(x, y) {\n    return x + y;\n}\n\nconsole.log(\"hello world\")\n```\n命令行运行指令：\n\n```shell\nwebpack\n```\n运行后在build目录下生成built.js文件，在build目录新建index.html，引入built.js用以测试效果。\n\n代码总览如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4de0399754ef4602b09747b55f0cd955.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n运行index.html文件：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e70880c7bb044ac78d9682a547c99392.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n这是打包css文件，如果要打包less文件的话，还需要进行配置。首先是配置webpack.config.js，只需要在modules中添加一项less的loader配置就可以了：\n\n```javascript\n    module: {\n        rules: [\n            // 详细loader配置\n            {\n                // 匹配哪些文件\n                test: /\\.css$/,\n                // 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上\n                use: [\n                    \"style-loader\",\n                    \"css-loader\"\n                ]\n            },\n            {\n                // 配置less的loader\n                test: /\\.less$/,\n                use: [\n                    \"style-loader\",\n                    \"css-loader\",\n                    // less-loader能将less文件编译成css文件\n                    \"less-loader\"\n                ]\n            }\n        ]\n    },\n```\n然后下载less-loader与less：\n\n```shell\nnpm i less-loader less -D\n```\n然后就可以进行测试了，在css文件夹里建一个test.less文件，写下以下代码：\n\n```css\nbody {\n    height: 500px;\n    background-color: bisque;\n    div {\n        color: red;\n    }\n}\n```\n然后在index.js中引入：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8d8ba67296a1475bb3340f2e691ca396.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n打开index.html结果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d1a9890bacbf4418a9a6545609669206.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 四：打包html资源\n处理html资源就需要用到插件而不是loader了：\n\n```shell\nnpm i html-webpack-plugin -D\n```\n在src下新建一个index.html文件，我们可以在index.html里面写html代码，打包的时候，webpack会将index.html复制一份到build目录，并把打包的资源通过标签的方式引入到index.html中。\n\nwebpack.config.js中增加的配置如下：\n\n```javascript\n    // plugins的配置\n    plugins: [\n        // html-webpack-plugin插件：会自动创建一个空的html文件，并自动引入打包输出的所有资源(js/css)\n        new HtmlWebpackPlugin({\n            // 复制\"./src/index.html\"文件，并自动引入打包输出的所有资源(js/css)\n            template: \"./src/index.html\"\n        })\n    ],\n```\n\n代码总览如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/40148573859d4f918579303060ba4661.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n运行结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/178ab7441e4e432c881fe43c50d2fb1f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 五：打包图片资源\n打包图片资源依赖两个loader：url-loader与file-loader：\n\n```shell\nnpm i url-loader file-loader -D\n```\nurl-loader内部继承了file-loader，与file-loader不同的是：\n+ url-loader可以把较小的图片转化成base64数据，从而减少对图片资源的http请求。同时打包文件也会变大；\n+ 当图片大小超过设置的限制（limit）时，默认采用file-loader进行加载。fallback默认值“file-loader”；\n+ 所有file-loader的属性，url-loader均可以使用。例如publicPath设置图片公共地址（图片部署到CDN服务器）\n\n现在就可以开始准备了，先在src目录下新建一个index.html，代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <div>我是index.html</div>\n    <div class=\"img1\"></div>\n    <div class=\"img2\"></div>\n    <div class=\"img3\"></div>\n</body>\n</html>\n```\n再准备三张图片以备打包，在src中新建image目录，图片如下，注意第三张logo的大小是3.92kb，而另外两张均大于100kb，他们在后续打包时会有不同。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4ea9c647190a44ef9b439e412436e9ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n再在css目录下的test.less写下：\n\n```css\nbody {\n    background-color: bisque;\n\n    .img1 {\n        width: 100px;\n        height: 100px;\n        background-image: url(\"../image/10.png\");\n        background-repeat: no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .img2 {\n        width: 100px;\n        height: 200px;\n        background-image: url(\"../image/15.jpg\");\n        background-repeat: no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .img3 {\n        width: 50px;\n        height: 50px;\n        background-image: url(\"../image/logo.png\");\n        background-repeat: no-repeat;\n        background-size: 100% 100%;\n    }\n}\n```\nwebpack.config.js的loader配置如下：\n\n```javascript\n// loader的配置\n    module: {\n        rules: [\n            {\n                // 匹配哪些文件\n                test: /\\.css$/,\n                // 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上\n                use: [\n                    \"style-loader\",\n                    \"css-loader\"\n                ]\n            },\n            {\n                // 配置less的loader\n                test: /\\.less$/,\n                use: [\n                    \"style-loader\", \n                    // less-loader能将less文件编译成css文件\n                    \"css-loader\",\n                    \"less-loader\",\n                ]\n            },\n            {\n                // 处理图片资源\n                test: /\\.(jpg|png|gif)$/,\n                use: [\n                    {\n                        loader: \"url-loader\",\n                        options: {\n                            // 图片大小限制，小于该值则会被处理为base64编码，优点是减少请求数量，缺点是打包体积会更大\n                            limit: 8 * 1024,  // 单位是b, 一般用kb描述，因此乘以1024\n                            esModule:false\n                        },\n                    }\n                ],\n                type: 'javascript/auto',\n            }\n        ],\n    },\n```\n\n代码总览如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4fb242bd52dc4389bc2837d3ee96f454.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n命令行输入webpack命令开始打包，打包后build目录如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/15886221516f45859e27ce1f2c2bd55c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n可见打包后只剩下了两张图片，打开index.html，因为logo小于8kb，因此被处理为base64编码。而图片名称也被修改了，这是webpack根据图片内容生成的唯一hash值，避免打包时出现同名图片。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a7739aaa91a34648b049a0beabab55fc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n上述示例是从css中引入图片资源，事实上我们还有可能会在html中引用图片资源，现修改index.html为以下代码：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <div>我是index.html</div>\n    <div class=\"img1\"></div>\n    <div class=\"img2\"></div>\n    <div class=\"img3\"></div>\n    <img src=\"./image/10.png\">\n    <img src=\"./image/logo.png\">\n</body>\n</html>\n```\n如果要打包这种图片的话，需要额外处理，即下载html-loader，html-loader专门处理html文件里引入的图片，它能引入图片交给url-loader进行处理。\n\n```shell\nnpm i html-loader -D\n```\nwebpack.config.js的loader配置如下：\n\n```javascript\n    // loader的配置\n    module: {\n        rules: [\n            {\n                // 匹配哪些文件\n                test: /\\.css$/,\n                // 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上\n                use: [\n                    \"style-loader\",\n                    \"css-loader\"\n                ]\n            },\n            {\n                // 配置less的loader\n                test: /\\.less$/,\n                use: [\n                    \"style-loader\", \n                    // less-loader能将less文件编译成css文件\n                    \"css-loader\",\n                    \"less-loader\",\n                ]\n            },\n            {\n                // 处理css中的图片资源\n                test: /\\.(jpg|png|gif)$/,\n                use: [\n                    {\n                        loader: \"url-loader\",\n                        options: {\n                            // 图片大小限制，小于该值则会被处理为base64编码，优点是减少请求数量，缺点是图片体积会更大\n                            limit: 8 * 1024,  // 单位是b, 一般用kb描述，因此乘以1024\n                            // url-loader默认使用es6模块化解析，而html-loader引入图片是commonjs，因此需要改为false\n                            esModule: false,\n                            // name: '[hash:10].[ext]'  // 自定义打包后的图片名，即hash取前十位，后缀名不变\n                        },\n                    }\n                ],\n                type: 'javascript/auto',\n            },\n            {\n                // 处理html中的图片资源\n                test: /\\.html$/,\n                loader: \"html-loader\"\n            }\n        ],\n    },\n```\n代码总览如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7f648bec8f0e483b9543311f3dae9982.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n运行结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/97d7e8f814614bbfa56abbc62e818fa7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","source":"_posts/javascript/Webpack5打包.md","raw":"---\ntitle: 使用Webpack5打包各类资源\ndate:  2021-10-14 20:00:02\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/108.jpg\ntags:\n  - webpack\ncategories: javascript\n---\n\n\n# 一：webpack五个核心概念\n+ **Entry：** 入口(Entry)指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图。\n+ **Output：** 输出(Output)指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。\n+ **Loader：** Loader 让 webpack 能 够 去 处 理 那 些 非 JavaScript 文 件 (webpack 自 身 只 理 解 JavaScript) \n+ **Plugins：** 插件(Plugins)可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩， 一直到重新定义环境中的变量等。\n+ **Mode：** 模式(Mode)指示 webpack 使用相应模式的配置。\n\nmode的两个选项：\n| 选项 | 描述 | 特点 |\n|--|--|--|\n| development | 会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 development。<br>启用 NamedChunksPlugin 和 NamedModulesPlugin。 | 能让代码本地调试运行的环境 |\n| production | 会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 production。<br>启用 FlagDependencyUsagePlugin, FlagIncludedChunksPlugin, ModuleConcatenationPlugin, NoEmitOnErrorsPlugin, OccurrenceOrderPlugin, SideEffectsFlagPlugin 和 TerserPlugin。 | 能让代码优化上线运行的环境 |\n\n# 二：webpack初体验\n进入指定目录，输入命令：\n\n```shell\nnpm init --yes\n```\n`npm init`是初始化npm环境的命令，而`--yes`表示全部配置项为默认值。\n\n然后全局安装webpack：\n\n```shell\nnpm install webpack webpack-cli -g\n```\n\n然后本地安装webpack:\n\n\n\n```shell\nnpm install webpack-cli -D\n```\n安装成功的标志：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/94b07b4ec0cf47439bea4f7927bb2b7d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n安装成功后目录下会出现这两个文件以及一个文件夹\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9840397b307449318389310c80957baf.png)\n而一个标准的文件目录格式如下，需要自己再建一个build文件夹，用以存放打包后的代码，这个代码可以由浏览器运行，另外还要创建一个src文件夹，用以存放自己写的代码，src内创建index.js文件作为webpack打包入口文件。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/06016419bb064395a3c1cb6e2ce9dc15.png)\n在index.js写下如下代码：\n\n```js\nfunction add(x, y) {\n    return x + y;\n}\n\nconsole.log(\"hello world\")\n```\n然后再测试打包效果，webpack开发环境打包指令如下：\n\n```shell\nwebpack ./src/index.js -o ./build/built --mode=development\n```\n该指令的意思是：webpack以./src/index.js作为入口文件，-o是输出的意思，即打包输出到./build/built目录，且整体打包环境是开发环境。\n\n运行后在build目录下会出现一个文件夹built\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c8b5da97db004a44915f17c358e7336b.png)\n其中main.js内容如下,因为是开发环境打包，因此并没有压缩代码量的效果\n```javascript\n/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ (() => {\n\neval(\"function add(x, y) {\\r\\n    return x + y;\\r\\n}\\r\\n\\r\\nconsole.log(\\\"hello world\\\")\\n\\n//# sourceURL=webpack://test/./src/index.js?\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval devtool is used.\n/******/ \tvar __webpack_exports__ = {};\n/******/ \t__webpack_modules__[\"./src/index.js\"]();\n/******/ \t\n/******/ })()\n;\n```\n然后我们就可以试试生产环境下的打包，结果只有一个输出语句，因为那个add函数没有调用，因此直接省略掉了，注释也没了，可见打包还是很节约空间的。\n\n```shell\nwebpack ./src/index.js -o ./build/built --mode=production\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7ddccae1256e498ebcf8c0669abf5df7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 三：打包样式资源\n在打包前，需要现在项目根目录建一个webpack.config.js文件，该文件作为webpack的配置文件而存在，作用是指示webpack如何运行，即运行webpack指令时，会加载里面的配置。里面使用commonjs语法(目前所有构建工具都是基于nodejs平台运行，模块化默认采用commonjs)\n\n下面是webpack.config.js文件的基础配置格式：\n\n```javascript\n// resolve用来拼接绝对路径的方法\nconst { resolve } = require(\"path\");\n\nmodule.exports = {\n    // 入口起点\n    entry: \"./src/index.js\",\n    // 输出\n    output: {\n        // 输出文件名\n        filename: \"built.js\",\n        // 输出路径\n        // __dirname 是nodejs的变量，代表当前文件的目录绝对路径\n        path: resolve(__dirname, \"build\")\n    },\n    // loader的配置\n    module: {\n        rules: [\n            // 详细loader配置\n        ]\n    },\n    // plugins的配置\n    plugins: [\n        // 详细plugins的配置\n    ],\n    // 打包模式\n    mode: \"development\"  // mode: \"production\"\n}\n```\n\n而打包样式资源需要使用css-loader与style-loader，其中css-loader会将css文件变成commonjs模块加载到js中，里面内容是样式字符串。而style-loader会创建style标签，将js中的样式资源插入进去，添加到head中生效。使用时需要在webpack.config.js需要进行配置，只要改变module的内容就可以了，如下：\n\n```javascript\n    module: {\n        rules: [\n            // 详细loader配置\n            {\n                // 匹配哪些文件\n                test: /\\.css$/,\n                // 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上\n                use: [\n                    \"style-loader\",\n                    \"css-loader\"\n                ]\n            }\n        ]\n    },\n```\n配置好后就是下载css-loader与style-loader了：\n\n```shell\nnpm i css-loader style-loader -D\n```\n下载好后就可以打包样式文件了，在src目录新建css目录，创建文件index.css，写下如下代码：\n\n```css\nhtml {\n    height: 100%;\n    background-color: aqua;\n}\n```\n在index.js中引入：\n\n```javascript\nimport \"./css/index.css\"\n\nfunction add(x, y) {\n    return x + y;\n}\n\nconsole.log(\"hello world\")\n```\n命令行运行指令：\n\n```shell\nwebpack\n```\n运行后在build目录下生成built.js文件，在build目录新建index.html，引入built.js用以测试效果。\n\n代码总览如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4de0399754ef4602b09747b55f0cd955.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n运行index.html文件：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/e70880c7bb044ac78d9682a547c99392.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n这是打包css文件，如果要打包less文件的话，还需要进行配置。首先是配置webpack.config.js，只需要在modules中添加一项less的loader配置就可以了：\n\n```javascript\n    module: {\n        rules: [\n            // 详细loader配置\n            {\n                // 匹配哪些文件\n                test: /\\.css$/,\n                // 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上\n                use: [\n                    \"style-loader\",\n                    \"css-loader\"\n                ]\n            },\n            {\n                // 配置less的loader\n                test: /\\.less$/,\n                use: [\n                    \"style-loader\",\n                    \"css-loader\",\n                    // less-loader能将less文件编译成css文件\n                    \"less-loader\"\n                ]\n            }\n        ]\n    },\n```\n然后下载less-loader与less：\n\n```shell\nnpm i less-loader less -D\n```\n然后就可以进行测试了，在css文件夹里建一个test.less文件，写下以下代码：\n\n```css\nbody {\n    height: 500px;\n    background-color: bisque;\n    div {\n        color: red;\n    }\n}\n```\n然后在index.js中引入：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8d8ba67296a1475bb3340f2e691ca396.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n打开index.html结果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d1a9890bacbf4418a9a6545609669206.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 四：打包html资源\n处理html资源就需要用到插件而不是loader了：\n\n```shell\nnpm i html-webpack-plugin -D\n```\n在src下新建一个index.html文件，我们可以在index.html里面写html代码，打包的时候，webpack会将index.html复制一份到build目录，并把打包的资源通过标签的方式引入到index.html中。\n\nwebpack.config.js中增加的配置如下：\n\n```javascript\n    // plugins的配置\n    plugins: [\n        // html-webpack-plugin插件：会自动创建一个空的html文件，并自动引入打包输出的所有资源(js/css)\n        new HtmlWebpackPlugin({\n            // 复制\"./src/index.html\"文件，并自动引入打包输出的所有资源(js/css)\n            template: \"./src/index.html\"\n        })\n    ],\n```\n\n代码总览如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/40148573859d4f918579303060ba4661.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n运行结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/178ab7441e4e432c881fe43c50d2fb1f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 五：打包图片资源\n打包图片资源依赖两个loader：url-loader与file-loader：\n\n```shell\nnpm i url-loader file-loader -D\n```\nurl-loader内部继承了file-loader，与file-loader不同的是：\n+ url-loader可以把较小的图片转化成base64数据，从而减少对图片资源的http请求。同时打包文件也会变大；\n+ 当图片大小超过设置的限制（limit）时，默认采用file-loader进行加载。fallback默认值“file-loader”；\n+ 所有file-loader的属性，url-loader均可以使用。例如publicPath设置图片公共地址（图片部署到CDN服务器）\n\n现在就可以开始准备了，先在src目录下新建一个index.html，代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <div>我是index.html</div>\n    <div class=\"img1\"></div>\n    <div class=\"img2\"></div>\n    <div class=\"img3\"></div>\n</body>\n</html>\n```\n再准备三张图片以备打包，在src中新建image目录，图片如下，注意第三张logo的大小是3.92kb，而另外两张均大于100kb，他们在后续打包时会有不同。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4ea9c647190a44ef9b439e412436e9ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n再在css目录下的test.less写下：\n\n```css\nbody {\n    background-color: bisque;\n\n    .img1 {\n        width: 100px;\n        height: 100px;\n        background-image: url(\"../image/10.png\");\n        background-repeat: no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .img2 {\n        width: 100px;\n        height: 200px;\n        background-image: url(\"../image/15.jpg\");\n        background-repeat: no-repeat;\n        background-size: 100% 100%;\n    }\n\n    .img3 {\n        width: 50px;\n        height: 50px;\n        background-image: url(\"../image/logo.png\");\n        background-repeat: no-repeat;\n        background-size: 100% 100%;\n    }\n}\n```\nwebpack.config.js的loader配置如下：\n\n```javascript\n// loader的配置\n    module: {\n        rules: [\n            {\n                // 匹配哪些文件\n                test: /\\.css$/,\n                // 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上\n                use: [\n                    \"style-loader\",\n                    \"css-loader\"\n                ]\n            },\n            {\n                // 配置less的loader\n                test: /\\.less$/,\n                use: [\n                    \"style-loader\", \n                    // less-loader能将less文件编译成css文件\n                    \"css-loader\",\n                    \"less-loader\",\n                ]\n            },\n            {\n                // 处理图片资源\n                test: /\\.(jpg|png|gif)$/,\n                use: [\n                    {\n                        loader: \"url-loader\",\n                        options: {\n                            // 图片大小限制，小于该值则会被处理为base64编码，优点是减少请求数量，缺点是打包体积会更大\n                            limit: 8 * 1024,  // 单位是b, 一般用kb描述，因此乘以1024\n                            esModule:false\n                        },\n                    }\n                ],\n                type: 'javascript/auto',\n            }\n        ],\n    },\n```\n\n代码总览如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4fb242bd52dc4389bc2837d3ee96f454.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n命令行输入webpack命令开始打包，打包后build目录如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/15886221516f45859e27ce1f2c2bd55c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n可见打包后只剩下了两张图片，打开index.html，因为logo小于8kb，因此被处理为base64编码。而图片名称也被修改了，这是webpack根据图片内容生成的唯一hash值，避免打包时出现同名图片。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a7739aaa91a34648b049a0beabab55fc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n上述示例是从css中引入图片资源，事实上我们还有可能会在html中引用图片资源，现修改index.html为以下代码：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <div>我是index.html</div>\n    <div class=\"img1\"></div>\n    <div class=\"img2\"></div>\n    <div class=\"img3\"></div>\n    <img src=\"./image/10.png\">\n    <img src=\"./image/logo.png\">\n</body>\n</html>\n```\n如果要打包这种图片的话，需要额外处理，即下载html-loader，html-loader专门处理html文件里引入的图片，它能引入图片交给url-loader进行处理。\n\n```shell\nnpm i html-loader -D\n```\nwebpack.config.js的loader配置如下：\n\n```javascript\n    // loader的配置\n    module: {\n        rules: [\n            {\n                // 匹配哪些文件\n                test: /\\.css$/,\n                // 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上\n                use: [\n                    \"style-loader\",\n                    \"css-loader\"\n                ]\n            },\n            {\n                // 配置less的loader\n                test: /\\.less$/,\n                use: [\n                    \"style-loader\", \n                    // less-loader能将less文件编译成css文件\n                    \"css-loader\",\n                    \"less-loader\",\n                ]\n            },\n            {\n                // 处理css中的图片资源\n                test: /\\.(jpg|png|gif)$/,\n                use: [\n                    {\n                        loader: \"url-loader\",\n                        options: {\n                            // 图片大小限制，小于该值则会被处理为base64编码，优点是减少请求数量，缺点是图片体积会更大\n                            limit: 8 * 1024,  // 单位是b, 一般用kb描述，因此乘以1024\n                            // url-loader默认使用es6模块化解析，而html-loader引入图片是commonjs，因此需要改为false\n                            esModule: false,\n                            // name: '[hash:10].[ext]'  // 自定义打包后的图片名，即hash取前十位，后缀名不变\n                        },\n                    }\n                ],\n                type: 'javascript/auto',\n            },\n            {\n                // 处理html中的图片资源\n                test: /\\.html$/,\n                loader: \"html-loader\"\n            }\n        ],\n    },\n```\n代码总览如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7f648bec8f0e483b9543311f3dae9982.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n运行结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/97d7e8f814614bbfa56abbc62e818fa7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","slug":"javascript/Webpack5打包","published":1,"updated":"2021-12-03T14:58:03.119Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958ce0057asdab46n0jf4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：webpack五个核心概念\"><a href=\"#一：webpack五个核心概念\" class=\"headerlink\" title=\"一：webpack五个核心概念\"></a>一：webpack五个核心概念</h1><ul>\n<li><strong>Entry：</strong> 入口(Entry)指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图。</li>\n<li><strong>Output：</strong> 输出(Output)指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。</li>\n<li><strong>Loader：</strong> Loader 让 webpack 能 够 去 处 理 那 些 非 JavaScript 文 件 (webpack 自 身 只 理 解 JavaScript) </li>\n<li><strong>Plugins：</strong> 插件(Plugins)可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩， 一直到重新定义环境中的变量等。</li>\n<li><strong>Mode：</strong> 模式(Mode)指示 webpack 使用相应模式的配置。</li>\n</ul>\n<p>mode的两个选项：<br>| 选项 | 描述 | 特点 |<br>|–|–|–|<br>| development | 会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 development。<br>启用 NamedChunksPlugin 和 NamedModulesPlugin。 | 能让代码本地调试运行的环境 |<br>| production | 会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 production。<br>启用 FlagDependencyUsagePlugin, FlagIncludedChunksPlugin, ModuleConcatenationPlugin, NoEmitOnErrorsPlugin, OccurrenceOrderPlugin, SideEffectsFlagPlugin 和 TerserPlugin。 | 能让代码优化上线运行的环境 |</p>\n<h1 id=\"二：webpack初体验\"><a href=\"#二：webpack初体验\" class=\"headerlink\" title=\"二：webpack初体验\"></a>二：webpack初体验</h1><p>进入指定目录，输入命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init --yes</span><br></pre></td></tr></table></figure>\n<p><code>npm init</code>是初始化npm环境的命令，而<code>--yes</code>表示全部配置项为默认值。</p>\n<p>然后全局安装webpack：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack webpack-cli -g</span><br></pre></td></tr></table></figure>\n\n<p>然后本地安装webpack:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack-cli -D</span><br></pre></td></tr></table></figure>\n<p>安装成功的标志：<br><img src=\"https://img-blog.csdnimg.cn/94b07b4ec0cf47439bea4f7927bb2b7d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>安装成功后目录下会出现这两个文件以及一个文件夹<br><img src=\"https://img-blog.csdnimg.cn/9840397b307449318389310c80957baf.png\" alt=\"在这里插入图片描述\"><br>而一个标准的文件目录格式如下，需要自己再建一个build文件夹，用以存放打包后的代码，这个代码可以由浏览器运行，另外还要创建一个src文件夹，用以存放自己写的代码，src内创建index.js文件作为webpack打包入口文件。<br><img src=\"https://img-blog.csdnimg.cn/06016419bb064395a3c1cb6e2ce9dc15.png\" alt=\"在这里插入图片描述\"><br>在index.js写下如下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>然后再测试打包效果，webpack开发环境打包指令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webpack ./src/index.js -o ./build/built --mode=development</span><br></pre></td></tr></table></figure>\n<p>该指令的意思是：webpack以./src/index.js作为入口文件，-o是输出的意思，即打包输出到./build/built目录，且整体打包环境是开发环境。</p>\n<p>运行后在build目录下会出现一个文件夹built<br><img src=\"https://img-blog.csdnimg.cn/c8b5da97db004a44915f17c358e7336b.png\" alt=\"在这里插入图片描述\"><br>其中main.js内容如下,因为是开发环境打包，因此并没有压缩代码量的效果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * ATTENTION: The &quot;eval&quot; devtool has been used (maybe by default in mode: &quot;development&quot;).</span></span><br><span class=\"line\"><span class=\"comment\"> * This devtool is neither made for production nor for readable output files.</span></span><br><span class=\"line\"><span class=\"comment\"> * It uses &quot;eval()&quot; calls to create a separate source file in the browser devtools.</span></span><br><span class=\"line\"><span class=\"comment\"> * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)</span></span><br><span class=\"line\"><span class=\"comment\"> * or disable the default devtool with &quot;devtool: false&quot;.</span></span><br><span class=\"line\"><span class=\"comment\"> * If you are looking for production-ready output files, see mode: &quot;production&quot; (https://webpack.js.org/configuration/mode/).</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> (<span class=\"function\">() =&gt;</span> &#123; <span class=\"comment\">// webpackBootstrap</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"keyword\">var</span> __webpack_modules__ = (&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/***/</span> <span class=\"string\">&quot;./src/index.js&quot;</span>:</span><br><span class=\"line\"><span class=\"comment\">/*!**********************!*\\</span></span><br><span class=\"line\"><span class=\"comment\">  !*** ./src/index.js ***!</span></span><br><span class=\"line\"><span class=\"comment\">  \\**********************/</span></span><br><span class=\"line\"><span class=\"comment\">/***/</span> (<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">eval</span>(<span class=\"string\">&quot;function add(x, y) &#123;\\r\\n    return x + y;\\r\\n&#125;\\r\\n\\r\\nconsole.log(\\&quot;hello world\\&quot;)\\n\\n//# sourceURL=webpack://test/./src/index.js?&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/***/</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t&#125;);</span><br><span class=\"line\"><span class=\"comment\">/************************************************************************/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t</span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"comment\">// startup</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"comment\">// Load entry module and return exports</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"comment\">// This entry module can&#x27;t be inlined because the eval devtool is used.</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"keyword\">var</span> __webpack_exports__ = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t__webpack_modules__[<span class=\"string\">&quot;./src/index.js&quot;</span>]();</span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t</span><br><span class=\"line\"><span class=\"comment\">/******/</span> &#125;)()</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure>\n<p>然后我们就可以试试生产环境下的打包，结果只有一个输出语句，因为那个add函数没有调用，因此直接省略掉了，注释也没了，可见打包还是很节约空间的。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webpack ./src/index.js -o ./build/built --mode=production</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/7ddccae1256e498ebcf8c0669abf5df7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：打包样式资源\"><a href=\"#三：打包样式资源\" class=\"headerlink\" title=\"三：打包样式资源\"></a>三：打包样式资源</h1><p>在打包前，需要现在项目根目录建一个webpack.config.js文件，该文件作为webpack的配置文件而存在，作用是指示webpack如何运行，即运行webpack指令时，会加载里面的配置。里面使用commonjs语法(目前所有构建工具都是基于nodejs平台运行，模块化默认采用commonjs)</p>\n<p>下面是webpack.config.js文件的基础配置格式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// resolve用来拼接绝对路径的方法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;path&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 入口起点</span></span><br><span class=\"line\">    <span class=\"attr\">entry</span>: <span class=\"string\">&quot;./src/index.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 输出</span></span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 输出文件名</span></span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&quot;built.js&quot;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 输出路径</span></span><br><span class=\"line\">        <span class=\"comment\">// __dirname 是nodejs的变量，代表当前文件的目录绝对路径</span></span><br><span class=\"line\">        <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&quot;build&quot;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// loader的配置</span></span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            <span class=\"comment\">// 详细loader配置</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// plugins的配置</span></span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"comment\">// 详细plugins的配置</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"comment\">// 打包模式</span></span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&quot;development&quot;</span>  <span class=\"comment\">// mode: &quot;production&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>而打包样式资源需要使用css-loader与style-loader，其中css-loader会将css文件变成commonjs模块加载到js中，里面内容是样式字符串。而style-loader会创建style标签，将js中的样式资源插入进去，添加到head中生效。使用时需要在webpack.config.js需要进行配置，只要改变module的内容就可以了，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">        <span class=\"comment\">// 详细loader配置</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 匹配哪些文件</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上</span></span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>配置好后就是下载css-loader与style-loader了：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i css-loader style-loader -D</span><br></pre></td></tr></table></figure>\n<p>下载好后就可以打包样式文件了，在src目录新建css目录，创建文件index.css，写下如下代码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: aqua;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在index.js中引入：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;./css/index.css&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>命令行运行指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webpack</span><br></pre></td></tr></table></figure>\n<p>运行后在build目录下生成built.js文件，在build目录新建index.html，引入built.js用以测试效果。</p>\n<p>代码总览如下：<br><img src=\"https://img-blog.csdnimg.cn/4de0399754ef4602b09747b55f0cd955.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>运行index.html文件：<br><img src=\"https://img-blog.csdnimg.cn/e70880c7bb044ac78d9682a547c99392.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>这是打包css文件，如果要打包less文件的话，还需要进行配置。首先是配置webpack.config.js，只需要在modules中添加一项less的loader配置就可以了：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">        <span class=\"comment\">// 详细loader配置</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 匹配哪些文件</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上</span></span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 配置less的loader</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"comment\">// less-loader能将less文件编译成css文件</span></span><br><span class=\"line\">                <span class=\"string\">&quot;less-loader&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>然后下载less-loader与less：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i less-loader less -D</span><br></pre></td></tr></table></figure>\n<p>然后就可以进行测试了，在css文件夹里建一个test.less文件，写下以下代码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: bisque;</span><br><span class=\"line\">    <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在index.js中引入：<br><img src=\"https://img-blog.csdnimg.cn/8d8ba67296a1475bb3340f2e691ca396.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>打开index.html结果如下：<br><img src=\"https://img-blog.csdnimg.cn/d1a9890bacbf4418a9a6545609669206.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：打包html资源\"><a href=\"#四：打包html资源\" class=\"headerlink\" title=\"四：打包html资源\"></a>四：打包html资源</h1><p>处理html资源就需要用到插件而不是loader了：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i html-webpack-plugin -D</span><br></pre></td></tr></table></figure>\n<p>在src下新建一个index.html文件，我们可以在index.html里面写html代码，打包的时候，webpack会将index.html复制一份到build目录，并把打包的资源通过标签的方式引入到index.html中。</p>\n<p>webpack.config.js中增加的配置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// plugins的配置</span></span><br><span class=\"line\"><span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// html-webpack-plugin插件：会自动创建一个空的html文件，并自动引入打包输出的所有资源(js/css)</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 复制&quot;./src/index.html&quot;文件，并自动引入打包输出的所有资源(js/css)</span></span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">&quot;./src/index.html&quot;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<p>代码总览如下：<br><img src=\"https://img-blog.csdnimg.cn/40148573859d4f918579303060ba4661.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>运行结果：<br><img src=\"https://img-blog.csdnimg.cn/178ab7441e4e432c881fe43c50d2fb1f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"五：打包图片资源\"><a href=\"#五：打包图片资源\" class=\"headerlink\" title=\"五：打包图片资源\"></a>五：打包图片资源</h1><p>打包图片资源依赖两个loader：url-loader与file-loader：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i url-loader file-loader -D</span><br></pre></td></tr></table></figure>\n<p>url-loader内部继承了file-loader，与file-loader不同的是：</p>\n<ul>\n<li>url-loader可以把较小的图片转化成base64数据，从而减少对图片资源的http请求。同时打包文件也会变大；</li>\n<li>当图片大小超过设置的限制（limit）时，默认采用file-loader进行加载。fallback默认值“file-loader”；</li>\n<li>所有file-loader的属性，url-loader均可以使用。例如publicPath设置图片公共地址（图片部署到CDN服务器）</li>\n</ul>\n<p>现在就可以开始准备了，先在src目录下新建一个index.html，代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是index.html<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再准备三张图片以备打包，在src中新建image目录，图片如下，注意第三张logo的大小是3.92kb，而另外两张均大于100kb，他们在后续打包时会有不同。<br><img src=\"https://img-blog.csdnimg.cn/4ea9c647190a44ef9b439e412436e9ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>再在css目录下的test.less写下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: bisque;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.img1</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&quot;../image/10.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">        <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.img2</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&quot;../image/15.jpg&quot;</span>);</span><br><span class=\"line\">        <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">        <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.img3</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&quot;../image/logo.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">        <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>webpack.config.js的loader配置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// loader的配置</span></span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 匹配哪些文件</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">                <span class=\"comment\">// 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上</span></span><br><span class=\"line\">                use: [</span><br><span class=\"line\">                    <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;css-loader&quot;</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 配置less的loader</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">                use: [</span><br><span class=\"line\">                    <span class=\"string\">&quot;style-loader&quot;</span>, </span><br><span class=\"line\">                    <span class=\"comment\">// less-loader能将less文件编译成css文件</span></span><br><span class=\"line\">                    <span class=\"string\">&quot;css-loader&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;less-loader&quot;</span>,</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 处理图片资源</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(jpg|png|gif)$/</span>,</span><br><span class=\"line\">                use: [</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"attr\">loader</span>: <span class=\"string\">&quot;url-loader&quot;</span>,</span><br><span class=\"line\">                        <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                            <span class=\"comment\">// 图片大小限制，小于该值则会被处理为base64编码，优点是减少请求数量，缺点是打包体积会更大</span></span><br><span class=\"line\">                            <span class=\"attr\">limit</span>: <span class=\"number\">8</span> * <span class=\"number\">1024</span>,  <span class=\"comment\">// 单位是b, 一般用kb描述，因此乘以1024</span></span><br><span class=\"line\">                            <span class=\"attr\">esModule</span>:<span class=\"literal\">false</span></span><br><span class=\"line\">                        &#125;,</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ],</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">&#x27;javascript/auto&#x27;</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>代码总览如下：<br><img src=\"https://img-blog.csdnimg.cn/4fb242bd52dc4389bc2837d3ee96f454.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>命令行输入webpack命令开始打包，打包后build目录如下：<br><img src=\"https://img-blog.csdnimg.cn/15886221516f45859e27ce1f2c2bd55c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>可见打包后只剩下了两张图片，打开index.html，因为logo小于8kb，因此被处理为base64编码。而图片名称也被修改了，这是webpack根据图片内容生成的唯一hash值，避免打包时出现同名图片。<br><img src=\"https://img-blog.csdnimg.cn/a7739aaa91a34648b049a0beabab55fc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>上述示例是从css中引入图片资源，事实上我们还有可能会在html中引用图片资源，现修改index.html为以下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是index.html<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./image/10.png&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./image/logo.png&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如果要打包这种图片的话，需要额外处理，即下载html-loader，html-loader专门处理html文件里引入的图片，它能引入图片交给url-loader进行处理。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i html-loader -D</span><br></pre></td></tr></table></figure>\n<p>webpack.config.js的loader配置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// loader的配置</span></span><br><span class=\"line\"><span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 匹配哪些文件</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上</span></span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 配置less的loader</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>, </span><br><span class=\"line\">                <span class=\"comment\">// less-loader能将less文件编译成css文件</span></span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;less-loader&quot;</span>,</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理css中的图片资源</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(jpg|png|gif)$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"attr\">loader</span>: <span class=\"string\">&quot;url-loader&quot;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 图片大小限制，小于该值则会被处理为base64编码，优点是减少请求数量，缺点是图片体积会更大</span></span><br><span class=\"line\">                        <span class=\"attr\">limit</span>: <span class=\"number\">8</span> * <span class=\"number\">1024</span>,  <span class=\"comment\">// 单位是b, 一般用kb描述，因此乘以1024</span></span><br><span class=\"line\">                        <span class=\"comment\">// url-loader默认使用es6模块化解析，而html-loader引入图片是commonjs，因此需要改为false</span></span><br><span class=\"line\">                        <span class=\"attr\">esModule</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                        <span class=\"comment\">// name: &#x27;[hash:10].[ext]&#x27;  // 自定义打包后的图片名，即hash取前十位，后缀名不变</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;javascript/auto&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理html中的图片资源</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.html$/</span>,</span><br><span class=\"line\">            loader: <span class=\"string\">&quot;html-loader&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>代码总览如下：<br><img src=\"https://img-blog.csdnimg.cn/7f648bec8f0e483b9543311f3dae9982.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>运行结果：<br><img src=\"https://img-blog.csdnimg.cn/97d7e8f814614bbfa56abbc62e818fa7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：webpack五个核心概念\"><a href=\"#一：webpack五个核心概念\" class=\"headerlink\" title=\"一：webpack五个核心概念\"></a>一：webpack五个核心概念</h1><ul>\n<li><strong>Entry：</strong> 入口(Entry)指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图。</li>\n<li><strong>Output：</strong> 输出(Output)指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。</li>\n<li><strong>Loader：</strong> Loader 让 webpack 能 够 去 处 理 那 些 非 JavaScript 文 件 (webpack 自 身 只 理 解 JavaScript) </li>\n<li><strong>Plugins：</strong> 插件(Plugins)可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩， 一直到重新定义环境中的变量等。</li>\n<li><strong>Mode：</strong> 模式(Mode)指示 webpack 使用相应模式的配置。</li>\n</ul>\n<p>mode的两个选项：<br>| 选项 | 描述 | 特点 |<br>|–|–|–|<br>| development | 会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 development。<br>启用 NamedChunksPlugin 和 NamedModulesPlugin。 | 能让代码本地调试运行的环境 |<br>| production | 会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 production。<br>启用 FlagDependencyUsagePlugin, FlagIncludedChunksPlugin, ModuleConcatenationPlugin, NoEmitOnErrorsPlugin, OccurrenceOrderPlugin, SideEffectsFlagPlugin 和 TerserPlugin。 | 能让代码优化上线运行的环境 |</p>\n<h1 id=\"二：webpack初体验\"><a href=\"#二：webpack初体验\" class=\"headerlink\" title=\"二：webpack初体验\"></a>二：webpack初体验</h1><p>进入指定目录，输入命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init --yes</span><br></pre></td></tr></table></figure>\n<p><code>npm init</code>是初始化npm环境的命令，而<code>--yes</code>表示全部配置项为默认值。</p>\n<p>然后全局安装webpack：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack webpack-cli -g</span><br></pre></td></tr></table></figure>\n\n<p>然后本地安装webpack:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack-cli -D</span><br></pre></td></tr></table></figure>\n<p>安装成功的标志：<br><img src=\"https://img-blog.csdnimg.cn/94b07b4ec0cf47439bea4f7927bb2b7d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>安装成功后目录下会出现这两个文件以及一个文件夹<br><img src=\"https://img-blog.csdnimg.cn/9840397b307449318389310c80957baf.png\" alt=\"在这里插入图片描述\"><br>而一个标准的文件目录格式如下，需要自己再建一个build文件夹，用以存放打包后的代码，这个代码可以由浏览器运行，另外还要创建一个src文件夹，用以存放自己写的代码，src内创建index.js文件作为webpack打包入口文件。<br><img src=\"https://img-blog.csdnimg.cn/06016419bb064395a3c1cb6e2ce9dc15.png\" alt=\"在这里插入图片描述\"><br>在index.js写下如下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>然后再测试打包效果，webpack开发环境打包指令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webpack ./src/index.js -o ./build/built --mode=development</span><br></pre></td></tr></table></figure>\n<p>该指令的意思是：webpack以./src/index.js作为入口文件，-o是输出的意思，即打包输出到./build/built目录，且整体打包环境是开发环境。</p>\n<p>运行后在build目录下会出现一个文件夹built<br><img src=\"https://img-blog.csdnimg.cn/c8b5da97db004a44915f17c358e7336b.png\" alt=\"在这里插入图片描述\"><br>其中main.js内容如下,因为是开发环境打包，因此并没有压缩代码量的效果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * ATTENTION: The &quot;eval&quot; devtool has been used (maybe by default in mode: &quot;development&quot;).</span></span><br><span class=\"line\"><span class=\"comment\"> * This devtool is neither made for production nor for readable output files.</span></span><br><span class=\"line\"><span class=\"comment\"> * It uses &quot;eval()&quot; calls to create a separate source file in the browser devtools.</span></span><br><span class=\"line\"><span class=\"comment\"> * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)</span></span><br><span class=\"line\"><span class=\"comment\"> * or disable the default devtool with &quot;devtool: false&quot;.</span></span><br><span class=\"line\"><span class=\"comment\"> * If you are looking for production-ready output files, see mode: &quot;production&quot; (https://webpack.js.org/configuration/mode/).</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> (<span class=\"function\">() =&gt;</span> &#123; <span class=\"comment\">// webpackBootstrap</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"keyword\">var</span> __webpack_modules__ = (&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/***/</span> <span class=\"string\">&quot;./src/index.js&quot;</span>:</span><br><span class=\"line\"><span class=\"comment\">/*!**********************!*\\</span></span><br><span class=\"line\"><span class=\"comment\">  !*** ./src/index.js ***!</span></span><br><span class=\"line\"><span class=\"comment\">  \\**********************/</span></span><br><span class=\"line\"><span class=\"comment\">/***/</span> (<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">eval</span>(<span class=\"string\">&quot;function add(x, y) &#123;\\r\\n    return x + y;\\r\\n&#125;\\r\\n\\r\\nconsole.log(\\&quot;hello world\\&quot;)\\n\\n//# sourceURL=webpack://test/./src/index.js?&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/***/</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t&#125;);</span><br><span class=\"line\"><span class=\"comment\">/************************************************************************/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t</span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"comment\">// startup</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"comment\">// Load entry module and return exports</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"comment\">// This entry module can&#x27;t be inlined because the eval devtool is used.</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t<span class=\"keyword\">var</span> __webpack_exports__ = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t__webpack_modules__[<span class=\"string\">&quot;./src/index.js&quot;</span>]();</span><br><span class=\"line\"><span class=\"comment\">/******/</span> \t</span><br><span class=\"line\"><span class=\"comment\">/******/</span> &#125;)()</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure>\n<p>然后我们就可以试试生产环境下的打包，结果只有一个输出语句，因为那个add函数没有调用，因此直接省略掉了，注释也没了，可见打包还是很节约空间的。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webpack ./src/index.js -o ./build/built --mode=production</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/7ddccae1256e498ebcf8c0669abf5df7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：打包样式资源\"><a href=\"#三：打包样式资源\" class=\"headerlink\" title=\"三：打包样式资源\"></a>三：打包样式资源</h1><p>在打包前，需要现在项目根目录建一个webpack.config.js文件，该文件作为webpack的配置文件而存在，作用是指示webpack如何运行，即运行webpack指令时，会加载里面的配置。里面使用commonjs语法(目前所有构建工具都是基于nodejs平台运行，模块化默认采用commonjs)</p>\n<p>下面是webpack.config.js文件的基础配置格式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// resolve用来拼接绝对路径的方法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;path&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 入口起点</span></span><br><span class=\"line\">    <span class=\"attr\">entry</span>: <span class=\"string\">&quot;./src/index.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 输出</span></span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 输出文件名</span></span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&quot;built.js&quot;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 输出路径</span></span><br><span class=\"line\">        <span class=\"comment\">// __dirname 是nodejs的变量，代表当前文件的目录绝对路径</span></span><br><span class=\"line\">        <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&quot;build&quot;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// loader的配置</span></span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            <span class=\"comment\">// 详细loader配置</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// plugins的配置</span></span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">        <span class=\"comment\">// 详细plugins的配置</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"comment\">// 打包模式</span></span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&quot;development&quot;</span>  <span class=\"comment\">// mode: &quot;production&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>而打包样式资源需要使用css-loader与style-loader，其中css-loader会将css文件变成commonjs模块加载到js中，里面内容是样式字符串。而style-loader会创建style标签，将js中的样式资源插入进去，添加到head中生效。使用时需要在webpack.config.js需要进行配置，只要改变module的内容就可以了，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">        <span class=\"comment\">// 详细loader配置</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 匹配哪些文件</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上</span></span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>配置好后就是下载css-loader与style-loader了：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i css-loader style-loader -D</span><br></pre></td></tr></table></figure>\n<p>下载好后就可以打包样式文件了，在src目录新建css目录，创建文件index.css，写下如下代码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: aqua;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在index.js中引入：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;./css/index.css&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>命令行运行指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webpack</span><br></pre></td></tr></table></figure>\n<p>运行后在build目录下生成built.js文件，在build目录新建index.html，引入built.js用以测试效果。</p>\n<p>代码总览如下：<br><img src=\"https://img-blog.csdnimg.cn/4de0399754ef4602b09747b55f0cd955.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>运行index.html文件：<br><img src=\"https://img-blog.csdnimg.cn/e70880c7bb044ac78d9682a547c99392.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>这是打包css文件，如果要打包less文件的话，还需要进行配置。首先是配置webpack.config.js，只需要在modules中添加一项less的loader配置就可以了：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">        <span class=\"comment\">// 详细loader配置</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 匹配哪些文件</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上</span></span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 配置less的loader</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"comment\">// less-loader能将less文件编译成css文件</span></span><br><span class=\"line\">                <span class=\"string\">&quot;less-loader&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>然后下载less-loader与less：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i less-loader less -D</span><br></pre></td></tr></table></figure>\n<p>然后就可以进行测试了，在css文件夹里建一个test.less文件，写下以下代码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: bisque;</span><br><span class=\"line\">    <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在index.js中引入：<br><img src=\"https://img-blog.csdnimg.cn/8d8ba67296a1475bb3340f2e691ca396.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>打开index.html结果如下：<br><img src=\"https://img-blog.csdnimg.cn/d1a9890bacbf4418a9a6545609669206.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：打包html资源\"><a href=\"#四：打包html资源\" class=\"headerlink\" title=\"四：打包html资源\"></a>四：打包html资源</h1><p>处理html资源就需要用到插件而不是loader了：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i html-webpack-plugin -D</span><br></pre></td></tr></table></figure>\n<p>在src下新建一个index.html文件，我们可以在index.html里面写html代码，打包的时候，webpack会将index.html复制一份到build目录，并把打包的资源通过标签的方式引入到index.html中。</p>\n<p>webpack.config.js中增加的配置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// plugins的配置</span></span><br><span class=\"line\"><span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// html-webpack-plugin插件：会自动创建一个空的html文件，并自动引入打包输出的所有资源(js/css)</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 复制&quot;./src/index.html&quot;文件，并自动引入打包输出的所有资源(js/css)</span></span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">&quot;./src/index.html&quot;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<p>代码总览如下：<br><img src=\"https://img-blog.csdnimg.cn/40148573859d4f918579303060ba4661.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>运行结果：<br><img src=\"https://img-blog.csdnimg.cn/178ab7441e4e432c881fe43c50d2fb1f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"五：打包图片资源\"><a href=\"#五：打包图片资源\" class=\"headerlink\" title=\"五：打包图片资源\"></a>五：打包图片资源</h1><p>打包图片资源依赖两个loader：url-loader与file-loader：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i url-loader file-loader -D</span><br></pre></td></tr></table></figure>\n<p>url-loader内部继承了file-loader，与file-loader不同的是：</p>\n<ul>\n<li>url-loader可以把较小的图片转化成base64数据，从而减少对图片资源的http请求。同时打包文件也会变大；</li>\n<li>当图片大小超过设置的限制（limit）时，默认采用file-loader进行加载。fallback默认值“file-loader”；</li>\n<li>所有file-loader的属性，url-loader均可以使用。例如publicPath设置图片公共地址（图片部署到CDN服务器）</li>\n</ul>\n<p>现在就可以开始准备了，先在src目录下新建一个index.html，代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是index.html<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再准备三张图片以备打包，在src中新建image目录，图片如下，注意第三张logo的大小是3.92kb，而另外两张均大于100kb，他们在后续打包时会有不同。<br><img src=\"https://img-blog.csdnimg.cn/4ea9c647190a44ef9b439e412436e9ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>再在css目录下的test.less写下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: bisque;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.img1</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&quot;../image/10.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">        <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.img2</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&quot;../image/15.jpg&quot;</span>);</span><br><span class=\"line\">        <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">        <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.img3</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&quot;../image/logo.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">        <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>webpack.config.js的loader配置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// loader的配置</span></span><br><span class=\"line\">    <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 匹配哪些文件</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">                <span class=\"comment\">// 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上</span></span><br><span class=\"line\">                use: [</span><br><span class=\"line\">                    <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;css-loader&quot;</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 配置less的loader</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">                use: [</span><br><span class=\"line\">                    <span class=\"string\">&quot;style-loader&quot;</span>, </span><br><span class=\"line\">                    <span class=\"comment\">// less-loader能将less文件编译成css文件</span></span><br><span class=\"line\">                    <span class=\"string\">&quot;css-loader&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;less-loader&quot;</span>,</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 处理图片资源</span></span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(jpg|png|gif)$/</span>,</span><br><span class=\"line\">                use: [</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"attr\">loader</span>: <span class=\"string\">&quot;url-loader&quot;</span>,</span><br><span class=\"line\">                        <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                            <span class=\"comment\">// 图片大小限制，小于该值则会被处理为base64编码，优点是减少请求数量，缺点是打包体积会更大</span></span><br><span class=\"line\">                            <span class=\"attr\">limit</span>: <span class=\"number\">8</span> * <span class=\"number\">1024</span>,  <span class=\"comment\">// 单位是b, 一般用kb描述，因此乘以1024</span></span><br><span class=\"line\">                            <span class=\"attr\">esModule</span>:<span class=\"literal\">false</span></span><br><span class=\"line\">                        &#125;,</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ],</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">&#x27;javascript/auto&#x27;</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>代码总览如下：<br><img src=\"https://img-blog.csdnimg.cn/4fb242bd52dc4389bc2837d3ee96f454.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>命令行输入webpack命令开始打包，打包后build目录如下：<br><img src=\"https://img-blog.csdnimg.cn/15886221516f45859e27ce1f2c2bd55c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>可见打包后只剩下了两张图片，打开index.html，因为logo小于8kb，因此被处理为base64编码。而图片名称也被修改了，这是webpack根据图片内容生成的唯一hash值，避免打包时出现同名图片。<br><img src=\"https://img-blog.csdnimg.cn/a7739aaa91a34648b049a0beabab55fc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>上述示例是从css中引入图片资源，事实上我们还有可能会在html中引用图片资源，现修改index.html为以下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是index.html<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./image/10.png&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./image/logo.png&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如果要打包这种图片的话，需要额外处理，即下载html-loader，html-loader专门处理html文件里引入的图片，它能引入图片交给url-loader进行处理。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i html-loader -D</span><br></pre></td></tr></table></figure>\n<p>webpack.config.js的loader配置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// loader的配置</span></span><br><span class=\"line\"><span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 匹配哪些文件</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 使用哪些loader进行处理,use数组的执行顺序是从右往左，从下到上</span></span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 配置less的loader</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                <span class=\"string\">&quot;style-loader&quot;</span>, </span><br><span class=\"line\">                <span class=\"comment\">// less-loader能将less文件编译成css文件</span></span><br><span class=\"line\">                <span class=\"string\">&quot;css-loader&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;less-loader&quot;</span>,</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理css中的图片资源</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(jpg|png|gif)$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"attr\">loader</span>: <span class=\"string\">&quot;url-loader&quot;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 图片大小限制，小于该值则会被处理为base64编码，优点是减少请求数量，缺点是图片体积会更大</span></span><br><span class=\"line\">                        <span class=\"attr\">limit</span>: <span class=\"number\">8</span> * <span class=\"number\">1024</span>,  <span class=\"comment\">// 单位是b, 一般用kb描述，因此乘以1024</span></span><br><span class=\"line\">                        <span class=\"comment\">// url-loader默认使用es6模块化解析，而html-loader引入图片是commonjs，因此需要改为false</span></span><br><span class=\"line\">                        <span class=\"attr\">esModule</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                        <span class=\"comment\">// name: &#x27;[hash:10].[ext]&#x27;  // 自定义打包后的图片名，即hash取前十位，后缀名不变</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;javascript/auto&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理html中的图片资源</span></span><br><span class=\"line\">            <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.html$/</span>,</span><br><span class=\"line\">            loader: <span class=\"string\">&quot;html-loader&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>代码总览如下：<br><img src=\"https://img-blog.csdnimg.cn/7f648bec8f0e483b9543311f3dae9982.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>运行结果：<br><img src=\"https://img-blog.csdnimg.cn/97d7e8f814614bbfa56abbc62e818fa7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"sql之约束、事务与视图","date":"2021-09-28T11:43:03.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/46.jpg","_content":"\n# 一：约束\n```\n含义：一种限制，用于限制表中的数据，为了保证表中数据的准确和可靠性\n分类：六大约束\n    NOT NULL：非空约束，用于保证该字段的值不能为空\n    DEFAULT：默认约束，用于保证该字段有默认值\n    PRIMARY KEY：主键约束，用于保证该字段唯一且非空\n    UNIQUE：唯一约束，用于保证该字段具有唯一性，但可以为空\n    CHECK：检查约束（mysql中不支持，如果写了也不会报错）\n    FOREIGN KEY：外键约束，用于限制两个表的关系，保证该字段的值必须来自于主表关联列的值\n\n添加约束的时机：\n    1. 创建表时\n    2. 修改表时\n    \n约束的添加分类：\n    列级约束：六大约束语法都支持，但外键约束没有效果\n    表级约束：除了非空和默认约束，其他都支持\n```\n事实上对于外键约束，有的大佬有一些看法，如下，大佬的csdn博客账号是：[去吧猫头夜鹰](https://blog.csdn.net/qq_25274377)\n\n<img src=\"https://img-blog.csdnimg.cn/059ab53f82454657ace40d7fe23e7fb3.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\"  width=\"500px\"/>\n<img src=\"https://img-blog.csdnimg.cn/15d3efdd574348bfa452a4bb513f9868.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\"  width=\"300px\"/>\n<img src=\"https://img-blog.csdnimg.cn/1dd243b1f0a24c4eb100f08794546cd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"300px\"/>\n\n## 1. 创建表时添加列级约束\n依次执行后创建两个表。\n```sql\nCREATE DATABASE students;\n\nCREATE TABLE major(\n  id INT PRIMARY KEY,\n  majorName VARCHAR(20)\n);\n\nCREATE TABLE stuinfo (\n  id INT PRIMARY KEY, # 主键约束\n  stuName VARCHAR (20) NOT NULL, # 非空约束\n  gender CHAR(1) CHECK (gender = \"男\" OR gender = \"女\"), # 检查约束\n  seat INT UNIQUE, # 唯一约束\n  age INT DEFAULT 18, # 默认约束\n  majorId INT REFERENCES major(id) # 外键约束\n) ;\n```\n查看stuinfo表详情如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ca67be20e29c410f958ddd71f96ecf73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n## 2. 创建表时添加表级约束\n表级约束在各个字段的最下面\n语法：constraint 约束名 约束类型(字段名)\n```sql\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT,\n  \n  CONSTRAINT pk PRIMARY KEY(id), # 主键\n  CONSTRAINT uq UNIQUE(seat), # 唯一键\n  CONSTRAINT ck CHECK(gender = '男' OR gender = '女'), # 检查\n  CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id) # 外键\n);\n\nSHOW INDEX FROM stuinfo;\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/3f32c16ed0944d9ba62a88c370f1e176.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n事实上约束名不是必须的，因此还可以这样：\n\n```sql\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT,\n  \n  PRIMARY KEY(id), # 主键\n  UNIQUE(seat), # 唯一键\n  CHECK(gender = '男' OR gender = '女'), # 检查\n  FOREIGN KEY(majorid) REFERENCES major(id) # 外键\n);\n\nSHOW INDEX FROM stuinfo;\n```\n由下可见此时除主键外字段名成为了约束名。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/35244ae8e1b2473394be07edeec970ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n## 3. 创建表时添加约束的通用写法\n\n```sql\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo (\n  id INT PRIMARY KEY,\n  stuName VARCHAR (20) NOT NULL,\n  gender CHAR(1) CHECK (gender = \"男\" OR gender = \"女\"),\n  seat INT UNIQUE,\n  age INT DEFAULT 18,\n  majorId INT,\n  CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id)\n) ;\n\nSHOW INDEX FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c89f7dd822024668ab9b138ff95c81c1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/25262d3575f646ad9bff63adbb174158.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n## 4. 修改表时添加约束\n添加列级约束：\n\n```sql\nalter table 表名 modify column 字段名 字段类型 新约束;\n```\n\n添加表级约束：\n\n```sql\nalter table 表名 [constraint 约束名] 约束类型(字段名) [外键的引用];\n```\n示例代码如下：\n\n```sql\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT\n);\n\n# 1.添加非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NOT NULL;\n\n# 2.添加默认约束\nALTER TABLE stuinfo MODIFY COLUMN age INT DEFAULT 18;\n\n# 3.添加主键约束\nALTER TABLE stuinfo MODIFY COLUMN id INT PRIMARY KEY;  # 列级约束\nALTER TABLE stuinfo ADD PRIMARY KEY(id);  # 表级约束\n\n# 4.添加唯一约束\nALTER TABLE stuinfo MODIFY COLUMN seat INT UNIQUE;  # 列级约束\nALTER TABLE stuinfo ADD UNIQUE(seat);  # 表级约束\n\n# 5.添加外键\nALTER TABLE stuinfo ADD FOREIGN KEY(majorid) REFERENCES major(id);  # 默认约束名\nALTER TABLE stuinfo ADD CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id);  # 自定义约束名\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a5c17d6863794dbcae582af76b04d76b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c063457f5d5745078595a64f46bb240e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 5. 修改表时删除约束\n\n```sql\n# 1.删除非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NULL;\n\n# 2.删除默认约束 \nALTER TABLE stuinfo MODIFY COLUMN age INT;\n\n# 3.删除主键约束\nALTER TABLE stuinfo DROP PRIMARY KEY;\n\n# 4.删除唯一约束\nALTER stuinfo DROP INDEX seat;\n\n# 5.删除外键\nALTER TABLE stuinfo DROP FOREIGN KEY majorid;\n```\n# 二：事务\n事务是在数据库上按照一定的逻辑顺序执行的任务序列，既可以由用户手动执行，也可以由某种数据库程序自动执行。\n\n事务实际上就是对数据库的一个或者多个更改。当你在某张表上创建更新或者删除记录的时，你就已经在使用事务了。控制事务以保证数据完整性，并对数据库错误做出处理，对数据库来说非常重要。\n\n实践中，通常会将很多 SQL 查询组合在一起，并将其作为某个事务一部分来执行。\n\n事务具有以下四个标准属性，通常用缩略词 ACID 来表示：\n+ 原子性：保证任务中的所有操作都执行完毕；否则，事务会在出现错误时终止，并回滚之前所有操作到原始状态。\n+ 一致性：如果事务成功执行，则数据库的状态得到了进行了正确的转变。\n+ 隔离性：保证不同的事务相互独立、透明地执行。\n+ 持久性：即使出现系统故障，之前成功执行的事务的结果也会持久存在。\n## 1.事务的使用\n> 事务的创建\n\n隐式事务：事务没有明显的开启和结束的标记，比如insert、update、delete语句。\n\n显式事务：事务具有明显的开启和结束的标记\n前提：必须先设置自动提交功能为禁用，禁用语句为：`set autocommit=0`\n\n一个标准的事务流程如下：\n```sql\n# 步骤一：开启事务\nset autocommit=0;\nstart transaction;  # 可选\n# 步骤二：编写事务中的sql语句(select insert update delete)\n语句一;\n语句二;\n...\n# 步骤三：结束事务\ncommit; # 提交事务\nrollback; # 回滚事务\n```\n\n示例如下：\n先插入数据，方便事务操作：\n\n```sql\nALTER TABLE stuinfo ADD money INT;\nINSERT INTO stuinfo(id, stuname, money)\nVALUE (1, \"张三\", 200);\nINSERT INTO stuinfo(id, stuname, money)\nVALUE (2, \"罗老师\", 600);\nSELECT * FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8ed995ef3307458886b08df06de43ed8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)然后张三和罗老师进行转账业务，罗老师给张三150元拿到张三事迹的使用权。转账流程如下：\n\n```sql\n# 开始事务操作\nSET autocommit = 0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money = 350 WHERE id = 1;\nUPDATE stuinfo SET money = 450 WHERE id = 2;\nCOMMIT;\nSELECT * FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8e30a5fa5f5541be80478285520ab557.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果没有执行到`commit`，那么操作是不会真正被执行的，比如下面的操作，在commit之前执行回滚，那么数据就不会发生变化。\n\n```sql\nSET autocommit = 0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money = 5000 WHERE id = 1;\nUPDATE stuinfo SET money = 4500 WHERE id = 2;\nROLLBACK;\n#commit;\nSELECT * FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4fe9beaa989e411d9dacd25449256405.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 2.事务的隔离级别\n对于同时运行的多个事务，当这些事务访问数据库中相同的数据时，如果没有采取必要的隔离机制，就会导致各种并发问题：\n+ 脏读：对于两个事务T1、T2，T1读取了已经被T2更新但还没有被提交的字段之后，若T2回滚，则T1读取的内容就是临时且无效的。\n+ 不可重复读：对于两个事务T1、T2，T1读取了一个字段，然后T2更新了该字段之后，T1再次读取了同一个字段，值就不同了。\n+ 幻读：对于两个事务T1、T2，T1从一个表中读取了一个字段，然后T2在该表中插入了一些新的行，之后如果T1再次读取同一个表，就会多出几行。\n\n不可重复读和幻读比较：两者有些相似，但是前者针对的是update或delete，后者针对的insert。\n\n鉴于上述并发问题，人们就为事务设置了隔离性，即数据库系统必须具有隔离并发运行各个事务的能力，使他们不会互相影响，避免各种并发问题。\n\n数据库提供四种事务隔离级别：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ddcfe66fe9734b2aa0bfdbe26a114d8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ **Read uncommitted**：读未提交，顾名思义，就是可以读到未提交的内容。因此，在这种隔离级别下，查询是不会加锁的，也由于查询的不加锁，所以这种隔离级别的一致性是最差的，可能会产生“脏读”、“不可重复读”、“幻读”。如无特殊情况，基本是不会使用这种隔离级别的。\n+ **Read committed**：读提交，顾名思义，就是只能读到已经提交了的内容。这是各种系统中最常用的一种隔离级别，保证了一个事务不会读到另一个并行事务已修改但未提交的数据，避免了“脏读取”，但不能避免“幻读”和“不可重复读取”。该级别适用于大多数系统。这里多说点：那为什么“读提交”同“读未提交”一样，都没有查询加锁，但是却能够避免脏读呢？这就要说道另一个机制“快照（snapshot）”，而这种既能保证一致性又不加锁的读也被称为“快照读（Snapshot Read）”假设没有“快照读”，那么当一个更新的事务没有提交时，另一个对更新数据进行查询的事务会因为无法查询而被阻塞，这种情况下，并发能力就相当的差。而“快照读”就可以完成高并发的查询，不过，“读提交”只能避免“脏读”，并不能避免“不可重复读”和“幻读”。\n+ **Repeatable read**：可重复读，顾名思义，就是专门针对“不可重复读”这种情况而制定的隔离级别，自然，它就可以有效的避免“不可重复读”。在这个级别下，普通的查询同样是使用的“快照读”，但是，和“读提交”不同的是，当事务启动时，就不允许进行“修改操作（Update）”了，而“不可重复读”恰恰是因为两次读取之间进行了数据的修改，因此，“可重复读”能够有效的避免“不可重复读”，但却避免不了“幻读”，因为幻读是由于“插入或者删除操作（Insert or Delete）”而产生的。\n+ **Serializable**：这是数据库最高的隔离级别，这种级别下，事务“串行化顺序执行”，也就是一个一个排队执行。这种级别下，“脏读”、“不可重复读”、“幻读”都可以被避免，但是执行效率奇差，性能开销也最大，所以基本没人会用。\n\nOracle支持的2种事务隔离级别：READ COMMITED和SERIALIZABLE，Oracle默认的事务隔离级别是READ COMMITED。而MySQL支持四种事务隔离级别，MySQL的默认事务隔离级别是：REPEATABLE READ。\n\n查看当前的事务隔离级别：\n```sql\n# 以下四种方法都可以查看\nSHOW VARIABLES LIKE 'transaction%';\nSHOW VARIABLES LIKE '%iso%';\nSELECT @@GLOBAL.transaction_isolation;\nSELECT @@SESSION.transaction_isolation;\n```\n注意`show variables like 'tx_isolation%';`已经在MySQL5.7.20后被弃用。\n\n设置隔离级别：\n```sql\n# 设置全局隔离级别\nset global transaction isolation level REPEATABLE READ;\nset global transaction isolation level READ COMMITTED;\nset global transaction isolation level READ UNCOMMITTED;\nset global transaction isolation level SERIALIZABLE;\n\n# 设置会话隔离级别 \nset session transaction isolation level REPEATABLE READ;\nset session transaction isolation level READ COMMITTED;\nset session transaction isolation level READ UNCOMMITTED;\nset session transaction isolation level SERIALIZABLE;\n\n#通过配置文件设置隔离级别（重启生效）\n[mysqld]\ntransaction-isolation = REPEATABLE-READ\ntransaction-isolation = READ-COMMITTED\ntransaction-isolation = READ-UNCOMMITTED\ntransaction-isolation = SERIALIZABLE\n```\n\n## 3.回滚点的演示\n事务里面还有一个关键词`savepoint`，功能类似于保存点，用法是：\n\n```sql\nsavepoint 节点名;\n```\n示例如下：\n\n```sql\nSET autocommit=0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money=300 WHERE id=1;\nSAVEPOINT a; # 设置保存点\nUPDATE stuinfo SET money=100 WHERE id=2;\nROLLBACK TO a; # 回滚到保存点\n\nSELECT * FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a4251bbc661d47678601ea58774c1f39.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 三：视图\nMySQL 从5.0.1版本开始提供视图功能，视图（View）是一种虚拟存在的表，同真实表一样，视图也由列和行构成，但视图并不实际存在于数据库中。行和列的数据来自于定义视图的查询中所使用的表，并且还是在使用视图时动态生成的。\n\n数据库中只存放了视图的定义，并没有存放视图中的数据，这些数据都存放在定义视图查询所引用的真实表中。使用视图查询数据时，数据库会从真实表中取出对应的数据。因此，视图中的数据是依赖于真实表中的数据的。一旦真实表中的数据发生改变，显示在视图中的数据也会发生改变。\n\n视图可以从原有的表上选取对用户有用的信息，那些对用户没用，或者用户没有权限了解的信息，都可以直接屏蔽掉，作用类似于筛选。这样做既使应用简单化，也保证了系统的安全。\n\n视图的应用场景：\n+ 多个地方用到同样的查询结果\n+ 该查询结果使用的sql语句较为复杂\n\n视图不同于数据表，他们的区别在于以下几点：\n+ 视图不是数据库中真实的表，而是一张虚拟表，其结构和数据是建立在对数据中真实表的查询基础上的。\n+ 存储在数据库中的查询操作 SQL 语句定义了视图的内容，列数据和行数据来自于视图查询所引用的实际表，引用视图时动态生成这些数据。\n+ 视图没有实际的物理记录，不是以数据集的形式存储在数据库中的，它所对应的数据实际上是存储在视图所引用的真实表中的。\n+ 视图是数据的窗口，而表是内容。表是实际数据的存放单位，而视图只是以不同的显示方式展示数据，其数据来源还是实际表。\n+ 视图是查看数据表的一种方法，可以查询数据表中某些字段构成的数据，只是一些 SQL 语句的集合。从安全的角度来看，视图的数据安全性更高，使用视图的用户不接触数据表，不知道表结构。\n+ 视图的建立和删除只影响视图本身，不影响对应的基本表。\n\n视图与表在本质上虽然不相同，但视图经过定义以后，结构形式和表一样，可以进行查询、修改、更新和删除等操作。同时，视图具有如下优点：\n+ **定制用户数据，聚焦特定的数据**：在实际的应用过程中，不同的用户可能对不同的数据有不同的要求。例如，当数据库同时存在时，如学生基本信息表、课程表和教师信息表等多种表同时存在时，可以根据需求让不同的用户使用各自的数据。学生查看修改自己基本信息的视图，安排课程人员查看修改课程表和教师信息的视图，教师查看学生信息和课程信息表的视图。\n+ **简化数据操作**：在使用查询时，很多时候要使用聚合函数，同时还要显示其他字段的信息，可能还需要关联到其他表，语句可能会很长，如果这个动作频繁发生的话，可以创建视图来简化操作。\n+ **提高数据的安全性**：视图是虚拟的，物理上是不存在的。可以只授予用户视图的权限，而不具体指定使用表的权限，来保护基础数据的安全。\n+ **共享所需数据**：通过使用视图，每个用户不必都定义和存储自己所需的数据，可以共享数据库中的数据，同样的数据只需要存储一次。\n+ **更改数据格式**：通过使用视图，可以重新格式化检索出的数据，并组织输出到其他应用程序中。\n+ **重用 SQL 语句**：视图提供的是对查询操作的封装，本身不包含数据，所呈现的数据是根据视图定义从基础表中检索出来的，如果基础表的数据新增或删除，视图呈现的也是更新后的数据。视图定义后，编写完所需的查询，可以方便地重用该视图。\n\n使用视图的时候，还应该注意以下几点：\n+ 创建视图需要足够的访问权限。\n+ 创建视图的数目没有限制。\n+ 视图可以嵌套，即从其他视图中检索数据的查询来创建视图。\n+ 视图不能索引，也不能有关联的触发器、默认值或规则。\n+ 视图可以和表一起使用。\n+ 视图不包含数据，所以每次使用视图时，都必须执行查询中所需的任何一个检索操作。如果用多个连接和过滤条件创建了复杂的视图或嵌套了视图，可能会发现系统运行性能下降得十分严重。因此，在部署大量视图应用时，应该进行系统测试。\n\n## 1.视图的创建\n创建视图的语法：\n\n```sql\ncreate view 视图名\nas\n查询语句;\n```\n使用示例：\n\n```sql\nUSE myemployees;\n# 查询邮箱中包含a字符的员工名、部门名和工种信息\nCREATE VIEW myv1  # 创建视图\nAS\nSELECT last_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id;\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/6c7a50272c0d4f44b2fa956865572c82.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/5978b68430954b6fb4a97e00c7e9239c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 2.视图的修改\n方式一：\n\n```sql\ncreate or replace view 视图名\nas\n查询语句;\n```\n使用示例：\n\n```sql\nCREATE OR REPLACE VIEW myv1\nAS\nSELECT last_name, first_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id;\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cfa51b36bcb24eb5adc103126aeb2efc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n方式二：\n\n```sql\nalter view 视图名\nas\n查询语句;\n```\n使用示例：\n\n```sql\nALTER VIEW myv1\nAS\nSELECT first_name, last_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id\nWHERE e.first_name LIKE '%s%';\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/16261ec448d54c589d0f74b1646a7d5b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 3.视图的查看和删除\n查看语法：\n\n```sql\nDESC myv1;  # 查看视图结构\nSHOW CREATE VIEW myv1;  # 可以查看视图的创建语句\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/30f8ab4509704c328b3ebed0b3a5d797.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)查看得到的sql如下：\n\n```sql\nCREATE ALGORITHM = UNDEFINED DEFINER = `root` @`localhost` SQL SECURITY DEFINER VIEW `myv1` AS \nSELECT \n  `e`.`first_name` AS `first_name`,\n  `e`.`last_name` AS `last_name`,\n  `d`.`department_name` AS `department_name`,\n  `j`.`job_title` AS `job_title` \nFROM\n  (\n    (\n      `employees` `e` \n      JOIN `departments` `d` \n        ON (\n          (\n            `e`.`department_id` = `d`.`department_id`\n          )\n        )\n    ) \n    JOIN `jobs` `j` \n      ON ((`j`.`job_id` = `e`.`job_id`))\n  ) \nWHERE (`e`.`first_name` LIKE '%s%')\n```\n\n删除语法：\n\n```sql\ndrop view 视图名, 视图名,...\n```\n\n以下是所有的SQL代码，可以复制下来自行调试：\n\n```sql\n# 常见约束\n\n/*\n含义：一种限制，用于限制表中的数据，为了保证表中数据的准确和可靠性\n分类：六大约束\n    NOT NULL：非空约束，用于保证该字段的值不能为空\n    DEFAULT：默认约束，用于保证该字段有默认值\n    PRIMARY KEY：主键约束，用于保证该字段唯一且非空\n    UNIQUE：唯一约束，用于保证该字段具有唯一性，但可以为空\n    CHECK：检查约束（mysql中不支持，如果写了也不会报错）\n    FOREIGN KEY：外键约束，用于限制两个表的关系，保证该字段的值必须来自于主表关联列的值\n\n添加约束的时机：\n    1. 创建表时\n    2. 修改表时\n    \n约束的添加分类：\n    列级约束：六大约束语法都支持，但外键约束没有效果\n    表级约束：除了非空和默认约束，其他都支持\n*/\n\n\n# 创建表时添加列级约束\nCREATE DATABASE students;\n\nCREATE TABLE stuinfo (\n  id INT PRIMARY KEY, # 主键约束\n  stuName VARCHAR (20) NOT NULL, # 非空约束\n  gender CHAR(1) CHECK (gender = \"男\" OR gender = \"女\"), # 检查约束\n  seat INT UNIQUE, # 唯一约束\n  age INT DEFAULT 18, # 默认约束\n  majorId INT REFERENCES major(id) # 外键约束\n) ;\n\nCREATE TABLE major(\n  id INT PRIMARY KEY,\n  majorName VARCHAR(20)\n);\n\n# 创建表时添加表级约束\n/*\n表级约束在各个字段的最下面\n语法：constraint 约束名 约束类型(字段名)\n*/\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT,\n  \n  PRIMARY KEY(id), # 主键\n  UNIQUE(seat), # 唯一键\n  CHECK(gender = '男' OR gender = '女'), # 检查\n  FOREIGN KEY(majorid) REFERENCES major(id) # 外键\n);\n\nSHOW INDEX FROM stuinfo;\n\n# 通用的写法\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo (\n  id INT PRIMARY KEY,\n  stuName VARCHAR (20) NOT NULL,\n  gender CHAR(1) CHECK (gender = \"男\" OR gender = \"女\"),\n  seat INT UNIQUE,\n  age INT DEFAULT 18,\n  majorId INT,\n  CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id)\n) ;\n\nSHOW INDEX FROM stuinfo;\n\n# 修改表时添加约束\n/*\n添加列级约束：\nalter table 表名 modify column 字段名 字段类型 新约束;\n添加表级约束：\nalter table 表名 [constraint 约束名] 约束类型(字段名) [外键的引用]\n*/\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT\n);\n\n# 1.添加非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NOT NULL;\n\n# 2.添加默认约束\nALTER TABLE stuinfo MODIFY COLUMN age INT DEFAULT 18;\n\n# 3.添加主键约束\nALTER TABLE stuinfo MODIFY COLUMN id INT PRIMARY KEY;  # 列级约束\nALTER TABLE stuinfo ADD PRIMARY KEY(id);  # 表级约束\n\n# 4.添加唯一约束\nALTER TABLE stuinfo MODIFY COLUMN seat INT UNIQUE;  # 列级约束\nALTER TABLE stuinfo ADD UNIQUE(seat);  # 表级约束\n\n# 5.添加外键\nALTER TABLE stuinfo ADD FOREIGN KEY(majorid) REFERENCES major(id);  # 默认约束名\nALTER TABLE stuinfo ADD CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id);  # 自定义约束名\n\nSHOW INDEX FROM stuinfo;\n# 修改表时删除约束\n\n# 1.删除非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NULL;\n\n# 2.删除默认约束 \nALTER TABLE stuinfo MODIFY COLUMN age INT;\n\n# 3.删除主键约束\nALTER TABLE stuinfo DROP PRIMARY KEY;\n\n# 4.删除唯一约束\nALTER stuinfo DROP INDEX seat;\n\n# 5.删除外键\nALTER TABLE stuinfo DROP FOREIGN KEY majorid;\n\n/*\n事务的特性：\n\n*/\n# 插入数据，为事务操作做准备\nALTER TABLE stuinfo ADD money INT;\nINSERT INTO stuinfo(id, stuname, money)\nVALUE (1, \"张三\", 200);\nINSERT INTO stuinfo(id, stuname, money)\nVALUE (2, \"罗老师\", 600);\nSELECT * FROM stuinfo;\n# 开始事务操作\nSET autocommit = 0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money = 30 WHERE id = 1;\nUPDATE stuinfo SET money = 40 WHERE id = 3;\nCOMMIT;\nSELECT * FROM stuinfo;\n\n# 事务隔离级别\n# 查看当前事务隔离级别\nSHOW VARIABLES LIKE 'transaction%';\nSELECT @@GLOBAL.transaction_isolation;\nSELECT @@SESSION.transaction_isolation;\nSHOW VARIABLES LIKE '%iso%';\n# 设置全局隔离级别\nSET GLOBAL TRANSACTION ISOLATION LEVEL REPEATABLE READ;\nSET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;\nSET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET GLOBAL TRANSACTION ISOLATION LEVEL SERIALIZABLE;\n# 设置会话隔离级别 \nSET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;\nSET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;\nSET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE;\n\nSET autocommit=0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money=300 WHERE id=1;\nSAVEPOINT a; # 设置保存点\nUPDATE stuinfo SET money=100 WHERE id=2;\nROLLBACK TO a; # 回滚到保存点\n\nSELECT * FROM stuinfo;\n\n\n# 视图\nUSE myemployees;\n# 查询邮箱中包含a字符的员工名、部门名和工种信息\nCREATE VIEW myv1  # 创建视图\nAS\nSELECT last_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id;\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n\n\nCREATE OR REPLACE VIEW myv1\nAS\nSELECT last_name, first_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id;\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n\nALTER VIEW myv1\nAS\nSELECT first_name, last_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id\nWHERE e.first_name LIKE '%s%';\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n\nDESC myv1;\nSHOW CREATE VIEW myv1;\n\nCREATE ALGORITHM = UNDEFINED DEFINER = `root` @`localhost` SQL SECURITY DEFINER VIEW `myv1` AS \nSELECT \n  `e`.`first_name` AS `first_name`,\n  `e`.`last_name` AS `last_name`,\n  `d`.`department_name` AS `department_name`,\n  `j`.`job_title` AS `job_title` \nFROM\n  (\n    (\n      `employees` `e` \n      JOIN `departments` `d` \n        ON (\n          (\n            `e`.`department_id` = `d`.`department_id`\n          )\n        )\n    ) \n    JOIN `jobs` `j` \n      ON ((`j`.`job_id` = `e`.`job_id`))\n  ) \nWHERE (`e`.`first_name` LIKE '%s%')\n```\n","source":"_posts/sql/sql约束事务视图.md","raw":"---\ntitle: sql之约束、事务与视图\ndate:  2021-09-28 19:43:03\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/46.jpg\ntags:\n  - 约束\n  - 事务\n  - 视图\ncategories: sql\n---\n\n# 一：约束\n```\n含义：一种限制，用于限制表中的数据，为了保证表中数据的准确和可靠性\n分类：六大约束\n    NOT NULL：非空约束，用于保证该字段的值不能为空\n    DEFAULT：默认约束，用于保证该字段有默认值\n    PRIMARY KEY：主键约束，用于保证该字段唯一且非空\n    UNIQUE：唯一约束，用于保证该字段具有唯一性，但可以为空\n    CHECK：检查约束（mysql中不支持，如果写了也不会报错）\n    FOREIGN KEY：外键约束，用于限制两个表的关系，保证该字段的值必须来自于主表关联列的值\n\n添加约束的时机：\n    1. 创建表时\n    2. 修改表时\n    \n约束的添加分类：\n    列级约束：六大约束语法都支持，但外键约束没有效果\n    表级约束：除了非空和默认约束，其他都支持\n```\n事实上对于外键约束，有的大佬有一些看法，如下，大佬的csdn博客账号是：[去吧猫头夜鹰](https://blog.csdn.net/qq_25274377)\n\n<img src=\"https://img-blog.csdnimg.cn/059ab53f82454657ace40d7fe23e7fb3.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\"  width=\"500px\"/>\n<img src=\"https://img-blog.csdnimg.cn/15d3efdd574348bfa452a4bb513f9868.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\"  width=\"300px\"/>\n<img src=\"https://img-blog.csdnimg.cn/1dd243b1f0a24c4eb100f08794546cd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"300px\"/>\n\n## 1. 创建表时添加列级约束\n依次执行后创建两个表。\n```sql\nCREATE DATABASE students;\n\nCREATE TABLE major(\n  id INT PRIMARY KEY,\n  majorName VARCHAR(20)\n);\n\nCREATE TABLE stuinfo (\n  id INT PRIMARY KEY, # 主键约束\n  stuName VARCHAR (20) NOT NULL, # 非空约束\n  gender CHAR(1) CHECK (gender = \"男\" OR gender = \"女\"), # 检查约束\n  seat INT UNIQUE, # 唯一约束\n  age INT DEFAULT 18, # 默认约束\n  majorId INT REFERENCES major(id) # 外键约束\n) ;\n```\n查看stuinfo表详情如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ca67be20e29c410f958ddd71f96ecf73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n## 2. 创建表时添加表级约束\n表级约束在各个字段的最下面\n语法：constraint 约束名 约束类型(字段名)\n```sql\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT,\n  \n  CONSTRAINT pk PRIMARY KEY(id), # 主键\n  CONSTRAINT uq UNIQUE(seat), # 唯一键\n  CONSTRAINT ck CHECK(gender = '男' OR gender = '女'), # 检查\n  CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id) # 外键\n);\n\nSHOW INDEX FROM stuinfo;\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/3f32c16ed0944d9ba62a88c370f1e176.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n事实上约束名不是必须的，因此还可以这样：\n\n```sql\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT,\n  \n  PRIMARY KEY(id), # 主键\n  UNIQUE(seat), # 唯一键\n  CHECK(gender = '男' OR gender = '女'), # 检查\n  FOREIGN KEY(majorid) REFERENCES major(id) # 外键\n);\n\nSHOW INDEX FROM stuinfo;\n```\n由下可见此时除主键外字段名成为了约束名。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/35244ae8e1b2473394be07edeec970ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n## 3. 创建表时添加约束的通用写法\n\n```sql\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo (\n  id INT PRIMARY KEY,\n  stuName VARCHAR (20) NOT NULL,\n  gender CHAR(1) CHECK (gender = \"男\" OR gender = \"女\"),\n  seat INT UNIQUE,\n  age INT DEFAULT 18,\n  majorId INT,\n  CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id)\n) ;\n\nSHOW INDEX FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c89f7dd822024668ab9b138ff95c81c1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/25262d3575f646ad9bff63adbb174158.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n## 4. 修改表时添加约束\n添加列级约束：\n\n```sql\nalter table 表名 modify column 字段名 字段类型 新约束;\n```\n\n添加表级约束：\n\n```sql\nalter table 表名 [constraint 约束名] 约束类型(字段名) [外键的引用];\n```\n示例代码如下：\n\n```sql\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT\n);\n\n# 1.添加非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NOT NULL;\n\n# 2.添加默认约束\nALTER TABLE stuinfo MODIFY COLUMN age INT DEFAULT 18;\n\n# 3.添加主键约束\nALTER TABLE stuinfo MODIFY COLUMN id INT PRIMARY KEY;  # 列级约束\nALTER TABLE stuinfo ADD PRIMARY KEY(id);  # 表级约束\n\n# 4.添加唯一约束\nALTER TABLE stuinfo MODIFY COLUMN seat INT UNIQUE;  # 列级约束\nALTER TABLE stuinfo ADD UNIQUE(seat);  # 表级约束\n\n# 5.添加外键\nALTER TABLE stuinfo ADD FOREIGN KEY(majorid) REFERENCES major(id);  # 默认约束名\nALTER TABLE stuinfo ADD CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id);  # 自定义约束名\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a5c17d6863794dbcae582af76b04d76b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c063457f5d5745078595a64f46bb240e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 5. 修改表时删除约束\n\n```sql\n# 1.删除非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NULL;\n\n# 2.删除默认约束 \nALTER TABLE stuinfo MODIFY COLUMN age INT;\n\n# 3.删除主键约束\nALTER TABLE stuinfo DROP PRIMARY KEY;\n\n# 4.删除唯一约束\nALTER stuinfo DROP INDEX seat;\n\n# 5.删除外键\nALTER TABLE stuinfo DROP FOREIGN KEY majorid;\n```\n# 二：事务\n事务是在数据库上按照一定的逻辑顺序执行的任务序列，既可以由用户手动执行，也可以由某种数据库程序自动执行。\n\n事务实际上就是对数据库的一个或者多个更改。当你在某张表上创建更新或者删除记录的时，你就已经在使用事务了。控制事务以保证数据完整性，并对数据库错误做出处理，对数据库来说非常重要。\n\n实践中，通常会将很多 SQL 查询组合在一起，并将其作为某个事务一部分来执行。\n\n事务具有以下四个标准属性，通常用缩略词 ACID 来表示：\n+ 原子性：保证任务中的所有操作都执行完毕；否则，事务会在出现错误时终止，并回滚之前所有操作到原始状态。\n+ 一致性：如果事务成功执行，则数据库的状态得到了进行了正确的转变。\n+ 隔离性：保证不同的事务相互独立、透明地执行。\n+ 持久性：即使出现系统故障，之前成功执行的事务的结果也会持久存在。\n## 1.事务的使用\n> 事务的创建\n\n隐式事务：事务没有明显的开启和结束的标记，比如insert、update、delete语句。\n\n显式事务：事务具有明显的开启和结束的标记\n前提：必须先设置自动提交功能为禁用，禁用语句为：`set autocommit=0`\n\n一个标准的事务流程如下：\n```sql\n# 步骤一：开启事务\nset autocommit=0;\nstart transaction;  # 可选\n# 步骤二：编写事务中的sql语句(select insert update delete)\n语句一;\n语句二;\n...\n# 步骤三：结束事务\ncommit; # 提交事务\nrollback; # 回滚事务\n```\n\n示例如下：\n先插入数据，方便事务操作：\n\n```sql\nALTER TABLE stuinfo ADD money INT;\nINSERT INTO stuinfo(id, stuname, money)\nVALUE (1, \"张三\", 200);\nINSERT INTO stuinfo(id, stuname, money)\nVALUE (2, \"罗老师\", 600);\nSELECT * FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8ed995ef3307458886b08df06de43ed8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)然后张三和罗老师进行转账业务，罗老师给张三150元拿到张三事迹的使用权。转账流程如下：\n\n```sql\n# 开始事务操作\nSET autocommit = 0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money = 350 WHERE id = 1;\nUPDATE stuinfo SET money = 450 WHERE id = 2;\nCOMMIT;\nSELECT * FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8e30a5fa5f5541be80478285520ab557.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果没有执行到`commit`，那么操作是不会真正被执行的，比如下面的操作，在commit之前执行回滚，那么数据就不会发生变化。\n\n```sql\nSET autocommit = 0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money = 5000 WHERE id = 1;\nUPDATE stuinfo SET money = 4500 WHERE id = 2;\nROLLBACK;\n#commit;\nSELECT * FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4fe9beaa989e411d9dacd25449256405.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 2.事务的隔离级别\n对于同时运行的多个事务，当这些事务访问数据库中相同的数据时，如果没有采取必要的隔离机制，就会导致各种并发问题：\n+ 脏读：对于两个事务T1、T2，T1读取了已经被T2更新但还没有被提交的字段之后，若T2回滚，则T1读取的内容就是临时且无效的。\n+ 不可重复读：对于两个事务T1、T2，T1读取了一个字段，然后T2更新了该字段之后，T1再次读取了同一个字段，值就不同了。\n+ 幻读：对于两个事务T1、T2，T1从一个表中读取了一个字段，然后T2在该表中插入了一些新的行，之后如果T1再次读取同一个表，就会多出几行。\n\n不可重复读和幻读比较：两者有些相似，但是前者针对的是update或delete，后者针对的insert。\n\n鉴于上述并发问题，人们就为事务设置了隔离性，即数据库系统必须具有隔离并发运行各个事务的能力，使他们不会互相影响，避免各种并发问题。\n\n数据库提供四种事务隔离级别：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ddcfe66fe9734b2aa0bfdbe26a114d8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ **Read uncommitted**：读未提交，顾名思义，就是可以读到未提交的内容。因此，在这种隔离级别下，查询是不会加锁的，也由于查询的不加锁，所以这种隔离级别的一致性是最差的，可能会产生“脏读”、“不可重复读”、“幻读”。如无特殊情况，基本是不会使用这种隔离级别的。\n+ **Read committed**：读提交，顾名思义，就是只能读到已经提交了的内容。这是各种系统中最常用的一种隔离级别，保证了一个事务不会读到另一个并行事务已修改但未提交的数据，避免了“脏读取”，但不能避免“幻读”和“不可重复读取”。该级别适用于大多数系统。这里多说点：那为什么“读提交”同“读未提交”一样，都没有查询加锁，但是却能够避免脏读呢？这就要说道另一个机制“快照（snapshot）”，而这种既能保证一致性又不加锁的读也被称为“快照读（Snapshot Read）”假设没有“快照读”，那么当一个更新的事务没有提交时，另一个对更新数据进行查询的事务会因为无法查询而被阻塞，这种情况下，并发能力就相当的差。而“快照读”就可以完成高并发的查询，不过，“读提交”只能避免“脏读”，并不能避免“不可重复读”和“幻读”。\n+ **Repeatable read**：可重复读，顾名思义，就是专门针对“不可重复读”这种情况而制定的隔离级别，自然，它就可以有效的避免“不可重复读”。在这个级别下，普通的查询同样是使用的“快照读”，但是，和“读提交”不同的是，当事务启动时，就不允许进行“修改操作（Update）”了，而“不可重复读”恰恰是因为两次读取之间进行了数据的修改，因此，“可重复读”能够有效的避免“不可重复读”，但却避免不了“幻读”，因为幻读是由于“插入或者删除操作（Insert or Delete）”而产生的。\n+ **Serializable**：这是数据库最高的隔离级别，这种级别下，事务“串行化顺序执行”，也就是一个一个排队执行。这种级别下，“脏读”、“不可重复读”、“幻读”都可以被避免，但是执行效率奇差，性能开销也最大，所以基本没人会用。\n\nOracle支持的2种事务隔离级别：READ COMMITED和SERIALIZABLE，Oracle默认的事务隔离级别是READ COMMITED。而MySQL支持四种事务隔离级别，MySQL的默认事务隔离级别是：REPEATABLE READ。\n\n查看当前的事务隔离级别：\n```sql\n# 以下四种方法都可以查看\nSHOW VARIABLES LIKE 'transaction%';\nSHOW VARIABLES LIKE '%iso%';\nSELECT @@GLOBAL.transaction_isolation;\nSELECT @@SESSION.transaction_isolation;\n```\n注意`show variables like 'tx_isolation%';`已经在MySQL5.7.20后被弃用。\n\n设置隔离级别：\n```sql\n# 设置全局隔离级别\nset global transaction isolation level REPEATABLE READ;\nset global transaction isolation level READ COMMITTED;\nset global transaction isolation level READ UNCOMMITTED;\nset global transaction isolation level SERIALIZABLE;\n\n# 设置会话隔离级别 \nset session transaction isolation level REPEATABLE READ;\nset session transaction isolation level READ COMMITTED;\nset session transaction isolation level READ UNCOMMITTED;\nset session transaction isolation level SERIALIZABLE;\n\n#通过配置文件设置隔离级别（重启生效）\n[mysqld]\ntransaction-isolation = REPEATABLE-READ\ntransaction-isolation = READ-COMMITTED\ntransaction-isolation = READ-UNCOMMITTED\ntransaction-isolation = SERIALIZABLE\n```\n\n## 3.回滚点的演示\n事务里面还有一个关键词`savepoint`，功能类似于保存点，用法是：\n\n```sql\nsavepoint 节点名;\n```\n示例如下：\n\n```sql\nSET autocommit=0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money=300 WHERE id=1;\nSAVEPOINT a; # 设置保存点\nUPDATE stuinfo SET money=100 WHERE id=2;\nROLLBACK TO a; # 回滚到保存点\n\nSELECT * FROM stuinfo;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a4251bbc661d47678601ea58774c1f39.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 三：视图\nMySQL 从5.0.1版本开始提供视图功能，视图（View）是一种虚拟存在的表，同真实表一样，视图也由列和行构成，但视图并不实际存在于数据库中。行和列的数据来自于定义视图的查询中所使用的表，并且还是在使用视图时动态生成的。\n\n数据库中只存放了视图的定义，并没有存放视图中的数据，这些数据都存放在定义视图查询所引用的真实表中。使用视图查询数据时，数据库会从真实表中取出对应的数据。因此，视图中的数据是依赖于真实表中的数据的。一旦真实表中的数据发生改变，显示在视图中的数据也会发生改变。\n\n视图可以从原有的表上选取对用户有用的信息，那些对用户没用，或者用户没有权限了解的信息，都可以直接屏蔽掉，作用类似于筛选。这样做既使应用简单化，也保证了系统的安全。\n\n视图的应用场景：\n+ 多个地方用到同样的查询结果\n+ 该查询结果使用的sql语句较为复杂\n\n视图不同于数据表，他们的区别在于以下几点：\n+ 视图不是数据库中真实的表，而是一张虚拟表，其结构和数据是建立在对数据中真实表的查询基础上的。\n+ 存储在数据库中的查询操作 SQL 语句定义了视图的内容，列数据和行数据来自于视图查询所引用的实际表，引用视图时动态生成这些数据。\n+ 视图没有实际的物理记录，不是以数据集的形式存储在数据库中的，它所对应的数据实际上是存储在视图所引用的真实表中的。\n+ 视图是数据的窗口，而表是内容。表是实际数据的存放单位，而视图只是以不同的显示方式展示数据，其数据来源还是实际表。\n+ 视图是查看数据表的一种方法，可以查询数据表中某些字段构成的数据，只是一些 SQL 语句的集合。从安全的角度来看，视图的数据安全性更高，使用视图的用户不接触数据表，不知道表结构。\n+ 视图的建立和删除只影响视图本身，不影响对应的基本表。\n\n视图与表在本质上虽然不相同，但视图经过定义以后，结构形式和表一样，可以进行查询、修改、更新和删除等操作。同时，视图具有如下优点：\n+ **定制用户数据，聚焦特定的数据**：在实际的应用过程中，不同的用户可能对不同的数据有不同的要求。例如，当数据库同时存在时，如学生基本信息表、课程表和教师信息表等多种表同时存在时，可以根据需求让不同的用户使用各自的数据。学生查看修改自己基本信息的视图，安排课程人员查看修改课程表和教师信息的视图，教师查看学生信息和课程信息表的视图。\n+ **简化数据操作**：在使用查询时，很多时候要使用聚合函数，同时还要显示其他字段的信息，可能还需要关联到其他表，语句可能会很长，如果这个动作频繁发生的话，可以创建视图来简化操作。\n+ **提高数据的安全性**：视图是虚拟的，物理上是不存在的。可以只授予用户视图的权限，而不具体指定使用表的权限，来保护基础数据的安全。\n+ **共享所需数据**：通过使用视图，每个用户不必都定义和存储自己所需的数据，可以共享数据库中的数据，同样的数据只需要存储一次。\n+ **更改数据格式**：通过使用视图，可以重新格式化检索出的数据，并组织输出到其他应用程序中。\n+ **重用 SQL 语句**：视图提供的是对查询操作的封装，本身不包含数据，所呈现的数据是根据视图定义从基础表中检索出来的，如果基础表的数据新增或删除，视图呈现的也是更新后的数据。视图定义后，编写完所需的查询，可以方便地重用该视图。\n\n使用视图的时候，还应该注意以下几点：\n+ 创建视图需要足够的访问权限。\n+ 创建视图的数目没有限制。\n+ 视图可以嵌套，即从其他视图中检索数据的查询来创建视图。\n+ 视图不能索引，也不能有关联的触发器、默认值或规则。\n+ 视图可以和表一起使用。\n+ 视图不包含数据，所以每次使用视图时，都必须执行查询中所需的任何一个检索操作。如果用多个连接和过滤条件创建了复杂的视图或嵌套了视图，可能会发现系统运行性能下降得十分严重。因此，在部署大量视图应用时，应该进行系统测试。\n\n## 1.视图的创建\n创建视图的语法：\n\n```sql\ncreate view 视图名\nas\n查询语句;\n```\n使用示例：\n\n```sql\nUSE myemployees;\n# 查询邮箱中包含a字符的员工名、部门名和工种信息\nCREATE VIEW myv1  # 创建视图\nAS\nSELECT last_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id;\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/6c7a50272c0d4f44b2fa956865572c82.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/5978b68430954b6fb4a97e00c7e9239c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 2.视图的修改\n方式一：\n\n```sql\ncreate or replace view 视图名\nas\n查询语句;\n```\n使用示例：\n\n```sql\nCREATE OR REPLACE VIEW myv1\nAS\nSELECT last_name, first_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id;\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cfa51b36bcb24eb5adc103126aeb2efc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n方式二：\n\n```sql\nalter view 视图名\nas\n查询语句;\n```\n使用示例：\n\n```sql\nALTER VIEW myv1\nAS\nSELECT first_name, last_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id\nWHERE e.first_name LIKE '%s%';\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/16261ec448d54c589d0f74b1646a7d5b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 3.视图的查看和删除\n查看语法：\n\n```sql\nDESC myv1;  # 查看视图结构\nSHOW CREATE VIEW myv1;  # 可以查看视图的创建语句\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/30f8ab4509704c328b3ebed0b3a5d797.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)查看得到的sql如下：\n\n```sql\nCREATE ALGORITHM = UNDEFINED DEFINER = `root` @`localhost` SQL SECURITY DEFINER VIEW `myv1` AS \nSELECT \n  `e`.`first_name` AS `first_name`,\n  `e`.`last_name` AS `last_name`,\n  `d`.`department_name` AS `department_name`,\n  `j`.`job_title` AS `job_title` \nFROM\n  (\n    (\n      `employees` `e` \n      JOIN `departments` `d` \n        ON (\n          (\n            `e`.`department_id` = `d`.`department_id`\n          )\n        )\n    ) \n    JOIN `jobs` `j` \n      ON ((`j`.`job_id` = `e`.`job_id`))\n  ) \nWHERE (`e`.`first_name` LIKE '%s%')\n```\n\n删除语法：\n\n```sql\ndrop view 视图名, 视图名,...\n```\n\n以下是所有的SQL代码，可以复制下来自行调试：\n\n```sql\n# 常见约束\n\n/*\n含义：一种限制，用于限制表中的数据，为了保证表中数据的准确和可靠性\n分类：六大约束\n    NOT NULL：非空约束，用于保证该字段的值不能为空\n    DEFAULT：默认约束，用于保证该字段有默认值\n    PRIMARY KEY：主键约束，用于保证该字段唯一且非空\n    UNIQUE：唯一约束，用于保证该字段具有唯一性，但可以为空\n    CHECK：检查约束（mysql中不支持，如果写了也不会报错）\n    FOREIGN KEY：外键约束，用于限制两个表的关系，保证该字段的值必须来自于主表关联列的值\n\n添加约束的时机：\n    1. 创建表时\n    2. 修改表时\n    \n约束的添加分类：\n    列级约束：六大约束语法都支持，但外键约束没有效果\n    表级约束：除了非空和默认约束，其他都支持\n*/\n\n\n# 创建表时添加列级约束\nCREATE DATABASE students;\n\nCREATE TABLE stuinfo (\n  id INT PRIMARY KEY, # 主键约束\n  stuName VARCHAR (20) NOT NULL, # 非空约束\n  gender CHAR(1) CHECK (gender = \"男\" OR gender = \"女\"), # 检查约束\n  seat INT UNIQUE, # 唯一约束\n  age INT DEFAULT 18, # 默认约束\n  majorId INT REFERENCES major(id) # 外键约束\n) ;\n\nCREATE TABLE major(\n  id INT PRIMARY KEY,\n  majorName VARCHAR(20)\n);\n\n# 创建表时添加表级约束\n/*\n表级约束在各个字段的最下面\n语法：constraint 约束名 约束类型(字段名)\n*/\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT,\n  \n  PRIMARY KEY(id), # 主键\n  UNIQUE(seat), # 唯一键\n  CHECK(gender = '男' OR gender = '女'), # 检查\n  FOREIGN KEY(majorid) REFERENCES major(id) # 外键\n);\n\nSHOW INDEX FROM stuinfo;\n\n# 通用的写法\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo (\n  id INT PRIMARY KEY,\n  stuName VARCHAR (20) NOT NULL,\n  gender CHAR(1) CHECK (gender = \"男\" OR gender = \"女\"),\n  seat INT UNIQUE,\n  age INT DEFAULT 18,\n  majorId INT,\n  CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id)\n) ;\n\nSHOW INDEX FROM stuinfo;\n\n# 修改表时添加约束\n/*\n添加列级约束：\nalter table 表名 modify column 字段名 字段类型 新约束;\n添加表级约束：\nalter table 表名 [constraint 约束名] 约束类型(字段名) [外键的引用]\n*/\nDROP TABLE IF EXISTS stuinfo;\n\nCREATE TABLE stuinfo(\n  id INT,\n  stuname VARCHAR(20),\n  gender CHAR(1),\n  seat INT,\n  age INT,\n  majorid INT\n);\n\n# 1.添加非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NOT NULL;\n\n# 2.添加默认约束\nALTER TABLE stuinfo MODIFY COLUMN age INT DEFAULT 18;\n\n# 3.添加主键约束\nALTER TABLE stuinfo MODIFY COLUMN id INT PRIMARY KEY;  # 列级约束\nALTER TABLE stuinfo ADD PRIMARY KEY(id);  # 表级约束\n\n# 4.添加唯一约束\nALTER TABLE stuinfo MODIFY COLUMN seat INT UNIQUE;  # 列级约束\nALTER TABLE stuinfo ADD UNIQUE(seat);  # 表级约束\n\n# 5.添加外键\nALTER TABLE stuinfo ADD FOREIGN KEY(majorid) REFERENCES major(id);  # 默认约束名\nALTER TABLE stuinfo ADD CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id);  # 自定义约束名\n\nSHOW INDEX FROM stuinfo;\n# 修改表时删除约束\n\n# 1.删除非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NULL;\n\n# 2.删除默认约束 \nALTER TABLE stuinfo MODIFY COLUMN age INT;\n\n# 3.删除主键约束\nALTER TABLE stuinfo DROP PRIMARY KEY;\n\n# 4.删除唯一约束\nALTER stuinfo DROP INDEX seat;\n\n# 5.删除外键\nALTER TABLE stuinfo DROP FOREIGN KEY majorid;\n\n/*\n事务的特性：\n\n*/\n# 插入数据，为事务操作做准备\nALTER TABLE stuinfo ADD money INT;\nINSERT INTO stuinfo(id, stuname, money)\nVALUE (1, \"张三\", 200);\nINSERT INTO stuinfo(id, stuname, money)\nVALUE (2, \"罗老师\", 600);\nSELECT * FROM stuinfo;\n# 开始事务操作\nSET autocommit = 0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money = 30 WHERE id = 1;\nUPDATE stuinfo SET money = 40 WHERE id = 3;\nCOMMIT;\nSELECT * FROM stuinfo;\n\n# 事务隔离级别\n# 查看当前事务隔离级别\nSHOW VARIABLES LIKE 'transaction%';\nSELECT @@GLOBAL.transaction_isolation;\nSELECT @@SESSION.transaction_isolation;\nSHOW VARIABLES LIKE '%iso%';\n# 设置全局隔离级别\nSET GLOBAL TRANSACTION ISOLATION LEVEL REPEATABLE READ;\nSET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;\nSET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET GLOBAL TRANSACTION ISOLATION LEVEL SERIALIZABLE;\n# 设置会话隔离级别 \nSET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;\nSET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;\nSET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE;\n\nSET autocommit=0;\nSTART TRANSACTION;\nUPDATE stuinfo SET money=300 WHERE id=1;\nSAVEPOINT a; # 设置保存点\nUPDATE stuinfo SET money=100 WHERE id=2;\nROLLBACK TO a; # 回滚到保存点\n\nSELECT * FROM stuinfo;\n\n\n# 视图\nUSE myemployees;\n# 查询邮箱中包含a字符的员工名、部门名和工种信息\nCREATE VIEW myv1  # 创建视图\nAS\nSELECT last_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id;\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n\n\nCREATE OR REPLACE VIEW myv1\nAS\nSELECT last_name, first_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id;\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n\nALTER VIEW myv1\nAS\nSELECT first_name, last_name, department_name, job_title\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nJOIN jobs j ON j.job_id = e.job_id\nWHERE e.first_name LIKE '%s%';\n\nSELECT * FROM myv1 WHERE last_name LIKE '%a%';\n\nDESC myv1;\nSHOW CREATE VIEW myv1;\n\nCREATE ALGORITHM = UNDEFINED DEFINER = `root` @`localhost` SQL SECURITY DEFINER VIEW `myv1` AS \nSELECT \n  `e`.`first_name` AS `first_name`,\n  `e`.`last_name` AS `last_name`,\n  `d`.`department_name` AS `department_name`,\n  `j`.`job_title` AS `job_title` \nFROM\n  (\n    (\n      `employees` `e` \n      JOIN `departments` `d` \n        ON (\n          (\n            `e`.`department_id` = `d`.`department_id`\n          )\n        )\n    ) \n    JOIN `jobs` `j` \n      ON ((`j`.`job_id` = `e`.`job_id`))\n  ) \nWHERE (`e`.`first_name` LIKE '%s%')\n```\n","slug":"sql/sql约束事务视图","published":1,"updated":"2021-12-03T15:00:33.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958cl005vasda7f1ogt6q","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：约束\"><a href=\"#一：约束\" class=\"headerlink\" title=\"一：约束\"></a>一：约束</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">含义：一种限制，用于限制表中的数据，为了保证表中数据的准确和可靠性</span><br><span class=\"line\">分类：六大约束</span><br><span class=\"line\">    NOT NULL：非空约束，用于保证该字段的值不能为空</span><br><span class=\"line\">    DEFAULT：默认约束，用于保证该字段有默认值</span><br><span class=\"line\">    PRIMARY KEY：主键约束，用于保证该字段唯一且非空</span><br><span class=\"line\">    UNIQUE：唯一约束，用于保证该字段具有唯一性，但可以为空</span><br><span class=\"line\">    CHECK：检查约束（mysql中不支持，如果写了也不会报错）</span><br><span class=\"line\">    FOREIGN KEY：外键约束，用于限制两个表的关系，保证该字段的值必须来自于主表关联列的值</span><br><span class=\"line\"></span><br><span class=\"line\">添加约束的时机：</span><br><span class=\"line\">    1. 创建表时</span><br><span class=\"line\">    2. 修改表时</span><br><span class=\"line\">    </span><br><span class=\"line\">约束的添加分类：</span><br><span class=\"line\">    列级约束：六大约束语法都支持，但外键约束没有效果</span><br><span class=\"line\">    表级约束：除了非空和默认约束，其他都支持</span><br></pre></td></tr></table></figure>\n<p>事实上对于外键约束，有的大佬有一些看法，如下，大佬的csdn博客账号是：<a href=\"https://blog.csdn.net/qq_25274377\">去吧猫头夜鹰</a></p>\n<img src=\"https://img-blog.csdnimg.cn/059ab53f82454657ace40d7fe23e7fb3.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\"  width=\"500px\"/>\n<img src=\"https://img-blog.csdnimg.cn/15d3efdd574348bfa452a4bb513f9868.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\"  width=\"300px\"/>\n<img src=\"https://img-blog.csdnimg.cn/1dd243b1f0a24c4eb100f08794546cd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"300px\"/>\n\n<h2 id=\"1-创建表时添加列级约束\"><a href=\"#1-创建表时添加列级约束\" class=\"headerlink\" title=\"1. 创建表时添加列级约束\"></a>1. 创建表时添加列级约束</h2><p>依次执行后创建两个表。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE students;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> major(</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  majorName <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo (</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY, # 主键约束</span><br><span class=\"line\">  stuName <span class=\"type\">VARCHAR</span> (<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>, # 非空约束</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">CHECK</span> (gender <span class=\"operator\">=</span> &quot;男&quot; <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> &quot;女&quot;), # 检查约束</span><br><span class=\"line\">  seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>, # 唯一约束</span><br><span class=\"line\">  age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>, # 默认约束</span><br><span class=\"line\">  majorId <span class=\"type\">INT</span> <span class=\"keyword\">REFERENCES</span> major(id) # 外键约束</span><br><span class=\"line\">) ;</span><br></pre></td></tr></table></figure>\n<p>查看stuinfo表详情如下：<br><img src=\"https://img-blog.csdnimg.cn/ca67be20e29c410f958ddd71f96ecf73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-创建表时添加表级约束\"><a href=\"#2-创建表时添加表级约束\" class=\"headerlink\" title=\"2. 创建表时添加表级约束\"></a>2. 创建表时添加表级约束</h2><p>表级约束在各个字段的最下面<br>语法：constraint 约束名 约束类型(字段名)</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> pk <span class=\"keyword\">PRIMARY</span> KEY(id), # 主键</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> uq <span class=\"keyword\">UNIQUE</span>(seat), # 唯一键</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> ck <span class=\"keyword\">CHECK</span>(gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;男&#x27;</span> <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;女&#x27;</span>), # 检查</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id) # 外键</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/3f32c16ed0944d9ba62a88c370f1e176.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>事实上约束名不是必须的，因此还可以这样：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY(id), # 主键</span><br><span class=\"line\">  <span class=\"keyword\">UNIQUE</span>(seat), # 唯一键</span><br><span class=\"line\">  <span class=\"keyword\">CHECK</span>(gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;男&#x27;</span> <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;女&#x27;</span>), # 检查</span><br><span class=\"line\">  <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id) # 外键</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p>由下可见此时除主键外字段名成为了约束名。<br><img src=\"https://img-blog.csdnimg.cn/35244ae8e1b2473394be07edeec970ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-创建表时添加约束的通用写法\"><a href=\"#3-创建表时添加约束的通用写法\" class=\"headerlink\" title=\"3. 创建表时添加约束的通用写法\"></a>3. 创建表时添加约束的通用写法</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo (</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  stuName <span class=\"type\">VARCHAR</span> (<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">CHECK</span> (gender <span class=\"operator\">=</span> &quot;男&quot; <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> &quot;女&quot;),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>,</span><br><span class=\"line\">  majorId <span class=\"type\">INT</span>,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id)</span><br><span class=\"line\">) ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/c89f7dd822024668ab9b138ff95c81c1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/25262d3575f646ad9bff63adbb174158.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-修改表时添加约束\"><a href=\"#4-修改表时添加约束\" class=\"headerlink\" title=\"4. 修改表时添加约束\"></a>4. 修改表时添加约束</h2><p>添加列级约束：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 modify <span class=\"keyword\">column</span> 字段名 字段类型 新约束;</span><br></pre></td></tr></table></figure>\n\n<p>添加表级约束：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 [<span class=\"keyword\">constraint</span> 约束名] 约束类型(字段名) [外键的引用];</span><br></pre></td></tr></table></figure>\n<p>示例代码如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">1.</span>添加非空约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span>添加默认约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span>添加主键约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY;  # 列级约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">PRIMARY</span> KEY(id);  # 表级约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span>添加唯一约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>;  # 列级约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">UNIQUE</span>(seat);  # 表级约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span>添加外键</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id);  # 默认约束名</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id);  # 自定义约束名</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/a5c17d6863794dbcae582af76b04d76b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/c063457f5d5745078595a64f46bb240e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"5-修改表时删除约束\"><a href=\"#5-修改表时删除约束\" class=\"headerlink\" title=\"5. 修改表时删除约束\"></a>5. 修改表时删除约束</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"number\">1.</span>删除非空约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span>删除默认约束 </span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> age <span class=\"type\">INT</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span>删除主键约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">DROP</span> <span class=\"keyword\">PRIMARY</span> KEY;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span>删除唯一约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> stuinfo <span class=\"keyword\">DROP</span> INDEX seat;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span>删除外键</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">DROP</span> <span class=\"keyword\">FOREIGN</span> KEY majorid;</span><br></pre></td></tr></table></figure>\n<h1 id=\"二：事务\"><a href=\"#二：事务\" class=\"headerlink\" title=\"二：事务\"></a>二：事务</h1><p>事务是在数据库上按照一定的逻辑顺序执行的任务序列，既可以由用户手动执行，也可以由某种数据库程序自动执行。</p>\n<p>事务实际上就是对数据库的一个或者多个更改。当你在某张表上创建更新或者删除记录的时，你就已经在使用事务了。控制事务以保证数据完整性，并对数据库错误做出处理，对数据库来说非常重要。</p>\n<p>实践中，通常会将很多 SQL 查询组合在一起，并将其作为某个事务一部分来执行。</p>\n<p>事务具有以下四个标准属性，通常用缩略词 ACID 来表示：</p>\n<ul>\n<li>原子性：保证任务中的所有操作都执行完毕；否则，事务会在出现错误时终止，并回滚之前所有操作到原始状态。</li>\n<li>一致性：如果事务成功执行，则数据库的状态得到了进行了正确的转变。</li>\n<li>隔离性：保证不同的事务相互独立、透明地执行。</li>\n<li>持久性：即使出现系统故障，之前成功执行的事务的结果也会持久存在。<h2 id=\"1-事务的使用\"><a href=\"#1-事务的使用\" class=\"headerlink\" title=\"1.事务的使用\"></a>1.事务的使用</h2><blockquote>\n<p>事务的创建</p>\n</blockquote>\n</li>\n</ul>\n<p>隐式事务：事务没有明显的开启和结束的标记，比如insert、update、delete语句。</p>\n<p>显式事务：事务具有明显的开启和结束的标记<br>前提：必须先设置自动提交功能为禁用，禁用语句为：<code>set autocommit=0</code></p>\n<p>一个标准的事务流程如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 步骤一：开启事务</span><br><span class=\"line\"><span class=\"keyword\">set</span> autocommit<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">start</span> transaction;  # 可选</span><br><span class=\"line\"># 步骤二：编写事务中的<span class=\"keyword\">sql</span>语句(<span class=\"keyword\">select</span> <span class=\"keyword\">insert</span> update <span class=\"keyword\">delete</span>)</span><br><span class=\"line\">语句一;</span><br><span class=\"line\">语句二;</span><br><span class=\"line\">...</span><br><span class=\"line\"># 步骤三：结束事务</span><br><span class=\"line\"><span class=\"keyword\">commit</span>; # 提交事务</span><br><span class=\"line\"><span class=\"keyword\">rollback</span>; # 回滚事务</span><br></pre></td></tr></table></figure>\n\n<p>示例如下：<br>先插入数据，方便事务操作：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> money <span class=\"type\">INT</span>;</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> stuinfo(id, stuname, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUE</span> (<span class=\"number\">1</span>, &quot;张三&quot;, <span class=\"number\">200</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> stuinfo(id, stuname, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUE</span> (<span class=\"number\">2</span>, &quot;罗老师&quot;, <span class=\"number\">600</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/8ed995ef3307458886b08df06de43ed8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">然后张三和罗老师进行转账业务，罗老师给张三150元拿到张三事迹的使用权。转账流程如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 开始事务操作</span><br><span class=\"line\"><span class=\"keyword\">SET</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">350</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">450</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">COMMIT</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/8e30a5fa5f5541be80478285520ab557.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果没有执行到<code>commit</code>，那么操作是不会真正被执行的，比如下面的操作，在commit之前执行回滚，那么数据就不会发生变化。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">5000</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">4500</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span>;</span><br><span class=\"line\">#<span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/4fe9beaa989e411d9dacd25449256405.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-事务的隔离级别\"><a href=\"#2-事务的隔离级别\" class=\"headerlink\" title=\"2.事务的隔离级别\"></a>2.事务的隔离级别</h2><p>对于同时运行的多个事务，当这些事务访问数据库中相同的数据时，如果没有采取必要的隔离机制，就会导致各种并发问题：</p>\n<ul>\n<li>脏读：对于两个事务T1、T2，T1读取了已经被T2更新但还没有被提交的字段之后，若T2回滚，则T1读取的内容就是临时且无效的。</li>\n<li>不可重复读：对于两个事务T1、T2，T1读取了一个字段，然后T2更新了该字段之后，T1再次读取了同一个字段，值就不同了。</li>\n<li>幻读：对于两个事务T1、T2，T1从一个表中读取了一个字段，然后T2在该表中插入了一些新的行，之后如果T1再次读取同一个表，就会多出几行。</li>\n</ul>\n<p>不可重复读和幻读比较：两者有些相似，但是前者针对的是update或delete，后者针对的insert。</p>\n<p>鉴于上述并发问题，人们就为事务设置了隔离性，即数据库系统必须具有隔离并发运行各个事务的能力，使他们不会互相影响，避免各种并发问题。</p>\n<p>数据库提供四种事务隔离级别：<br><img src=\"https://img-blog.csdnimg.cn/ddcfe66fe9734b2aa0bfdbe26a114d8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li><strong>Read uncommitted</strong>：读未提交，顾名思义，就是可以读到未提交的内容。因此，在这种隔离级别下，查询是不会加锁的，也由于查询的不加锁，所以这种隔离级别的一致性是最差的，可能会产生“脏读”、“不可重复读”、“幻读”。如无特殊情况，基本是不会使用这种隔离级别的。</li>\n<li><strong>Read committed</strong>：读提交，顾名思义，就是只能读到已经提交了的内容。这是各种系统中最常用的一种隔离级别，保证了一个事务不会读到另一个并行事务已修改但未提交的数据，避免了“脏读取”，但不能避免“幻读”和“不可重复读取”。该级别适用于大多数系统。这里多说点：那为什么“读提交”同“读未提交”一样，都没有查询加锁，但是却能够避免脏读呢？这就要说道另一个机制“快照（snapshot）”，而这种既能保证一致性又不加锁的读也被称为“快照读（Snapshot Read）”假设没有“快照读”，那么当一个更新的事务没有提交时，另一个对更新数据进行查询的事务会因为无法查询而被阻塞，这种情况下，并发能力就相当的差。而“快照读”就可以完成高并发的查询，不过，“读提交”只能避免“脏读”，并不能避免“不可重复读”和“幻读”。</li>\n<li><strong>Repeatable read</strong>：可重复读，顾名思义，就是专门针对“不可重复读”这种情况而制定的隔离级别，自然，它就可以有效的避免“不可重复读”。在这个级别下，普通的查询同样是使用的“快照读”，但是，和“读提交”不同的是，当事务启动时，就不允许进行“修改操作（Update）”了，而“不可重复读”恰恰是因为两次读取之间进行了数据的修改，因此，“可重复读”能够有效的避免“不可重复读”，但却避免不了“幻读”，因为幻读是由于“插入或者删除操作（Insert or Delete）”而产生的。</li>\n<li><strong>Serializable</strong>：这是数据库最高的隔离级别，这种级别下，事务“串行化顺序执行”，也就是一个一个排队执行。这种级别下，“脏读”、“不可重复读”、“幻读”都可以被避免，但是执行效率奇差，性能开销也最大，所以基本没人会用。</li>\n</ul>\n<p>Oracle支持的2种事务隔离级别：READ COMMITED和SERIALIZABLE，Oracle默认的事务隔离级别是READ COMMITED。而MySQL支持四种事务隔离级别，MySQL的默认事务隔离级别是：REPEATABLE READ。</p>\n<p>查看当前的事务隔离级别：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 以下四种方法都可以查看</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;transaction%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%iso%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> @<span class=\"variable\">@GLOBAL</span>.transaction_isolation;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> @<span class=\"variable\">@SESSION</span>.transaction_isolation;</span><br></pre></td></tr></table></figure>\n<p>注意<code>show variables like &#39;tx_isolation%&#39;;</code>已经在MySQL5.7.20后被弃用。</p>\n<p>设置隔离级别：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 设置全局隔离级别</span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> transaction isolation level REPEATABLE READ;</span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> transaction isolation level READ COMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> transaction isolation level READ UNCOMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> transaction isolation level SERIALIZABLE;</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置会话隔离级别 </span><br><span class=\"line\"><span class=\"keyword\">set</span> session transaction isolation level REPEATABLE READ;</span><br><span class=\"line\"><span class=\"keyword\">set</span> session transaction isolation level READ COMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">set</span> session transaction isolation level READ UNCOMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">set</span> session transaction isolation level SERIALIZABLE;</span><br><span class=\"line\"></span><br><span class=\"line\">#通过配置文件设置隔离级别（重启生效）</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">transaction<span class=\"operator\">-</span>isolation <span class=\"operator\">=</span> REPEATABLE<span class=\"operator\">-</span>READ</span><br><span class=\"line\">transaction<span class=\"operator\">-</span>isolation <span class=\"operator\">=</span> READ<span class=\"operator\">-</span>COMMITTED</span><br><span class=\"line\">transaction<span class=\"operator\">-</span>isolation <span class=\"operator\">=</span> READ<span class=\"operator\">-</span>UNCOMMITTED</span><br><span class=\"line\">transaction<span class=\"operator\">-</span>isolation <span class=\"operator\">=</span> SERIALIZABLE</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-回滚点的演示\"><a href=\"#3-回滚点的演示\" class=\"headerlink\" title=\"3.回滚点的演示\"></a>3.回滚点的演示</h2><p>事务里面还有一个关键词<code>savepoint</code>，功能类似于保存点，用法是：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">savepoint</span> 节点名;</span><br></pre></td></tr></table></figure>\n<p>示例如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> autocommit<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money<span class=\"operator\">=</span><span class=\"number\">300</span> <span class=\"keyword\">WHERE</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">SAVEPOINT</span> a; # 设置保存点</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money<span class=\"operator\">=</span><span class=\"number\">100</span> <span class=\"keyword\">WHERE</span> id<span class=\"operator\">=</span><span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span> <span class=\"keyword\">TO</span> a; # 回滚到保存点</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/a4251bbc661d47678601ea58774c1f39.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：视图\"><a href=\"#三：视图\" class=\"headerlink\" title=\"三：视图\"></a>三：视图</h1><p>MySQL 从5.0.1版本开始提供视图功能，视图（View）是一种虚拟存在的表，同真实表一样，视图也由列和行构成，但视图并不实际存在于数据库中。行和列的数据来自于定义视图的查询中所使用的表，并且还是在使用视图时动态生成的。</p>\n<p>数据库中只存放了视图的定义，并没有存放视图中的数据，这些数据都存放在定义视图查询所引用的真实表中。使用视图查询数据时，数据库会从真实表中取出对应的数据。因此，视图中的数据是依赖于真实表中的数据的。一旦真实表中的数据发生改变，显示在视图中的数据也会发生改变。</p>\n<p>视图可以从原有的表上选取对用户有用的信息，那些对用户没用，或者用户没有权限了解的信息，都可以直接屏蔽掉，作用类似于筛选。这样做既使应用简单化，也保证了系统的安全。</p>\n<p>视图的应用场景：</p>\n<ul>\n<li>多个地方用到同样的查询结果</li>\n<li>该查询结果使用的sql语句较为复杂</li>\n</ul>\n<p>视图不同于数据表，他们的区别在于以下几点：</p>\n<ul>\n<li>视图不是数据库中真实的表，而是一张虚拟表，其结构和数据是建立在对数据中真实表的查询基础上的。</li>\n<li>存储在数据库中的查询操作 SQL 语句定义了视图的内容，列数据和行数据来自于视图查询所引用的实际表，引用视图时动态生成这些数据。</li>\n<li>视图没有实际的物理记录，不是以数据集的形式存储在数据库中的，它所对应的数据实际上是存储在视图所引用的真实表中的。</li>\n<li>视图是数据的窗口，而表是内容。表是实际数据的存放单位，而视图只是以不同的显示方式展示数据，其数据来源还是实际表。</li>\n<li>视图是查看数据表的一种方法，可以查询数据表中某些字段构成的数据，只是一些 SQL 语句的集合。从安全的角度来看，视图的数据安全性更高，使用视图的用户不接触数据表，不知道表结构。</li>\n<li>视图的建立和删除只影响视图本身，不影响对应的基本表。</li>\n</ul>\n<p>视图与表在本质上虽然不相同，但视图经过定义以后，结构形式和表一样，可以进行查询、修改、更新和删除等操作。同时，视图具有如下优点：</p>\n<ul>\n<li><strong>定制用户数据，聚焦特定的数据</strong>：在实际的应用过程中，不同的用户可能对不同的数据有不同的要求。例如，当数据库同时存在时，如学生基本信息表、课程表和教师信息表等多种表同时存在时，可以根据需求让不同的用户使用各自的数据。学生查看修改自己基本信息的视图，安排课程人员查看修改课程表和教师信息的视图，教师查看学生信息和课程信息表的视图。</li>\n<li><strong>简化数据操作</strong>：在使用查询时，很多时候要使用聚合函数，同时还要显示其他字段的信息，可能还需要关联到其他表，语句可能会很长，如果这个动作频繁发生的话，可以创建视图来简化操作。</li>\n<li><strong>提高数据的安全性</strong>：视图是虚拟的，物理上是不存在的。可以只授予用户视图的权限，而不具体指定使用表的权限，来保护基础数据的安全。</li>\n<li><strong>共享所需数据</strong>：通过使用视图，每个用户不必都定义和存储自己所需的数据，可以共享数据库中的数据，同样的数据只需要存储一次。</li>\n<li><strong>更改数据格式</strong>：通过使用视图，可以重新格式化检索出的数据，并组织输出到其他应用程序中。</li>\n<li><strong>重用 SQL 语句</strong>：视图提供的是对查询操作的封装，本身不包含数据，所呈现的数据是根据视图定义从基础表中检索出来的，如果基础表的数据新增或删除，视图呈现的也是更新后的数据。视图定义后，编写完所需的查询，可以方便地重用该视图。</li>\n</ul>\n<p>使用视图的时候，还应该注意以下几点：</p>\n<ul>\n<li>创建视图需要足够的访问权限。</li>\n<li>创建视图的数目没有限制。</li>\n<li>视图可以嵌套，即从其他视图中检索数据的查询来创建视图。</li>\n<li>视图不能索引，也不能有关联的触发器、默认值或规则。</li>\n<li>视图可以和表一起使用。</li>\n<li>视图不包含数据，所以每次使用视图时，都必须执行查询中所需的任何一个检索操作。如果用多个连接和过滤条件创建了复杂的视图或嵌套了视图，可能会发现系统运行性能下降得十分严重。因此，在部署大量视图应用时，应该进行系统测试。</li>\n</ul>\n<h2 id=\"1-视图的创建\"><a href=\"#1-视图的创建\" class=\"headerlink\" title=\"1.视图的创建\"></a>1.视图的创建</h2><p>创建视图的语法：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">view</span> 视图名</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">查询语句;</span><br></pre></td></tr></table></figure>\n<p>使用示例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USE myemployees;</span><br><span class=\"line\"># 查询邮箱中包含a字符的员工名、部门名和工种信息</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> myv1  # 创建视图</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> last_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/6c7a50272c0d4f44b2fa956865572c82.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/5978b68430954b6fb4a97e00c7e9239c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-视图的修改\"><a href=\"#2-视图的修改\" class=\"headerlink\" title=\"2.视图的修改\"></a>2.视图的修改</h2><p>方式一：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">view</span> 视图名</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">查询语句;</span><br></pre></td></tr></table></figure>\n<p>使用示例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE <span class=\"keyword\">VIEW</span> myv1</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> last_name, first_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/cfa51b36bcb24eb5adc103126aeb2efc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>方式二：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">view</span> 视图名</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">查询语句;</span><br></pre></td></tr></table></figure>\n<p>使用示例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">VIEW</span> myv1</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> first_name, last_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> e.first_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%s%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/16261ec448d54c589d0f74b1646a7d5b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-视图的查看和删除\"><a href=\"#3-视图的查看和删除\" class=\"headerlink\" title=\"3.视图的查看和删除\"></a>3.视图的查看和删除</h2><p>查看语法：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DESC</span> myv1;  # 查看视图结构</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> myv1;  # 可以查看视图的创建语句</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/30f8ab4509704c328b3ebed0b3a5d797.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">查看得到的sql如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> ALGORITHM <span class=\"operator\">=</span> UNDEFINED DEFINER <span class=\"operator\">=</span> `root` @`localhost` <span class=\"keyword\">SQL</span> SECURITY DEFINER <span class=\"keyword\">VIEW</span> `myv1` <span class=\"keyword\">AS</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">  `e`.`first_name` <span class=\"keyword\">AS</span> `first_name`,</span><br><span class=\"line\">  `e`.`last_name` <span class=\"keyword\">AS</span> `last_name`,</span><br><span class=\"line\">  `d`.`department_name` <span class=\"keyword\">AS</span> `department_name`,</span><br><span class=\"line\">  `j`.`job_title` <span class=\"keyword\">AS</span> `job_title` </span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  (</span><br><span class=\"line\">    (</span><br><span class=\"line\">      `employees` `e` </span><br><span class=\"line\">      <span class=\"keyword\">JOIN</span> `departments` `d` </span><br><span class=\"line\">        <span class=\"keyword\">ON</span> (</span><br><span class=\"line\">          (</span><br><span class=\"line\">            `e`.`department_id` <span class=\"operator\">=</span> `d`.`department_id`</span><br><span class=\"line\">          )</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ) </span><br><span class=\"line\">    <span class=\"keyword\">JOIN</span> `jobs` `j` </span><br><span class=\"line\">      <span class=\"keyword\">ON</span> ((`j`.`job_id` <span class=\"operator\">=</span> `e`.`job_id`))</span><br><span class=\"line\">  ) </span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> (`e`.`first_name` <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%s%&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>删除语法：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">view</span> 视图名, 视图名,...</span><br></pre></td></tr></table></figure>\n\n<p>以下是所有的SQL代码，可以复制下来自行调试：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 常见约束</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">含义：一种限制，用于限制表中的数据，为了保证表中数据的准确和可靠性</span></span><br><span class=\"line\"><span class=\"comment\">分类：六大约束</span></span><br><span class=\"line\"><span class=\"comment\">    NOT NULL：非空约束，用于保证该字段的值不能为空</span></span><br><span class=\"line\"><span class=\"comment\">    DEFAULT：默认约束，用于保证该字段有默认值</span></span><br><span class=\"line\"><span class=\"comment\">    PRIMARY KEY：主键约束，用于保证该字段唯一且非空</span></span><br><span class=\"line\"><span class=\"comment\">    UNIQUE：唯一约束，用于保证该字段具有唯一性，但可以为空</span></span><br><span class=\"line\"><span class=\"comment\">    CHECK：检查约束（mysql中不支持，如果写了也不会报错）</span></span><br><span class=\"line\"><span class=\"comment\">    FOREIGN KEY：外键约束，用于限制两个表的关系，保证该字段的值必须来自于主表关联列的值</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">添加约束的时机：</span></span><br><span class=\"line\"><span class=\"comment\">    1. 创建表时</span></span><br><span class=\"line\"><span class=\"comment\">    2. 修改表时</span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">约束的添加分类：</span></span><br><span class=\"line\"><span class=\"comment\">    列级约束：六大约束语法都支持，但外键约束没有效果</span></span><br><span class=\"line\"><span class=\"comment\">    表级约束：除了非空和默认约束，其他都支持</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 创建表时添加列级约束</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE students;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo (</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY, # 主键约束</span><br><span class=\"line\">  stuName <span class=\"type\">VARCHAR</span> (<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>, # 非空约束</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">CHECK</span> (gender <span class=\"operator\">=</span> &quot;男&quot; <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> &quot;女&quot;), # 检查约束</span><br><span class=\"line\">  seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>, # 唯一约束</span><br><span class=\"line\">  age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>, # 默认约束</span><br><span class=\"line\">  majorId <span class=\"type\">INT</span> <span class=\"keyword\">REFERENCES</span> major(id) # 外键约束</span><br><span class=\"line\">) ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> major(</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  majorName <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建表时添加表级约束</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">表级约束在各个字段的最下面</span></span><br><span class=\"line\"><span class=\"comment\">语法：constraint 约束名 约束类型(字段名)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY(id), # 主键</span><br><span class=\"line\">  <span class=\"keyword\">UNIQUE</span>(seat), # 唯一键</span><br><span class=\"line\">  <span class=\"keyword\">CHECK</span>(gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;男&#x27;</span> <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;女&#x27;</span>), # 检查</span><br><span class=\"line\">  <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id) # 外键</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"># 通用的写法</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo (</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  stuName <span class=\"type\">VARCHAR</span> (<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">CHECK</span> (gender <span class=\"operator\">=</span> &quot;男&quot; <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> &quot;女&quot;),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>,</span><br><span class=\"line\">  majorId <span class=\"type\">INT</span>,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id)</span><br><span class=\"line\">) ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改表时添加约束</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">添加列级约束：</span></span><br><span class=\"line\"><span class=\"comment\">alter table 表名 modify column 字段名 字段类型 新约束;</span></span><br><span class=\"line\"><span class=\"comment\">添加表级约束：</span></span><br><span class=\"line\"><span class=\"comment\">alter table 表名 [constraint 约束名] 约束类型(字段名) [外键的引用]</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">1.</span>添加非空约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span>添加默认约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span>添加主键约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY;  # 列级约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">PRIMARY</span> KEY(id);  # 表级约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span>添加唯一约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>;  # 列级约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">UNIQUE</span>(seat);  # 表级约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span>添加外键</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id);  # 默认约束名</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id);  # 自定义约束名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"># 修改表时删除约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">1.</span>删除非空约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span>删除默认约束 </span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> age <span class=\"type\">INT</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span>删除主键约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">DROP</span> <span class=\"keyword\">PRIMARY</span> KEY;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span>删除唯一约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> stuinfo <span class=\"keyword\">DROP</span> INDEX seat;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span>删除外键</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">DROP</span> <span class=\"keyword\">FOREIGN</span> KEY majorid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">事务的特性：</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"># 插入数据，为事务操作做准备</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> money <span class=\"type\">INT</span>;</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> stuinfo(id, stuname, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUE</span> (<span class=\"number\">1</span>, &quot;张三&quot;, <span class=\"number\">200</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> stuinfo(id, stuname, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUE</span> (<span class=\"number\">2</span>, &quot;罗老师&quot;, <span class=\"number\">600</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"># 开始事务操作</span><br><span class=\"line\"><span class=\"keyword\">SET</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">30</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">40</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">COMMIT</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"># 事务隔离级别</span><br><span class=\"line\"># 查看当前事务隔离级别</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;transaction%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> @<span class=\"variable\">@GLOBAL</span>.transaction_isolation;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> @<span class=\"variable\">@SESSION</span>.transaction_isolation;</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%iso%&#x27;</span>;</span><br><span class=\"line\"># 设置全局隔离级别</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> TRANSACTION ISOLATION LEVEL REPEATABLE READ;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> TRANSACTION ISOLATION LEVEL READ COMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> TRANSACTION ISOLATION LEVEL SERIALIZABLE;</span><br><span class=\"line\"># 设置会话隔离级别 </span><br><span class=\"line\"><span class=\"keyword\">SET</span> SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> autocommit<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money<span class=\"operator\">=</span><span class=\"number\">300</span> <span class=\"keyword\">WHERE</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">SAVEPOINT</span> a; # 设置保存点</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money<span class=\"operator\">=</span><span class=\"number\">100</span> <span class=\"keyword\">WHERE</span> id<span class=\"operator\">=</span><span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span> <span class=\"keyword\">TO</span> a; # 回滚到保存点</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 视图</span><br><span class=\"line\">USE myemployees;</span><br><span class=\"line\"># 查询邮箱中包含a字符的员工名、部门名和工种信息</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> myv1  # 创建视图</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> last_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE <span class=\"keyword\">VIEW</span> myv1</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> last_name, first_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">VIEW</span> myv1</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> first_name, last_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> e.first_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%s%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DESC</span> myv1;</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> myv1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> ALGORITHM <span class=\"operator\">=</span> UNDEFINED DEFINER <span class=\"operator\">=</span> `root` @`localhost` <span class=\"keyword\">SQL</span> SECURITY DEFINER <span class=\"keyword\">VIEW</span> `myv1` <span class=\"keyword\">AS</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">  `e`.`first_name` <span class=\"keyword\">AS</span> `first_name`,</span><br><span class=\"line\">  `e`.`last_name` <span class=\"keyword\">AS</span> `last_name`,</span><br><span class=\"line\">  `d`.`department_name` <span class=\"keyword\">AS</span> `department_name`,</span><br><span class=\"line\">  `j`.`job_title` <span class=\"keyword\">AS</span> `job_title` </span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  (</span><br><span class=\"line\">    (</span><br><span class=\"line\">      `employees` `e` </span><br><span class=\"line\">      <span class=\"keyword\">JOIN</span> `departments` `d` </span><br><span class=\"line\">        <span class=\"keyword\">ON</span> (</span><br><span class=\"line\">          (</span><br><span class=\"line\">            `e`.`department_id` <span class=\"operator\">=</span> `d`.`department_id`</span><br><span class=\"line\">          )</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ) </span><br><span class=\"line\">    <span class=\"keyword\">JOIN</span> `jobs` `j` </span><br><span class=\"line\">      <span class=\"keyword\">ON</span> ((`j`.`job_id` <span class=\"operator\">=</span> `e`.`job_id`))</span><br><span class=\"line\">  ) </span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> (`e`.`first_name` <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%s%&#x27;</span>)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：约束\"><a href=\"#一：约束\" class=\"headerlink\" title=\"一：约束\"></a>一：约束</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">含义：一种限制，用于限制表中的数据，为了保证表中数据的准确和可靠性</span><br><span class=\"line\">分类：六大约束</span><br><span class=\"line\">    NOT NULL：非空约束，用于保证该字段的值不能为空</span><br><span class=\"line\">    DEFAULT：默认约束，用于保证该字段有默认值</span><br><span class=\"line\">    PRIMARY KEY：主键约束，用于保证该字段唯一且非空</span><br><span class=\"line\">    UNIQUE：唯一约束，用于保证该字段具有唯一性，但可以为空</span><br><span class=\"line\">    CHECK：检查约束（mysql中不支持，如果写了也不会报错）</span><br><span class=\"line\">    FOREIGN KEY：外键约束，用于限制两个表的关系，保证该字段的值必须来自于主表关联列的值</span><br><span class=\"line\"></span><br><span class=\"line\">添加约束的时机：</span><br><span class=\"line\">    1. 创建表时</span><br><span class=\"line\">    2. 修改表时</span><br><span class=\"line\">    </span><br><span class=\"line\">约束的添加分类：</span><br><span class=\"line\">    列级约束：六大约束语法都支持，但外键约束没有效果</span><br><span class=\"line\">    表级约束：除了非空和默认约束，其他都支持</span><br></pre></td></tr></table></figure>\n<p>事实上对于外键约束，有的大佬有一些看法，如下，大佬的csdn博客账号是：<a href=\"https://blog.csdn.net/qq_25274377\">去吧猫头夜鹰</a></p>\n<img src=\"https://img-blog.csdnimg.cn/059ab53f82454657ace40d7fe23e7fb3.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\"  width=\"500px\"/>\n<img src=\"https://img-blog.csdnimg.cn/15d3efdd574348bfa452a4bb513f9868.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\"  width=\"300px\"/>\n<img src=\"https://img-blog.csdnimg.cn/1dd243b1f0a24c4eb100f08794546cd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"300px\"/>\n\n<h2 id=\"1-创建表时添加列级约束\"><a href=\"#1-创建表时添加列级约束\" class=\"headerlink\" title=\"1. 创建表时添加列级约束\"></a>1. 创建表时添加列级约束</h2><p>依次执行后创建两个表。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE students;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> major(</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  majorName <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo (</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY, # 主键约束</span><br><span class=\"line\">  stuName <span class=\"type\">VARCHAR</span> (<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>, # 非空约束</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">CHECK</span> (gender <span class=\"operator\">=</span> &quot;男&quot; <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> &quot;女&quot;), # 检查约束</span><br><span class=\"line\">  seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>, # 唯一约束</span><br><span class=\"line\">  age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>, # 默认约束</span><br><span class=\"line\">  majorId <span class=\"type\">INT</span> <span class=\"keyword\">REFERENCES</span> major(id) # 外键约束</span><br><span class=\"line\">) ;</span><br></pre></td></tr></table></figure>\n<p>查看stuinfo表详情如下：<br><img src=\"https://img-blog.csdnimg.cn/ca67be20e29c410f958ddd71f96ecf73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-创建表时添加表级约束\"><a href=\"#2-创建表时添加表级约束\" class=\"headerlink\" title=\"2. 创建表时添加表级约束\"></a>2. 创建表时添加表级约束</h2><p>表级约束在各个字段的最下面<br>语法：constraint 约束名 约束类型(字段名)</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> pk <span class=\"keyword\">PRIMARY</span> KEY(id), # 主键</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> uq <span class=\"keyword\">UNIQUE</span>(seat), # 唯一键</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> ck <span class=\"keyword\">CHECK</span>(gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;男&#x27;</span> <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;女&#x27;</span>), # 检查</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id) # 外键</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/3f32c16ed0944d9ba62a88c370f1e176.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>事实上约束名不是必须的，因此还可以这样：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY(id), # 主键</span><br><span class=\"line\">  <span class=\"keyword\">UNIQUE</span>(seat), # 唯一键</span><br><span class=\"line\">  <span class=\"keyword\">CHECK</span>(gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;男&#x27;</span> <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;女&#x27;</span>), # 检查</span><br><span class=\"line\">  <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id) # 外键</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p>由下可见此时除主键外字段名成为了约束名。<br><img src=\"https://img-blog.csdnimg.cn/35244ae8e1b2473394be07edeec970ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-创建表时添加约束的通用写法\"><a href=\"#3-创建表时添加约束的通用写法\" class=\"headerlink\" title=\"3. 创建表时添加约束的通用写法\"></a>3. 创建表时添加约束的通用写法</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo (</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  stuName <span class=\"type\">VARCHAR</span> (<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">CHECK</span> (gender <span class=\"operator\">=</span> &quot;男&quot; <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> &quot;女&quot;),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>,</span><br><span class=\"line\">  majorId <span class=\"type\">INT</span>,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id)</span><br><span class=\"line\">) ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/c89f7dd822024668ab9b138ff95c81c1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/25262d3575f646ad9bff63adbb174158.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-修改表时添加约束\"><a href=\"#4-修改表时添加约束\" class=\"headerlink\" title=\"4. 修改表时添加约束\"></a>4. 修改表时添加约束</h2><p>添加列级约束：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 modify <span class=\"keyword\">column</span> 字段名 字段类型 新约束;</span><br></pre></td></tr></table></figure>\n\n<p>添加表级约束：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 [<span class=\"keyword\">constraint</span> 约束名] 约束类型(字段名) [外键的引用];</span><br></pre></td></tr></table></figure>\n<p>示例代码如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">1.</span>添加非空约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span>添加默认约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span>添加主键约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY;  # 列级约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">PRIMARY</span> KEY(id);  # 表级约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span>添加唯一约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>;  # 列级约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">UNIQUE</span>(seat);  # 表级约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span>添加外键</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id);  # 默认约束名</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id);  # 自定义约束名</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/a5c17d6863794dbcae582af76b04d76b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/c063457f5d5745078595a64f46bb240e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"5-修改表时删除约束\"><a href=\"#5-修改表时删除约束\" class=\"headerlink\" title=\"5. 修改表时删除约束\"></a>5. 修改表时删除约束</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"number\">1.</span>删除非空约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span>删除默认约束 </span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> age <span class=\"type\">INT</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span>删除主键约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">DROP</span> <span class=\"keyword\">PRIMARY</span> KEY;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span>删除唯一约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> stuinfo <span class=\"keyword\">DROP</span> INDEX seat;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span>删除外键</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">DROP</span> <span class=\"keyword\">FOREIGN</span> KEY majorid;</span><br></pre></td></tr></table></figure>\n<h1 id=\"二：事务\"><a href=\"#二：事务\" class=\"headerlink\" title=\"二：事务\"></a>二：事务</h1><p>事务是在数据库上按照一定的逻辑顺序执行的任务序列，既可以由用户手动执行，也可以由某种数据库程序自动执行。</p>\n<p>事务实际上就是对数据库的一个或者多个更改。当你在某张表上创建更新或者删除记录的时，你就已经在使用事务了。控制事务以保证数据完整性，并对数据库错误做出处理，对数据库来说非常重要。</p>\n<p>实践中，通常会将很多 SQL 查询组合在一起，并将其作为某个事务一部分来执行。</p>\n<p>事务具有以下四个标准属性，通常用缩略词 ACID 来表示：</p>\n<ul>\n<li>原子性：保证任务中的所有操作都执行完毕；否则，事务会在出现错误时终止，并回滚之前所有操作到原始状态。</li>\n<li>一致性：如果事务成功执行，则数据库的状态得到了进行了正确的转变。</li>\n<li>隔离性：保证不同的事务相互独立、透明地执行。</li>\n<li>持久性：即使出现系统故障，之前成功执行的事务的结果也会持久存在。<h2 id=\"1-事务的使用\"><a href=\"#1-事务的使用\" class=\"headerlink\" title=\"1.事务的使用\"></a>1.事务的使用</h2><blockquote>\n<p>事务的创建</p>\n</blockquote>\n</li>\n</ul>\n<p>隐式事务：事务没有明显的开启和结束的标记，比如insert、update、delete语句。</p>\n<p>显式事务：事务具有明显的开启和结束的标记<br>前提：必须先设置自动提交功能为禁用，禁用语句为：<code>set autocommit=0</code></p>\n<p>一个标准的事务流程如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 步骤一：开启事务</span><br><span class=\"line\"><span class=\"keyword\">set</span> autocommit<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">start</span> transaction;  # 可选</span><br><span class=\"line\"># 步骤二：编写事务中的<span class=\"keyword\">sql</span>语句(<span class=\"keyword\">select</span> <span class=\"keyword\">insert</span> update <span class=\"keyword\">delete</span>)</span><br><span class=\"line\">语句一;</span><br><span class=\"line\">语句二;</span><br><span class=\"line\">...</span><br><span class=\"line\"># 步骤三：结束事务</span><br><span class=\"line\"><span class=\"keyword\">commit</span>; # 提交事务</span><br><span class=\"line\"><span class=\"keyword\">rollback</span>; # 回滚事务</span><br></pre></td></tr></table></figure>\n\n<p>示例如下：<br>先插入数据，方便事务操作：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> money <span class=\"type\">INT</span>;</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> stuinfo(id, stuname, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUE</span> (<span class=\"number\">1</span>, &quot;张三&quot;, <span class=\"number\">200</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> stuinfo(id, stuname, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUE</span> (<span class=\"number\">2</span>, &quot;罗老师&quot;, <span class=\"number\">600</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/8ed995ef3307458886b08df06de43ed8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">然后张三和罗老师进行转账业务，罗老师给张三150元拿到张三事迹的使用权。转账流程如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 开始事务操作</span><br><span class=\"line\"><span class=\"keyword\">SET</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">350</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">450</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">COMMIT</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/8e30a5fa5f5541be80478285520ab557.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果没有执行到<code>commit</code>，那么操作是不会真正被执行的，比如下面的操作，在commit之前执行回滚，那么数据就不会发生变化。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">5000</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">4500</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span>;</span><br><span class=\"line\">#<span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/4fe9beaa989e411d9dacd25449256405.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-事务的隔离级别\"><a href=\"#2-事务的隔离级别\" class=\"headerlink\" title=\"2.事务的隔离级别\"></a>2.事务的隔离级别</h2><p>对于同时运行的多个事务，当这些事务访问数据库中相同的数据时，如果没有采取必要的隔离机制，就会导致各种并发问题：</p>\n<ul>\n<li>脏读：对于两个事务T1、T2，T1读取了已经被T2更新但还没有被提交的字段之后，若T2回滚，则T1读取的内容就是临时且无效的。</li>\n<li>不可重复读：对于两个事务T1、T2，T1读取了一个字段，然后T2更新了该字段之后，T1再次读取了同一个字段，值就不同了。</li>\n<li>幻读：对于两个事务T1、T2，T1从一个表中读取了一个字段，然后T2在该表中插入了一些新的行，之后如果T1再次读取同一个表，就会多出几行。</li>\n</ul>\n<p>不可重复读和幻读比较：两者有些相似，但是前者针对的是update或delete，后者针对的insert。</p>\n<p>鉴于上述并发问题，人们就为事务设置了隔离性，即数据库系统必须具有隔离并发运行各个事务的能力，使他们不会互相影响，避免各种并发问题。</p>\n<p>数据库提供四种事务隔离级别：<br><img src=\"https://img-blog.csdnimg.cn/ddcfe66fe9734b2aa0bfdbe26a114d8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li><strong>Read uncommitted</strong>：读未提交，顾名思义，就是可以读到未提交的内容。因此，在这种隔离级别下，查询是不会加锁的，也由于查询的不加锁，所以这种隔离级别的一致性是最差的，可能会产生“脏读”、“不可重复读”、“幻读”。如无特殊情况，基本是不会使用这种隔离级别的。</li>\n<li><strong>Read committed</strong>：读提交，顾名思义，就是只能读到已经提交了的内容。这是各种系统中最常用的一种隔离级别，保证了一个事务不会读到另一个并行事务已修改但未提交的数据，避免了“脏读取”，但不能避免“幻读”和“不可重复读取”。该级别适用于大多数系统。这里多说点：那为什么“读提交”同“读未提交”一样，都没有查询加锁，但是却能够避免脏读呢？这就要说道另一个机制“快照（snapshot）”，而这种既能保证一致性又不加锁的读也被称为“快照读（Snapshot Read）”假设没有“快照读”，那么当一个更新的事务没有提交时，另一个对更新数据进行查询的事务会因为无法查询而被阻塞，这种情况下，并发能力就相当的差。而“快照读”就可以完成高并发的查询，不过，“读提交”只能避免“脏读”，并不能避免“不可重复读”和“幻读”。</li>\n<li><strong>Repeatable read</strong>：可重复读，顾名思义，就是专门针对“不可重复读”这种情况而制定的隔离级别，自然，它就可以有效的避免“不可重复读”。在这个级别下，普通的查询同样是使用的“快照读”，但是，和“读提交”不同的是，当事务启动时，就不允许进行“修改操作（Update）”了，而“不可重复读”恰恰是因为两次读取之间进行了数据的修改，因此，“可重复读”能够有效的避免“不可重复读”，但却避免不了“幻读”，因为幻读是由于“插入或者删除操作（Insert or Delete）”而产生的。</li>\n<li><strong>Serializable</strong>：这是数据库最高的隔离级别，这种级别下，事务“串行化顺序执行”，也就是一个一个排队执行。这种级别下，“脏读”、“不可重复读”、“幻读”都可以被避免，但是执行效率奇差，性能开销也最大，所以基本没人会用。</li>\n</ul>\n<p>Oracle支持的2种事务隔离级别：READ COMMITED和SERIALIZABLE，Oracle默认的事务隔离级别是READ COMMITED。而MySQL支持四种事务隔离级别，MySQL的默认事务隔离级别是：REPEATABLE READ。</p>\n<p>查看当前的事务隔离级别：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 以下四种方法都可以查看</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;transaction%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%iso%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> @<span class=\"variable\">@GLOBAL</span>.transaction_isolation;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> @<span class=\"variable\">@SESSION</span>.transaction_isolation;</span><br></pre></td></tr></table></figure>\n<p>注意<code>show variables like &#39;tx_isolation%&#39;;</code>已经在MySQL5.7.20后被弃用。</p>\n<p>设置隔离级别：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 设置全局隔离级别</span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> transaction isolation level REPEATABLE READ;</span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> transaction isolation level READ COMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> transaction isolation level READ UNCOMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> transaction isolation level SERIALIZABLE;</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置会话隔离级别 </span><br><span class=\"line\"><span class=\"keyword\">set</span> session transaction isolation level REPEATABLE READ;</span><br><span class=\"line\"><span class=\"keyword\">set</span> session transaction isolation level READ COMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">set</span> session transaction isolation level READ UNCOMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">set</span> session transaction isolation level SERIALIZABLE;</span><br><span class=\"line\"></span><br><span class=\"line\">#通过配置文件设置隔离级别（重启生效）</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">transaction<span class=\"operator\">-</span>isolation <span class=\"operator\">=</span> REPEATABLE<span class=\"operator\">-</span>READ</span><br><span class=\"line\">transaction<span class=\"operator\">-</span>isolation <span class=\"operator\">=</span> READ<span class=\"operator\">-</span>COMMITTED</span><br><span class=\"line\">transaction<span class=\"operator\">-</span>isolation <span class=\"operator\">=</span> READ<span class=\"operator\">-</span>UNCOMMITTED</span><br><span class=\"line\">transaction<span class=\"operator\">-</span>isolation <span class=\"operator\">=</span> SERIALIZABLE</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-回滚点的演示\"><a href=\"#3-回滚点的演示\" class=\"headerlink\" title=\"3.回滚点的演示\"></a>3.回滚点的演示</h2><p>事务里面还有一个关键词<code>savepoint</code>，功能类似于保存点，用法是：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">savepoint</span> 节点名;</span><br></pre></td></tr></table></figure>\n<p>示例如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> autocommit<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money<span class=\"operator\">=</span><span class=\"number\">300</span> <span class=\"keyword\">WHERE</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">SAVEPOINT</span> a; # 设置保存点</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money<span class=\"operator\">=</span><span class=\"number\">100</span> <span class=\"keyword\">WHERE</span> id<span class=\"operator\">=</span><span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span> <span class=\"keyword\">TO</span> a; # 回滚到保存点</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/a4251bbc661d47678601ea58774c1f39.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"三：视图\"><a href=\"#三：视图\" class=\"headerlink\" title=\"三：视图\"></a>三：视图</h1><p>MySQL 从5.0.1版本开始提供视图功能，视图（View）是一种虚拟存在的表，同真实表一样，视图也由列和行构成，但视图并不实际存在于数据库中。行和列的数据来自于定义视图的查询中所使用的表，并且还是在使用视图时动态生成的。</p>\n<p>数据库中只存放了视图的定义，并没有存放视图中的数据，这些数据都存放在定义视图查询所引用的真实表中。使用视图查询数据时，数据库会从真实表中取出对应的数据。因此，视图中的数据是依赖于真实表中的数据的。一旦真实表中的数据发生改变，显示在视图中的数据也会发生改变。</p>\n<p>视图可以从原有的表上选取对用户有用的信息，那些对用户没用，或者用户没有权限了解的信息，都可以直接屏蔽掉，作用类似于筛选。这样做既使应用简单化，也保证了系统的安全。</p>\n<p>视图的应用场景：</p>\n<ul>\n<li>多个地方用到同样的查询结果</li>\n<li>该查询结果使用的sql语句较为复杂</li>\n</ul>\n<p>视图不同于数据表，他们的区别在于以下几点：</p>\n<ul>\n<li>视图不是数据库中真实的表，而是一张虚拟表，其结构和数据是建立在对数据中真实表的查询基础上的。</li>\n<li>存储在数据库中的查询操作 SQL 语句定义了视图的内容，列数据和行数据来自于视图查询所引用的实际表，引用视图时动态生成这些数据。</li>\n<li>视图没有实际的物理记录，不是以数据集的形式存储在数据库中的，它所对应的数据实际上是存储在视图所引用的真实表中的。</li>\n<li>视图是数据的窗口，而表是内容。表是实际数据的存放单位，而视图只是以不同的显示方式展示数据，其数据来源还是实际表。</li>\n<li>视图是查看数据表的一种方法，可以查询数据表中某些字段构成的数据，只是一些 SQL 语句的集合。从安全的角度来看，视图的数据安全性更高，使用视图的用户不接触数据表，不知道表结构。</li>\n<li>视图的建立和删除只影响视图本身，不影响对应的基本表。</li>\n</ul>\n<p>视图与表在本质上虽然不相同，但视图经过定义以后，结构形式和表一样，可以进行查询、修改、更新和删除等操作。同时，视图具有如下优点：</p>\n<ul>\n<li><strong>定制用户数据，聚焦特定的数据</strong>：在实际的应用过程中，不同的用户可能对不同的数据有不同的要求。例如，当数据库同时存在时，如学生基本信息表、课程表和教师信息表等多种表同时存在时，可以根据需求让不同的用户使用各自的数据。学生查看修改自己基本信息的视图，安排课程人员查看修改课程表和教师信息的视图，教师查看学生信息和课程信息表的视图。</li>\n<li><strong>简化数据操作</strong>：在使用查询时，很多时候要使用聚合函数，同时还要显示其他字段的信息，可能还需要关联到其他表，语句可能会很长，如果这个动作频繁发生的话，可以创建视图来简化操作。</li>\n<li><strong>提高数据的安全性</strong>：视图是虚拟的，物理上是不存在的。可以只授予用户视图的权限，而不具体指定使用表的权限，来保护基础数据的安全。</li>\n<li><strong>共享所需数据</strong>：通过使用视图，每个用户不必都定义和存储自己所需的数据，可以共享数据库中的数据，同样的数据只需要存储一次。</li>\n<li><strong>更改数据格式</strong>：通过使用视图，可以重新格式化检索出的数据，并组织输出到其他应用程序中。</li>\n<li><strong>重用 SQL 语句</strong>：视图提供的是对查询操作的封装，本身不包含数据，所呈现的数据是根据视图定义从基础表中检索出来的，如果基础表的数据新增或删除，视图呈现的也是更新后的数据。视图定义后，编写完所需的查询，可以方便地重用该视图。</li>\n</ul>\n<p>使用视图的时候，还应该注意以下几点：</p>\n<ul>\n<li>创建视图需要足够的访问权限。</li>\n<li>创建视图的数目没有限制。</li>\n<li>视图可以嵌套，即从其他视图中检索数据的查询来创建视图。</li>\n<li>视图不能索引，也不能有关联的触发器、默认值或规则。</li>\n<li>视图可以和表一起使用。</li>\n<li>视图不包含数据，所以每次使用视图时，都必须执行查询中所需的任何一个检索操作。如果用多个连接和过滤条件创建了复杂的视图或嵌套了视图，可能会发现系统运行性能下降得十分严重。因此，在部署大量视图应用时，应该进行系统测试。</li>\n</ul>\n<h2 id=\"1-视图的创建\"><a href=\"#1-视图的创建\" class=\"headerlink\" title=\"1.视图的创建\"></a>1.视图的创建</h2><p>创建视图的语法：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">view</span> 视图名</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">查询语句;</span><br></pre></td></tr></table></figure>\n<p>使用示例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USE myemployees;</span><br><span class=\"line\"># 查询邮箱中包含a字符的员工名、部门名和工种信息</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> myv1  # 创建视图</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> last_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/6c7a50272c0d4f44b2fa956865572c82.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/5978b68430954b6fb4a97e00c7e9239c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-视图的修改\"><a href=\"#2-视图的修改\" class=\"headerlink\" title=\"2.视图的修改\"></a>2.视图的修改</h2><p>方式一：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">view</span> 视图名</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">查询语句;</span><br></pre></td></tr></table></figure>\n<p>使用示例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE <span class=\"keyword\">VIEW</span> myv1</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> last_name, first_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/cfa51b36bcb24eb5adc103126aeb2efc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>方式二：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">view</span> 视图名</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">查询语句;</span><br></pre></td></tr></table></figure>\n<p>使用示例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">VIEW</span> myv1</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> first_name, last_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> e.first_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%s%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/16261ec448d54c589d0f74b1646a7d5b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-视图的查看和删除\"><a href=\"#3-视图的查看和删除\" class=\"headerlink\" title=\"3.视图的查看和删除\"></a>3.视图的查看和删除</h2><p>查看语法：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DESC</span> myv1;  # 查看视图结构</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> myv1;  # 可以查看视图的创建语句</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/30f8ab4509704c328b3ebed0b3a5d797.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">查看得到的sql如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> ALGORITHM <span class=\"operator\">=</span> UNDEFINED DEFINER <span class=\"operator\">=</span> `root` @`localhost` <span class=\"keyword\">SQL</span> SECURITY DEFINER <span class=\"keyword\">VIEW</span> `myv1` <span class=\"keyword\">AS</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">  `e`.`first_name` <span class=\"keyword\">AS</span> `first_name`,</span><br><span class=\"line\">  `e`.`last_name` <span class=\"keyword\">AS</span> `last_name`,</span><br><span class=\"line\">  `d`.`department_name` <span class=\"keyword\">AS</span> `department_name`,</span><br><span class=\"line\">  `j`.`job_title` <span class=\"keyword\">AS</span> `job_title` </span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  (</span><br><span class=\"line\">    (</span><br><span class=\"line\">      `employees` `e` </span><br><span class=\"line\">      <span class=\"keyword\">JOIN</span> `departments` `d` </span><br><span class=\"line\">        <span class=\"keyword\">ON</span> (</span><br><span class=\"line\">          (</span><br><span class=\"line\">            `e`.`department_id` <span class=\"operator\">=</span> `d`.`department_id`</span><br><span class=\"line\">          )</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ) </span><br><span class=\"line\">    <span class=\"keyword\">JOIN</span> `jobs` `j` </span><br><span class=\"line\">      <span class=\"keyword\">ON</span> ((`j`.`job_id` <span class=\"operator\">=</span> `e`.`job_id`))</span><br><span class=\"line\">  ) </span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> (`e`.`first_name` <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%s%&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>删除语法：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">view</span> 视图名, 视图名,...</span><br></pre></td></tr></table></figure>\n\n<p>以下是所有的SQL代码，可以复制下来自行调试：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 常见约束</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">含义：一种限制，用于限制表中的数据，为了保证表中数据的准确和可靠性</span></span><br><span class=\"line\"><span class=\"comment\">分类：六大约束</span></span><br><span class=\"line\"><span class=\"comment\">    NOT NULL：非空约束，用于保证该字段的值不能为空</span></span><br><span class=\"line\"><span class=\"comment\">    DEFAULT：默认约束，用于保证该字段有默认值</span></span><br><span class=\"line\"><span class=\"comment\">    PRIMARY KEY：主键约束，用于保证该字段唯一且非空</span></span><br><span class=\"line\"><span class=\"comment\">    UNIQUE：唯一约束，用于保证该字段具有唯一性，但可以为空</span></span><br><span class=\"line\"><span class=\"comment\">    CHECK：检查约束（mysql中不支持，如果写了也不会报错）</span></span><br><span class=\"line\"><span class=\"comment\">    FOREIGN KEY：外键约束，用于限制两个表的关系，保证该字段的值必须来自于主表关联列的值</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">添加约束的时机：</span></span><br><span class=\"line\"><span class=\"comment\">    1. 创建表时</span></span><br><span class=\"line\"><span class=\"comment\">    2. 修改表时</span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">约束的添加分类：</span></span><br><span class=\"line\"><span class=\"comment\">    列级约束：六大约束语法都支持，但外键约束没有效果</span></span><br><span class=\"line\"><span class=\"comment\">    表级约束：除了非空和默认约束，其他都支持</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 创建表时添加列级约束</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE students;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo (</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY, # 主键约束</span><br><span class=\"line\">  stuName <span class=\"type\">VARCHAR</span> (<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>, # 非空约束</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">CHECK</span> (gender <span class=\"operator\">=</span> &quot;男&quot; <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> &quot;女&quot;), # 检查约束</span><br><span class=\"line\">  seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>, # 唯一约束</span><br><span class=\"line\">  age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>, # 默认约束</span><br><span class=\"line\">  majorId <span class=\"type\">INT</span> <span class=\"keyword\">REFERENCES</span> major(id) # 外键约束</span><br><span class=\"line\">) ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> major(</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  majorName <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建表时添加表级约束</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">表级约束在各个字段的最下面</span></span><br><span class=\"line\"><span class=\"comment\">语法：constraint 约束名 约束类型(字段名)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY(id), # 主键</span><br><span class=\"line\">  <span class=\"keyword\">UNIQUE</span>(seat), # 唯一键</span><br><span class=\"line\">  <span class=\"keyword\">CHECK</span>(gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;男&#x27;</span> <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> <span class=\"string\">&#x27;女&#x27;</span>), # 检查</span><br><span class=\"line\">  <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id) # 外键</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"># 通用的写法</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo (</span><br><span class=\"line\">  id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  stuName <span class=\"type\">VARCHAR</span> (<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">CHECK</span> (gender <span class=\"operator\">=</span> &quot;男&quot; <span class=\"keyword\">OR</span> gender <span class=\"operator\">=</span> &quot;女&quot;),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>,</span><br><span class=\"line\">  majorId <span class=\"type\">INT</span>,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id)</span><br><span class=\"line\">) ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改表时添加约束</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">添加列级约束：</span></span><br><span class=\"line\"><span class=\"comment\">alter table 表名 modify column 字段名 字段类型 新约束;</span></span><br><span class=\"line\"><span class=\"comment\">添加表级约束：</span></span><br><span class=\"line\"><span class=\"comment\">alter table 表名 [constraint 约束名] 约束类型(字段名) [外键的引用]</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> stuinfo(</span><br><span class=\"line\">  id <span class=\"type\">INT</span>,</span><br><span class=\"line\">  stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">  gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">  seat <span class=\"type\">INT</span>,</span><br><span class=\"line\">  age <span class=\"type\">INT</span>,</span><br><span class=\"line\">  majorid <span class=\"type\">INT</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">1.</span>添加非空约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span>添加默认约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> age <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span>添加主键约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> id <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY;  # 列级约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">PRIMARY</span> KEY(id);  # 表级约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span>添加唯一约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> seat <span class=\"type\">INT</span> <span class=\"keyword\">UNIQUE</span>;  # 列级约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">UNIQUE</span>(seat);  # 表级约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span>添加外键</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id);  # 默认约束名</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> fk_stuinfo_major <span class=\"keyword\">FOREIGN</span> KEY(majorid) <span class=\"keyword\">REFERENCES</span> major(id);  # 自定义约束名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"># 修改表时删除约束</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">1.</span>删除非空约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> stuname <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span>删除默认约束 </span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo MODIFY <span class=\"keyword\">COLUMN</span> age <span class=\"type\">INT</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span>删除主键约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">DROP</span> <span class=\"keyword\">PRIMARY</span> KEY;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span>删除唯一约束</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> stuinfo <span class=\"keyword\">DROP</span> INDEX seat;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span>删除外键</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">DROP</span> <span class=\"keyword\">FOREIGN</span> KEY majorid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">事务的特性：</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"># 插入数据，为事务操作做准备</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> stuinfo <span class=\"keyword\">ADD</span> money <span class=\"type\">INT</span>;</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> stuinfo(id, stuname, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUE</span> (<span class=\"number\">1</span>, &quot;张三&quot;, <span class=\"number\">200</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> stuinfo(id, stuname, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUE</span> (<span class=\"number\">2</span>, &quot;罗老师&quot;, <span class=\"number\">600</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"># 开始事务操作</span><br><span class=\"line\"><span class=\"keyword\">SET</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">30</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money <span class=\"operator\">=</span> <span class=\"number\">40</span> <span class=\"keyword\">WHERE</span> id <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">COMMIT</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"># 事务隔离级别</span><br><span class=\"line\"># 查看当前事务隔离级别</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;transaction%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> @<span class=\"variable\">@GLOBAL</span>.transaction_isolation;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> @<span class=\"variable\">@SESSION</span>.transaction_isolation;</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%iso%&#x27;</span>;</span><br><span class=\"line\"># 设置全局隔离级别</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> TRANSACTION ISOLATION LEVEL REPEATABLE READ;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> TRANSACTION ISOLATION LEVEL READ COMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> TRANSACTION ISOLATION LEVEL SERIALIZABLE;</span><br><span class=\"line\"># 设置会话隔离级别 </span><br><span class=\"line\"><span class=\"keyword\">SET</span> SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> autocommit<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money<span class=\"operator\">=</span><span class=\"number\">300</span> <span class=\"keyword\">WHERE</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">SAVEPOINT</span> a; # 设置保存点</span><br><span class=\"line\">UPDATE stuinfo <span class=\"keyword\">SET</span> money<span class=\"operator\">=</span><span class=\"number\">100</span> <span class=\"keyword\">WHERE</span> id<span class=\"operator\">=</span><span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span> <span class=\"keyword\">TO</span> a; # 回滚到保存点</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> stuinfo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 视图</span><br><span class=\"line\">USE myemployees;</span><br><span class=\"line\"># 查询邮箱中包含a字符的员工名、部门名和工种信息</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> myv1  # 创建视图</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> last_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE <span class=\"keyword\">VIEW</span> myv1</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> last_name, first_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">VIEW</span> myv1</span><br><span class=\"line\"><span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> first_name, last_name, department_name, job_title</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> departments d <span class=\"keyword\">ON</span> e.department_id <span class=\"operator\">=</span> d.department_id</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> jobs j <span class=\"keyword\">ON</span> j.job_id <span class=\"operator\">=</span> e.job_id</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> e.first_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%s%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> myv1 <span class=\"keyword\">WHERE</span> last_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%a%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DESC</span> myv1;</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> myv1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> ALGORITHM <span class=\"operator\">=</span> UNDEFINED DEFINER <span class=\"operator\">=</span> `root` @`localhost` <span class=\"keyword\">SQL</span> SECURITY DEFINER <span class=\"keyword\">VIEW</span> `myv1` <span class=\"keyword\">AS</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">  `e`.`first_name` <span class=\"keyword\">AS</span> `first_name`,</span><br><span class=\"line\">  `e`.`last_name` <span class=\"keyword\">AS</span> `last_name`,</span><br><span class=\"line\">  `d`.`department_name` <span class=\"keyword\">AS</span> `department_name`,</span><br><span class=\"line\">  `j`.`job_title` <span class=\"keyword\">AS</span> `job_title` </span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  (</span><br><span class=\"line\">    (</span><br><span class=\"line\">      `employees` `e` </span><br><span class=\"line\">      <span class=\"keyword\">JOIN</span> `departments` `d` </span><br><span class=\"line\">        <span class=\"keyword\">ON</span> (</span><br><span class=\"line\">          (</span><br><span class=\"line\">            `e`.`department_id` <span class=\"operator\">=</span> `d`.`department_id`</span><br><span class=\"line\">          )</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ) </span><br><span class=\"line\">    <span class=\"keyword\">JOIN</span> `jobs` `j` </span><br><span class=\"line\">      <span class=\"keyword\">ON</span> ((`j`.`job_id` <span class=\"operator\">=</span> `e`.`job_id`))</span><br><span class=\"line\">  ) </span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> (`e`.`first_name` <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%s%&#x27;</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"Tomcat的安装配置与使用，及常用端口大全","date":"2021-09-07T15:19:01.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/5.jpg","_content":"\n# 零：Tomcat的介绍\nTomcat是Apache 软件基金会的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。\n\nTomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。\n\n诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。另外，Tomcat和IIS等Web服务器一样，具有处理HTML页面的功能，另外它还是一个Servlet和JSP容器，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态HTML的能力不如Apache服务器。目前Tomcat最新版本为10.0.5。\n\n# 一：下载Tomcat\n首先前往官网：[tomcat下载](https://tomcat.apache.org/)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5eabd2463b624bf091d8c0dbef83dd3b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)我这里是下载了Tomcat9，点进Tomcat9，我使用的是64位绿色版。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/6ac4f8bd57af42a693e5683b23076f99.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 二：安装Tomcat\n因为我是下载了绿色版的，直接解压就行。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1f9ca1560921497895f37a31f209173e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)目录介绍：\n```\nbin\t\t\t\t\t专门用来存放Tomcat服务器的可执行程序\nconf                专门用来存放Tomcat服务器的配置文件\nlib\t\t\t        专门用来存放Tomcat服务器的jar包\nlogs\t\t\t\t专门用来存放Tomcat服务器的运行时输出的日记信息\ntemp\t\t\t\t专门用来存放Tomcat服务器运行时产生的临时数据\nwebapps\t\t\t    专门用来存放部署的Web工程\nwork\t\t\t\t是Tomcat工作时的目录，用来存放Tomcat运行时jsp翻译为Servlet的源码，和Session钝化的目录\n```\n\n\n# 三：启动Tomcat服务器\n找到Tomcat目录下的bin目录下的startup.bat文件，双击启动。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5a4fd549dc814c249b5724d7a6404f88.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n发现出现了乱码，这时候可以在配置文件修改编码方式。打开conf文件夹下的logging.properties文件，找到`java.util.logging.ConsoleHandler.encoding = UTF-8`，将UTF-8改为GBK\n![在这里插入图片描述](https://img-blog.csdnimg.cn/bbe9b574762d4b89b5c4719b7a49ac8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n然后保存修改，重启服务器就好了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b7d489e0e78e4144b87ed05dcedb8424.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果点击startup.bat时黑窗一闪而过，那就是因为没有配置好JAVA_HOME环境变量，JAVA_HOME时JDK的安装目录。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8aefc2d067874a849113e01a7cc4c875.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n除了双击startup.bat启动，还可以用命令行的方式启动，命令行进入Tomcat的bin目录：输入命令`catalina run`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a272c5c7e6704b75ad89c23dc4c8dbb9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 四：停止Tomcat服务器\n+ 直接关闭tomcat窗口\n+ 使用快捷键ctrl+c\n+ 找到Tomcat的bin目录下的shutdown.bat，双击停止服务器(该方法为主要方法)\n\n# 五：修改Tomcat的端口号\nTomcat默认端口号是8080，但8080端口是被用于WWW代理服务的，可以实现网页浏览，Vue项目的预览就是开启8080端口，因此该端口经常被占用，因此通常都需要修改端口号。\n\n端口号范围是1-65535，1000以内的端口号是系统使用的，修改端口尽量不要使用1000以内的，但是我老师要求修改为端口号为88。修改前还可以看看端口占用情况，打开命令提示符，输入`netstat -ano`。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d12842b23f034b0ab832d8f9f6b09450.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n现在来修改Tomcat端口号，找到Tomcat目录下的conf目录，找到server.xml并打开，找到Connector标签修改端口号。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/34e05a82f35e48459743cbc4a3c63ded.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n修改完端口号后需要重启才能生效，成功后效果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8199c3ddf8fb4f60bbe9c06773c7aace.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 六：在idea中整合Tomcat\n打开idea的设置，打开应用程序服务器，点击加号添加：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5cbc65ea639e44a8b7345fe86167b9a7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)选中文件夹即可，选中一个，其余的会自动填写：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f50d3586951242c583518624fab12772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b47c4132ea6d4214b6a8d3c19fdea6a5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n# 七：常用端口\n端口：0\n服务：Reserved\n说明：通常用于分析操作系统。这一方法能够工作是因为在一些系统中“0”是无效端口，当你试图使用通常的闭合端口连接它时将产生不同的结果。一种典型的扫描，使用IP地址为0.0.0.0，设置ACK位并在以太网层广播。\n\n端口：1\n服务：tcpmux\n说明：这显示有人在寻找SGI Irix机器。Irix是实现tcpmux的主要提供者，默认情况下tcpmux在这种系统中被打开。Irix机器在发布是含有几个默认的无密码的帐户，如：IP、GUEST UUCP、NUUCP、DEMOS 、TUTOR、DIAG、OUTOFBOX等。许多管理员在安装后忘记删除这些帐户。因此HACKER在INTERNET上搜索tcpmux并利用这些帐户。\n\n端口：7\n服务：Echo\n说明：能看到许多人搜索Fraggle放大器时，发送到X.X.X.0和X.X.X.255的信息。\n\n端口：19\n服务：Character Generator\n说明：这是一种仅仅发送字符的服务。UDP版本将会在收到UDP包后回应含有垃圾字符的包。TCP连接时会发送含有垃圾字符的数据流直到连接关闭。HACKER利用IP欺骗可以发动DoS攻击。伪造两个chargen服务器之间的UDP包。同样Fraggle DoS攻击向目标地址的这个端口广播一个带有伪造受害者IP的数据包，受害者为了回应这些数据而过载。\n\n端口：21\n服务：FTP\n说明：FTP服务器所开放的端口，用于上传、下载。最常见的攻击者用于寻找打开anonymous的FTP服务器的方法。这些服务器带有可读写的目录。木马Doly Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade Runner所开放的端口。\n\n端口：22\n服务：ssh\n说明：PcAnywhere建立的TCP和这一端口的连接可能是为了寻找ssh。这一服务有许多弱点，如果配置成特定的模式，许多使用RSAREF库的版本就会有不少的漏洞存在。\n\n端口：23\n服务：Telnet\n说明：远程登录，**者在搜索远程登录UNIX的服务。大多数情况下扫描这一端口是为了找到机器运行的操作系统。还有使用其他技术，**者也会找到密码。木马Tiny Telnet Server就开放这个端口。\n\n端口：25\n服务：SMTP\n说明：SMTP服务器所开放的端口，用于发送邮件。**者寻找SMTP服务器是为了传递他们的SPAM。**者的帐户被关闭，他们需要连接到高带宽的E-MAIL服务器上，将简单的信息传递到不同的地址。木马Antigen、Email Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口。\n\n端口：31\n服务：MSG Authentication\n说明：木马Master Paradise、Hackers Paradise开放此端口。\n\n端口：42\n服务：WINS Replication\n说明：WINS复制\n\n端口：53\n服务：Domain Name Server（DNS）\n说明：DNS服务器所开放的端口，**者可能是试图进行区域传递（TCP），欺骗DNS（UDP）或隐藏其他的通信。因此防火墙常常过滤或记录此端口。\n\n端口：67\n服务：Bootstrap Protocol Server\n说明：通过DSL和Cable modem的防火墙常会看见大量发送到广播地址255.255.255.255的数据。这些机器在向DHCP服务器请求一个地址。HACKER常进入它们，分配一个地址把自己作为局部路由器而发起大量中间人（man-in-middle）攻击。客户端向68端口广播请求配置，服务器向67端口广播回应请求。这种回应使用广播是因为客户端还不知道可以发送的IP地址。\n\n端口：69\n服务：Trival File Transfer\n说明：许多服务器与bootp一起提供这项服务，便于从系统下载启动代码。但是它们常常由于错误配置而使**者能从系统中窃取任何 文件。它们也可用于系统写入文件。\n\n端口：79\n服务：Finger Server\n说明：**者用于获得用户信息，查询操作系统，探测已知的缓冲区溢出错误，回应从自己机器到其他机器Finger扫描。\n\n端口：80\n服务：HTTP\n说明：用于网页浏览。木马Executor开放此端口。\n\n端口：99\n服务：gram Relay\n说明：后门程序ncx99开放此端口。\n\n端口：102\n服务：Message transfer agent(MTA)-X.400 over TCP/IP\n说明：消息传输代理。\n\n端口：109\n服务：Post Office Protocol -Version3\n说明：POP3服务器开放此端口，用于接收邮件，客户端访问服务器端的邮件服务。POP3服务有许多公认的弱点。关于用户名和密码交 换缓冲区溢出的弱点至少有20个，这意味着**者可以在真正登陆前进入系统。成功登陆后还有其他缓冲区溢出错误。\n\n端口：110\n服务：SUN公司的RPC服务所有端口\n说明：常见RPC服务有rpc.mountd、NFS、rpc.statd、rpc.csmd、rpc.ttybd、amd等\n\n端口：113\n服务：Authentication Service\n说明：这是一个许多计算机上运行的协议，用于鉴别TCP连接的用户。使用标准的这种服务可以获得许多计算机的信息。但是它可作为许多服务的记录器，尤其是FTP、POP、IMAP、SMTP和IRC等服务。通常如果有许多客户通过防火墙访问这些服务，将会看到许多这个端口的连接请求。记住，如果阻断这个端口客户端会感觉到在防火墙另一边与E-MAIL服务器的缓慢连接。许多防火墙支持TCP连接的阻断过程中发回RST。这将会停止缓慢的连接。\n\n端口：119\n服务：Network News Transfer Protocol\n说明：NEWS新闻组传输协议，承载USENET通信。这个端口的连接通常是人们在寻找USENET服务器。多数ISP限制，只有他们的客户才能访问他们的新闻组服务器。打开新闻组服务器将允许发/读任何人的帖子，访问被限制的新闻组服务器，匿名发帖或发送SPAM。\n\n端口：135\n服务：Location Service\n说明：Microsoft在这个端口运行DCE RPC end-point mapper为它的DCOM服务。这与UNIX 111端口的功能很相似。使用DCOM和RPC的服务利用计算机上的end-point mapper注册它们的位置。远端客户连接到计算机时，它们查找end-point mapper找到服务的位置。HACKER扫描计算机的这个端口是为了找到这个计算机上运行Exchange Server吗？什么版本？还有些DOS攻击直接针对这个端口。\n\n端口：137、138、139\n服务：NETBIOS Name Service\n说明：其中137、138是UDP端口，当通过网上邻居传输文件时用这个端口。而139端口：通过这个端口进入的连接试图获得NetBIOS/SMB服务。这个协议被用于windows文件和打印机共享和SAMBA。还有WINS Regisrtation也用它。\n\n端口：143\n服务：Interim Mail Access Protocol v2\n说明：和POP3的安全问题一样，许多IMAP服务器存在有缓冲区溢出漏洞。记住：一种LINUX蠕虫（admv0rm）会通过这个端口繁殖，因此许多这个端口的扫描来自不知情的已经被感染的用户。当REDHAT在他们的LINUX发布版本中默认允许IMAP后，这些漏洞变的很流行。这一端口还被用于IMAP2，但并不流行。\n\n端口：161\n服务：SNMP\n说明：SNMP允许远程管理设备。所有配置和运行信息的储存在数据库中，通过SNMP可获得这些信息。许多管理员的错误配置将被暴露在Internet。Cackers将试图使用默认的密码public、private访问系统。他们可能会试验所有可能的组合。SNMP包可能会被错误的指向用户的网络。\n\n端口：177\n服务：X Display Manager Control Protocol\n说明：许多**者通过它访问X-windows操作台，它同时需要打开6000端口。\n\n端口：389\n服务：LDAP、ILS\n说明：轻型目录访问协议和NetMeeting Internet Locator Server共用这一端口。\n\n端口：443\n服务：Https\n说明：网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP。\n\n端口：456\n服务：[NULL]\n说明：木马HACKERS PARADISE开放此端口。\n\n端口：513\n服务：Login,remote login\n说明：是从使用cable modem或DSL登陆到子网中的UNIX计算机发出的广播。这些人为**者进入他们的系统提供了信息。\n\n端口：544\n服务：[NULL]\n说明：kerberos kshell\n\n端口：548\n服务：Macintosh,File Services(AFP/IP)\n说明：Macintosh,文件服务。\n\n端口：553\n服务：CORBA IIOP （UDP）\n说明：使用cable modem、DSL或VLAN将会看到这个端口的广播。CORBA是一种面向对象的RPC系统。**者可以利用这些信息进入系统。\n\n端口：555\n服务：DSF\n说明：木马PhAse1.0、Stealth Spy、IniKiller开放此端口。\n\n端口：568\n服务：Membership DPA\n说明：成员资格 DPA。\n\n端口：569\n服务：Membership MSN\n说明：成员资格 MSN。\n\n端口：635\n服务：mountd\n说明：Linux的mountd Bug。这是扫描的一个流行BUG。大多数对这个端口的扫描是基于UDP的，但是基于TCP的mountd有所增加（mountd同时运行于两个端口）。记住mountd可运行于任何端口（到底是哪个端口，需要在端口111做portmap查询），只是Linux默认端口是635，就像NFS通常运行于2049端口。\n\n端口：636\n服务：LDAP\n说明：SSL（Secure Sockets layer）\n\n端口：666\n服务：Doom Id Software\n说明：木马Attack FTP、Satanz Backdoor开放此端口\n\n端口：993\n服务：IMAP\n说明：SSL（Secure Sockets layer）\n\n端口：1001、1011\n服务：[NULL]\n说明：木马Silencer、WebEx开放1001端口。木马Doly Trojan开放1011端口。\n\n# 八：计算机端口大全\n0端口：无效端口,通常用于分析操作系统\n1端口：传输控制协议端口服务多路开关选择器\n2端口：管理实用程序\n3端口：压缩进程\n5端口：远程作业登录\n7端口：回显\n9端口：丢弃\n11端口：在线用户\n13端口：时间\n17端口：每日引用\n18端口：消息发送协议\n19端口：字符发生器\n20端口：FTP文件传输协议(默认数据口)\n21端口：FTP文件传输协议(控制)\n22端口：SSH远程登录协议\n23端口：telnet(终端仿真协议),木马Tiny Telnet Server开放此端口\n24端口：预留给个人用邮件系统\n25端口：SMTP服务器所开放的端口，用于发送邮件\n27端口：NSW 用户系统 FE\n29端口：MSG ICP\n31端口：MSG验证,木马Master Paradise、HackersParadise开放此端口\n33端口：显示支持协议\n35端口：预留给个人打印机服务\n37端口：时间\n38端口：路由访问协议\n39端口：资源定位协议\n41端口：图形\n42端口：主机名服务\n43端口：who is服务\n44端口：MPM(消息处理模块)标志协议\n45端口：消息处理模块\n46端口：消息处理模块(默认发送口)\n47端口：NI FTP\n48端口：数码音频后台服务\n49端口：TACACS登录主机协议\n50端口：远程邮件检查协议\n51端口：IMP(接口信息处理机)逻辑地址维护\n52端口：施乐网络服务系统时间协议\n53端口：dns域名服务器\n54端口：施乐网络服务系统票据交换\n55端口：ISI图形语言\n56端口：施乐网络服务系统验证\n57端口：预留个人用终端访问\n58端口：施乐网络服务系统邮件\n59端口：预留个人文件服务\n60端口：未定义\n61端口：NI邮件\n62端口：异步通讯适配器服务\n63端口：whois++\n64端口：通讯接口\n65端口：TACACS数据库服务\n66端口：Oracle SQL*NET\n67端口：引导程序协议服务端\n68端口：引导程序协议客户端\n69端口：小型文件传输协议\n70端口：信息检索协议\n71端口：远程作业服务\n72端口：远程作业服务\n73端口：远程作业服务\n74端口：远程作业服务\n75端口：预留给个人拨出服务\n76端口：分布式外部对象存储\n77端口：预留给个人远程作业输入服务\n78端口：修正TCP\n79端口：查询远程主机在线用户等信息\n80端口：http,用于网页浏览,木马Executor开放此端口\n81端口：HOST2名称服务\n82端口：传输实用程序\n83端口：模块化智能终端ML设备\n84端口：公用追踪设备\n85端口：模块化智能终端ML设备\n86端口：Micro Focus Cobol编程语言\n87端口：预留给个人终端连接\n88端口：Kerberros安全认证系统\n89端口：SU/MIT telnet(终端仿真网关)\n90端口：DNSIX 安全属性标记图\n91端口：MIT Dover假脱机\n92端口：网络打印协议\n93端口：设备控制协议\n94端口：Tivoli对象调度\n96端口：DIXIE协议规范\n97端口：快速远程虚拟文件协议\n98端口：TAC新闻协议\n99端口：后门程序ncx99开放此端口\n100端口：未知用途\n101端口：NIC 主机名称服务\n102端口：消息传输代理\n103端口：Genesis 点对点传输网络\n105端口：信箱名称服务\n106端口：3COM-TSMUX开放端口\n107端口：远程Telnet服务\n108端口：SNA 网关访问服务\n109端口：POP2服务器开放此端口,用于接收邮件\n110端口：POP3服务器开放此端口,用于接收邮件\n111端口：SUN公司的RPC服务所有端口\n112端口：McIDAS 数据传输协议\n113端口：认证服务，用于鉴别TCP连接的用户\n114端口：音频新闻多点服务\n115端口：简单文件传输服务\n116端口：ANSA REX 通知\n117端口：UUCP 路径服务\n118端口：SQL 服务\n119端口：NEWS新闻组传输协议，承载USENET通信\n121端口：木马BO jammerkillahV开放端口\n122端口：SMAKY网络\n123端口：网络时间协议，蠕虫病毒会利用，一般关闭\n128端口：GSS X许可认证\n129端口：密码生成器协议\n130端口：Cisco软件开放端口\n131端口：Cisco软件开放端口\n132端口：Cisco软件开放端口\n133端口：统计服务\n134端口：INGRES-网络服务\n135端口：DCOM服务，冲击波病毒利用，不能关闭\n136端口：命名系统\n137端口：NETBIOS协议应用，为共享开放\n138端口：NETBIOS协议应用，为共享开放\n139端口：NETBIOS协议应用，为共享开放\n140端口：EMFIS数据服务\n141端口：EMFIS控制服务\n143端口：Interim邮件访问协议\n144端口：UMA软件开放端口\n145端口：UAAC协议\n149端口：AED 512仿真服务\n150端口：SQL(结构化查询语言)-网络\n152端口：后台文件传输协议\n156端口：SQL(结构化查询语言)服务\n158端口：PC邮件服务器\n159端口：NSS-路由\n160端口：SGMP-陷阱\n161端口：简单网络管理协议\n162端口：SNMP陷阱\n163端口：CMIP/TCP 管理\n164端口：CMIP/TCP 代理\n166端口：Sirius系统\n169端口：发送\n170端口：网络附言\n177端口：x显示管理控制协议，入侵者通过它访问X-windows操作台\n178端口：NextStep Window 服务\n179端口：边界网关协议\n180端口：图表\n181端口：统一\n184端口：OC服务器\n185端口：远程-KIS\n186端口：KIS 协议\n187端口：应用通信接口\n189端口：队列文件传输\n190端口：网关进入控制协议\n191端口：Prospero 目录服务\n192端口：OSU 网络监视系统\n193端口：Spider 远程控制协议\n194端口：多线交谈协议\n197端口：目录地址服务\n198端口：目录地址服务监视器\n200端口：IBM系统资源控制器\n201端口：AppleTalk(Mac机所用的网络协议)路由保证\n202端口：AppleTalk(Mac机所用的网络协议)Name Binding\n203端口：AppleTalk(Mac机所用的网络协议)未用端口\n204端口：AppleTalk(Mac机所用的网络协议)回显\n205端口：AppleTalk(Mac机所用的网络协议)未用端口\n206端口：AppleTalk(Mac机所用的网络协议)区信息\n207端口：AppleTalk(Mac机所用的网络协议)未用端口\n208端口：AppleTalk(Mac机所用的网络协议)未用端口\n209端口：快速邮件传输协议\n210端口：ANSI(美国国家标准协会)Z39.50\n211端口：Texas Instruments 914C/G终端\n213端口：IPX(以太网所用的协议)\n218端口：Netix消息记录协议\n219端口：Unisys ARPs\n220端口：交互邮件访问协议 v3\n223端口：证书分发中心\n224端口：masq拨号器\n241端口：预留端口 (224-241)\n245端口：链接\n246端口：显示系统协议\n257端口：安全电子交易系统\n258端口：Yak Winsock 个人聊天\n259端口：有效短程遥控\n260端口：开放端口\n261端口：IIOP 基于TLS/SSL的命名服务\n266端口：SCSI(小型计算机系统接口)on ST\n267端口：Tobit David服务层\n268端口：Tobit David复制\n281端口：个人连结\n282端口：Cable端口A/X\n286端口：FXP通信\n308端口：Novastor备份\n313端口：Magenta逻辑\n318端口：PKIX时间标记\n333端口：Texar安全端口\n344端口：Prospero数据存取协议\n345端口：Perf分析工作台\n346端口：Zebra服务器\n347端口：Fatmen服务器\n348端口：Cabletron管理协议\n358端口：Shrink可上网家电协议\n359端口：网络安全风险管理协议\n362端口：SRS发送\n363端口：RSVP隧道\n372端口：列表处理\n373端口：Legend公司\n374端口：Legend公司\n376端口：AmigaEnvoy网络查询协议\n377端口：NEC公司\n378端口：NEC公司\n379端口：TIA/EIA/IS-99调制解调器客户端\n380端口：TIA/EIA/IS-99调制解调器服务器\n381端口：hp(惠普)性能数据收集器\n382端口：hp(惠普)性能数据控制节点\n383端口：hp(惠普)性能数据警报管理\n384端口：远程网络服务器系统\n385端口：IBM应用程序\n386端口：ASA信息路由器定义文件.\n387端口：Appletalk更新路由.\n389端口：轻型目录访问协议\n395端口：网络监视控制协议\n396端口：Novell(美国Novell公司)Netware(Novell公司出的网络操作系统)over IP\n400端口：工作站解决方案\n401端口：持续电源\n402端口：Genie协议\n406端口：交互式邮件支持协议\n408端口：Prospero资源管理程序\n409端口：Prospero资源节点管理.\n410端口：DEC(数据设备公司)远程调试协议\n411端口：远程MT协议\n412端口：陷阱协定端口\n413端口：存储管理服务协议\n414端口：信息查询\n415端口：B网络\n423端口：IBM操作计划和控制开端\n424端口：IBM操作计划和控制追踪\n425端口：智能计算机辅助设计\n427端口：服务起位置\n434端口：移动ip代理\n435端口：移动ip管理\n443端口：基于TLS/SSL的网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP\n444端口：简单网络内存分页协议\n445端口：Microsoft-DS，为共享开放，震荡波病毒利用，一般应关闭\n446端口：DDM-远程关系数据库访问\n447端口：DDM-分布式文件管理\n448端口：DDM-使用安全访问远程数据库\n456端口：木马HACKERS PARADISE开放此端口\n458端口：apple quick time软件开放端口\n459端口：ampr-rcmd命令\n464端口：k密码服务\n469端口：广播控制协议\n470端口：scx-代理\n472端口：ljk-登陆\n481端口：Ph服务\n487端口：简单异步文件传输\n489端口：nest-协议\n491端口：go-登陆\n499端口：ISO ILL协议\n500端口：Internet密钥交换，Lsass开放端口，不能关闭\n509端口：陷阱\n510端口：FirstClass协议\n512端口：远程进程执行\n513端口：远程登陆\n514端口：cmd命令\n515端口：spooler\n516端口：可视化数据\n518端口：交谈\n519端口：unix时间\n520端口：扩展文件名称服务器\n525端口：时间服务\n526端口：新日期\n529端口：在线聊天系统服务\n530端口：远程过程调用\n531端口：聊天\n532端口：读新闻\n533端口：紧急广播端口\n534端口：MegaMedia管理端\n537端口：网络流媒体协议\n542端口：商业\n543端口：Kerberos(软件)v4/v5\n544端口：krcmd命令\n546端口：DHCPv6 客户端\n547端口：DHCPv6 服务器\n552端口：设备共享\n554端口：Real Time Stream控制协议\n555端口：木马PhAse1.0、Stealth Spy、IniKiller开放此端口\n556端口：远距离文件服务器\n563端口：基于TLS/SSL的网络新闻传输协议\n564端口：plan 9文件服务\n565端口：whoami查询\n566端口：streettalk\n567端口：banyan-rpc(远程过程调用)\n568端口：DPA成员资格\n569端口：MSN成员资格\n570端口：demon(调试监督程序)\n571端口：udemon(调试监督程序)\n572端口：声纳\n573端口：banyan-贵宾\n574端口：FTP软件代理系统\n581端口：Bundle Discovery 协议\n582端口：SCC安全\n583端口：Philips视频会议\n584端口：密钥服务器\n585端口：IMAP4+SSL (Use 993 instead)\n586端口：密码更改\n587端口：申请\n589端口：Eye连结\n595端口：CAB协议\n597端口：PTC名称服务\n598端口：SCO网络服务器管理3\n599端口：Aeolon Core协议\n600端口：Sun IPC(进程间通讯)服务器\n601端口：可靠系统登陆服务\n604端口：通道\n606端口：Cray统一资源管理\n608端口：发送人-传递/提供 文件传输器\n609端口：npmp-陷阱\n610端口：npmp-本地\n611端口：npmp-gui( 图形用户界面)\n612端口：HMMP指引\n613端口：HMMP操作\n614端口：SSL(加密套接字协议层)shell(壳)\n615端口：Internet配置管理\n616端口：SCO(Unix系统)系统管理服务器\n617端口：SCO桌面管理服务器\n619端口：Compaq(康柏公司)EVM\n620端口：SCO服务器管理\n623端口：ASF远程管理控制协议\n624端口：Crypto管理\n631端口：IPP (Internet打印协议)\n633端口：服务更新(Sterling软件)\n637端口：局域网服务器\n641端口：repcmd命令\n647端口：DHCP(动态主机配置协议)Failover\n648端口：注册登记协议(RRP)\n649端口：Cadview-3d软件协议\n666端口：木马Attack FTP、Satanz Backdoor开放此端口\n808端口：ccproxy http/gopher/ftp (over http)协议\n1001端口：木马Silencer，WebEx开放端口\n1011端口：木马Doly开放端口\n1024端口：动态端口的开始,木马yai开放端口\n1025端口：inetinfo.exe(互联网信息服务)木马netspy开放端口\n1026端口：inetinfo.exe(互联网信息服务)\n1027端口：应用层网关服务\n1030端口：应用层网关服务\n1031端口：BBN IAD\n1033端口：本地网络信息端口\n1034端口：同步通知\n1036端口：安全部分传输协议\n1070端口：木马Psyber Stream，Streaming Audio开放端口\n1071端口：网络服务开放端口\n1074端口：网络服务开放端口\n1080端口：Socks这一协议以通道方式穿过防火墙，允许防火墙后面的人通过一个IP地址访问INTERNET\n1110端口：卡巴斯基反病毒软件开放此端口\n1125端口：卡巴斯基反病毒软件开放此端口\n1203端口：许可证生效端口\n1204端口：登陆请求监听端口\n1206端口：Anthony数据端口\n1222端口：SNI R&D网络端口\n1233端口：普遍的附录服务器端口\n1234端口：木马SubSeven2.0、Ultors Trojan开放此端口\n1243端口：木马SubSeven1.0/1.9开放此端口\n1245端口：木马Vodoo，GabanBus，NetBus，Vodoo开放此端口\n1273端口：EMC-网关端口\n1289端口：JWalk服务器端口\n1290端口：WinJa服务器端口\n1333端口：密码策略(网络服务)(svchost.exe)\n1334端口：网络服务(svchost.exe)\n1335端口：数字公正协议\n1336端口：即时聊天协议(svchost.exe)\n1349端口：注册网络协议端口\n1350端口：注册网络协议端口\n1371端口：富士通配置协议端口\n1372端口：富士通配置协议端口\n1374端口：EPI软件系统端口\n1376端口：IBM个人-个人软件端口\n1377端口：Cichlid许可证管理端口\n1378端口：Elan许可证管理端口\n1380端口：Telesis网络许可证管理端口\n1381端口：苹果网络许可证管理端口\n1386端口：CheckSum 许可证管理端口\n1387端口：系统开放端口(rundll32.exe)\n1388端口：数据库高速缓存端口\n1389端口：文档管理端口\n1390端口：存储控制器端口\n1391端口：存储器存取服务器端口\n1392端口：打印管理端口\n1393端口：网络登陆服务器端口\n1394端口：网络登陆客户端端口\n1395端口：PC工作站管理软件端口\n1396端口：DVL活跃邮件端口\n1397端口：音频活跃邮件端口\n1398端口：视频活跃邮件端口\n1399端口：Cadkey许可证管理端口\n1433端口：Microsoft的SQL服务开放端口\n1434端口：Microsoft的SQL服务监视端口\n1492端口：木马FTP99CMP开放此端口\n1509端口：木马Psyber Streaming Server开放此端口\n1512端口：Microsoft Windows网络名称服务\n1524端口：许多攻击脚本安装一个后门SHELL于这个端口\n1600端口：木马Shivka-Burka开放此端口\n1645端口：远程认证拨号用户服务\n1701端口：第2层隧道协议\n1731端口：NetMeeting音频调用控制\n1801端口：Microsoft消息队列服务器\n1807端口：木马SpySender开放此端口\n1900端口：可被利用ddos攻击，一般关闭\n1912端口：金山词霸开放此端口\n1981端口：木马ShockRave开放此端口\n1999端口：木马BackDoor,yai开放此端口\n2000端口：木马GirlFriend 1.3、Millenium 1.0开放此端口\n2001端口：木马Millenium 1.0、Trojan Cow,黑洞2001开放此端口\n2003端口：GNU 查询\n2023端口：木马Pass Ripper开放此端口\n2049端口：NFS程序常运行于此端口\n2115端口：木马Bugs开放此端口\n2140端口：木马Deep Throat 1.0/3.0，The Invasor开放此端口\n2500端口：应用固定端口会话复制的RPC客户\n2504端口：网络平衡负荷\n2565端口：木马Striker开放此端口\n2583端口：木马Wincrash 2.0开放此端口\n2801端口：木马Phineas Phucker开放此端口\n2847端口：诺顿反病毒服务开放此端口\n3024端口：木马WinCrash开放此端口\n3128端口：squid http代理服务器开放此端口\n3129端口：木马Master Paradise开放此端口\n3150端口：木马The Invasor,deep throat开放此端口\n3210端口：木马SchoolBus开放此端口\n3306端口：MySQL开放此端口\n3333端口：木马Prosiak开放此端口\n3389端口：WINDOWS 2000终端开放此端口\n3456端口：inetinfo.exe(互联网信息服务)开放端口，VAT默认数据\n3457端口：VAT默认控制\n3527端口：Microsoft消息队列服务器\n3700端口：木马Portal of Doom开放此端口\n3996端口：木马RemoteAnything开放此端口\n4000端口：腾讯QQ客户端开放此端口\n4060端口：木马RemoteAnything开放此端口\n4092端口：木马WinCrash开放此端口\n4133端口：NUTS Bootp服务器\n4134端口：NIFTY-Serve HMI协议\n4141端口：Workflow服务器\n4142端口：文档服务器\n4143端口：文档复制\n4145端口：VVR控制\n4321端口：远程Who Is查询\n4333端口：微型sql服务器\n4349端口：文件系统端口记录\n4350端口：网络设备\n4351端口：PLCY网络服务\n4453端口：NSS警报管理\n4454端口：NSS代理管理\n4455端口：PR聊天用户\n4456端口：PR聊天服务器\n4457端口：PR注册\n4480端口：Proxy+ HTTP代理端口\n4500端口：Lsass开放端口，不能关闭\n4547端口：Lanner许可管理\n4555端口：RSIP端口\n4590端口：木马ICQTrojan开放此端口\n4672端口：远程文件访问服务器\n4752端口：简单网络音频服务器\n4800端口：Icona快速消息系统\n4801端口：Icona网络聊天\n4802端口：Icona许可系统服务器\n4848端口：App服务器-Admin HTTP\n4849端口：App服务器-Admin HTTPS\n4950端口：木马IcqTrojan开放5000端口\n5000端口：木马blazer5，Sockets de Troie开放5000端口，一般应关闭\n5001端口：木马Sockets de Troie开放5001端口\n5006端口：wsm服务器\n5007端口：wsm服务器ssl\n5022端口：mice服务器\n5050端口：多媒体会议控制协议\n5051端口：ITA代理\n5052端口：ITA管理\n5137端口：MyCTS服务器端口\n5150端口：Ascend通道管理协议\n5154端口：BZFlag游戏服务器\n5190端口：America-Online(美国在线)\n5191端口：AmericaOnline1(美国在线)\n5192端口：AmericaOnline2(美国在线)\n5193端口：AmericaOnline3(美国在线)\n5222端口：Jabber客户端连接\n5225端口：HP(惠普公司)服务器\n5226端口：HP(惠普公司)\n5232端口：SGI绘图软件端口\n5250端口：i网关\n5264端口：3Com网络端口1\n5265端口：3Com网络端口2\n5269端口：Jabber服务器连接\n5306端口：Sun MC组\n5321端口：木马Sockets de Troie开放5321端口\n5400端口：木马Blade Runner开放此端口\n5401端口：木马Blade Runner开放此端口\n5402端口：木马Blade Runner开放此端口\n5405端口：网络支持\n5409端口：Salient数据服务器\n5410端口：Salient用户管理\n5415端口：NS服务器\n5416端口：SNS网关\n5417端口：SNS代理\n5421端口：网络支持2\n5423端口：虚拟用户\n5427端口：SCO-PEER-TTA(Unix系统)\n5432端口：PostgreSQL数据库\n5550端口：木马xtcp开放此端口\n5569端口：木马Robo-Hack开放此端口\n5599端口：公司远程安全安装\n5600端口：公司安全管理\n5601端口：公司安全代理\n5631端口：pcANYWHERE(软件)数据\n5632端口：pcANYWHERE(软件)数据\n5673端口：JACL消息服务器\n5675端口：V5UA应用端口\n5676端口：RA管理\n5678端口：远程复制代理连接\n5679端口：直接电缆连接\n5720端口：MS-执照\n5729端口：Openmail用户代理层\n5730端口：Steltor's日历访问\n5731端口：netscape(网景)suiteware\n5732端口：netscape(网景)suiteware\n5742端口：木马WinCrash1.03开放此端口\n5745端口：fcopy-服务器\n5746端口：fcopys-服务器\n5755端口：OpenMail(邮件服务器)桌面网关服务器\n5757端口：OpenMail(邮件服务器)X.500目录服务器\n5766端口：OpenMail (邮件服务器)NewMail服务器\n5767端口：OpenMail (邮件服务器)请求代理曾(安全)\n5768端口：OpenMail(邮件服务器) CMTS服务器\n5777端口：DALI端口\n5800端口：虚拟网络计算\n5801端口：虚拟网络计算\n5802端口：虚拟网络计算HTTP访问, d\n5803端口：虚拟网络计算HTTP访问, d\n5900端口：虚拟网络计算机显示0\n5901端口：虚拟网络计算机显示1\n5902端口：虚拟网络计算机显示2\n5903端口：虚拟网络计算机显示3\n6000端口：X Window 系统\n6001端口：X Window 服务器\n6002端口：X Window 服务器\n6003端口：X Window 服务器\n6004端口：X Window 服务器\n6005端口：X Window 服务器\n6006端口：X Window 服务器\n6007端口：X Window 服务器\n6008端口：X Window 服务器\n6009端口：X Window 服务器\n6456端口：SKIP证书发送\n6471端口：LVision许可管理器\n6505端口：BoKS管理私人端口\n6506端口：BoKS管理公共端口\n6507端口：BoKS Dir服务器,私人端口\n6508端口：BoKS Dir服务器,公共端口\n6509端口：MGCS-MFP端口\n6510端口：MCER端口\n6566端口：SANE控制端口\n6580端口：Parsec主服务器\n6581端口：Parsec对等网络\n6582端口：Parsec游戏服务器\n6588端口：AnalogX HTTP代理端口\n6631端口：Mitchell电信主机\n6667端口：Internet多线交谈\n6668端口：Internet多线交谈\n6670端口：木马Deep Throat开放此端口\n6671端口：木马Deep Throat 3.0开放此端口\n6699端口：Napster文件(MP3)共享服务\n6701端口：KTI/ICAD名称服务器\n6788端口：SMC软件-HTTP\n6789端口：SMC软件-HTTPS\n6841端口：Netmo软件默认开放端口\n6842端口：Netmo HTTP服务\n6883端口：木马DeltaSource开放此端口\n6939端口：木马Indoctrination开放此端口\n6969端口：木马Gatecrasher、Priority开放此端口\n6970端口：real音频开放此端口\n7000端口：木马Remote Grab开放此端口\n7002端口：使用者& 组 数据库\n7003端口：音量定位数据库\n7004端口：AFS/Kerberos认证服务\n7005端口：音量管理服务\n7006端口：错误解释服务\n7007端口：Basic监督进程\n7008端口：服务器-服务器更新程序\n7009端口：远程缓存管理服务\n7011端口：Talon软件发现端口\n7012端口：Talon软件引擎\n7013端口：Microtalon发现\n7014端口：Microtalon通信\n7015端口：Talon网络服务器\n7020端口：DP服务\n7021端口：DP服务管理\n7100端口：X字型服务\n7121端口：虚拟原型许可证管理\n7300端口：木马NetMonitor开放此端口\n7301端口：木马NetMonitor开放此端口\n7306端口：木马NetMonitor，NetSpy1.0开放此端口\n7307端口：木马NetMonitor开放此端口\n7308端口：木马NetMonitor开放此端口\n7323端口：Sygate服务器端\n7511端口：木马聪明基因开放此端口\n7588端口：Sun许可证管理\n7597端口：木马Quaz开放此端口\n7626端口：木马冰河开放此端口\n7633端口：PMDF管理\n7674端口：iMQ SSL通道\n7675端口：iMQ通道\n7676端口：木马Giscier开放此端口\n7720端口：Med图象入口\n7743端口：Sakura脚本传递协议\n7789端口：木马ICKiller开放此端口\n7797端口：Propel连接器端口\n7798端口：Propel编码器端口\n8000端口：腾讯QQ服务器端开放此端口\n8001端口：VCOM通道\n8007端口：Apache(类似iis)jServ协议1.x\n8008端口：HTTP Alternate\n8009端口：Apache(类似iis)JServ协议1.3\n8010端口：Wingate代理开放此端口\n8011端口：木马way2.4开放此端口\n8022端口：OA-系统\n8080端口：WWW代理开放此端口\n8081端口：ICECap控制台\n8082端口：BlackIce(防止黑客软件)警报发送到此端口\n8118端口：Privoxy HTTP代理\n8121端口：Apollo数据端口\n8122端口：Apollo软件管理端口\n8181端口：Imail\n8225端口：木马灰鸽子开放此端口\n8311端口：木马初恋情人开放此端口\n8351端口：服务器寻找\n8416端口：eSpeech Session协议\n8417端口：eSpeech RTP协议\n8473端口：虚拟点对点\n8668端口：网络地址转换\n8786端口：Message客户端\n8787端口：Message服务器\n8954端口：Cumulus管理端口\n9000端口：CS监听\n9001端口：ETL服务管理\n9002端口：动态id验证\n9021端口：Pangolin验证\n9022端口：PrivateArk远程代理\n9023端口：安全网络登陆-1\n9024端口：安全网络登陆-2\n9025端口：安全网络登陆-3\n9026端口：安全网络登陆-4\n9101端口：Bacula控制器\n9102端口：Bacula文件后台\n9103端口：Bacula存储邮件后台\n9111端口：DragonIDS控制台\n9217端口：FSC通讯端口\n9281端口：软件传送端口1\n9282端口：软件传送端口2\n9346端口：C技术监听\n9400端口：木马Incommand 1.0开放此端口\n9401端口：木马Incommand 1.0开放此端口\n9402端口：木马Incommand 1.0开放此端口\n9594端口：信息系统\n9595端口：Ping Discovery服务\n9800端口：WebDav源端口\n9801端口：Sakura脚本转移协议-2\n9802端口：WebDAV Source TLS/SSL\n9872端口：木马Portal of Doom开放此端口\n9873端口：木马Portal of Doom开放此端口\n9874端口：木马Portal of Doom开放此端口\n9875端口：木马Portal of Doom开放此端口\n9899端口：木马InIkiller开放此端口\n9909端口：域名时间\n9911端口：SYPECom传送协议\n9989端口：木马iNi-Killer开放此端口\n9990端口：OSM Applet程序服务器\n9991端口：OSM事件服务器\n10000端口：网络数据管理协议\n10001端口：SCP构造端口\n10005端口：安全远程登陆\n10008端口：Octopus多路器\n10067端口：木马iNi-Killer开放此端口\n10113端口：NetIQ端点\n10115端口：NetIQ端点\n10116端口：NetIQVoIP鉴定器\n10167端口：木马iNi-Killer开放此端口\n11000端口：木马SennaSpy开放此端口\n11113端口：金山词霸开放此端口\n11233端口：木马Progenic trojan开放此端口\n12076端口：木马Telecommando开放此端口\n12223端口：木马Hack'99 KeyLogger开放此端口\n12345端口：木马NetBus1.60/1.70、GabanBus开放此端口\n12346端口：木马NetBus1.60/1.70、GabanBus开放此端口\n12361端口：木马Whack-a-mole开放此端口\n13223端口：PowWow 客户端，是Tribal Voice的聊天程序\n13224端口：PowWow 服务器，是Tribal Voice的聊天程序\n16959端口：木马Subseven开放此端口\n16969端口：木马Priority开放此端口\n17027端口：外向连接\n19191端口：木马蓝色火焰开放此端口\n20000端口：木马Millennium开放此端口\n20001端口：木马Millennium开放此端口\n20034端口：木马NetBus Pro开放此端口\n21554端口：木马GirlFriend开放此端口\n22222端口：木马Prosiak开放此端口\n23444端口：木马网络公牛开放此端口\n23456端口：木马Evil FTP、Ugly FTP开放此端口\n25793端口：Vocaltec地址服务器\n26262端口：K3软件-服务器\n26263端口：K3软件客户端\n26274端口：木马Delta开放此端口\n27374端口：木马Subseven 2.1开放此端口\n30100端口：木马NetSphere开放此端口\n30129端口：木马Masters Paradise开放此端口\n30303端口：木马Socket23开放此端口\n30999端口：木马Kuang开放此端口\n31337端口：木马BO(Back Orifice)开放此端口\n31338端口：木马BO(Back Orifice)，DeepBO开放此端口\n31339端口：木马NetSpy DK开放此端口\n31666端口：木马BOWhack开放此端口\n31789端口：Hack-a-tack\n32770端口：sun solaris RPC服务开放此端口\n33333端口：木马Prosiak开放此端口\n33434端口：路由跟踪\n34324端口：木马Tiny Telnet Server、BigGluck、TN开放此端口\n36865端口：KastenX软件端口\n38201端口：Galaxy7软件数据通道\n39681端口：TurboNote默认端口\n40412端口：木马The Spy开放此端口\n40421端口：木马Masters Paradise开放此端口\n40422端口：木马Masters Paradise开放此端口\n40423端口：木马Masters Paradise开放此端口\n40426端口：木马Masters Paradise开放此端口\n40843端口：CSCC 防火墙\n43210端口：木马SchoolBus 1.0/2.0开放此端口\n43190端口：IP-PROVISION\n44321端口：PCP服务器(pmcd)\n44322端口：PCP服务器(pmcd)代理\n44334端口：微型个人防火墙端口\n44442端口：ColdFusion软件端口\n44443端口：ColdFusion软件端口\n44445端口：木马Happypig开放此端口\n45576端口：E代时光专业代理开放此端口\n47262端口：木马Delta开放此端口\n47624端口：Direct Play服务器\n47806端口：ALC协议\n48003端口：Nimbus网关\n50505端口：木马Sockets de Troie开放此端口\n50766端口：木马Fore开放此端口\n53001端口：木马Remote Windows Shutdown开放此端口\n54320端口：木马bo2000开放此端口\n54321端口：木马SchoolBus 1.0/2.0开放此端口\n61466端口：木马Telecommando开放此端口\n65000端口：木马Devil 1.03开放此端口\n65301端口：PC Anywhere软件开放端口","source":"_posts/java/Tomcat以及端口.md","raw":"---\ntitle: Tomcat的安装配置与使用，及常用端口大全\ndate: 2021-09-07 23:19:01\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/5.jpg\ntags: \n  - tomcat\n  - 端口\ncategories: java\n---\n\n# 零：Tomcat的介绍\nTomcat是Apache 软件基金会的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。\n\nTomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。\n\n诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。另外，Tomcat和IIS等Web服务器一样，具有处理HTML页面的功能，另外它还是一个Servlet和JSP容器，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态HTML的能力不如Apache服务器。目前Tomcat最新版本为10.0.5。\n\n# 一：下载Tomcat\n首先前往官网：[tomcat下载](https://tomcat.apache.org/)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5eabd2463b624bf091d8c0dbef83dd3b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)我这里是下载了Tomcat9，点进Tomcat9，我使用的是64位绿色版。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/6ac4f8bd57af42a693e5683b23076f99.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 二：安装Tomcat\n因为我是下载了绿色版的，直接解压就行。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1f9ca1560921497895f37a31f209173e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)目录介绍：\n```\nbin\t\t\t\t\t专门用来存放Tomcat服务器的可执行程序\nconf                专门用来存放Tomcat服务器的配置文件\nlib\t\t\t        专门用来存放Tomcat服务器的jar包\nlogs\t\t\t\t专门用来存放Tomcat服务器的运行时输出的日记信息\ntemp\t\t\t\t专门用来存放Tomcat服务器运行时产生的临时数据\nwebapps\t\t\t    专门用来存放部署的Web工程\nwork\t\t\t\t是Tomcat工作时的目录，用来存放Tomcat运行时jsp翻译为Servlet的源码，和Session钝化的目录\n```\n\n\n# 三：启动Tomcat服务器\n找到Tomcat目录下的bin目录下的startup.bat文件，双击启动。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5a4fd549dc814c249b5724d7a6404f88.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n发现出现了乱码，这时候可以在配置文件修改编码方式。打开conf文件夹下的logging.properties文件，找到`java.util.logging.ConsoleHandler.encoding = UTF-8`，将UTF-8改为GBK\n![在这里插入图片描述](https://img-blog.csdnimg.cn/bbe9b574762d4b89b5c4719b7a49ac8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n然后保存修改，重启服务器就好了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b7d489e0e78e4144b87ed05dcedb8424.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果点击startup.bat时黑窗一闪而过，那就是因为没有配置好JAVA_HOME环境变量，JAVA_HOME时JDK的安装目录。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8aefc2d067874a849113e01a7cc4c875.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n除了双击startup.bat启动，还可以用命令行的方式启动，命令行进入Tomcat的bin目录：输入命令`catalina run`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a272c5c7e6704b75ad89c23dc4c8dbb9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 四：停止Tomcat服务器\n+ 直接关闭tomcat窗口\n+ 使用快捷键ctrl+c\n+ 找到Tomcat的bin目录下的shutdown.bat，双击停止服务器(该方法为主要方法)\n\n# 五：修改Tomcat的端口号\nTomcat默认端口号是8080，但8080端口是被用于WWW代理服务的，可以实现网页浏览，Vue项目的预览就是开启8080端口，因此该端口经常被占用，因此通常都需要修改端口号。\n\n端口号范围是1-65535，1000以内的端口号是系统使用的，修改端口尽量不要使用1000以内的，但是我老师要求修改为端口号为88。修改前还可以看看端口占用情况，打开命令提示符，输入`netstat -ano`。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d12842b23f034b0ab832d8f9f6b09450.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n现在来修改Tomcat端口号，找到Tomcat目录下的conf目录，找到server.xml并打开，找到Connector标签修改端口号。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/34e05a82f35e48459743cbc4a3c63ded.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n修改完端口号后需要重启才能生效，成功后效果如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8199c3ddf8fb4f60bbe9c06773c7aace.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 六：在idea中整合Tomcat\n打开idea的设置，打开应用程序服务器，点击加号添加：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5cbc65ea639e44a8b7345fe86167b9a7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)选中文件夹即可，选中一个，其余的会自动填写：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f50d3586951242c583518624fab12772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b47c4132ea6d4214b6a8d3c19fdea6a5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n# 七：常用端口\n端口：0\n服务：Reserved\n说明：通常用于分析操作系统。这一方法能够工作是因为在一些系统中“0”是无效端口，当你试图使用通常的闭合端口连接它时将产生不同的结果。一种典型的扫描，使用IP地址为0.0.0.0，设置ACK位并在以太网层广播。\n\n端口：1\n服务：tcpmux\n说明：这显示有人在寻找SGI Irix机器。Irix是实现tcpmux的主要提供者，默认情况下tcpmux在这种系统中被打开。Irix机器在发布是含有几个默认的无密码的帐户，如：IP、GUEST UUCP、NUUCP、DEMOS 、TUTOR、DIAG、OUTOFBOX等。许多管理员在安装后忘记删除这些帐户。因此HACKER在INTERNET上搜索tcpmux并利用这些帐户。\n\n端口：7\n服务：Echo\n说明：能看到许多人搜索Fraggle放大器时，发送到X.X.X.0和X.X.X.255的信息。\n\n端口：19\n服务：Character Generator\n说明：这是一种仅仅发送字符的服务。UDP版本将会在收到UDP包后回应含有垃圾字符的包。TCP连接时会发送含有垃圾字符的数据流直到连接关闭。HACKER利用IP欺骗可以发动DoS攻击。伪造两个chargen服务器之间的UDP包。同样Fraggle DoS攻击向目标地址的这个端口广播一个带有伪造受害者IP的数据包，受害者为了回应这些数据而过载。\n\n端口：21\n服务：FTP\n说明：FTP服务器所开放的端口，用于上传、下载。最常见的攻击者用于寻找打开anonymous的FTP服务器的方法。这些服务器带有可读写的目录。木马Doly Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade Runner所开放的端口。\n\n端口：22\n服务：ssh\n说明：PcAnywhere建立的TCP和这一端口的连接可能是为了寻找ssh。这一服务有许多弱点，如果配置成特定的模式，许多使用RSAREF库的版本就会有不少的漏洞存在。\n\n端口：23\n服务：Telnet\n说明：远程登录，**者在搜索远程登录UNIX的服务。大多数情况下扫描这一端口是为了找到机器运行的操作系统。还有使用其他技术，**者也会找到密码。木马Tiny Telnet Server就开放这个端口。\n\n端口：25\n服务：SMTP\n说明：SMTP服务器所开放的端口，用于发送邮件。**者寻找SMTP服务器是为了传递他们的SPAM。**者的帐户被关闭，他们需要连接到高带宽的E-MAIL服务器上，将简单的信息传递到不同的地址。木马Antigen、Email Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口。\n\n端口：31\n服务：MSG Authentication\n说明：木马Master Paradise、Hackers Paradise开放此端口。\n\n端口：42\n服务：WINS Replication\n说明：WINS复制\n\n端口：53\n服务：Domain Name Server（DNS）\n说明：DNS服务器所开放的端口，**者可能是试图进行区域传递（TCP），欺骗DNS（UDP）或隐藏其他的通信。因此防火墙常常过滤或记录此端口。\n\n端口：67\n服务：Bootstrap Protocol Server\n说明：通过DSL和Cable modem的防火墙常会看见大量发送到广播地址255.255.255.255的数据。这些机器在向DHCP服务器请求一个地址。HACKER常进入它们，分配一个地址把自己作为局部路由器而发起大量中间人（man-in-middle）攻击。客户端向68端口广播请求配置，服务器向67端口广播回应请求。这种回应使用广播是因为客户端还不知道可以发送的IP地址。\n\n端口：69\n服务：Trival File Transfer\n说明：许多服务器与bootp一起提供这项服务，便于从系统下载启动代码。但是它们常常由于错误配置而使**者能从系统中窃取任何 文件。它们也可用于系统写入文件。\n\n端口：79\n服务：Finger Server\n说明：**者用于获得用户信息，查询操作系统，探测已知的缓冲区溢出错误，回应从自己机器到其他机器Finger扫描。\n\n端口：80\n服务：HTTP\n说明：用于网页浏览。木马Executor开放此端口。\n\n端口：99\n服务：gram Relay\n说明：后门程序ncx99开放此端口。\n\n端口：102\n服务：Message transfer agent(MTA)-X.400 over TCP/IP\n说明：消息传输代理。\n\n端口：109\n服务：Post Office Protocol -Version3\n说明：POP3服务器开放此端口，用于接收邮件，客户端访问服务器端的邮件服务。POP3服务有许多公认的弱点。关于用户名和密码交 换缓冲区溢出的弱点至少有20个，这意味着**者可以在真正登陆前进入系统。成功登陆后还有其他缓冲区溢出错误。\n\n端口：110\n服务：SUN公司的RPC服务所有端口\n说明：常见RPC服务有rpc.mountd、NFS、rpc.statd、rpc.csmd、rpc.ttybd、amd等\n\n端口：113\n服务：Authentication Service\n说明：这是一个许多计算机上运行的协议，用于鉴别TCP连接的用户。使用标准的这种服务可以获得许多计算机的信息。但是它可作为许多服务的记录器，尤其是FTP、POP、IMAP、SMTP和IRC等服务。通常如果有许多客户通过防火墙访问这些服务，将会看到许多这个端口的连接请求。记住，如果阻断这个端口客户端会感觉到在防火墙另一边与E-MAIL服务器的缓慢连接。许多防火墙支持TCP连接的阻断过程中发回RST。这将会停止缓慢的连接。\n\n端口：119\n服务：Network News Transfer Protocol\n说明：NEWS新闻组传输协议，承载USENET通信。这个端口的连接通常是人们在寻找USENET服务器。多数ISP限制，只有他们的客户才能访问他们的新闻组服务器。打开新闻组服务器将允许发/读任何人的帖子，访问被限制的新闻组服务器，匿名发帖或发送SPAM。\n\n端口：135\n服务：Location Service\n说明：Microsoft在这个端口运行DCE RPC end-point mapper为它的DCOM服务。这与UNIX 111端口的功能很相似。使用DCOM和RPC的服务利用计算机上的end-point mapper注册它们的位置。远端客户连接到计算机时，它们查找end-point mapper找到服务的位置。HACKER扫描计算机的这个端口是为了找到这个计算机上运行Exchange Server吗？什么版本？还有些DOS攻击直接针对这个端口。\n\n端口：137、138、139\n服务：NETBIOS Name Service\n说明：其中137、138是UDP端口，当通过网上邻居传输文件时用这个端口。而139端口：通过这个端口进入的连接试图获得NetBIOS/SMB服务。这个协议被用于windows文件和打印机共享和SAMBA。还有WINS Regisrtation也用它。\n\n端口：143\n服务：Interim Mail Access Protocol v2\n说明：和POP3的安全问题一样，许多IMAP服务器存在有缓冲区溢出漏洞。记住：一种LINUX蠕虫（admv0rm）会通过这个端口繁殖，因此许多这个端口的扫描来自不知情的已经被感染的用户。当REDHAT在他们的LINUX发布版本中默认允许IMAP后，这些漏洞变的很流行。这一端口还被用于IMAP2，但并不流行。\n\n端口：161\n服务：SNMP\n说明：SNMP允许远程管理设备。所有配置和运行信息的储存在数据库中，通过SNMP可获得这些信息。许多管理员的错误配置将被暴露在Internet。Cackers将试图使用默认的密码public、private访问系统。他们可能会试验所有可能的组合。SNMP包可能会被错误的指向用户的网络。\n\n端口：177\n服务：X Display Manager Control Protocol\n说明：许多**者通过它访问X-windows操作台，它同时需要打开6000端口。\n\n端口：389\n服务：LDAP、ILS\n说明：轻型目录访问协议和NetMeeting Internet Locator Server共用这一端口。\n\n端口：443\n服务：Https\n说明：网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP。\n\n端口：456\n服务：[NULL]\n说明：木马HACKERS PARADISE开放此端口。\n\n端口：513\n服务：Login,remote login\n说明：是从使用cable modem或DSL登陆到子网中的UNIX计算机发出的广播。这些人为**者进入他们的系统提供了信息。\n\n端口：544\n服务：[NULL]\n说明：kerberos kshell\n\n端口：548\n服务：Macintosh,File Services(AFP/IP)\n说明：Macintosh,文件服务。\n\n端口：553\n服务：CORBA IIOP （UDP）\n说明：使用cable modem、DSL或VLAN将会看到这个端口的广播。CORBA是一种面向对象的RPC系统。**者可以利用这些信息进入系统。\n\n端口：555\n服务：DSF\n说明：木马PhAse1.0、Stealth Spy、IniKiller开放此端口。\n\n端口：568\n服务：Membership DPA\n说明：成员资格 DPA。\n\n端口：569\n服务：Membership MSN\n说明：成员资格 MSN。\n\n端口：635\n服务：mountd\n说明：Linux的mountd Bug。这是扫描的一个流行BUG。大多数对这个端口的扫描是基于UDP的，但是基于TCP的mountd有所增加（mountd同时运行于两个端口）。记住mountd可运行于任何端口（到底是哪个端口，需要在端口111做portmap查询），只是Linux默认端口是635，就像NFS通常运行于2049端口。\n\n端口：636\n服务：LDAP\n说明：SSL（Secure Sockets layer）\n\n端口：666\n服务：Doom Id Software\n说明：木马Attack FTP、Satanz Backdoor开放此端口\n\n端口：993\n服务：IMAP\n说明：SSL（Secure Sockets layer）\n\n端口：1001、1011\n服务：[NULL]\n说明：木马Silencer、WebEx开放1001端口。木马Doly Trojan开放1011端口。\n\n# 八：计算机端口大全\n0端口：无效端口,通常用于分析操作系统\n1端口：传输控制协议端口服务多路开关选择器\n2端口：管理实用程序\n3端口：压缩进程\n5端口：远程作业登录\n7端口：回显\n9端口：丢弃\n11端口：在线用户\n13端口：时间\n17端口：每日引用\n18端口：消息发送协议\n19端口：字符发生器\n20端口：FTP文件传输协议(默认数据口)\n21端口：FTP文件传输协议(控制)\n22端口：SSH远程登录协议\n23端口：telnet(终端仿真协议),木马Tiny Telnet Server开放此端口\n24端口：预留给个人用邮件系统\n25端口：SMTP服务器所开放的端口，用于发送邮件\n27端口：NSW 用户系统 FE\n29端口：MSG ICP\n31端口：MSG验证,木马Master Paradise、HackersParadise开放此端口\n33端口：显示支持协议\n35端口：预留给个人打印机服务\n37端口：时间\n38端口：路由访问协议\n39端口：资源定位协议\n41端口：图形\n42端口：主机名服务\n43端口：who is服务\n44端口：MPM(消息处理模块)标志协议\n45端口：消息处理模块\n46端口：消息处理模块(默认发送口)\n47端口：NI FTP\n48端口：数码音频后台服务\n49端口：TACACS登录主机协议\n50端口：远程邮件检查协议\n51端口：IMP(接口信息处理机)逻辑地址维护\n52端口：施乐网络服务系统时间协议\n53端口：dns域名服务器\n54端口：施乐网络服务系统票据交换\n55端口：ISI图形语言\n56端口：施乐网络服务系统验证\n57端口：预留个人用终端访问\n58端口：施乐网络服务系统邮件\n59端口：预留个人文件服务\n60端口：未定义\n61端口：NI邮件\n62端口：异步通讯适配器服务\n63端口：whois++\n64端口：通讯接口\n65端口：TACACS数据库服务\n66端口：Oracle SQL*NET\n67端口：引导程序协议服务端\n68端口：引导程序协议客户端\n69端口：小型文件传输协议\n70端口：信息检索协议\n71端口：远程作业服务\n72端口：远程作业服务\n73端口：远程作业服务\n74端口：远程作业服务\n75端口：预留给个人拨出服务\n76端口：分布式外部对象存储\n77端口：预留给个人远程作业输入服务\n78端口：修正TCP\n79端口：查询远程主机在线用户等信息\n80端口：http,用于网页浏览,木马Executor开放此端口\n81端口：HOST2名称服务\n82端口：传输实用程序\n83端口：模块化智能终端ML设备\n84端口：公用追踪设备\n85端口：模块化智能终端ML设备\n86端口：Micro Focus Cobol编程语言\n87端口：预留给个人终端连接\n88端口：Kerberros安全认证系统\n89端口：SU/MIT telnet(终端仿真网关)\n90端口：DNSIX 安全属性标记图\n91端口：MIT Dover假脱机\n92端口：网络打印协议\n93端口：设备控制协议\n94端口：Tivoli对象调度\n96端口：DIXIE协议规范\n97端口：快速远程虚拟文件协议\n98端口：TAC新闻协议\n99端口：后门程序ncx99开放此端口\n100端口：未知用途\n101端口：NIC 主机名称服务\n102端口：消息传输代理\n103端口：Genesis 点对点传输网络\n105端口：信箱名称服务\n106端口：3COM-TSMUX开放端口\n107端口：远程Telnet服务\n108端口：SNA 网关访问服务\n109端口：POP2服务器开放此端口,用于接收邮件\n110端口：POP3服务器开放此端口,用于接收邮件\n111端口：SUN公司的RPC服务所有端口\n112端口：McIDAS 数据传输协议\n113端口：认证服务，用于鉴别TCP连接的用户\n114端口：音频新闻多点服务\n115端口：简单文件传输服务\n116端口：ANSA REX 通知\n117端口：UUCP 路径服务\n118端口：SQL 服务\n119端口：NEWS新闻组传输协议，承载USENET通信\n121端口：木马BO jammerkillahV开放端口\n122端口：SMAKY网络\n123端口：网络时间协议，蠕虫病毒会利用，一般关闭\n128端口：GSS X许可认证\n129端口：密码生成器协议\n130端口：Cisco软件开放端口\n131端口：Cisco软件开放端口\n132端口：Cisco软件开放端口\n133端口：统计服务\n134端口：INGRES-网络服务\n135端口：DCOM服务，冲击波病毒利用，不能关闭\n136端口：命名系统\n137端口：NETBIOS协议应用，为共享开放\n138端口：NETBIOS协议应用，为共享开放\n139端口：NETBIOS协议应用，为共享开放\n140端口：EMFIS数据服务\n141端口：EMFIS控制服务\n143端口：Interim邮件访问协议\n144端口：UMA软件开放端口\n145端口：UAAC协议\n149端口：AED 512仿真服务\n150端口：SQL(结构化查询语言)-网络\n152端口：后台文件传输协议\n156端口：SQL(结构化查询语言)服务\n158端口：PC邮件服务器\n159端口：NSS-路由\n160端口：SGMP-陷阱\n161端口：简单网络管理协议\n162端口：SNMP陷阱\n163端口：CMIP/TCP 管理\n164端口：CMIP/TCP 代理\n166端口：Sirius系统\n169端口：发送\n170端口：网络附言\n177端口：x显示管理控制协议，入侵者通过它访问X-windows操作台\n178端口：NextStep Window 服务\n179端口：边界网关协议\n180端口：图表\n181端口：统一\n184端口：OC服务器\n185端口：远程-KIS\n186端口：KIS 协议\n187端口：应用通信接口\n189端口：队列文件传输\n190端口：网关进入控制协议\n191端口：Prospero 目录服务\n192端口：OSU 网络监视系统\n193端口：Spider 远程控制协议\n194端口：多线交谈协议\n197端口：目录地址服务\n198端口：目录地址服务监视器\n200端口：IBM系统资源控制器\n201端口：AppleTalk(Mac机所用的网络协议)路由保证\n202端口：AppleTalk(Mac机所用的网络协议)Name Binding\n203端口：AppleTalk(Mac机所用的网络协议)未用端口\n204端口：AppleTalk(Mac机所用的网络协议)回显\n205端口：AppleTalk(Mac机所用的网络协议)未用端口\n206端口：AppleTalk(Mac机所用的网络协议)区信息\n207端口：AppleTalk(Mac机所用的网络协议)未用端口\n208端口：AppleTalk(Mac机所用的网络协议)未用端口\n209端口：快速邮件传输协议\n210端口：ANSI(美国国家标准协会)Z39.50\n211端口：Texas Instruments 914C/G终端\n213端口：IPX(以太网所用的协议)\n218端口：Netix消息记录协议\n219端口：Unisys ARPs\n220端口：交互邮件访问协议 v3\n223端口：证书分发中心\n224端口：masq拨号器\n241端口：预留端口 (224-241)\n245端口：链接\n246端口：显示系统协议\n257端口：安全电子交易系统\n258端口：Yak Winsock 个人聊天\n259端口：有效短程遥控\n260端口：开放端口\n261端口：IIOP 基于TLS/SSL的命名服务\n266端口：SCSI(小型计算机系统接口)on ST\n267端口：Tobit David服务层\n268端口：Tobit David复制\n281端口：个人连结\n282端口：Cable端口A/X\n286端口：FXP通信\n308端口：Novastor备份\n313端口：Magenta逻辑\n318端口：PKIX时间标记\n333端口：Texar安全端口\n344端口：Prospero数据存取协议\n345端口：Perf分析工作台\n346端口：Zebra服务器\n347端口：Fatmen服务器\n348端口：Cabletron管理协议\n358端口：Shrink可上网家电协议\n359端口：网络安全风险管理协议\n362端口：SRS发送\n363端口：RSVP隧道\n372端口：列表处理\n373端口：Legend公司\n374端口：Legend公司\n376端口：AmigaEnvoy网络查询协议\n377端口：NEC公司\n378端口：NEC公司\n379端口：TIA/EIA/IS-99调制解调器客户端\n380端口：TIA/EIA/IS-99调制解调器服务器\n381端口：hp(惠普)性能数据收集器\n382端口：hp(惠普)性能数据控制节点\n383端口：hp(惠普)性能数据警报管理\n384端口：远程网络服务器系统\n385端口：IBM应用程序\n386端口：ASA信息路由器定义文件.\n387端口：Appletalk更新路由.\n389端口：轻型目录访问协议\n395端口：网络监视控制协议\n396端口：Novell(美国Novell公司)Netware(Novell公司出的网络操作系统)over IP\n400端口：工作站解决方案\n401端口：持续电源\n402端口：Genie协议\n406端口：交互式邮件支持协议\n408端口：Prospero资源管理程序\n409端口：Prospero资源节点管理.\n410端口：DEC(数据设备公司)远程调试协议\n411端口：远程MT协议\n412端口：陷阱协定端口\n413端口：存储管理服务协议\n414端口：信息查询\n415端口：B网络\n423端口：IBM操作计划和控制开端\n424端口：IBM操作计划和控制追踪\n425端口：智能计算机辅助设计\n427端口：服务起位置\n434端口：移动ip代理\n435端口：移动ip管理\n443端口：基于TLS/SSL的网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP\n444端口：简单网络内存分页协议\n445端口：Microsoft-DS，为共享开放，震荡波病毒利用，一般应关闭\n446端口：DDM-远程关系数据库访问\n447端口：DDM-分布式文件管理\n448端口：DDM-使用安全访问远程数据库\n456端口：木马HACKERS PARADISE开放此端口\n458端口：apple quick time软件开放端口\n459端口：ampr-rcmd命令\n464端口：k密码服务\n469端口：广播控制协议\n470端口：scx-代理\n472端口：ljk-登陆\n481端口：Ph服务\n487端口：简单异步文件传输\n489端口：nest-协议\n491端口：go-登陆\n499端口：ISO ILL协议\n500端口：Internet密钥交换，Lsass开放端口，不能关闭\n509端口：陷阱\n510端口：FirstClass协议\n512端口：远程进程执行\n513端口：远程登陆\n514端口：cmd命令\n515端口：spooler\n516端口：可视化数据\n518端口：交谈\n519端口：unix时间\n520端口：扩展文件名称服务器\n525端口：时间服务\n526端口：新日期\n529端口：在线聊天系统服务\n530端口：远程过程调用\n531端口：聊天\n532端口：读新闻\n533端口：紧急广播端口\n534端口：MegaMedia管理端\n537端口：网络流媒体协议\n542端口：商业\n543端口：Kerberos(软件)v4/v5\n544端口：krcmd命令\n546端口：DHCPv6 客户端\n547端口：DHCPv6 服务器\n552端口：设备共享\n554端口：Real Time Stream控制协议\n555端口：木马PhAse1.0、Stealth Spy、IniKiller开放此端口\n556端口：远距离文件服务器\n563端口：基于TLS/SSL的网络新闻传输协议\n564端口：plan 9文件服务\n565端口：whoami查询\n566端口：streettalk\n567端口：banyan-rpc(远程过程调用)\n568端口：DPA成员资格\n569端口：MSN成员资格\n570端口：demon(调试监督程序)\n571端口：udemon(调试监督程序)\n572端口：声纳\n573端口：banyan-贵宾\n574端口：FTP软件代理系统\n581端口：Bundle Discovery 协议\n582端口：SCC安全\n583端口：Philips视频会议\n584端口：密钥服务器\n585端口：IMAP4+SSL (Use 993 instead)\n586端口：密码更改\n587端口：申请\n589端口：Eye连结\n595端口：CAB协议\n597端口：PTC名称服务\n598端口：SCO网络服务器管理3\n599端口：Aeolon Core协议\n600端口：Sun IPC(进程间通讯)服务器\n601端口：可靠系统登陆服务\n604端口：通道\n606端口：Cray统一资源管理\n608端口：发送人-传递/提供 文件传输器\n609端口：npmp-陷阱\n610端口：npmp-本地\n611端口：npmp-gui( 图形用户界面)\n612端口：HMMP指引\n613端口：HMMP操作\n614端口：SSL(加密套接字协议层)shell(壳)\n615端口：Internet配置管理\n616端口：SCO(Unix系统)系统管理服务器\n617端口：SCO桌面管理服务器\n619端口：Compaq(康柏公司)EVM\n620端口：SCO服务器管理\n623端口：ASF远程管理控制协议\n624端口：Crypto管理\n631端口：IPP (Internet打印协议)\n633端口：服务更新(Sterling软件)\n637端口：局域网服务器\n641端口：repcmd命令\n647端口：DHCP(动态主机配置协议)Failover\n648端口：注册登记协议(RRP)\n649端口：Cadview-3d软件协议\n666端口：木马Attack FTP、Satanz Backdoor开放此端口\n808端口：ccproxy http/gopher/ftp (over http)协议\n1001端口：木马Silencer，WebEx开放端口\n1011端口：木马Doly开放端口\n1024端口：动态端口的开始,木马yai开放端口\n1025端口：inetinfo.exe(互联网信息服务)木马netspy开放端口\n1026端口：inetinfo.exe(互联网信息服务)\n1027端口：应用层网关服务\n1030端口：应用层网关服务\n1031端口：BBN IAD\n1033端口：本地网络信息端口\n1034端口：同步通知\n1036端口：安全部分传输协议\n1070端口：木马Psyber Stream，Streaming Audio开放端口\n1071端口：网络服务开放端口\n1074端口：网络服务开放端口\n1080端口：Socks这一协议以通道方式穿过防火墙，允许防火墙后面的人通过一个IP地址访问INTERNET\n1110端口：卡巴斯基反病毒软件开放此端口\n1125端口：卡巴斯基反病毒软件开放此端口\n1203端口：许可证生效端口\n1204端口：登陆请求监听端口\n1206端口：Anthony数据端口\n1222端口：SNI R&D网络端口\n1233端口：普遍的附录服务器端口\n1234端口：木马SubSeven2.0、Ultors Trojan开放此端口\n1243端口：木马SubSeven1.0/1.9开放此端口\n1245端口：木马Vodoo，GabanBus，NetBus，Vodoo开放此端口\n1273端口：EMC-网关端口\n1289端口：JWalk服务器端口\n1290端口：WinJa服务器端口\n1333端口：密码策略(网络服务)(svchost.exe)\n1334端口：网络服务(svchost.exe)\n1335端口：数字公正协议\n1336端口：即时聊天协议(svchost.exe)\n1349端口：注册网络协议端口\n1350端口：注册网络协议端口\n1371端口：富士通配置协议端口\n1372端口：富士通配置协议端口\n1374端口：EPI软件系统端口\n1376端口：IBM个人-个人软件端口\n1377端口：Cichlid许可证管理端口\n1378端口：Elan许可证管理端口\n1380端口：Telesis网络许可证管理端口\n1381端口：苹果网络许可证管理端口\n1386端口：CheckSum 许可证管理端口\n1387端口：系统开放端口(rundll32.exe)\n1388端口：数据库高速缓存端口\n1389端口：文档管理端口\n1390端口：存储控制器端口\n1391端口：存储器存取服务器端口\n1392端口：打印管理端口\n1393端口：网络登陆服务器端口\n1394端口：网络登陆客户端端口\n1395端口：PC工作站管理软件端口\n1396端口：DVL活跃邮件端口\n1397端口：音频活跃邮件端口\n1398端口：视频活跃邮件端口\n1399端口：Cadkey许可证管理端口\n1433端口：Microsoft的SQL服务开放端口\n1434端口：Microsoft的SQL服务监视端口\n1492端口：木马FTP99CMP开放此端口\n1509端口：木马Psyber Streaming Server开放此端口\n1512端口：Microsoft Windows网络名称服务\n1524端口：许多攻击脚本安装一个后门SHELL于这个端口\n1600端口：木马Shivka-Burka开放此端口\n1645端口：远程认证拨号用户服务\n1701端口：第2层隧道协议\n1731端口：NetMeeting音频调用控制\n1801端口：Microsoft消息队列服务器\n1807端口：木马SpySender开放此端口\n1900端口：可被利用ddos攻击，一般关闭\n1912端口：金山词霸开放此端口\n1981端口：木马ShockRave开放此端口\n1999端口：木马BackDoor,yai开放此端口\n2000端口：木马GirlFriend 1.3、Millenium 1.0开放此端口\n2001端口：木马Millenium 1.0、Trojan Cow,黑洞2001开放此端口\n2003端口：GNU 查询\n2023端口：木马Pass Ripper开放此端口\n2049端口：NFS程序常运行于此端口\n2115端口：木马Bugs开放此端口\n2140端口：木马Deep Throat 1.0/3.0，The Invasor开放此端口\n2500端口：应用固定端口会话复制的RPC客户\n2504端口：网络平衡负荷\n2565端口：木马Striker开放此端口\n2583端口：木马Wincrash 2.0开放此端口\n2801端口：木马Phineas Phucker开放此端口\n2847端口：诺顿反病毒服务开放此端口\n3024端口：木马WinCrash开放此端口\n3128端口：squid http代理服务器开放此端口\n3129端口：木马Master Paradise开放此端口\n3150端口：木马The Invasor,deep throat开放此端口\n3210端口：木马SchoolBus开放此端口\n3306端口：MySQL开放此端口\n3333端口：木马Prosiak开放此端口\n3389端口：WINDOWS 2000终端开放此端口\n3456端口：inetinfo.exe(互联网信息服务)开放端口，VAT默认数据\n3457端口：VAT默认控制\n3527端口：Microsoft消息队列服务器\n3700端口：木马Portal of Doom开放此端口\n3996端口：木马RemoteAnything开放此端口\n4000端口：腾讯QQ客户端开放此端口\n4060端口：木马RemoteAnything开放此端口\n4092端口：木马WinCrash开放此端口\n4133端口：NUTS Bootp服务器\n4134端口：NIFTY-Serve HMI协议\n4141端口：Workflow服务器\n4142端口：文档服务器\n4143端口：文档复制\n4145端口：VVR控制\n4321端口：远程Who Is查询\n4333端口：微型sql服务器\n4349端口：文件系统端口记录\n4350端口：网络设备\n4351端口：PLCY网络服务\n4453端口：NSS警报管理\n4454端口：NSS代理管理\n4455端口：PR聊天用户\n4456端口：PR聊天服务器\n4457端口：PR注册\n4480端口：Proxy+ HTTP代理端口\n4500端口：Lsass开放端口，不能关闭\n4547端口：Lanner许可管理\n4555端口：RSIP端口\n4590端口：木马ICQTrojan开放此端口\n4672端口：远程文件访问服务器\n4752端口：简单网络音频服务器\n4800端口：Icona快速消息系统\n4801端口：Icona网络聊天\n4802端口：Icona许可系统服务器\n4848端口：App服务器-Admin HTTP\n4849端口：App服务器-Admin HTTPS\n4950端口：木马IcqTrojan开放5000端口\n5000端口：木马blazer5，Sockets de Troie开放5000端口，一般应关闭\n5001端口：木马Sockets de Troie开放5001端口\n5006端口：wsm服务器\n5007端口：wsm服务器ssl\n5022端口：mice服务器\n5050端口：多媒体会议控制协议\n5051端口：ITA代理\n5052端口：ITA管理\n5137端口：MyCTS服务器端口\n5150端口：Ascend通道管理协议\n5154端口：BZFlag游戏服务器\n5190端口：America-Online(美国在线)\n5191端口：AmericaOnline1(美国在线)\n5192端口：AmericaOnline2(美国在线)\n5193端口：AmericaOnline3(美国在线)\n5222端口：Jabber客户端连接\n5225端口：HP(惠普公司)服务器\n5226端口：HP(惠普公司)\n5232端口：SGI绘图软件端口\n5250端口：i网关\n5264端口：3Com网络端口1\n5265端口：3Com网络端口2\n5269端口：Jabber服务器连接\n5306端口：Sun MC组\n5321端口：木马Sockets de Troie开放5321端口\n5400端口：木马Blade Runner开放此端口\n5401端口：木马Blade Runner开放此端口\n5402端口：木马Blade Runner开放此端口\n5405端口：网络支持\n5409端口：Salient数据服务器\n5410端口：Salient用户管理\n5415端口：NS服务器\n5416端口：SNS网关\n5417端口：SNS代理\n5421端口：网络支持2\n5423端口：虚拟用户\n5427端口：SCO-PEER-TTA(Unix系统)\n5432端口：PostgreSQL数据库\n5550端口：木马xtcp开放此端口\n5569端口：木马Robo-Hack开放此端口\n5599端口：公司远程安全安装\n5600端口：公司安全管理\n5601端口：公司安全代理\n5631端口：pcANYWHERE(软件)数据\n5632端口：pcANYWHERE(软件)数据\n5673端口：JACL消息服务器\n5675端口：V5UA应用端口\n5676端口：RA管理\n5678端口：远程复制代理连接\n5679端口：直接电缆连接\n5720端口：MS-执照\n5729端口：Openmail用户代理层\n5730端口：Steltor's日历访问\n5731端口：netscape(网景)suiteware\n5732端口：netscape(网景)suiteware\n5742端口：木马WinCrash1.03开放此端口\n5745端口：fcopy-服务器\n5746端口：fcopys-服务器\n5755端口：OpenMail(邮件服务器)桌面网关服务器\n5757端口：OpenMail(邮件服务器)X.500目录服务器\n5766端口：OpenMail (邮件服务器)NewMail服务器\n5767端口：OpenMail (邮件服务器)请求代理曾(安全)\n5768端口：OpenMail(邮件服务器) CMTS服务器\n5777端口：DALI端口\n5800端口：虚拟网络计算\n5801端口：虚拟网络计算\n5802端口：虚拟网络计算HTTP访问, d\n5803端口：虚拟网络计算HTTP访问, d\n5900端口：虚拟网络计算机显示0\n5901端口：虚拟网络计算机显示1\n5902端口：虚拟网络计算机显示2\n5903端口：虚拟网络计算机显示3\n6000端口：X Window 系统\n6001端口：X Window 服务器\n6002端口：X Window 服务器\n6003端口：X Window 服务器\n6004端口：X Window 服务器\n6005端口：X Window 服务器\n6006端口：X Window 服务器\n6007端口：X Window 服务器\n6008端口：X Window 服务器\n6009端口：X Window 服务器\n6456端口：SKIP证书发送\n6471端口：LVision许可管理器\n6505端口：BoKS管理私人端口\n6506端口：BoKS管理公共端口\n6507端口：BoKS Dir服务器,私人端口\n6508端口：BoKS Dir服务器,公共端口\n6509端口：MGCS-MFP端口\n6510端口：MCER端口\n6566端口：SANE控制端口\n6580端口：Parsec主服务器\n6581端口：Parsec对等网络\n6582端口：Parsec游戏服务器\n6588端口：AnalogX HTTP代理端口\n6631端口：Mitchell电信主机\n6667端口：Internet多线交谈\n6668端口：Internet多线交谈\n6670端口：木马Deep Throat开放此端口\n6671端口：木马Deep Throat 3.0开放此端口\n6699端口：Napster文件(MP3)共享服务\n6701端口：KTI/ICAD名称服务器\n6788端口：SMC软件-HTTP\n6789端口：SMC软件-HTTPS\n6841端口：Netmo软件默认开放端口\n6842端口：Netmo HTTP服务\n6883端口：木马DeltaSource开放此端口\n6939端口：木马Indoctrination开放此端口\n6969端口：木马Gatecrasher、Priority开放此端口\n6970端口：real音频开放此端口\n7000端口：木马Remote Grab开放此端口\n7002端口：使用者& 组 数据库\n7003端口：音量定位数据库\n7004端口：AFS/Kerberos认证服务\n7005端口：音量管理服务\n7006端口：错误解释服务\n7007端口：Basic监督进程\n7008端口：服务器-服务器更新程序\n7009端口：远程缓存管理服务\n7011端口：Talon软件发现端口\n7012端口：Talon软件引擎\n7013端口：Microtalon发现\n7014端口：Microtalon通信\n7015端口：Talon网络服务器\n7020端口：DP服务\n7021端口：DP服务管理\n7100端口：X字型服务\n7121端口：虚拟原型许可证管理\n7300端口：木马NetMonitor开放此端口\n7301端口：木马NetMonitor开放此端口\n7306端口：木马NetMonitor，NetSpy1.0开放此端口\n7307端口：木马NetMonitor开放此端口\n7308端口：木马NetMonitor开放此端口\n7323端口：Sygate服务器端\n7511端口：木马聪明基因开放此端口\n7588端口：Sun许可证管理\n7597端口：木马Quaz开放此端口\n7626端口：木马冰河开放此端口\n7633端口：PMDF管理\n7674端口：iMQ SSL通道\n7675端口：iMQ通道\n7676端口：木马Giscier开放此端口\n7720端口：Med图象入口\n7743端口：Sakura脚本传递协议\n7789端口：木马ICKiller开放此端口\n7797端口：Propel连接器端口\n7798端口：Propel编码器端口\n8000端口：腾讯QQ服务器端开放此端口\n8001端口：VCOM通道\n8007端口：Apache(类似iis)jServ协议1.x\n8008端口：HTTP Alternate\n8009端口：Apache(类似iis)JServ协议1.3\n8010端口：Wingate代理开放此端口\n8011端口：木马way2.4开放此端口\n8022端口：OA-系统\n8080端口：WWW代理开放此端口\n8081端口：ICECap控制台\n8082端口：BlackIce(防止黑客软件)警报发送到此端口\n8118端口：Privoxy HTTP代理\n8121端口：Apollo数据端口\n8122端口：Apollo软件管理端口\n8181端口：Imail\n8225端口：木马灰鸽子开放此端口\n8311端口：木马初恋情人开放此端口\n8351端口：服务器寻找\n8416端口：eSpeech Session协议\n8417端口：eSpeech RTP协议\n8473端口：虚拟点对点\n8668端口：网络地址转换\n8786端口：Message客户端\n8787端口：Message服务器\n8954端口：Cumulus管理端口\n9000端口：CS监听\n9001端口：ETL服务管理\n9002端口：动态id验证\n9021端口：Pangolin验证\n9022端口：PrivateArk远程代理\n9023端口：安全网络登陆-1\n9024端口：安全网络登陆-2\n9025端口：安全网络登陆-3\n9026端口：安全网络登陆-4\n9101端口：Bacula控制器\n9102端口：Bacula文件后台\n9103端口：Bacula存储邮件后台\n9111端口：DragonIDS控制台\n9217端口：FSC通讯端口\n9281端口：软件传送端口1\n9282端口：软件传送端口2\n9346端口：C技术监听\n9400端口：木马Incommand 1.0开放此端口\n9401端口：木马Incommand 1.0开放此端口\n9402端口：木马Incommand 1.0开放此端口\n9594端口：信息系统\n9595端口：Ping Discovery服务\n9800端口：WebDav源端口\n9801端口：Sakura脚本转移协议-2\n9802端口：WebDAV Source TLS/SSL\n9872端口：木马Portal of Doom开放此端口\n9873端口：木马Portal of Doom开放此端口\n9874端口：木马Portal of Doom开放此端口\n9875端口：木马Portal of Doom开放此端口\n9899端口：木马InIkiller开放此端口\n9909端口：域名时间\n9911端口：SYPECom传送协议\n9989端口：木马iNi-Killer开放此端口\n9990端口：OSM Applet程序服务器\n9991端口：OSM事件服务器\n10000端口：网络数据管理协议\n10001端口：SCP构造端口\n10005端口：安全远程登陆\n10008端口：Octopus多路器\n10067端口：木马iNi-Killer开放此端口\n10113端口：NetIQ端点\n10115端口：NetIQ端点\n10116端口：NetIQVoIP鉴定器\n10167端口：木马iNi-Killer开放此端口\n11000端口：木马SennaSpy开放此端口\n11113端口：金山词霸开放此端口\n11233端口：木马Progenic trojan开放此端口\n12076端口：木马Telecommando开放此端口\n12223端口：木马Hack'99 KeyLogger开放此端口\n12345端口：木马NetBus1.60/1.70、GabanBus开放此端口\n12346端口：木马NetBus1.60/1.70、GabanBus开放此端口\n12361端口：木马Whack-a-mole开放此端口\n13223端口：PowWow 客户端，是Tribal Voice的聊天程序\n13224端口：PowWow 服务器，是Tribal Voice的聊天程序\n16959端口：木马Subseven开放此端口\n16969端口：木马Priority开放此端口\n17027端口：外向连接\n19191端口：木马蓝色火焰开放此端口\n20000端口：木马Millennium开放此端口\n20001端口：木马Millennium开放此端口\n20034端口：木马NetBus Pro开放此端口\n21554端口：木马GirlFriend开放此端口\n22222端口：木马Prosiak开放此端口\n23444端口：木马网络公牛开放此端口\n23456端口：木马Evil FTP、Ugly FTP开放此端口\n25793端口：Vocaltec地址服务器\n26262端口：K3软件-服务器\n26263端口：K3软件客户端\n26274端口：木马Delta开放此端口\n27374端口：木马Subseven 2.1开放此端口\n30100端口：木马NetSphere开放此端口\n30129端口：木马Masters Paradise开放此端口\n30303端口：木马Socket23开放此端口\n30999端口：木马Kuang开放此端口\n31337端口：木马BO(Back Orifice)开放此端口\n31338端口：木马BO(Back Orifice)，DeepBO开放此端口\n31339端口：木马NetSpy DK开放此端口\n31666端口：木马BOWhack开放此端口\n31789端口：Hack-a-tack\n32770端口：sun solaris RPC服务开放此端口\n33333端口：木马Prosiak开放此端口\n33434端口：路由跟踪\n34324端口：木马Tiny Telnet Server、BigGluck、TN开放此端口\n36865端口：KastenX软件端口\n38201端口：Galaxy7软件数据通道\n39681端口：TurboNote默认端口\n40412端口：木马The Spy开放此端口\n40421端口：木马Masters Paradise开放此端口\n40422端口：木马Masters Paradise开放此端口\n40423端口：木马Masters Paradise开放此端口\n40426端口：木马Masters Paradise开放此端口\n40843端口：CSCC 防火墙\n43210端口：木马SchoolBus 1.0/2.0开放此端口\n43190端口：IP-PROVISION\n44321端口：PCP服务器(pmcd)\n44322端口：PCP服务器(pmcd)代理\n44334端口：微型个人防火墙端口\n44442端口：ColdFusion软件端口\n44443端口：ColdFusion软件端口\n44445端口：木马Happypig开放此端口\n45576端口：E代时光专业代理开放此端口\n47262端口：木马Delta开放此端口\n47624端口：Direct Play服务器\n47806端口：ALC协议\n48003端口：Nimbus网关\n50505端口：木马Sockets de Troie开放此端口\n50766端口：木马Fore开放此端口\n53001端口：木马Remote Windows Shutdown开放此端口\n54320端口：木马bo2000开放此端口\n54321端口：木马SchoolBus 1.0/2.0开放此端口\n61466端口：木马Telecommando开放此端口\n65000端口：木马Devil 1.03开放此端口\n65301端口：PC Anywhere软件开放端口","slug":"java/Tomcat以及端口","published":1,"updated":"2021-12-03T14:57:16.897Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958cm005wasda0o9q84n4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"零：Tomcat的介绍\"><a href=\"#零：Tomcat的介绍\" class=\"headerlink\" title=\"零：Tomcat的介绍\"></a>零：Tomcat的介绍</h1><p>Tomcat是Apache 软件基金会的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p>\n<p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</p>\n<p>诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。另外，Tomcat和IIS等Web服务器一样，具有处理HTML页面的功能，另外它还是一个Servlet和JSP容器，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态HTML的能力不如Apache服务器。目前Tomcat最新版本为10.0.5。</p>\n<h1 id=\"一：下载Tomcat\"><a href=\"#一：下载Tomcat\" class=\"headerlink\" title=\"一：下载Tomcat\"></a>一：下载Tomcat</h1><p>首先前往官网：<a href=\"https://tomcat.apache.org/\">tomcat下载</a><br><img src=\"https://img-blog.csdnimg.cn/5eabd2463b624bf091d8c0dbef83dd3b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">我这里是下载了Tomcat9，点进Tomcat9，我使用的是64位绿色版。<br><img src=\"https://img-blog.csdnimg.cn/6ac4f8bd57af42a693e5683b23076f99.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"二：安装Tomcat\"><a href=\"#二：安装Tomcat\" class=\"headerlink\" title=\"二：安装Tomcat\"></a>二：安装Tomcat</h1><p>因为我是下载了绿色版的，直接解压就行。<br><img src=\"https://img-blog.csdnimg.cn/1f9ca1560921497895f37a31f209173e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">目录介绍：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin\t\t\t\t\t专门用来存放Tomcat服务器的可执行程序</span><br><span class=\"line\">conf                专门用来存放Tomcat服务器的配置文件</span><br><span class=\"line\">lib\t\t\t        专门用来存放Tomcat服务器的jar包</span><br><span class=\"line\">logs\t\t\t\t专门用来存放Tomcat服务器的运行时输出的日记信息</span><br><span class=\"line\">temp\t\t\t\t专门用来存放Tomcat服务器运行时产生的临时数据</span><br><span class=\"line\">webapps\t\t\t    专门用来存放部署的Web工程</span><br><span class=\"line\">work\t\t\t\t是Tomcat工作时的目录，用来存放Tomcat运行时jsp翻译为Servlet的源码，和Session钝化的目录</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"三：启动Tomcat服务器\"><a href=\"#三：启动Tomcat服务器\" class=\"headerlink\" title=\"三：启动Tomcat服务器\"></a>三：启动Tomcat服务器</h1><p>找到Tomcat目录下的bin目录下的startup.bat文件，双击启动。<br><img src=\"https://img-blog.csdnimg.cn/5a4fd549dc814c249b5724d7a6404f88.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>发现出现了乱码，这时候可以在配置文件修改编码方式。打开conf文件夹下的logging.properties文件，找到<code>java.util.logging.ConsoleHandler.encoding = UTF-8</code>，将UTF-8改为GBK<br><img src=\"https://img-blog.csdnimg.cn/bbe9b574762d4b89b5c4719b7a49ac8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>然后保存修改，重启服务器就好了：<br><img src=\"https://img-blog.csdnimg.cn/b7d489e0e78e4144b87ed05dcedb8424.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果点击startup.bat时黑窗一闪而过，那就是因为没有配置好JAVA_HOME环境变量，JAVA_HOME时JDK的安装目录。<br><img src=\"https://img-blog.csdnimg.cn/8aefc2d067874a849113e01a7cc4c875.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>除了双击startup.bat启动，还可以用命令行的方式启动，命令行进入Tomcat的bin目录：输入命令<code>catalina run</code><br><img src=\"https://img-blog.csdnimg.cn/a272c5c7e6704b75ad89c23dc4c8dbb9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：停止Tomcat服务器\"><a href=\"#四：停止Tomcat服务器\" class=\"headerlink\" title=\"四：停止Tomcat服务器\"></a>四：停止Tomcat服务器</h1><ul>\n<li>直接关闭tomcat窗口</li>\n<li>使用快捷键ctrl+c</li>\n<li>找到Tomcat的bin目录下的shutdown.bat，双击停止服务器(该方法为主要方法)</li>\n</ul>\n<h1 id=\"五：修改Tomcat的端口号\"><a href=\"#五：修改Tomcat的端口号\" class=\"headerlink\" title=\"五：修改Tomcat的端口号\"></a>五：修改Tomcat的端口号</h1><p>Tomcat默认端口号是8080，但8080端口是被用于WWW代理服务的，可以实现网页浏览，Vue项目的预览就是开启8080端口，因此该端口经常被占用，因此通常都需要修改端口号。</p>\n<p>端口号范围是1-65535，1000以内的端口号是系统使用的，修改端口尽量不要使用1000以内的，但是我老师要求修改为端口号为88。修改前还可以看看端口占用情况，打开命令提示符，输入<code>netstat -ano</code>。<br><img src=\"https://img-blog.csdnimg.cn/d12842b23f034b0ab832d8f9f6b09450.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>现在来修改Tomcat端口号，找到Tomcat目录下的conf目录，找到server.xml并打开，找到Connector标签修改端口号。<br><img src=\"https://img-blog.csdnimg.cn/34e05a82f35e48459743cbc4a3c63ded.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>修改完端口号后需要重启才能生效，成功后效果如下：<br><img src=\"https://img-blog.csdnimg.cn/8199c3ddf8fb4f60bbe9c06773c7aace.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六：在idea中整合Tomcat\"><a href=\"#六：在idea中整合Tomcat\" class=\"headerlink\" title=\"六：在idea中整合Tomcat\"></a>六：在idea中整合Tomcat</h1><p>打开idea的设置，打开应用程序服务器，点击加号添加：<br><img src=\"https://img-blog.csdnimg.cn/5cbc65ea639e44a8b7345fe86167b9a7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">选中文件夹即可，选中一个，其余的会自动填写：<br><img src=\"https://img-blog.csdnimg.cn/f50d3586951242c583518624fab12772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/b47c4132ea6d4214b6a8d3c19fdea6a5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：常用端口\"><a href=\"#七：常用端口\" class=\"headerlink\" title=\"七：常用端口\"></a>七：常用端口</h1><p>端口：0<br>服务：Reserved<br>说明：通常用于分析操作系统。这一方法能够工作是因为在一些系统中“0”是无效端口，当你试图使用通常的闭合端口连接它时将产生不同的结果。一种典型的扫描，使用IP地址为0.0.0.0，设置ACK位并在以太网层广播。</p>\n<p>端口：1<br>服务：tcpmux<br>说明：这显示有人在寻找SGI Irix机器。Irix是实现tcpmux的主要提供者，默认情况下tcpmux在这种系统中被打开。Irix机器在发布是含有几个默认的无密码的帐户，如：IP、GUEST UUCP、NUUCP、DEMOS 、TUTOR、DIAG、OUTOFBOX等。许多管理员在安装后忘记删除这些帐户。因此HACKER在INTERNET上搜索tcpmux并利用这些帐户。</p>\n<p>端口：7<br>服务：Echo<br>说明：能看到许多人搜索Fraggle放大器时，发送到X.X.X.0和X.X.X.255的信息。</p>\n<p>端口：19<br>服务：Character Generator<br>说明：这是一种仅仅发送字符的服务。UDP版本将会在收到UDP包后回应含有垃圾字符的包。TCP连接时会发送含有垃圾字符的数据流直到连接关闭。HACKER利用IP欺骗可以发动DoS攻击。伪造两个chargen服务器之间的UDP包。同样Fraggle DoS攻击向目标地址的这个端口广播一个带有伪造受害者IP的数据包，受害者为了回应这些数据而过载。</p>\n<p>端口：21<br>服务：FTP<br>说明：FTP服务器所开放的端口，用于上传、下载。最常见的攻击者用于寻找打开anonymous的FTP服务器的方法。这些服务器带有可读写的目录。木马Doly Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade Runner所开放的端口。</p>\n<p>端口：22<br>服务：ssh<br>说明：PcAnywhere建立的TCP和这一端口的连接可能是为了寻找ssh。这一服务有许多弱点，如果配置成特定的模式，许多使用RSAREF库的版本就会有不少的漏洞存在。</p>\n<p>端口：23<br>服务：Telnet<br>说明：远程登录，<strong>者在搜索远程登录UNIX的服务。大多数情况下扫描这一端口是为了找到机器运行的操作系统。还有使用其他技术，</strong>者也会找到密码。木马Tiny Telnet Server就开放这个端口。</p>\n<p>端口：25<br>服务：SMTP<br>说明：SMTP服务器所开放的端口，用于发送邮件。<strong>者寻找SMTP服务器是为了传递他们的SPAM。</strong>者的帐户被关闭，他们需要连接到高带宽的E-MAIL服务器上，将简单的信息传递到不同的地址。木马Antigen、Email Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口。</p>\n<p>端口：31<br>服务：MSG Authentication<br>说明：木马Master Paradise、Hackers Paradise开放此端口。</p>\n<p>端口：42<br>服务：WINS Replication<br>说明：WINS复制</p>\n<p>端口：53<br>服务：Domain Name Server（DNS）<br>说明：DNS服务器所开放的端口，**者可能是试图进行区域传递（TCP），欺骗DNS（UDP）或隐藏其他的通信。因此防火墙常常过滤或记录此端口。</p>\n<p>端口：67<br>服务：Bootstrap Protocol Server<br>说明：通过DSL和Cable modem的防火墙常会看见大量发送到广播地址255.255.255.255的数据。这些机器在向DHCP服务器请求一个地址。HACKER常进入它们，分配一个地址把自己作为局部路由器而发起大量中间人（man-in-middle）攻击。客户端向68端口广播请求配置，服务器向67端口广播回应请求。这种回应使用广播是因为客户端还不知道可以发送的IP地址。</p>\n<p>端口：69<br>服务：Trival File Transfer<br>说明：许多服务器与bootp一起提供这项服务，便于从系统下载启动代码。但是它们常常由于错误配置而使**者能从系统中窃取任何 文件。它们也可用于系统写入文件。</p>\n<p>端口：79<br>服务：Finger Server<br>说明：**者用于获得用户信息，查询操作系统，探测已知的缓冲区溢出错误，回应从自己机器到其他机器Finger扫描。</p>\n<p>端口：80<br>服务：HTTP<br>说明：用于网页浏览。木马Executor开放此端口。</p>\n<p>端口：99<br>服务：gram Relay<br>说明：后门程序ncx99开放此端口。</p>\n<p>端口：102<br>服务：Message transfer agent(MTA)-X.400 over TCP/IP<br>说明：消息传输代理。</p>\n<p>端口：109<br>服务：Post Office Protocol -Version3<br>说明：POP3服务器开放此端口，用于接收邮件，客户端访问服务器端的邮件服务。POP3服务有许多公认的弱点。关于用户名和密码交 换缓冲区溢出的弱点至少有20个，这意味着**者可以在真正登陆前进入系统。成功登陆后还有其他缓冲区溢出错误。</p>\n<p>端口：110<br>服务：SUN公司的RPC服务所有端口<br>说明：常见RPC服务有rpc.mountd、NFS、rpc.statd、rpc.csmd、rpc.ttybd、amd等</p>\n<p>端口：113<br>服务：Authentication Service<br>说明：这是一个许多计算机上运行的协议，用于鉴别TCP连接的用户。使用标准的这种服务可以获得许多计算机的信息。但是它可作为许多服务的记录器，尤其是FTP、POP、IMAP、SMTP和IRC等服务。通常如果有许多客户通过防火墙访问这些服务，将会看到许多这个端口的连接请求。记住，如果阻断这个端口客户端会感觉到在防火墙另一边与E-MAIL服务器的缓慢连接。许多防火墙支持TCP连接的阻断过程中发回RST。这将会停止缓慢的连接。</p>\n<p>端口：119<br>服务：Network News Transfer Protocol<br>说明：NEWS新闻组传输协议，承载USENET通信。这个端口的连接通常是人们在寻找USENET服务器。多数ISP限制，只有他们的客户才能访问他们的新闻组服务器。打开新闻组服务器将允许发/读任何人的帖子，访问被限制的新闻组服务器，匿名发帖或发送SPAM。</p>\n<p>端口：135<br>服务：Location Service<br>说明：Microsoft在这个端口运行DCE RPC end-point mapper为它的DCOM服务。这与UNIX 111端口的功能很相似。使用DCOM和RPC的服务利用计算机上的end-point mapper注册它们的位置。远端客户连接到计算机时，它们查找end-point mapper找到服务的位置。HACKER扫描计算机的这个端口是为了找到这个计算机上运行Exchange Server吗？什么版本？还有些DOS攻击直接针对这个端口。</p>\n<p>端口：137、138、139<br>服务：NETBIOS Name Service<br>说明：其中137、138是UDP端口，当通过网上邻居传输文件时用这个端口。而139端口：通过这个端口进入的连接试图获得NetBIOS/SMB服务。这个协议被用于windows文件和打印机共享和SAMBA。还有WINS Regisrtation也用它。</p>\n<p>端口：143<br>服务：Interim Mail Access Protocol v2<br>说明：和POP3的安全问题一样，许多IMAP服务器存在有缓冲区溢出漏洞。记住：一种LINUX蠕虫（admv0rm）会通过这个端口繁殖，因此许多这个端口的扫描来自不知情的已经被感染的用户。当REDHAT在他们的LINUX发布版本中默认允许IMAP后，这些漏洞变的很流行。这一端口还被用于IMAP2，但并不流行。</p>\n<p>端口：161<br>服务：SNMP<br>说明：SNMP允许远程管理设备。所有配置和运行信息的储存在数据库中，通过SNMP可获得这些信息。许多管理员的错误配置将被暴露在Internet。Cackers将试图使用默认的密码public、private访问系统。他们可能会试验所有可能的组合。SNMP包可能会被错误的指向用户的网络。</p>\n<p>端口：177<br>服务：X Display Manager Control Protocol<br>说明：许多**者通过它访问X-windows操作台，它同时需要打开6000端口。</p>\n<p>端口：389<br>服务：LDAP、ILS<br>说明：轻型目录访问协议和NetMeeting Internet Locator Server共用这一端口。</p>\n<p>端口：443<br>服务：Https<br>说明：网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP。</p>\n<p>端口：456<br>服务：[NULL]<br>说明：木马HACKERS PARADISE开放此端口。</p>\n<p>端口：513<br>服务：Login,remote login<br>说明：是从使用cable modem或DSL登陆到子网中的UNIX计算机发出的广播。这些人为**者进入他们的系统提供了信息。</p>\n<p>端口：544<br>服务：[NULL]<br>说明：kerberos kshell</p>\n<p>端口：548<br>服务：Macintosh,File Services(AFP/IP)<br>说明：Macintosh,文件服务。</p>\n<p>端口：553<br>服务：CORBA IIOP （UDP）<br>说明：使用cable modem、DSL或VLAN将会看到这个端口的广播。CORBA是一种面向对象的RPC系统。**者可以利用这些信息进入系统。</p>\n<p>端口：555<br>服务：DSF<br>说明：木马PhAse1.0、Stealth Spy、IniKiller开放此端口。</p>\n<p>端口：568<br>服务：Membership DPA<br>说明：成员资格 DPA。</p>\n<p>端口：569<br>服务：Membership MSN<br>说明：成员资格 MSN。</p>\n<p>端口：635<br>服务：mountd<br>说明：Linux的mountd Bug。这是扫描的一个流行BUG。大多数对这个端口的扫描是基于UDP的，但是基于TCP的mountd有所增加（mountd同时运行于两个端口）。记住mountd可运行于任何端口（到底是哪个端口，需要在端口111做portmap查询），只是Linux默认端口是635，就像NFS通常运行于2049端口。</p>\n<p>端口：636<br>服务：LDAP<br>说明：SSL（Secure Sockets layer）</p>\n<p>端口：666<br>服务：Doom Id Software<br>说明：木马Attack FTP、Satanz Backdoor开放此端口</p>\n<p>端口：993<br>服务：IMAP<br>说明：SSL（Secure Sockets layer）</p>\n<p>端口：1001、1011<br>服务：[NULL]<br>说明：木马Silencer、WebEx开放1001端口。木马Doly Trojan开放1011端口。</p>\n<h1 id=\"八：计算机端口大全\"><a href=\"#八：计算机端口大全\" class=\"headerlink\" title=\"八：计算机端口大全\"></a>八：计算机端口大全</h1><p>0端口：无效端口,通常用于分析操作系统<br>1端口：传输控制协议端口服务多路开关选择器<br>2端口：管理实用程序<br>3端口：压缩进程<br>5端口：远程作业登录<br>7端口：回显<br>9端口：丢弃<br>11端口：在线用户<br>13端口：时间<br>17端口：每日引用<br>18端口：消息发送协议<br>19端口：字符发生器<br>20端口：FTP文件传输协议(默认数据口)<br>21端口：FTP文件传输协议(控制)<br>22端口：SSH远程登录协议<br>23端口：telnet(终端仿真协议),木马Tiny Telnet Server开放此端口<br>24端口：预留给个人用邮件系统<br>25端口：SMTP服务器所开放的端口，用于发送邮件<br>27端口：NSW 用户系统 FE<br>29端口：MSG ICP<br>31端口：MSG验证,木马Master Paradise、HackersParadise开放此端口<br>33端口：显示支持协议<br>35端口：预留给个人打印机服务<br>37端口：时间<br>38端口：路由访问协议<br>39端口：资源定位协议<br>41端口：图形<br>42端口：主机名服务<br>43端口：who is服务<br>44端口：MPM(消息处理模块)标志协议<br>45端口：消息处理模块<br>46端口：消息处理模块(默认发送口)<br>47端口：NI FTP<br>48端口：数码音频后台服务<br>49端口：TACACS登录主机协议<br>50端口：远程邮件检查协议<br>51端口：IMP(接口信息处理机)逻辑地址维护<br>52端口：施乐网络服务系统时间协议<br>53端口：dns域名服务器<br>54端口：施乐网络服务系统票据交换<br>55端口：ISI图形语言<br>56端口：施乐网络服务系统验证<br>57端口：预留个人用终端访问<br>58端口：施乐网络服务系统邮件<br>59端口：预留个人文件服务<br>60端口：未定义<br>61端口：NI邮件<br>62端口：异步通讯适配器服务<br>63端口：whois++<br>64端口：通讯接口<br>65端口：TACACS数据库服务<br>66端口：Oracle SQL*NET<br>67端口：引导程序协议服务端<br>68端口：引导程序协议客户端<br>69端口：小型文件传输协议<br>70端口：信息检索协议<br>71端口：远程作业服务<br>72端口：远程作业服务<br>73端口：远程作业服务<br>74端口：远程作业服务<br>75端口：预留给个人拨出服务<br>76端口：分布式外部对象存储<br>77端口：预留给个人远程作业输入服务<br>78端口：修正TCP<br>79端口：查询远程主机在线用户等信息<br>80端口：http,用于网页浏览,木马Executor开放此端口<br>81端口：HOST2名称服务<br>82端口：传输实用程序<br>83端口：模块化智能终端ML设备<br>84端口：公用追踪设备<br>85端口：模块化智能终端ML设备<br>86端口：Micro Focus Cobol编程语言<br>87端口：预留给个人终端连接<br>88端口：Kerberros安全认证系统<br>89端口：SU/MIT telnet(终端仿真网关)<br>90端口：DNSIX 安全属性标记图<br>91端口：MIT Dover假脱机<br>92端口：网络打印协议<br>93端口：设备控制协议<br>94端口：Tivoli对象调度<br>96端口：DIXIE协议规范<br>97端口：快速远程虚拟文件协议<br>98端口：TAC新闻协议<br>99端口：后门程序ncx99开放此端口<br>100端口：未知用途<br>101端口：NIC 主机名称服务<br>102端口：消息传输代理<br>103端口：Genesis 点对点传输网络<br>105端口：信箱名称服务<br>106端口：3COM-TSMUX开放端口<br>107端口：远程Telnet服务<br>108端口：SNA 网关访问服务<br>109端口：POP2服务器开放此端口,用于接收邮件<br>110端口：POP3服务器开放此端口,用于接收邮件<br>111端口：SUN公司的RPC服务所有端口<br>112端口：McIDAS 数据传输协议<br>113端口：认证服务，用于鉴别TCP连接的用户<br>114端口：音频新闻多点服务<br>115端口：简单文件传输服务<br>116端口：ANSA REX 通知<br>117端口：UUCP 路径服务<br>118端口：SQL 服务<br>119端口：NEWS新闻组传输协议，承载USENET通信<br>121端口：木马BO jammerkillahV开放端口<br>122端口：SMAKY网络<br>123端口：网络时间协议，蠕虫病毒会利用，一般关闭<br>128端口：GSS X许可认证<br>129端口：密码生成器协议<br>130端口：Cisco软件开放端口<br>131端口：Cisco软件开放端口<br>132端口：Cisco软件开放端口<br>133端口：统计服务<br>134端口：INGRES-网络服务<br>135端口：DCOM服务，冲击波病毒利用，不能关闭<br>136端口：命名系统<br>137端口：NETBIOS协议应用，为共享开放<br>138端口：NETBIOS协议应用，为共享开放<br>139端口：NETBIOS协议应用，为共享开放<br>140端口：EMFIS数据服务<br>141端口：EMFIS控制服务<br>143端口：Interim邮件访问协议<br>144端口：UMA软件开放端口<br>145端口：UAAC协议<br>149端口：AED 512仿真服务<br>150端口：SQL(结构化查询语言)-网络<br>152端口：后台文件传输协议<br>156端口：SQL(结构化查询语言)服务<br>158端口：PC邮件服务器<br>159端口：NSS-路由<br>160端口：SGMP-陷阱<br>161端口：简单网络管理协议<br>162端口：SNMP陷阱<br>163端口：CMIP/TCP 管理<br>164端口：CMIP/TCP 代理<br>166端口：Sirius系统<br>169端口：发送<br>170端口：网络附言<br>177端口：x显示管理控制协议，入侵者通过它访问X-windows操作台<br>178端口：NextStep Window 服务<br>179端口：边界网关协议<br>180端口：图表<br>181端口：统一<br>184端口：OC服务器<br>185端口：远程-KIS<br>186端口：KIS 协议<br>187端口：应用通信接口<br>189端口：队列文件传输<br>190端口：网关进入控制协议<br>191端口：Prospero 目录服务<br>192端口：OSU 网络监视系统<br>193端口：Spider 远程控制协议<br>194端口：多线交谈协议<br>197端口：目录地址服务<br>198端口：目录地址服务监视器<br>200端口：IBM系统资源控制器<br>201端口：AppleTalk(Mac机所用的网络协议)路由保证<br>202端口：AppleTalk(Mac机所用的网络协议)Name Binding<br>203端口：AppleTalk(Mac机所用的网络协议)未用端口<br>204端口：AppleTalk(Mac机所用的网络协议)回显<br>205端口：AppleTalk(Mac机所用的网络协议)未用端口<br>206端口：AppleTalk(Mac机所用的网络协议)区信息<br>207端口：AppleTalk(Mac机所用的网络协议)未用端口<br>208端口：AppleTalk(Mac机所用的网络协议)未用端口<br>209端口：快速邮件传输协议<br>210端口：ANSI(美国国家标准协会)Z39.50<br>211端口：Texas Instruments 914C/G终端<br>213端口：IPX(以太网所用的协议)<br>218端口：Netix消息记录协议<br>219端口：Unisys ARPs<br>220端口：交互邮件访问协议 v3<br>223端口：证书分发中心<br>224端口：masq拨号器<br>241端口：预留端口 (224-241)<br>245端口：链接<br>246端口：显示系统协议<br>257端口：安全电子交易系统<br>258端口：Yak Winsock 个人聊天<br>259端口：有效短程遥控<br>260端口：开放端口<br>261端口：IIOP 基于TLS/SSL的命名服务<br>266端口：SCSI(小型计算机系统接口)on ST<br>267端口：Tobit David服务层<br>268端口：Tobit David复制<br>281端口：个人连结<br>282端口：Cable端口A/X<br>286端口：FXP通信<br>308端口：Novastor备份<br>313端口：Magenta逻辑<br>318端口：PKIX时间标记<br>333端口：Texar安全端口<br>344端口：Prospero数据存取协议<br>345端口：Perf分析工作台<br>346端口：Zebra服务器<br>347端口：Fatmen服务器<br>348端口：Cabletron管理协议<br>358端口：Shrink可上网家电协议<br>359端口：网络安全风险管理协议<br>362端口：SRS发送<br>363端口：RSVP隧道<br>372端口：列表处理<br>373端口：Legend公司<br>374端口：Legend公司<br>376端口：AmigaEnvoy网络查询协议<br>377端口：NEC公司<br>378端口：NEC公司<br>379端口：TIA/EIA/IS-99调制解调器客户端<br>380端口：TIA/EIA/IS-99调制解调器服务器<br>381端口：hp(惠普)性能数据收集器<br>382端口：hp(惠普)性能数据控制节点<br>383端口：hp(惠普)性能数据警报管理<br>384端口：远程网络服务器系统<br>385端口：IBM应用程序<br>386端口：ASA信息路由器定义文件.<br>387端口：Appletalk更新路由.<br>389端口：轻型目录访问协议<br>395端口：网络监视控制协议<br>396端口：Novell(美国Novell公司)Netware(Novell公司出的网络操作系统)over IP<br>400端口：工作站解决方案<br>401端口：持续电源<br>402端口：Genie协议<br>406端口：交互式邮件支持协议<br>408端口：Prospero资源管理程序<br>409端口：Prospero资源节点管理.<br>410端口：DEC(数据设备公司)远程调试协议<br>411端口：远程MT协议<br>412端口：陷阱协定端口<br>413端口：存储管理服务协议<br>414端口：信息查询<br>415端口：B网络<br>423端口：IBM操作计划和控制开端<br>424端口：IBM操作计划和控制追踪<br>425端口：智能计算机辅助设计<br>427端口：服务起位置<br>434端口：移动ip代理<br>435端口：移动ip管理<br>443端口：基于TLS/SSL的网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP<br>444端口：简单网络内存分页协议<br>445端口：Microsoft-DS，为共享开放，震荡波病毒利用，一般应关闭<br>446端口：DDM-远程关系数据库访问<br>447端口：DDM-分布式文件管理<br>448端口：DDM-使用安全访问远程数据库<br>456端口：木马HACKERS PARADISE开放此端口<br>458端口：apple quick time软件开放端口<br>459端口：ampr-rcmd命令<br>464端口：k密码服务<br>469端口：广播控制协议<br>470端口：scx-代理<br>472端口：ljk-登陆<br>481端口：Ph服务<br>487端口：简单异步文件传输<br>489端口：nest-协议<br>491端口：go-登陆<br>499端口：ISO ILL协议<br>500端口：Internet密钥交换，Lsass开放端口，不能关闭<br>509端口：陷阱<br>510端口：FirstClass协议<br>512端口：远程进程执行<br>513端口：远程登陆<br>514端口：cmd命令<br>515端口：spooler<br>516端口：可视化数据<br>518端口：交谈<br>519端口：unix时间<br>520端口：扩展文件名称服务器<br>525端口：时间服务<br>526端口：新日期<br>529端口：在线聊天系统服务<br>530端口：远程过程调用<br>531端口：聊天<br>532端口：读新闻<br>533端口：紧急广播端口<br>534端口：MegaMedia管理端<br>537端口：网络流媒体协议<br>542端口：商业<br>543端口：Kerberos(软件)v4/v5<br>544端口：krcmd命令<br>546端口：DHCPv6 客户端<br>547端口：DHCPv6 服务器<br>552端口：设备共享<br>554端口：Real Time Stream控制协议<br>555端口：木马PhAse1.0、Stealth Spy、IniKiller开放此端口<br>556端口：远距离文件服务器<br>563端口：基于TLS/SSL的网络新闻传输协议<br>564端口：plan 9文件服务<br>565端口：whoami查询<br>566端口：streettalk<br>567端口：banyan-rpc(远程过程调用)<br>568端口：DPA成员资格<br>569端口：MSN成员资格<br>570端口：demon(调试监督程序)<br>571端口：udemon(调试监督程序)<br>572端口：声纳<br>573端口：banyan-贵宾<br>574端口：FTP软件代理系统<br>581端口：Bundle Discovery 协议<br>582端口：SCC安全<br>583端口：Philips视频会议<br>584端口：密钥服务器<br>585端口：IMAP4+SSL (Use 993 instead)<br>586端口：密码更改<br>587端口：申请<br>589端口：Eye连结<br>595端口：CAB协议<br>597端口：PTC名称服务<br>598端口：SCO网络服务器管理3<br>599端口：Aeolon Core协议<br>600端口：Sun IPC(进程间通讯)服务器<br>601端口：可靠系统登陆服务<br>604端口：通道<br>606端口：Cray统一资源管理<br>608端口：发送人-传递/提供 文件传输器<br>609端口：npmp-陷阱<br>610端口：npmp-本地<br>611端口：npmp-gui( 图形用户界面)<br>612端口：HMMP指引<br>613端口：HMMP操作<br>614端口：SSL(加密套接字协议层)shell(壳)<br>615端口：Internet配置管理<br>616端口：SCO(Unix系统)系统管理服务器<br>617端口：SCO桌面管理服务器<br>619端口：Compaq(康柏公司)EVM<br>620端口：SCO服务器管理<br>623端口：ASF远程管理控制协议<br>624端口：Crypto管理<br>631端口：IPP (Internet打印协议)<br>633端口：服务更新(Sterling软件)<br>637端口：局域网服务器<br>641端口：repcmd命令<br>647端口：DHCP(动态主机配置协议)Failover<br>648端口：注册登记协议(RRP)<br>649端口：Cadview-3d软件协议<br>666端口：木马Attack FTP、Satanz Backdoor开放此端口<br>808端口：ccproxy http/gopher/ftp (over http)协议<br>1001端口：木马Silencer，WebEx开放端口<br>1011端口：木马Doly开放端口<br>1024端口：动态端口的开始,木马yai开放端口<br>1025端口：inetinfo.exe(互联网信息服务)木马netspy开放端口<br>1026端口：inetinfo.exe(互联网信息服务)<br>1027端口：应用层网关服务<br>1030端口：应用层网关服务<br>1031端口：BBN IAD<br>1033端口：本地网络信息端口<br>1034端口：同步通知<br>1036端口：安全部分传输协议<br>1070端口：木马Psyber Stream，Streaming Audio开放端口<br>1071端口：网络服务开放端口<br>1074端口：网络服务开放端口<br>1080端口：Socks这一协议以通道方式穿过防火墙，允许防火墙后面的人通过一个IP地址访问INTERNET<br>1110端口：卡巴斯基反病毒软件开放此端口<br>1125端口：卡巴斯基反病毒软件开放此端口<br>1203端口：许可证生效端口<br>1204端口：登陆请求监听端口<br>1206端口：Anthony数据端口<br>1222端口：SNI R&amp;D网络端口<br>1233端口：普遍的附录服务器端口<br>1234端口：木马SubSeven2.0、Ultors Trojan开放此端口<br>1243端口：木马SubSeven1.0/1.9开放此端口<br>1245端口：木马Vodoo，GabanBus，NetBus，Vodoo开放此端口<br>1273端口：EMC-网关端口<br>1289端口：JWalk服务器端口<br>1290端口：WinJa服务器端口<br>1333端口：密码策略(网络服务)(svchost.exe)<br>1334端口：网络服务(svchost.exe)<br>1335端口：数字公正协议<br>1336端口：即时聊天协议(svchost.exe)<br>1349端口：注册网络协议端口<br>1350端口：注册网络协议端口<br>1371端口：富士通配置协议端口<br>1372端口：富士通配置协议端口<br>1374端口：EPI软件系统端口<br>1376端口：IBM个人-个人软件端口<br>1377端口：Cichlid许可证管理端口<br>1378端口：Elan许可证管理端口<br>1380端口：Telesis网络许可证管理端口<br>1381端口：苹果网络许可证管理端口<br>1386端口：CheckSum 许可证管理端口<br>1387端口：系统开放端口(rundll32.exe)<br>1388端口：数据库高速缓存端口<br>1389端口：文档管理端口<br>1390端口：存储控制器端口<br>1391端口：存储器存取服务器端口<br>1392端口：打印管理端口<br>1393端口：网络登陆服务器端口<br>1394端口：网络登陆客户端端口<br>1395端口：PC工作站管理软件端口<br>1396端口：DVL活跃邮件端口<br>1397端口：音频活跃邮件端口<br>1398端口：视频活跃邮件端口<br>1399端口：Cadkey许可证管理端口<br>1433端口：Microsoft的SQL服务开放端口<br>1434端口：Microsoft的SQL服务监视端口<br>1492端口：木马FTP99CMP开放此端口<br>1509端口：木马Psyber Streaming Server开放此端口<br>1512端口：Microsoft Windows网络名称服务<br>1524端口：许多攻击脚本安装一个后门SHELL于这个端口<br>1600端口：木马Shivka-Burka开放此端口<br>1645端口：远程认证拨号用户服务<br>1701端口：第2层隧道协议<br>1731端口：NetMeeting音频调用控制<br>1801端口：Microsoft消息队列服务器<br>1807端口：木马SpySender开放此端口<br>1900端口：可被利用ddos攻击，一般关闭<br>1912端口：金山词霸开放此端口<br>1981端口：木马ShockRave开放此端口<br>1999端口：木马BackDoor,yai开放此端口<br>2000端口：木马GirlFriend 1.3、Millenium 1.0开放此端口<br>2001端口：木马Millenium 1.0、Trojan Cow,黑洞2001开放此端口<br>2003端口：GNU 查询<br>2023端口：木马Pass Ripper开放此端口<br>2049端口：NFS程序常运行于此端口<br>2115端口：木马Bugs开放此端口<br>2140端口：木马Deep Throat 1.0/3.0，The Invasor开放此端口<br>2500端口：应用固定端口会话复制的RPC客户<br>2504端口：网络平衡负荷<br>2565端口：木马Striker开放此端口<br>2583端口：木马Wincrash 2.0开放此端口<br>2801端口：木马Phineas Phucker开放此端口<br>2847端口：诺顿反病毒服务开放此端口<br>3024端口：木马WinCrash开放此端口<br>3128端口：squid http代理服务器开放此端口<br>3129端口：木马Master Paradise开放此端口<br>3150端口：木马The Invasor,deep throat开放此端口<br>3210端口：木马SchoolBus开放此端口<br>3306端口：MySQL开放此端口<br>3333端口：木马Prosiak开放此端口<br>3389端口：WINDOWS 2000终端开放此端口<br>3456端口：inetinfo.exe(互联网信息服务)开放端口，VAT默认数据<br>3457端口：VAT默认控制<br>3527端口：Microsoft消息队列服务器<br>3700端口：木马Portal of Doom开放此端口<br>3996端口：木马RemoteAnything开放此端口<br>4000端口：腾讯QQ客户端开放此端口<br>4060端口：木马RemoteAnything开放此端口<br>4092端口：木马WinCrash开放此端口<br>4133端口：NUTS Bootp服务器<br>4134端口：NIFTY-Serve HMI协议<br>4141端口：Workflow服务器<br>4142端口：文档服务器<br>4143端口：文档复制<br>4145端口：VVR控制<br>4321端口：远程Who Is查询<br>4333端口：微型sql服务器<br>4349端口：文件系统端口记录<br>4350端口：网络设备<br>4351端口：PLCY网络服务<br>4453端口：NSS警报管理<br>4454端口：NSS代理管理<br>4455端口：PR聊天用户<br>4456端口：PR聊天服务器<br>4457端口：PR注册<br>4480端口：Proxy+ HTTP代理端口<br>4500端口：Lsass开放端口，不能关闭<br>4547端口：Lanner许可管理<br>4555端口：RSIP端口<br>4590端口：木马ICQTrojan开放此端口<br>4672端口：远程文件访问服务器<br>4752端口：简单网络音频服务器<br>4800端口：Icona快速消息系统<br>4801端口：Icona网络聊天<br>4802端口：Icona许可系统服务器<br>4848端口：App服务器-Admin HTTP<br>4849端口：App服务器-Admin HTTPS<br>4950端口：木马IcqTrojan开放5000端口<br>5000端口：木马blazer5，Sockets de Troie开放5000端口，一般应关闭<br>5001端口：木马Sockets de Troie开放5001端口<br>5006端口：wsm服务器<br>5007端口：wsm服务器ssl<br>5022端口：mice服务器<br>5050端口：多媒体会议控制协议<br>5051端口：ITA代理<br>5052端口：ITA管理<br>5137端口：MyCTS服务器端口<br>5150端口：Ascend通道管理协议<br>5154端口：BZFlag游戏服务器<br>5190端口：America-Online(美国在线)<br>5191端口：AmericaOnline1(美国在线)<br>5192端口：AmericaOnline2(美国在线)<br>5193端口：AmericaOnline3(美国在线)<br>5222端口：Jabber客户端连接<br>5225端口：HP(惠普公司)服务器<br>5226端口：HP(惠普公司)<br>5232端口：SGI绘图软件端口<br>5250端口：i网关<br>5264端口：3Com网络端口1<br>5265端口：3Com网络端口2<br>5269端口：Jabber服务器连接<br>5306端口：Sun MC组<br>5321端口：木马Sockets de Troie开放5321端口<br>5400端口：木马Blade Runner开放此端口<br>5401端口：木马Blade Runner开放此端口<br>5402端口：木马Blade Runner开放此端口<br>5405端口：网络支持<br>5409端口：Salient数据服务器<br>5410端口：Salient用户管理<br>5415端口：NS服务器<br>5416端口：SNS网关<br>5417端口：SNS代理<br>5421端口：网络支持2<br>5423端口：虚拟用户<br>5427端口：SCO-PEER-TTA(Unix系统)<br>5432端口：PostgreSQL数据库<br>5550端口：木马xtcp开放此端口<br>5569端口：木马Robo-Hack开放此端口<br>5599端口：公司远程安全安装<br>5600端口：公司安全管理<br>5601端口：公司安全代理<br>5631端口：pcANYWHERE(软件)数据<br>5632端口：pcANYWHERE(软件)数据<br>5673端口：JACL消息服务器<br>5675端口：V5UA应用端口<br>5676端口：RA管理<br>5678端口：远程复制代理连接<br>5679端口：直接电缆连接<br>5720端口：MS-执照<br>5729端口：Openmail用户代理层<br>5730端口：Steltor’s日历访问<br>5731端口：netscape(网景)suiteware<br>5732端口：netscape(网景)suiteware<br>5742端口：木马WinCrash1.03开放此端口<br>5745端口：fcopy-服务器<br>5746端口：fcopys-服务器<br>5755端口：OpenMail(邮件服务器)桌面网关服务器<br>5757端口：OpenMail(邮件服务器)X.500目录服务器<br>5766端口：OpenMail (邮件服务器)NewMail服务器<br>5767端口：OpenMail (邮件服务器)请求代理曾(安全)<br>5768端口：OpenMail(邮件服务器) CMTS服务器<br>5777端口：DALI端口<br>5800端口：虚拟网络计算<br>5801端口：虚拟网络计算<br>5802端口：虚拟网络计算HTTP访问, d<br>5803端口：虚拟网络计算HTTP访问, d<br>5900端口：虚拟网络计算机显示0<br>5901端口：虚拟网络计算机显示1<br>5902端口：虚拟网络计算机显示2<br>5903端口：虚拟网络计算机显示3<br>6000端口：X Window 系统<br>6001端口：X Window 服务器<br>6002端口：X Window 服务器<br>6003端口：X Window 服务器<br>6004端口：X Window 服务器<br>6005端口：X Window 服务器<br>6006端口：X Window 服务器<br>6007端口：X Window 服务器<br>6008端口：X Window 服务器<br>6009端口：X Window 服务器<br>6456端口：SKIP证书发送<br>6471端口：LVision许可管理器<br>6505端口：BoKS管理私人端口<br>6506端口：BoKS管理公共端口<br>6507端口：BoKS Dir服务器,私人端口<br>6508端口：BoKS Dir服务器,公共端口<br>6509端口：MGCS-MFP端口<br>6510端口：MCER端口<br>6566端口：SANE控制端口<br>6580端口：Parsec主服务器<br>6581端口：Parsec对等网络<br>6582端口：Parsec游戏服务器<br>6588端口：AnalogX HTTP代理端口<br>6631端口：Mitchell电信主机<br>6667端口：Internet多线交谈<br>6668端口：Internet多线交谈<br>6670端口：木马Deep Throat开放此端口<br>6671端口：木马Deep Throat 3.0开放此端口<br>6699端口：Napster文件(MP3)共享服务<br>6701端口：KTI/ICAD名称服务器<br>6788端口：SMC软件-HTTP<br>6789端口：SMC软件-HTTPS<br>6841端口：Netmo软件默认开放端口<br>6842端口：Netmo HTTP服务<br>6883端口：木马DeltaSource开放此端口<br>6939端口：木马Indoctrination开放此端口<br>6969端口：木马Gatecrasher、Priority开放此端口<br>6970端口：real音频开放此端口<br>7000端口：木马Remote Grab开放此端口<br>7002端口：使用者&amp; 组 数据库<br>7003端口：音量定位数据库<br>7004端口：AFS/Kerberos认证服务<br>7005端口：音量管理服务<br>7006端口：错误解释服务<br>7007端口：Basic监督进程<br>7008端口：服务器-服务器更新程序<br>7009端口：远程缓存管理服务<br>7011端口：Talon软件发现端口<br>7012端口：Talon软件引擎<br>7013端口：Microtalon发现<br>7014端口：Microtalon通信<br>7015端口：Talon网络服务器<br>7020端口：DP服务<br>7021端口：DP服务管理<br>7100端口：X字型服务<br>7121端口：虚拟原型许可证管理<br>7300端口：木马NetMonitor开放此端口<br>7301端口：木马NetMonitor开放此端口<br>7306端口：木马NetMonitor，NetSpy1.0开放此端口<br>7307端口：木马NetMonitor开放此端口<br>7308端口：木马NetMonitor开放此端口<br>7323端口：Sygate服务器端<br>7511端口：木马聪明基因开放此端口<br>7588端口：Sun许可证管理<br>7597端口：木马Quaz开放此端口<br>7626端口：木马冰河开放此端口<br>7633端口：PMDF管理<br>7674端口：iMQ SSL通道<br>7675端口：iMQ通道<br>7676端口：木马Giscier开放此端口<br>7720端口：Med图象入口<br>7743端口：Sakura脚本传递协议<br>7789端口：木马ICKiller开放此端口<br>7797端口：Propel连接器端口<br>7798端口：Propel编码器端口<br>8000端口：腾讯QQ服务器端开放此端口<br>8001端口：VCOM通道<br>8007端口：Apache(类似iis)jServ协议1.x<br>8008端口：HTTP Alternate<br>8009端口：Apache(类似iis)JServ协议1.3<br>8010端口：Wingate代理开放此端口<br>8011端口：木马way2.4开放此端口<br>8022端口：OA-系统<br>8080端口：WWW代理开放此端口<br>8081端口：ICECap控制台<br>8082端口：BlackIce(防止黑客软件)警报发送到此端口<br>8118端口：Privoxy HTTP代理<br>8121端口：Apollo数据端口<br>8122端口：Apollo软件管理端口<br>8181端口：Imail<br>8225端口：木马灰鸽子开放此端口<br>8311端口：木马初恋情人开放此端口<br>8351端口：服务器寻找<br>8416端口：eSpeech Session协议<br>8417端口：eSpeech RTP协议<br>8473端口：虚拟点对点<br>8668端口：网络地址转换<br>8786端口：Message客户端<br>8787端口：Message服务器<br>8954端口：Cumulus管理端口<br>9000端口：CS监听<br>9001端口：ETL服务管理<br>9002端口：动态id验证<br>9021端口：Pangolin验证<br>9022端口：PrivateArk远程代理<br>9023端口：安全网络登陆-1<br>9024端口：安全网络登陆-2<br>9025端口：安全网络登陆-3<br>9026端口：安全网络登陆-4<br>9101端口：Bacula控制器<br>9102端口：Bacula文件后台<br>9103端口：Bacula存储邮件后台<br>9111端口：DragonIDS控制台<br>9217端口：FSC通讯端口<br>9281端口：软件传送端口1<br>9282端口：软件传送端口2<br>9346端口：C技术监听<br>9400端口：木马Incommand 1.0开放此端口<br>9401端口：木马Incommand 1.0开放此端口<br>9402端口：木马Incommand 1.0开放此端口<br>9594端口：信息系统<br>9595端口：Ping Discovery服务<br>9800端口：WebDav源端口<br>9801端口：Sakura脚本转移协议-2<br>9802端口：WebDAV Source TLS/SSL<br>9872端口：木马Portal of Doom开放此端口<br>9873端口：木马Portal of Doom开放此端口<br>9874端口：木马Portal of Doom开放此端口<br>9875端口：木马Portal of Doom开放此端口<br>9899端口：木马InIkiller开放此端口<br>9909端口：域名时间<br>9911端口：SYPECom传送协议<br>9989端口：木马iNi-Killer开放此端口<br>9990端口：OSM Applet程序服务器<br>9991端口：OSM事件服务器<br>10000端口：网络数据管理协议<br>10001端口：SCP构造端口<br>10005端口：安全远程登陆<br>10008端口：Octopus多路器<br>10067端口：木马iNi-Killer开放此端口<br>10113端口：NetIQ端点<br>10115端口：NetIQ端点<br>10116端口：NetIQVoIP鉴定器<br>10167端口：木马iNi-Killer开放此端口<br>11000端口：木马SennaSpy开放此端口<br>11113端口：金山词霸开放此端口<br>11233端口：木马Progenic trojan开放此端口<br>12076端口：木马Telecommando开放此端口<br>12223端口：木马Hack’99 KeyLogger开放此端口<br>12345端口：木马NetBus1.60/1.70、GabanBus开放此端口<br>12346端口：木马NetBus1.60/1.70、GabanBus开放此端口<br>12361端口：木马Whack-a-mole开放此端口<br>13223端口：PowWow 客户端，是Tribal Voice的聊天程序<br>13224端口：PowWow 服务器，是Tribal Voice的聊天程序<br>16959端口：木马Subseven开放此端口<br>16969端口：木马Priority开放此端口<br>17027端口：外向连接<br>19191端口：木马蓝色火焰开放此端口<br>20000端口：木马Millennium开放此端口<br>20001端口：木马Millennium开放此端口<br>20034端口：木马NetBus Pro开放此端口<br>21554端口：木马GirlFriend开放此端口<br>22222端口：木马Prosiak开放此端口<br>23444端口：木马网络公牛开放此端口<br>23456端口：木马Evil FTP、Ugly FTP开放此端口<br>25793端口：Vocaltec地址服务器<br>26262端口：K3软件-服务器<br>26263端口：K3软件客户端<br>26274端口：木马Delta开放此端口<br>27374端口：木马Subseven 2.1开放此端口<br>30100端口：木马NetSphere开放此端口<br>30129端口：木马Masters Paradise开放此端口<br>30303端口：木马Socket23开放此端口<br>30999端口：木马Kuang开放此端口<br>31337端口：木马BO(Back Orifice)开放此端口<br>31338端口：木马BO(Back Orifice)，DeepBO开放此端口<br>31339端口：木马NetSpy DK开放此端口<br>31666端口：木马BOWhack开放此端口<br>31789端口：Hack-a-tack<br>32770端口：sun solaris RPC服务开放此端口<br>33333端口：木马Prosiak开放此端口<br>33434端口：路由跟踪<br>34324端口：木马Tiny Telnet Server、BigGluck、TN开放此端口<br>36865端口：KastenX软件端口<br>38201端口：Galaxy7软件数据通道<br>39681端口：TurboNote默认端口<br>40412端口：木马The Spy开放此端口<br>40421端口：木马Masters Paradise开放此端口<br>40422端口：木马Masters Paradise开放此端口<br>40423端口：木马Masters Paradise开放此端口<br>40426端口：木马Masters Paradise开放此端口<br>40843端口：CSCC 防火墙<br>43210端口：木马SchoolBus 1.0/2.0开放此端口<br>43190端口：IP-PROVISION<br>44321端口：PCP服务器(pmcd)<br>44322端口：PCP服务器(pmcd)代理<br>44334端口：微型个人防火墙端口<br>44442端口：ColdFusion软件端口<br>44443端口：ColdFusion软件端口<br>44445端口：木马Happypig开放此端口<br>45576端口：E代时光专业代理开放此端口<br>47262端口：木马Delta开放此端口<br>47624端口：Direct Play服务器<br>47806端口：ALC协议<br>48003端口：Nimbus网关<br>50505端口：木马Sockets de Troie开放此端口<br>50766端口：木马Fore开放此端口<br>53001端口：木马Remote Windows Shutdown开放此端口<br>54320端口：木马bo2000开放此端口<br>54321端口：木马SchoolBus 1.0/2.0开放此端口<br>61466端口：木马Telecommando开放此端口<br>65000端口：木马Devil 1.03开放此端口<br>65301端口：PC Anywhere软件开放端口</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"零：Tomcat的介绍\"><a href=\"#零：Tomcat的介绍\" class=\"headerlink\" title=\"零：Tomcat的介绍\"></a>零：Tomcat的介绍</h1><p>Tomcat是Apache 软件基金会的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p>\n<p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</p>\n<p>诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。另外，Tomcat和IIS等Web服务器一样，具有处理HTML页面的功能，另外它还是一个Servlet和JSP容器，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态HTML的能力不如Apache服务器。目前Tomcat最新版本为10.0.5。</p>\n<h1 id=\"一：下载Tomcat\"><a href=\"#一：下载Tomcat\" class=\"headerlink\" title=\"一：下载Tomcat\"></a>一：下载Tomcat</h1><p>首先前往官网：<a href=\"https://tomcat.apache.org/\">tomcat下载</a><br><img src=\"https://img-blog.csdnimg.cn/5eabd2463b624bf091d8c0dbef83dd3b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">我这里是下载了Tomcat9，点进Tomcat9，我使用的是64位绿色版。<br><img src=\"https://img-blog.csdnimg.cn/6ac4f8bd57af42a693e5683b23076f99.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"二：安装Tomcat\"><a href=\"#二：安装Tomcat\" class=\"headerlink\" title=\"二：安装Tomcat\"></a>二：安装Tomcat</h1><p>因为我是下载了绿色版的，直接解压就行。<br><img src=\"https://img-blog.csdnimg.cn/1f9ca1560921497895f37a31f209173e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">目录介绍：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin\t\t\t\t\t专门用来存放Tomcat服务器的可执行程序</span><br><span class=\"line\">conf                专门用来存放Tomcat服务器的配置文件</span><br><span class=\"line\">lib\t\t\t        专门用来存放Tomcat服务器的jar包</span><br><span class=\"line\">logs\t\t\t\t专门用来存放Tomcat服务器的运行时输出的日记信息</span><br><span class=\"line\">temp\t\t\t\t专门用来存放Tomcat服务器运行时产生的临时数据</span><br><span class=\"line\">webapps\t\t\t    专门用来存放部署的Web工程</span><br><span class=\"line\">work\t\t\t\t是Tomcat工作时的目录，用来存放Tomcat运行时jsp翻译为Servlet的源码，和Session钝化的目录</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"三：启动Tomcat服务器\"><a href=\"#三：启动Tomcat服务器\" class=\"headerlink\" title=\"三：启动Tomcat服务器\"></a>三：启动Tomcat服务器</h1><p>找到Tomcat目录下的bin目录下的startup.bat文件，双击启动。<br><img src=\"https://img-blog.csdnimg.cn/5a4fd549dc814c249b5724d7a6404f88.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>发现出现了乱码，这时候可以在配置文件修改编码方式。打开conf文件夹下的logging.properties文件，找到<code>java.util.logging.ConsoleHandler.encoding = UTF-8</code>，将UTF-8改为GBK<br><img src=\"https://img-blog.csdnimg.cn/bbe9b574762d4b89b5c4719b7a49ac8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>然后保存修改，重启服务器就好了：<br><img src=\"https://img-blog.csdnimg.cn/b7d489e0e78e4144b87ed05dcedb8424.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果点击startup.bat时黑窗一闪而过，那就是因为没有配置好JAVA_HOME环境变量，JAVA_HOME时JDK的安装目录。<br><img src=\"https://img-blog.csdnimg.cn/8aefc2d067874a849113e01a7cc4c875.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>除了双击startup.bat启动，还可以用命令行的方式启动，命令行进入Tomcat的bin目录：输入命令<code>catalina run</code><br><img src=\"https://img-blog.csdnimg.cn/a272c5c7e6704b75ad89c23dc4c8dbb9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：停止Tomcat服务器\"><a href=\"#四：停止Tomcat服务器\" class=\"headerlink\" title=\"四：停止Tomcat服务器\"></a>四：停止Tomcat服务器</h1><ul>\n<li>直接关闭tomcat窗口</li>\n<li>使用快捷键ctrl+c</li>\n<li>找到Tomcat的bin目录下的shutdown.bat，双击停止服务器(该方法为主要方法)</li>\n</ul>\n<h1 id=\"五：修改Tomcat的端口号\"><a href=\"#五：修改Tomcat的端口号\" class=\"headerlink\" title=\"五：修改Tomcat的端口号\"></a>五：修改Tomcat的端口号</h1><p>Tomcat默认端口号是8080，但8080端口是被用于WWW代理服务的，可以实现网页浏览，Vue项目的预览就是开启8080端口，因此该端口经常被占用，因此通常都需要修改端口号。</p>\n<p>端口号范围是1-65535，1000以内的端口号是系统使用的，修改端口尽量不要使用1000以内的，但是我老师要求修改为端口号为88。修改前还可以看看端口占用情况，打开命令提示符，输入<code>netstat -ano</code>。<br><img src=\"https://img-blog.csdnimg.cn/d12842b23f034b0ab832d8f9f6b09450.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>现在来修改Tomcat端口号，找到Tomcat目录下的conf目录，找到server.xml并打开，找到Connector标签修改端口号。<br><img src=\"https://img-blog.csdnimg.cn/34e05a82f35e48459743cbc4a3c63ded.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>修改完端口号后需要重启才能生效，成功后效果如下：<br><img src=\"https://img-blog.csdnimg.cn/8199c3ddf8fb4f60bbe9c06773c7aace.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六：在idea中整合Tomcat\"><a href=\"#六：在idea中整合Tomcat\" class=\"headerlink\" title=\"六：在idea中整合Tomcat\"></a>六：在idea中整合Tomcat</h1><p>打开idea的设置，打开应用程序服务器，点击加号添加：<br><img src=\"https://img-blog.csdnimg.cn/5cbc65ea639e44a8b7345fe86167b9a7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">选中文件夹即可，选中一个，其余的会自动填写：<br><img src=\"https://img-blog.csdnimg.cn/f50d3586951242c583518624fab12772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/b47c4132ea6d4214b6a8d3c19fdea6a5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"七：常用端口\"><a href=\"#七：常用端口\" class=\"headerlink\" title=\"七：常用端口\"></a>七：常用端口</h1><p>端口：0<br>服务：Reserved<br>说明：通常用于分析操作系统。这一方法能够工作是因为在一些系统中“0”是无效端口，当你试图使用通常的闭合端口连接它时将产生不同的结果。一种典型的扫描，使用IP地址为0.0.0.0，设置ACK位并在以太网层广播。</p>\n<p>端口：1<br>服务：tcpmux<br>说明：这显示有人在寻找SGI Irix机器。Irix是实现tcpmux的主要提供者，默认情况下tcpmux在这种系统中被打开。Irix机器在发布是含有几个默认的无密码的帐户，如：IP、GUEST UUCP、NUUCP、DEMOS 、TUTOR、DIAG、OUTOFBOX等。许多管理员在安装后忘记删除这些帐户。因此HACKER在INTERNET上搜索tcpmux并利用这些帐户。</p>\n<p>端口：7<br>服务：Echo<br>说明：能看到许多人搜索Fraggle放大器时，发送到X.X.X.0和X.X.X.255的信息。</p>\n<p>端口：19<br>服务：Character Generator<br>说明：这是一种仅仅发送字符的服务。UDP版本将会在收到UDP包后回应含有垃圾字符的包。TCP连接时会发送含有垃圾字符的数据流直到连接关闭。HACKER利用IP欺骗可以发动DoS攻击。伪造两个chargen服务器之间的UDP包。同样Fraggle DoS攻击向目标地址的这个端口广播一个带有伪造受害者IP的数据包，受害者为了回应这些数据而过载。</p>\n<p>端口：21<br>服务：FTP<br>说明：FTP服务器所开放的端口，用于上传、下载。最常见的攻击者用于寻找打开anonymous的FTP服务器的方法。这些服务器带有可读写的目录。木马Doly Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade Runner所开放的端口。</p>\n<p>端口：22<br>服务：ssh<br>说明：PcAnywhere建立的TCP和这一端口的连接可能是为了寻找ssh。这一服务有许多弱点，如果配置成特定的模式，许多使用RSAREF库的版本就会有不少的漏洞存在。</p>\n<p>端口：23<br>服务：Telnet<br>说明：远程登录，<strong>者在搜索远程登录UNIX的服务。大多数情况下扫描这一端口是为了找到机器运行的操作系统。还有使用其他技术，</strong>者也会找到密码。木马Tiny Telnet Server就开放这个端口。</p>\n<p>端口：25<br>服务：SMTP<br>说明：SMTP服务器所开放的端口，用于发送邮件。<strong>者寻找SMTP服务器是为了传递他们的SPAM。</strong>者的帐户被关闭，他们需要连接到高带宽的E-MAIL服务器上，将简单的信息传递到不同的地址。木马Antigen、Email Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口。</p>\n<p>端口：31<br>服务：MSG Authentication<br>说明：木马Master Paradise、Hackers Paradise开放此端口。</p>\n<p>端口：42<br>服务：WINS Replication<br>说明：WINS复制</p>\n<p>端口：53<br>服务：Domain Name Server（DNS）<br>说明：DNS服务器所开放的端口，**者可能是试图进行区域传递（TCP），欺骗DNS（UDP）或隐藏其他的通信。因此防火墙常常过滤或记录此端口。</p>\n<p>端口：67<br>服务：Bootstrap Protocol Server<br>说明：通过DSL和Cable modem的防火墙常会看见大量发送到广播地址255.255.255.255的数据。这些机器在向DHCP服务器请求一个地址。HACKER常进入它们，分配一个地址把自己作为局部路由器而发起大量中间人（man-in-middle）攻击。客户端向68端口广播请求配置，服务器向67端口广播回应请求。这种回应使用广播是因为客户端还不知道可以发送的IP地址。</p>\n<p>端口：69<br>服务：Trival File Transfer<br>说明：许多服务器与bootp一起提供这项服务，便于从系统下载启动代码。但是它们常常由于错误配置而使**者能从系统中窃取任何 文件。它们也可用于系统写入文件。</p>\n<p>端口：79<br>服务：Finger Server<br>说明：**者用于获得用户信息，查询操作系统，探测已知的缓冲区溢出错误，回应从自己机器到其他机器Finger扫描。</p>\n<p>端口：80<br>服务：HTTP<br>说明：用于网页浏览。木马Executor开放此端口。</p>\n<p>端口：99<br>服务：gram Relay<br>说明：后门程序ncx99开放此端口。</p>\n<p>端口：102<br>服务：Message transfer agent(MTA)-X.400 over TCP/IP<br>说明：消息传输代理。</p>\n<p>端口：109<br>服务：Post Office Protocol -Version3<br>说明：POP3服务器开放此端口，用于接收邮件，客户端访问服务器端的邮件服务。POP3服务有许多公认的弱点。关于用户名和密码交 换缓冲区溢出的弱点至少有20个，这意味着**者可以在真正登陆前进入系统。成功登陆后还有其他缓冲区溢出错误。</p>\n<p>端口：110<br>服务：SUN公司的RPC服务所有端口<br>说明：常见RPC服务有rpc.mountd、NFS、rpc.statd、rpc.csmd、rpc.ttybd、amd等</p>\n<p>端口：113<br>服务：Authentication Service<br>说明：这是一个许多计算机上运行的协议，用于鉴别TCP连接的用户。使用标准的这种服务可以获得许多计算机的信息。但是它可作为许多服务的记录器，尤其是FTP、POP、IMAP、SMTP和IRC等服务。通常如果有许多客户通过防火墙访问这些服务，将会看到许多这个端口的连接请求。记住，如果阻断这个端口客户端会感觉到在防火墙另一边与E-MAIL服务器的缓慢连接。许多防火墙支持TCP连接的阻断过程中发回RST。这将会停止缓慢的连接。</p>\n<p>端口：119<br>服务：Network News Transfer Protocol<br>说明：NEWS新闻组传输协议，承载USENET通信。这个端口的连接通常是人们在寻找USENET服务器。多数ISP限制，只有他们的客户才能访问他们的新闻组服务器。打开新闻组服务器将允许发/读任何人的帖子，访问被限制的新闻组服务器，匿名发帖或发送SPAM。</p>\n<p>端口：135<br>服务：Location Service<br>说明：Microsoft在这个端口运行DCE RPC end-point mapper为它的DCOM服务。这与UNIX 111端口的功能很相似。使用DCOM和RPC的服务利用计算机上的end-point mapper注册它们的位置。远端客户连接到计算机时，它们查找end-point mapper找到服务的位置。HACKER扫描计算机的这个端口是为了找到这个计算机上运行Exchange Server吗？什么版本？还有些DOS攻击直接针对这个端口。</p>\n<p>端口：137、138、139<br>服务：NETBIOS Name Service<br>说明：其中137、138是UDP端口，当通过网上邻居传输文件时用这个端口。而139端口：通过这个端口进入的连接试图获得NetBIOS/SMB服务。这个协议被用于windows文件和打印机共享和SAMBA。还有WINS Regisrtation也用它。</p>\n<p>端口：143<br>服务：Interim Mail Access Protocol v2<br>说明：和POP3的安全问题一样，许多IMAP服务器存在有缓冲区溢出漏洞。记住：一种LINUX蠕虫（admv0rm）会通过这个端口繁殖，因此许多这个端口的扫描来自不知情的已经被感染的用户。当REDHAT在他们的LINUX发布版本中默认允许IMAP后，这些漏洞变的很流行。这一端口还被用于IMAP2，但并不流行。</p>\n<p>端口：161<br>服务：SNMP<br>说明：SNMP允许远程管理设备。所有配置和运行信息的储存在数据库中，通过SNMP可获得这些信息。许多管理员的错误配置将被暴露在Internet。Cackers将试图使用默认的密码public、private访问系统。他们可能会试验所有可能的组合。SNMP包可能会被错误的指向用户的网络。</p>\n<p>端口：177<br>服务：X Display Manager Control Protocol<br>说明：许多**者通过它访问X-windows操作台，它同时需要打开6000端口。</p>\n<p>端口：389<br>服务：LDAP、ILS<br>说明：轻型目录访问协议和NetMeeting Internet Locator Server共用这一端口。</p>\n<p>端口：443<br>服务：Https<br>说明：网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP。</p>\n<p>端口：456<br>服务：[NULL]<br>说明：木马HACKERS PARADISE开放此端口。</p>\n<p>端口：513<br>服务：Login,remote login<br>说明：是从使用cable modem或DSL登陆到子网中的UNIX计算机发出的广播。这些人为**者进入他们的系统提供了信息。</p>\n<p>端口：544<br>服务：[NULL]<br>说明：kerberos kshell</p>\n<p>端口：548<br>服务：Macintosh,File Services(AFP/IP)<br>说明：Macintosh,文件服务。</p>\n<p>端口：553<br>服务：CORBA IIOP （UDP）<br>说明：使用cable modem、DSL或VLAN将会看到这个端口的广播。CORBA是一种面向对象的RPC系统。**者可以利用这些信息进入系统。</p>\n<p>端口：555<br>服务：DSF<br>说明：木马PhAse1.0、Stealth Spy、IniKiller开放此端口。</p>\n<p>端口：568<br>服务：Membership DPA<br>说明：成员资格 DPA。</p>\n<p>端口：569<br>服务：Membership MSN<br>说明：成员资格 MSN。</p>\n<p>端口：635<br>服务：mountd<br>说明：Linux的mountd Bug。这是扫描的一个流行BUG。大多数对这个端口的扫描是基于UDP的，但是基于TCP的mountd有所增加（mountd同时运行于两个端口）。记住mountd可运行于任何端口（到底是哪个端口，需要在端口111做portmap查询），只是Linux默认端口是635，就像NFS通常运行于2049端口。</p>\n<p>端口：636<br>服务：LDAP<br>说明：SSL（Secure Sockets layer）</p>\n<p>端口：666<br>服务：Doom Id Software<br>说明：木马Attack FTP、Satanz Backdoor开放此端口</p>\n<p>端口：993<br>服务：IMAP<br>说明：SSL（Secure Sockets layer）</p>\n<p>端口：1001、1011<br>服务：[NULL]<br>说明：木马Silencer、WebEx开放1001端口。木马Doly Trojan开放1011端口。</p>\n<h1 id=\"八：计算机端口大全\"><a href=\"#八：计算机端口大全\" class=\"headerlink\" title=\"八：计算机端口大全\"></a>八：计算机端口大全</h1><p>0端口：无效端口,通常用于分析操作系统<br>1端口：传输控制协议端口服务多路开关选择器<br>2端口：管理实用程序<br>3端口：压缩进程<br>5端口：远程作业登录<br>7端口：回显<br>9端口：丢弃<br>11端口：在线用户<br>13端口：时间<br>17端口：每日引用<br>18端口：消息发送协议<br>19端口：字符发生器<br>20端口：FTP文件传输协议(默认数据口)<br>21端口：FTP文件传输协议(控制)<br>22端口：SSH远程登录协议<br>23端口：telnet(终端仿真协议),木马Tiny Telnet Server开放此端口<br>24端口：预留给个人用邮件系统<br>25端口：SMTP服务器所开放的端口，用于发送邮件<br>27端口：NSW 用户系统 FE<br>29端口：MSG ICP<br>31端口：MSG验证,木马Master Paradise、HackersParadise开放此端口<br>33端口：显示支持协议<br>35端口：预留给个人打印机服务<br>37端口：时间<br>38端口：路由访问协议<br>39端口：资源定位协议<br>41端口：图形<br>42端口：主机名服务<br>43端口：who is服务<br>44端口：MPM(消息处理模块)标志协议<br>45端口：消息处理模块<br>46端口：消息处理模块(默认发送口)<br>47端口：NI FTP<br>48端口：数码音频后台服务<br>49端口：TACACS登录主机协议<br>50端口：远程邮件检查协议<br>51端口：IMP(接口信息处理机)逻辑地址维护<br>52端口：施乐网络服务系统时间协议<br>53端口：dns域名服务器<br>54端口：施乐网络服务系统票据交换<br>55端口：ISI图形语言<br>56端口：施乐网络服务系统验证<br>57端口：预留个人用终端访问<br>58端口：施乐网络服务系统邮件<br>59端口：预留个人文件服务<br>60端口：未定义<br>61端口：NI邮件<br>62端口：异步通讯适配器服务<br>63端口：whois++<br>64端口：通讯接口<br>65端口：TACACS数据库服务<br>66端口：Oracle SQL*NET<br>67端口：引导程序协议服务端<br>68端口：引导程序协议客户端<br>69端口：小型文件传输协议<br>70端口：信息检索协议<br>71端口：远程作业服务<br>72端口：远程作业服务<br>73端口：远程作业服务<br>74端口：远程作业服务<br>75端口：预留给个人拨出服务<br>76端口：分布式外部对象存储<br>77端口：预留给个人远程作业输入服务<br>78端口：修正TCP<br>79端口：查询远程主机在线用户等信息<br>80端口：http,用于网页浏览,木马Executor开放此端口<br>81端口：HOST2名称服务<br>82端口：传输实用程序<br>83端口：模块化智能终端ML设备<br>84端口：公用追踪设备<br>85端口：模块化智能终端ML设备<br>86端口：Micro Focus Cobol编程语言<br>87端口：预留给个人终端连接<br>88端口：Kerberros安全认证系统<br>89端口：SU/MIT telnet(终端仿真网关)<br>90端口：DNSIX 安全属性标记图<br>91端口：MIT Dover假脱机<br>92端口：网络打印协议<br>93端口：设备控制协议<br>94端口：Tivoli对象调度<br>96端口：DIXIE协议规范<br>97端口：快速远程虚拟文件协议<br>98端口：TAC新闻协议<br>99端口：后门程序ncx99开放此端口<br>100端口：未知用途<br>101端口：NIC 主机名称服务<br>102端口：消息传输代理<br>103端口：Genesis 点对点传输网络<br>105端口：信箱名称服务<br>106端口：3COM-TSMUX开放端口<br>107端口：远程Telnet服务<br>108端口：SNA 网关访问服务<br>109端口：POP2服务器开放此端口,用于接收邮件<br>110端口：POP3服务器开放此端口,用于接收邮件<br>111端口：SUN公司的RPC服务所有端口<br>112端口：McIDAS 数据传输协议<br>113端口：认证服务，用于鉴别TCP连接的用户<br>114端口：音频新闻多点服务<br>115端口：简单文件传输服务<br>116端口：ANSA REX 通知<br>117端口：UUCP 路径服务<br>118端口：SQL 服务<br>119端口：NEWS新闻组传输协议，承载USENET通信<br>121端口：木马BO jammerkillahV开放端口<br>122端口：SMAKY网络<br>123端口：网络时间协议，蠕虫病毒会利用，一般关闭<br>128端口：GSS X许可认证<br>129端口：密码生成器协议<br>130端口：Cisco软件开放端口<br>131端口：Cisco软件开放端口<br>132端口：Cisco软件开放端口<br>133端口：统计服务<br>134端口：INGRES-网络服务<br>135端口：DCOM服务，冲击波病毒利用，不能关闭<br>136端口：命名系统<br>137端口：NETBIOS协议应用，为共享开放<br>138端口：NETBIOS协议应用，为共享开放<br>139端口：NETBIOS协议应用，为共享开放<br>140端口：EMFIS数据服务<br>141端口：EMFIS控制服务<br>143端口：Interim邮件访问协议<br>144端口：UMA软件开放端口<br>145端口：UAAC协议<br>149端口：AED 512仿真服务<br>150端口：SQL(结构化查询语言)-网络<br>152端口：后台文件传输协议<br>156端口：SQL(结构化查询语言)服务<br>158端口：PC邮件服务器<br>159端口：NSS-路由<br>160端口：SGMP-陷阱<br>161端口：简单网络管理协议<br>162端口：SNMP陷阱<br>163端口：CMIP/TCP 管理<br>164端口：CMIP/TCP 代理<br>166端口：Sirius系统<br>169端口：发送<br>170端口：网络附言<br>177端口：x显示管理控制协议，入侵者通过它访问X-windows操作台<br>178端口：NextStep Window 服务<br>179端口：边界网关协议<br>180端口：图表<br>181端口：统一<br>184端口：OC服务器<br>185端口：远程-KIS<br>186端口：KIS 协议<br>187端口：应用通信接口<br>189端口：队列文件传输<br>190端口：网关进入控制协议<br>191端口：Prospero 目录服务<br>192端口：OSU 网络监视系统<br>193端口：Spider 远程控制协议<br>194端口：多线交谈协议<br>197端口：目录地址服务<br>198端口：目录地址服务监视器<br>200端口：IBM系统资源控制器<br>201端口：AppleTalk(Mac机所用的网络协议)路由保证<br>202端口：AppleTalk(Mac机所用的网络协议)Name Binding<br>203端口：AppleTalk(Mac机所用的网络协议)未用端口<br>204端口：AppleTalk(Mac机所用的网络协议)回显<br>205端口：AppleTalk(Mac机所用的网络协议)未用端口<br>206端口：AppleTalk(Mac机所用的网络协议)区信息<br>207端口：AppleTalk(Mac机所用的网络协议)未用端口<br>208端口：AppleTalk(Mac机所用的网络协议)未用端口<br>209端口：快速邮件传输协议<br>210端口：ANSI(美国国家标准协会)Z39.50<br>211端口：Texas Instruments 914C/G终端<br>213端口：IPX(以太网所用的协议)<br>218端口：Netix消息记录协议<br>219端口：Unisys ARPs<br>220端口：交互邮件访问协议 v3<br>223端口：证书分发中心<br>224端口：masq拨号器<br>241端口：预留端口 (224-241)<br>245端口：链接<br>246端口：显示系统协议<br>257端口：安全电子交易系统<br>258端口：Yak Winsock 个人聊天<br>259端口：有效短程遥控<br>260端口：开放端口<br>261端口：IIOP 基于TLS/SSL的命名服务<br>266端口：SCSI(小型计算机系统接口)on ST<br>267端口：Tobit David服务层<br>268端口：Tobit David复制<br>281端口：个人连结<br>282端口：Cable端口A/X<br>286端口：FXP通信<br>308端口：Novastor备份<br>313端口：Magenta逻辑<br>318端口：PKIX时间标记<br>333端口：Texar安全端口<br>344端口：Prospero数据存取协议<br>345端口：Perf分析工作台<br>346端口：Zebra服务器<br>347端口：Fatmen服务器<br>348端口：Cabletron管理协议<br>358端口：Shrink可上网家电协议<br>359端口：网络安全风险管理协议<br>362端口：SRS发送<br>363端口：RSVP隧道<br>372端口：列表处理<br>373端口：Legend公司<br>374端口：Legend公司<br>376端口：AmigaEnvoy网络查询协议<br>377端口：NEC公司<br>378端口：NEC公司<br>379端口：TIA/EIA/IS-99调制解调器客户端<br>380端口：TIA/EIA/IS-99调制解调器服务器<br>381端口：hp(惠普)性能数据收集器<br>382端口：hp(惠普)性能数据控制节点<br>383端口：hp(惠普)性能数据警报管理<br>384端口：远程网络服务器系统<br>385端口：IBM应用程序<br>386端口：ASA信息路由器定义文件.<br>387端口：Appletalk更新路由.<br>389端口：轻型目录访问协议<br>395端口：网络监视控制协议<br>396端口：Novell(美国Novell公司)Netware(Novell公司出的网络操作系统)over IP<br>400端口：工作站解决方案<br>401端口：持续电源<br>402端口：Genie协议<br>406端口：交互式邮件支持协议<br>408端口：Prospero资源管理程序<br>409端口：Prospero资源节点管理.<br>410端口：DEC(数据设备公司)远程调试协议<br>411端口：远程MT协议<br>412端口：陷阱协定端口<br>413端口：存储管理服务协议<br>414端口：信息查询<br>415端口：B网络<br>423端口：IBM操作计划和控制开端<br>424端口：IBM操作计划和控制追踪<br>425端口：智能计算机辅助设计<br>427端口：服务起位置<br>434端口：移动ip代理<br>435端口：移动ip管理<br>443端口：基于TLS/SSL的网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP<br>444端口：简单网络内存分页协议<br>445端口：Microsoft-DS，为共享开放，震荡波病毒利用，一般应关闭<br>446端口：DDM-远程关系数据库访问<br>447端口：DDM-分布式文件管理<br>448端口：DDM-使用安全访问远程数据库<br>456端口：木马HACKERS PARADISE开放此端口<br>458端口：apple quick time软件开放端口<br>459端口：ampr-rcmd命令<br>464端口：k密码服务<br>469端口：广播控制协议<br>470端口：scx-代理<br>472端口：ljk-登陆<br>481端口：Ph服务<br>487端口：简单异步文件传输<br>489端口：nest-协议<br>491端口：go-登陆<br>499端口：ISO ILL协议<br>500端口：Internet密钥交换，Lsass开放端口，不能关闭<br>509端口：陷阱<br>510端口：FirstClass协议<br>512端口：远程进程执行<br>513端口：远程登陆<br>514端口：cmd命令<br>515端口：spooler<br>516端口：可视化数据<br>518端口：交谈<br>519端口：unix时间<br>520端口：扩展文件名称服务器<br>525端口：时间服务<br>526端口：新日期<br>529端口：在线聊天系统服务<br>530端口：远程过程调用<br>531端口：聊天<br>532端口：读新闻<br>533端口：紧急广播端口<br>534端口：MegaMedia管理端<br>537端口：网络流媒体协议<br>542端口：商业<br>543端口：Kerberos(软件)v4/v5<br>544端口：krcmd命令<br>546端口：DHCPv6 客户端<br>547端口：DHCPv6 服务器<br>552端口：设备共享<br>554端口：Real Time Stream控制协议<br>555端口：木马PhAse1.0、Stealth Spy、IniKiller开放此端口<br>556端口：远距离文件服务器<br>563端口：基于TLS/SSL的网络新闻传输协议<br>564端口：plan 9文件服务<br>565端口：whoami查询<br>566端口：streettalk<br>567端口：banyan-rpc(远程过程调用)<br>568端口：DPA成员资格<br>569端口：MSN成员资格<br>570端口：demon(调试监督程序)<br>571端口：udemon(调试监督程序)<br>572端口：声纳<br>573端口：banyan-贵宾<br>574端口：FTP软件代理系统<br>581端口：Bundle Discovery 协议<br>582端口：SCC安全<br>583端口：Philips视频会议<br>584端口：密钥服务器<br>585端口：IMAP4+SSL (Use 993 instead)<br>586端口：密码更改<br>587端口：申请<br>589端口：Eye连结<br>595端口：CAB协议<br>597端口：PTC名称服务<br>598端口：SCO网络服务器管理3<br>599端口：Aeolon Core协议<br>600端口：Sun IPC(进程间通讯)服务器<br>601端口：可靠系统登陆服务<br>604端口：通道<br>606端口：Cray统一资源管理<br>608端口：发送人-传递/提供 文件传输器<br>609端口：npmp-陷阱<br>610端口：npmp-本地<br>611端口：npmp-gui( 图形用户界面)<br>612端口：HMMP指引<br>613端口：HMMP操作<br>614端口：SSL(加密套接字协议层)shell(壳)<br>615端口：Internet配置管理<br>616端口：SCO(Unix系统)系统管理服务器<br>617端口：SCO桌面管理服务器<br>619端口：Compaq(康柏公司)EVM<br>620端口：SCO服务器管理<br>623端口：ASF远程管理控制协议<br>624端口：Crypto管理<br>631端口：IPP (Internet打印协议)<br>633端口：服务更新(Sterling软件)<br>637端口：局域网服务器<br>641端口：repcmd命令<br>647端口：DHCP(动态主机配置协议)Failover<br>648端口：注册登记协议(RRP)<br>649端口：Cadview-3d软件协议<br>666端口：木马Attack FTP、Satanz Backdoor开放此端口<br>808端口：ccproxy http/gopher/ftp (over http)协议<br>1001端口：木马Silencer，WebEx开放端口<br>1011端口：木马Doly开放端口<br>1024端口：动态端口的开始,木马yai开放端口<br>1025端口：inetinfo.exe(互联网信息服务)木马netspy开放端口<br>1026端口：inetinfo.exe(互联网信息服务)<br>1027端口：应用层网关服务<br>1030端口：应用层网关服务<br>1031端口：BBN IAD<br>1033端口：本地网络信息端口<br>1034端口：同步通知<br>1036端口：安全部分传输协议<br>1070端口：木马Psyber Stream，Streaming Audio开放端口<br>1071端口：网络服务开放端口<br>1074端口：网络服务开放端口<br>1080端口：Socks这一协议以通道方式穿过防火墙，允许防火墙后面的人通过一个IP地址访问INTERNET<br>1110端口：卡巴斯基反病毒软件开放此端口<br>1125端口：卡巴斯基反病毒软件开放此端口<br>1203端口：许可证生效端口<br>1204端口：登陆请求监听端口<br>1206端口：Anthony数据端口<br>1222端口：SNI R&amp;D网络端口<br>1233端口：普遍的附录服务器端口<br>1234端口：木马SubSeven2.0、Ultors Trojan开放此端口<br>1243端口：木马SubSeven1.0/1.9开放此端口<br>1245端口：木马Vodoo，GabanBus，NetBus，Vodoo开放此端口<br>1273端口：EMC-网关端口<br>1289端口：JWalk服务器端口<br>1290端口：WinJa服务器端口<br>1333端口：密码策略(网络服务)(svchost.exe)<br>1334端口：网络服务(svchost.exe)<br>1335端口：数字公正协议<br>1336端口：即时聊天协议(svchost.exe)<br>1349端口：注册网络协议端口<br>1350端口：注册网络协议端口<br>1371端口：富士通配置协议端口<br>1372端口：富士通配置协议端口<br>1374端口：EPI软件系统端口<br>1376端口：IBM个人-个人软件端口<br>1377端口：Cichlid许可证管理端口<br>1378端口：Elan许可证管理端口<br>1380端口：Telesis网络许可证管理端口<br>1381端口：苹果网络许可证管理端口<br>1386端口：CheckSum 许可证管理端口<br>1387端口：系统开放端口(rundll32.exe)<br>1388端口：数据库高速缓存端口<br>1389端口：文档管理端口<br>1390端口：存储控制器端口<br>1391端口：存储器存取服务器端口<br>1392端口：打印管理端口<br>1393端口：网络登陆服务器端口<br>1394端口：网络登陆客户端端口<br>1395端口：PC工作站管理软件端口<br>1396端口：DVL活跃邮件端口<br>1397端口：音频活跃邮件端口<br>1398端口：视频活跃邮件端口<br>1399端口：Cadkey许可证管理端口<br>1433端口：Microsoft的SQL服务开放端口<br>1434端口：Microsoft的SQL服务监视端口<br>1492端口：木马FTP99CMP开放此端口<br>1509端口：木马Psyber Streaming Server开放此端口<br>1512端口：Microsoft Windows网络名称服务<br>1524端口：许多攻击脚本安装一个后门SHELL于这个端口<br>1600端口：木马Shivka-Burka开放此端口<br>1645端口：远程认证拨号用户服务<br>1701端口：第2层隧道协议<br>1731端口：NetMeeting音频调用控制<br>1801端口：Microsoft消息队列服务器<br>1807端口：木马SpySender开放此端口<br>1900端口：可被利用ddos攻击，一般关闭<br>1912端口：金山词霸开放此端口<br>1981端口：木马ShockRave开放此端口<br>1999端口：木马BackDoor,yai开放此端口<br>2000端口：木马GirlFriend 1.3、Millenium 1.0开放此端口<br>2001端口：木马Millenium 1.0、Trojan Cow,黑洞2001开放此端口<br>2003端口：GNU 查询<br>2023端口：木马Pass Ripper开放此端口<br>2049端口：NFS程序常运行于此端口<br>2115端口：木马Bugs开放此端口<br>2140端口：木马Deep Throat 1.0/3.0，The Invasor开放此端口<br>2500端口：应用固定端口会话复制的RPC客户<br>2504端口：网络平衡负荷<br>2565端口：木马Striker开放此端口<br>2583端口：木马Wincrash 2.0开放此端口<br>2801端口：木马Phineas Phucker开放此端口<br>2847端口：诺顿反病毒服务开放此端口<br>3024端口：木马WinCrash开放此端口<br>3128端口：squid http代理服务器开放此端口<br>3129端口：木马Master Paradise开放此端口<br>3150端口：木马The Invasor,deep throat开放此端口<br>3210端口：木马SchoolBus开放此端口<br>3306端口：MySQL开放此端口<br>3333端口：木马Prosiak开放此端口<br>3389端口：WINDOWS 2000终端开放此端口<br>3456端口：inetinfo.exe(互联网信息服务)开放端口，VAT默认数据<br>3457端口：VAT默认控制<br>3527端口：Microsoft消息队列服务器<br>3700端口：木马Portal of Doom开放此端口<br>3996端口：木马RemoteAnything开放此端口<br>4000端口：腾讯QQ客户端开放此端口<br>4060端口：木马RemoteAnything开放此端口<br>4092端口：木马WinCrash开放此端口<br>4133端口：NUTS Bootp服务器<br>4134端口：NIFTY-Serve HMI协议<br>4141端口：Workflow服务器<br>4142端口：文档服务器<br>4143端口：文档复制<br>4145端口：VVR控制<br>4321端口：远程Who Is查询<br>4333端口：微型sql服务器<br>4349端口：文件系统端口记录<br>4350端口：网络设备<br>4351端口：PLCY网络服务<br>4453端口：NSS警报管理<br>4454端口：NSS代理管理<br>4455端口：PR聊天用户<br>4456端口：PR聊天服务器<br>4457端口：PR注册<br>4480端口：Proxy+ HTTP代理端口<br>4500端口：Lsass开放端口，不能关闭<br>4547端口：Lanner许可管理<br>4555端口：RSIP端口<br>4590端口：木马ICQTrojan开放此端口<br>4672端口：远程文件访问服务器<br>4752端口：简单网络音频服务器<br>4800端口：Icona快速消息系统<br>4801端口：Icona网络聊天<br>4802端口：Icona许可系统服务器<br>4848端口：App服务器-Admin HTTP<br>4849端口：App服务器-Admin HTTPS<br>4950端口：木马IcqTrojan开放5000端口<br>5000端口：木马blazer5，Sockets de Troie开放5000端口，一般应关闭<br>5001端口：木马Sockets de Troie开放5001端口<br>5006端口：wsm服务器<br>5007端口：wsm服务器ssl<br>5022端口：mice服务器<br>5050端口：多媒体会议控制协议<br>5051端口：ITA代理<br>5052端口：ITA管理<br>5137端口：MyCTS服务器端口<br>5150端口：Ascend通道管理协议<br>5154端口：BZFlag游戏服务器<br>5190端口：America-Online(美国在线)<br>5191端口：AmericaOnline1(美国在线)<br>5192端口：AmericaOnline2(美国在线)<br>5193端口：AmericaOnline3(美国在线)<br>5222端口：Jabber客户端连接<br>5225端口：HP(惠普公司)服务器<br>5226端口：HP(惠普公司)<br>5232端口：SGI绘图软件端口<br>5250端口：i网关<br>5264端口：3Com网络端口1<br>5265端口：3Com网络端口2<br>5269端口：Jabber服务器连接<br>5306端口：Sun MC组<br>5321端口：木马Sockets de Troie开放5321端口<br>5400端口：木马Blade Runner开放此端口<br>5401端口：木马Blade Runner开放此端口<br>5402端口：木马Blade Runner开放此端口<br>5405端口：网络支持<br>5409端口：Salient数据服务器<br>5410端口：Salient用户管理<br>5415端口：NS服务器<br>5416端口：SNS网关<br>5417端口：SNS代理<br>5421端口：网络支持2<br>5423端口：虚拟用户<br>5427端口：SCO-PEER-TTA(Unix系统)<br>5432端口：PostgreSQL数据库<br>5550端口：木马xtcp开放此端口<br>5569端口：木马Robo-Hack开放此端口<br>5599端口：公司远程安全安装<br>5600端口：公司安全管理<br>5601端口：公司安全代理<br>5631端口：pcANYWHERE(软件)数据<br>5632端口：pcANYWHERE(软件)数据<br>5673端口：JACL消息服务器<br>5675端口：V5UA应用端口<br>5676端口：RA管理<br>5678端口：远程复制代理连接<br>5679端口：直接电缆连接<br>5720端口：MS-执照<br>5729端口：Openmail用户代理层<br>5730端口：Steltor’s日历访问<br>5731端口：netscape(网景)suiteware<br>5732端口：netscape(网景)suiteware<br>5742端口：木马WinCrash1.03开放此端口<br>5745端口：fcopy-服务器<br>5746端口：fcopys-服务器<br>5755端口：OpenMail(邮件服务器)桌面网关服务器<br>5757端口：OpenMail(邮件服务器)X.500目录服务器<br>5766端口：OpenMail (邮件服务器)NewMail服务器<br>5767端口：OpenMail (邮件服务器)请求代理曾(安全)<br>5768端口：OpenMail(邮件服务器) CMTS服务器<br>5777端口：DALI端口<br>5800端口：虚拟网络计算<br>5801端口：虚拟网络计算<br>5802端口：虚拟网络计算HTTP访问, d<br>5803端口：虚拟网络计算HTTP访问, d<br>5900端口：虚拟网络计算机显示0<br>5901端口：虚拟网络计算机显示1<br>5902端口：虚拟网络计算机显示2<br>5903端口：虚拟网络计算机显示3<br>6000端口：X Window 系统<br>6001端口：X Window 服务器<br>6002端口：X Window 服务器<br>6003端口：X Window 服务器<br>6004端口：X Window 服务器<br>6005端口：X Window 服务器<br>6006端口：X Window 服务器<br>6007端口：X Window 服务器<br>6008端口：X Window 服务器<br>6009端口：X Window 服务器<br>6456端口：SKIP证书发送<br>6471端口：LVision许可管理器<br>6505端口：BoKS管理私人端口<br>6506端口：BoKS管理公共端口<br>6507端口：BoKS Dir服务器,私人端口<br>6508端口：BoKS Dir服务器,公共端口<br>6509端口：MGCS-MFP端口<br>6510端口：MCER端口<br>6566端口：SANE控制端口<br>6580端口：Parsec主服务器<br>6581端口：Parsec对等网络<br>6582端口：Parsec游戏服务器<br>6588端口：AnalogX HTTP代理端口<br>6631端口：Mitchell电信主机<br>6667端口：Internet多线交谈<br>6668端口：Internet多线交谈<br>6670端口：木马Deep Throat开放此端口<br>6671端口：木马Deep Throat 3.0开放此端口<br>6699端口：Napster文件(MP3)共享服务<br>6701端口：KTI/ICAD名称服务器<br>6788端口：SMC软件-HTTP<br>6789端口：SMC软件-HTTPS<br>6841端口：Netmo软件默认开放端口<br>6842端口：Netmo HTTP服务<br>6883端口：木马DeltaSource开放此端口<br>6939端口：木马Indoctrination开放此端口<br>6969端口：木马Gatecrasher、Priority开放此端口<br>6970端口：real音频开放此端口<br>7000端口：木马Remote Grab开放此端口<br>7002端口：使用者&amp; 组 数据库<br>7003端口：音量定位数据库<br>7004端口：AFS/Kerberos认证服务<br>7005端口：音量管理服务<br>7006端口：错误解释服务<br>7007端口：Basic监督进程<br>7008端口：服务器-服务器更新程序<br>7009端口：远程缓存管理服务<br>7011端口：Talon软件发现端口<br>7012端口：Talon软件引擎<br>7013端口：Microtalon发现<br>7014端口：Microtalon通信<br>7015端口：Talon网络服务器<br>7020端口：DP服务<br>7021端口：DP服务管理<br>7100端口：X字型服务<br>7121端口：虚拟原型许可证管理<br>7300端口：木马NetMonitor开放此端口<br>7301端口：木马NetMonitor开放此端口<br>7306端口：木马NetMonitor，NetSpy1.0开放此端口<br>7307端口：木马NetMonitor开放此端口<br>7308端口：木马NetMonitor开放此端口<br>7323端口：Sygate服务器端<br>7511端口：木马聪明基因开放此端口<br>7588端口：Sun许可证管理<br>7597端口：木马Quaz开放此端口<br>7626端口：木马冰河开放此端口<br>7633端口：PMDF管理<br>7674端口：iMQ SSL通道<br>7675端口：iMQ通道<br>7676端口：木马Giscier开放此端口<br>7720端口：Med图象入口<br>7743端口：Sakura脚本传递协议<br>7789端口：木马ICKiller开放此端口<br>7797端口：Propel连接器端口<br>7798端口：Propel编码器端口<br>8000端口：腾讯QQ服务器端开放此端口<br>8001端口：VCOM通道<br>8007端口：Apache(类似iis)jServ协议1.x<br>8008端口：HTTP Alternate<br>8009端口：Apache(类似iis)JServ协议1.3<br>8010端口：Wingate代理开放此端口<br>8011端口：木马way2.4开放此端口<br>8022端口：OA-系统<br>8080端口：WWW代理开放此端口<br>8081端口：ICECap控制台<br>8082端口：BlackIce(防止黑客软件)警报发送到此端口<br>8118端口：Privoxy HTTP代理<br>8121端口：Apollo数据端口<br>8122端口：Apollo软件管理端口<br>8181端口：Imail<br>8225端口：木马灰鸽子开放此端口<br>8311端口：木马初恋情人开放此端口<br>8351端口：服务器寻找<br>8416端口：eSpeech Session协议<br>8417端口：eSpeech RTP协议<br>8473端口：虚拟点对点<br>8668端口：网络地址转换<br>8786端口：Message客户端<br>8787端口：Message服务器<br>8954端口：Cumulus管理端口<br>9000端口：CS监听<br>9001端口：ETL服务管理<br>9002端口：动态id验证<br>9021端口：Pangolin验证<br>9022端口：PrivateArk远程代理<br>9023端口：安全网络登陆-1<br>9024端口：安全网络登陆-2<br>9025端口：安全网络登陆-3<br>9026端口：安全网络登陆-4<br>9101端口：Bacula控制器<br>9102端口：Bacula文件后台<br>9103端口：Bacula存储邮件后台<br>9111端口：DragonIDS控制台<br>9217端口：FSC通讯端口<br>9281端口：软件传送端口1<br>9282端口：软件传送端口2<br>9346端口：C技术监听<br>9400端口：木马Incommand 1.0开放此端口<br>9401端口：木马Incommand 1.0开放此端口<br>9402端口：木马Incommand 1.0开放此端口<br>9594端口：信息系统<br>9595端口：Ping Discovery服务<br>9800端口：WebDav源端口<br>9801端口：Sakura脚本转移协议-2<br>9802端口：WebDAV Source TLS/SSL<br>9872端口：木马Portal of Doom开放此端口<br>9873端口：木马Portal of Doom开放此端口<br>9874端口：木马Portal of Doom开放此端口<br>9875端口：木马Portal of Doom开放此端口<br>9899端口：木马InIkiller开放此端口<br>9909端口：域名时间<br>9911端口：SYPECom传送协议<br>9989端口：木马iNi-Killer开放此端口<br>9990端口：OSM Applet程序服务器<br>9991端口：OSM事件服务器<br>10000端口：网络数据管理协议<br>10001端口：SCP构造端口<br>10005端口：安全远程登陆<br>10008端口：Octopus多路器<br>10067端口：木马iNi-Killer开放此端口<br>10113端口：NetIQ端点<br>10115端口：NetIQ端点<br>10116端口：NetIQVoIP鉴定器<br>10167端口：木马iNi-Killer开放此端口<br>11000端口：木马SennaSpy开放此端口<br>11113端口：金山词霸开放此端口<br>11233端口：木马Progenic trojan开放此端口<br>12076端口：木马Telecommando开放此端口<br>12223端口：木马Hack’99 KeyLogger开放此端口<br>12345端口：木马NetBus1.60/1.70、GabanBus开放此端口<br>12346端口：木马NetBus1.60/1.70、GabanBus开放此端口<br>12361端口：木马Whack-a-mole开放此端口<br>13223端口：PowWow 客户端，是Tribal Voice的聊天程序<br>13224端口：PowWow 服务器，是Tribal Voice的聊天程序<br>16959端口：木马Subseven开放此端口<br>16969端口：木马Priority开放此端口<br>17027端口：外向连接<br>19191端口：木马蓝色火焰开放此端口<br>20000端口：木马Millennium开放此端口<br>20001端口：木马Millennium开放此端口<br>20034端口：木马NetBus Pro开放此端口<br>21554端口：木马GirlFriend开放此端口<br>22222端口：木马Prosiak开放此端口<br>23444端口：木马网络公牛开放此端口<br>23456端口：木马Evil FTP、Ugly FTP开放此端口<br>25793端口：Vocaltec地址服务器<br>26262端口：K3软件-服务器<br>26263端口：K3软件客户端<br>26274端口：木马Delta开放此端口<br>27374端口：木马Subseven 2.1开放此端口<br>30100端口：木马NetSphere开放此端口<br>30129端口：木马Masters Paradise开放此端口<br>30303端口：木马Socket23开放此端口<br>30999端口：木马Kuang开放此端口<br>31337端口：木马BO(Back Orifice)开放此端口<br>31338端口：木马BO(Back Orifice)，DeepBO开放此端口<br>31339端口：木马NetSpy DK开放此端口<br>31666端口：木马BOWhack开放此端口<br>31789端口：Hack-a-tack<br>32770端口：sun solaris RPC服务开放此端口<br>33333端口：木马Prosiak开放此端口<br>33434端口：路由跟踪<br>34324端口：木马Tiny Telnet Server、BigGluck、TN开放此端口<br>36865端口：KastenX软件端口<br>38201端口：Galaxy7软件数据通道<br>39681端口：TurboNote默认端口<br>40412端口：木马The Spy开放此端口<br>40421端口：木马Masters Paradise开放此端口<br>40422端口：木马Masters Paradise开放此端口<br>40423端口：木马Masters Paradise开放此端口<br>40426端口：木马Masters Paradise开放此端口<br>40843端口：CSCC 防火墙<br>43210端口：木马SchoolBus 1.0/2.0开放此端口<br>43190端口：IP-PROVISION<br>44321端口：PCP服务器(pmcd)<br>44322端口：PCP服务器(pmcd)代理<br>44334端口：微型个人防火墙端口<br>44442端口：ColdFusion软件端口<br>44443端口：ColdFusion软件端口<br>44445端口：木马Happypig开放此端口<br>45576端口：E代时光专业代理开放此端口<br>47262端口：木马Delta开放此端口<br>47624端口：Direct Play服务器<br>47806端口：ALC协议<br>48003端口：Nimbus网关<br>50505端口：木马Sockets de Troie开放此端口<br>50766端口：木马Fore开放此端口<br>53001端口：木马Remote Windows Shutdown开放此端口<br>54320端口：木马bo2000开放此端口<br>54321端口：木马SchoolBus 1.0/2.0开放此端口<br>61466端口：木马Telecommando开放此端口<br>65000端口：木马Devil 1.03开放此端口<br>65301端口：PC Anywhere软件开放端口</p>\n"},{"title":"thinkphp的数据库操作(上)","date":"2021-08-27T07:51:15.000Z","cover":"https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/8.jpg","_content":"# 一：连接数据库与模型初探\nThinkPHP 采用内置抽象层将不同的数据库操作进行封装处理，数据抽象层基于 PDO 模式，无须针对不同的数据库编写相应的代码。使用数据库的第一步，就是连接数据库，在根目录的 config 下的 database.php 可以设置数据库连接信息，大部分系统已经给了默认值，你只需要修改和填写需要的值即可。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cd44f832fe144d8b838a86b11d60fad1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)其中default配置用于设置默认使用的数据库连接配置。connections配置具体的数据库连接信息，default配置参数定义的连接配置必须要存在。\n<table><thead><tr><th>type</th><th>数据库</th></tr></thead><tbody><tr><td>mysql</td><td>MySQL</td></tr><tr><td>sqlite</td><td>SqLite</td></tr><tr><td>pgsql</td><td>PostgreSQL</td></tr><tr><td>sqlsrv</td><td>SqlServer</td></tr><tr><td>mongo</td><td>MongoDb</td></tr><tr><td>oracle</td><td>Oracle</td></tr></tbody></table>\n\n下面是默认支持的数据库连接信息：\n<table><thead><tr><th>参数名</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>数据库类型</td><td>无</td></tr><tr><td>hostname</td><td>数据库地址</td><td>127.0.0.1</td></tr><tr><td>database</td><td>数据库名称</td><td>无</td></tr><tr><td>username</td><td>数据库用户名</td><td>无</td></tr><tr><td>password</td><td>数据库密码</td><td>无</td></tr><tr><td>hostport</td><td>数据库端口号</td><td>无</td></tr><tr><td>dsn</td><td>数据库连接dsn信息</td><td>无</td></tr><tr><td>params</td><td>数据库连接参数</td><td>空</td></tr><tr><td>charset</td><td>数据库编码</td><td>utf8</td></tr><tr><td>prefix</td><td>数据库的表前缀</td><td>无</td></tr><tr><td>deploy</td><td>数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)</td><td>0</td></tr><tr><td>rw_separate</td><td>数据库读写是否分离 主从式有效</td><td>false</td></tr><tr><td>master_num</td><td>读写分离后 主服务器数量</td><td>1</td></tr><tr><td>slave_no</td><td>指定从服务器序号</td><td>无</td></tr><tr><td>fields_strict</td><td>是否严格检查字段是否存在</td><td>true</td></tr><tr><td>fields_cache</td><td>是否开启字段缓存</td><td>false</td></tr><tr><td>schema_cache_path</td><td>字段缓存目录</td><td>无</td></tr><tr><td>trigger_sql</td><td>是否开启SQL监听</td><td>true</td></tr><tr><td>auto_timestamp</td><td>自动写入时间戳字段</td><td>false</td></tr><tr><td>query</td><td>指定查询对象</td><td>think\\db\\Query</td></tr></tbody></table>\n我们还可以调用Db::connect方法动态配置数据库连接信息，例如：\n\n```php\n\\think\\facade\\Db::connect('demo')\n\t->table('user')\n    ->find();\n```\nconnect方法必须在查询的最开始调用，而且必须紧跟着调用查询方法，否则可能会导致部分查询失效或者依然使用默认的数据库连接。且动态连接数据库的connect方法仅对当次查询有效。这种方式的动态连接和切换数据库比较方便，经常用于多数据库连接的应用需求。\n\n对于本地测试，会优先采用.env 的配置信息，可以通过删除改变.env 的配置，或删除.env 来验证 database 的执行优先级，操作中我们和 database 配置对应上即可：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d736bd28493c415eab2c80c7c9be3630.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n现在来测试有没有成功连接：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/59b1812e8c6c491c8bca013ed8d5a3b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 二：查询构造器(基础)\n在学习查询之前可以先了解一下一个新方法：`Db::getLastSql()`，该方法可以返回最近一条SQL查询的原生语句。我在这里的演示是使用了我的myemployees库内容如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7e016d4ca9fe47aea82485b8367ea1d9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/c38a4efe94044ef880f1322879ee95ab.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 1) 查询数据\n> 查询单个数据\n\n查询单个数据一般使用find方法。如果没有任何的查询条件，并且也没有调用order方法的话 ，find查询不会返回任何结果。\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result = json(Db::table('employees')->where('employee_id', 100)->find());\n        return Db::getLastSql() . '<br>' . $result;\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4ebf5b70bb134ec58d4a9541ab7b706c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)find方法查询结果不存在，返回 null，否则返回结果数组，如果希望查询数据不存在的时候返回空数组，可以如下修改：\n\n```php\n$result = Db::table('employees')->where('employee_id', 99)->findOrEmpty();\n```\n如果希望在没有找到数据后抛出异常可以如下使用，如果没有查找到数据，则会抛出一个`think\\db\\exception\\DataNotFoundException`异常。\n```php\n$result = Db::table('employees')->where('employee_id', 99)->findOrFail();\n```\n\n> 查询数据集\n\n查询多个数据（数据集）使用select方法：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ff8e7968724e4f0a9e2187b45bf6cad6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\nselect 方法查询结果是一个数据集对象，如果需要转换为数组可以如下使用，但一般DB操作返回是默认是数组，这种情况下调用toArray()会报错，别问我是怎么知道的。。。。\n\n```php\n$result = Db::table('employees')->where('employee_id', 102)->select()->toArray();\n```\n如果希望在没有查找到数据后抛出异常可以如下使用，如果没有查找到数据，同样也会抛出一个`think\\db\\exception\\DataNotFoundException`异常\n```php\n$result = Db::table('employees')->where('employee_id', 102)->select()->selectOrFail();\n```\n如果设置了数据表前缀参数的话，可以使用name替代table，如果表名为\"tp_user\"，然后在数据库设置那里添加了表前缀\"tp_\"，那么查询时可以用`name('user')`替代`table('tp_user')`。如果你的数据表没有设置表前缀的话，那么name和table方法效果一致。\n\n> 值和列查询\n\n查询某个字段的值可以用value()，如果不存在则返回null，如果有多个结果则只返回第一个。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d377f87160db4d0bb7580c4200edcbad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)查询某一列的值可以用column()，第一个参数是返回的值，第二个参数的值作为索引。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/54dd78da1f8b4f779094a43f4a5c4244.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 数据分批处理\n\n如果处理的数据量巨大，成百上千那种，一次性读取有可能会导致内存开销过大，为了避免内存处理太多数据出错，可以使用 chunk()方法分批处理数据，该方法一次获取结果集的一小块，然后填充每一小块数据到要处理的闭包，该方法在编写处理大量数据库记录的时候非常有用。比如，我们可以全部员工表数据进行分批处理，每次处理 3 个员工记录，先展示chunk分批次处理的特性。\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        // function传入的$data代表所有数据\n        $result = Db::table('employees')->chunk(3, function ($data){\n            foreach ($data as $data) {\n                dump($data);\n            }\n            echo 1;\n        });\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0b3f3d56b9744a13bf68a75e141455d6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果要给员工计算年薪，那就是 月薪\\*12\\*(1+奖金率)，那样就可以通过如下方法计算了：\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        // function传入的$data代表所有数据\n        $result = Db::table('employees')->chunk(3, function ($data){\n            foreach ($data as $data) {\n                if (isset($data['commission_pct'])) {\n                    echo $data['employee_id'] . ' ' . (12*$data['salary']*(1+$data['commission_pct'])) . \"<br>\";\n                } else {\n                    echo $data['employee_id'] . ' ' . (12*$data['salary']) . \"<br>\";\n                }\n            }\n            echo 1 . \"<br>\";\n        });\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0fcaf7059739488581d3ac04cad12dd4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)chunk方法的处理默认是根据主键查询，支持指定字段，并且支持指定处理数据的顺序。\n\n```php\nDb::table('think_user')->chunk(100, function($users) {\n    // 处理结果集...\n    return false;\n},'create_time', 'desc');\n```\n> 游标查询\n\n可以利用游标查询功能，可以大幅度减少海量数据的内存开销，它利用了 PHP 生 成器特性。每次查询只读一行，然后再读取时，自动定位到下一行继续读取，cursor方法返回的是一个生成器对象。\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result = Db::table('employees')->cursor();\n        foreach ($result as $e){\n            echo $e['last_name'] . \"<br>\";\n        };\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0e364407ab294e77a1d20b4a93f6b372.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 2) 添加数据\n> 单数据新增\n\n单数据新增一般使用insert()方法插入，如果新增成功会返回一个1，没有指定的列的值默认为null。\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data = [\n            'employee_id'   =>  '99',\n            'first_name'    =>  'eyes',\n            'last_name'     =>  '++'\n        ];\n        return Db::table('employees')->insert($data);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/52c4cfeee5db469b92d29e9adb3fe4f0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果你添加一个不存在的字段数据，会抛出一个异常 Exception，如果想强行新增抛弃不存在的字段数据，则使用 strick(false)方法，忽略异常：\n\n```php\nreturn Db::table('employees')->strict(false)->insert($data);\n```\n\n我采用的数据库是 mysql，可以支持 replace 写入，insert 和 replace 写入的区别，前者遇到表中存在主键相同则报错，后者则修改。另外，使用 insertGetId()方法，可以在新增成功后返回当前数据 ID\n\n> 批量数据新增\n\n使用 insertAll()方法，可以添加二维数组批量新增数据，但要保持数组结构一致，成功则返回增加的行数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data =[\n            [\n                'employee_id'   =>  '98',\n                'first_name'    =>  '虚哥',\n                'last_name'     =>  'xx'\n            ],\n            [\n                'employee_id'   =>  '97',\n                'first_name'    =>  '鸡哥',\n                'last_name'     =>  'jj'\n            ]\n        ];\n        return Db::table('employees')->insertAll($data);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d18696c816524dd9b97d10f238ec1bc5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n如果是mysql数据库则可以使用replay()批量添加或修改：\n\n```php\nreturn Db::table('employees')->replay()->insertAll($data);\n```\n如果批量插入的数据比较多，可以指定分批插入，使用limit方法指定每次插入的数量限制:\n\n```php\n//分批次写入，每次最多100条数据\nDb::table('employees')\n  ->replay()\n  ->limit(100)\n  ->insertAll($data);\n```\n\n> save()新增\n\nsave()方法是一个通用方法，可以自行判断是新增还是修改(更新)数据，判断的依据是是否存在主键，不存在即新增。用法如insert，此处略。\n\n## 3) 更新数据\n更新数据可以使用save()方法或者update()方法，如果修改数据包括了主键信息，则可以省略where条件\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data =[\n            'first_name'    =>  '东哥',\n            'last_name'     =>  'hh'\n        ];\n        return Db::table('employees')\n            ->where('employee_id', 97)\n            ->save($data);\n//        支持使用data方法传入要更新的数据，如果update方法和data方法同时传入更新数据，则以update方法为准。\n//        return Db::table('employees')\n//        ->where('employee_id', 97)\n//        ->data($data)\n//        ->save();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ae7909c56009487ebaa25814d5ce8d71.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果要更新的数据需要使用SQL函数或者其它字段，可以使用下面的方式:\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        return Db::table('employees')\n            ->where('employee_id', 99)\n            ->exp('first_name', 'UPPER(first_name)')\n            ->update();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/975d89407a5940cebb11d715a03ea5bf.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n可以使用inc/dec方法自增或自减一个字段的值（ 如不加第二个参数，默认步长为1）。\n\n```php\n// score 字段加 1\nDb::table('employees')\n    ->where('employee_id', 1)\n    ->inc('salary')\n    ->update();\n\n// score 字段加 5\nDb::table('employees')\n    ->where('employee_id', 1)\n    ->inc('salary', 5)\n    ->update();\n\n// score 字段减 1\nDb::table('employees')\n    ->where('employee_id', 1)\n    ->dec('salary')\n    ->update();\n\n// score 字段减 5\nDb::table('employees')\n    ->where('employee_id', 1)\n    ->dec('salary', 5)\n    ->update();\n```\n\n## 4) 删除数据\n+ 极简删除可以根据主键直接删除，删除成功返回影响行数，否则 0； \n`Db::table('employees')->delete(100); `\n+ 根据主键，还可以删除多条记录； \n`Db::table('employees')->delete([97,98,99]); `\n+ 正常情况下，通过 where()方法来删除； \n`Db::table('employees')->where('id', 100)->delete(); `\n+ 通过 true 参数删除数据表所有数据 \n`Db::table('employees')->delete(true);`\n\n一般情况下，业务数据不建议真实删除数据，系统提供了软删除机制（模型中使用软删除更为方便），useSoftDelete方法表示使用软删除，并且指定软删除字段为delete_time，写入数据为当前的时间戳。。\n\n```php\n// 软删除数据 使用delete_time字段标记删除\nDb::table('employees')\n\t->where('id', 100)\n\t->useSoftDelete('delete_time',time())\n    ->delete();\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/04e3f85a3e394a4e888ca67684f43ac6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 5) 查询表达式\n查询表达式支持大部分的SQL查询语法，也是ThinkPHP查询语言的精髓，查询表达式的使用格式：`where('字段名','查询表达式','查询条件')`。除了where方法外，还可以支持whereOr，用法是一样的。为了更加方便查询，大多数的查询表达式都提供了快捷查询方法。\n<table><thead><tr><th>表达式</th><th>含义</th><th>快捷查询方法</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td></td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td></td></tr><tr><td>&gt;</td><td>大于</td><td></td></tr><tr><td>&gt;=</td><td>大于等于</td><td></td></tr><tr><td>&lt;</td><td>小于</td><td></td></tr><tr><td>&lt;=</td><td>小于等于</td><td></td></tr><tr><td>[NOT] LIKE</td><td>模糊查询</td><td><code>whereLike/whereNotLike</code></td></tr><tr><td>[NOT] BETWEEN</td><td>（不在）区间查询</td><td><code>whereBetween/whereNotBetween</code></td></tr><tr><td>[NOT] IN</td><td>（不在）IN 查询</td><td><code>whereIn/whereNotIn</code></td></tr><tr><td>[NOT] NULL</td><td>查询字段是否（不）是NULL</td><td><code>whereNull/whereNotNull</code></td></tr><tr><td>[NOT] EXISTS</td><td>EXISTS查询</td><td><code>whereExists/whereNotExists</code></td></tr><tr><td>[NOT] REGEXP</td><td>正则（不）匹配查询（仅支持Mysql）</td><td></td></tr><tr><td>[NOT] BETWEEN TIME</td><td>时间区间比较</td><td>whereBetweenTime</td></tr><tr><td>&gt; TIME</td><td>大于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&lt; TIME</td><td>小于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&gt;= TIME</td><td>大于等于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&lt;= TIME</td><td>小于等于某个时间</td><td><code>whereTime</code></td></tr><tr><td>EXP</td><td>表达式查询，支持SQL语法</td><td><code>whereExp</code></td></tr><tr><td>find in set</td><td>FIND_IN_SET查询</td><td><code>whereFindInSet</code></td></tr></tbody></table>\n\n> 比较查询\n\n+ 查询表达式支持大部分常用的 SQL 语句，语法格式如下： \n`where('字段名','查询表达式','查询条件');` \n+ 在查询数据进行筛选时，我们采用 where()方法，比如 id=80； \n`Db::name('user')->where('id', 80)->find();`\n`Db::name('user')->where('id','=',80)->find();` \n+ 使用<>、>、<、>=、<=可以筛选出各种符合比较值的数据列表； `Db::name('user')->where('id','>',80)->select();`\n\n> 区间查询\n\n+ 使用 like 表达式进行模糊查询； \n`Db::name('user')->where('email','like','xiao%')->select();` \n+ like 表达式还可以支持数组传递进行模糊查询； \n`Db::name('user')->where('email','like',['xiao%','wu%'], 'or')->select(); `\n`SELECT * FROM tp_user WHERE (email LIKE xiao% OR email LIKE 'wu%')` \n+ like 表达式具有两个快捷方式 whereLike()和 whereNoLike()； `Db::name('user')->whereLike('email','xiao%')->select(); `\n`Db::name('user')->whereNotLike('email','xiao%')->select(); `\n+ between 表达式具有两个快捷方式 whereBetween()和 whereNotBetween()； `Db::name('user')->where('id','between','19,25')->select(); `\n`Db::name('user')->where('id','between',[19, 25])->select();`\n`Db::name('user')->whereBetween('id','19,25')->select();` `Db::name('user')->whereNotBetween('id','19,25')->select();` \n+ in 表达式具有两个快捷方式 whereIn()和 whereNotIn()； \n`Db::name('user')->where('id','in', '19,21,29')->select();`\n`Db::name('user')->where('id','in', [19, 21, 29])->select();`\n`Db::name('user')->whereIn('id','19,21,29')->select();` \n`Db::name('user')->whereNotIn('id','19,21,29')->select();`\n+ null 表达式具有两个快捷方式 whereNull()和 whereNotNull()； `Db::name('user')->where('uid','null')->select();`\n`Db::name('user')->where('uid','not null')->select();`\n`Db::name('user')->whereNull('uid')->select();`\n`Db::name('user')->whereNotNull('uid')->select();`\n\n> EXP查询\n\nEXP表达式支持更复杂的查询：\n\n```php\nDb::name('user')->where('id','in','1,3,8')->select();\n```\n可以改成：\n\n```php\nDb::name('user')->where('id','exp',' IN (1,3,8) ')->select();\n```\nexp查询的条件不会被当成字符串，所以后面的查询条件可以使用任何SQL支持的语法，包括使用函数和字段名称。因此推荐使用whereExp方法查询。\n\n```php\nDb::name('user')->whereExp('id', 'IN (1,3,8) ')->select();\n```\n\n# 三：查询构造器(链式)\n## 1)．查询规则 \n1. 前面课程中我们通过指向符号“->”多次连续调用方法称为：链式查询\n2. 当 Db::name('user')时，返回查询对象(Query)，即可连缀数据库对应的方法\n3. 而每次执行一个数据库查询方法时，比如 where()，还将返回查询对象(Query)\n4. 只要还是数据库对象，那么就可以一直使用指向符号进行链式查询\n5. 再利用 find()、select()等方法返回数组(Array)或数据集对象(Colletion)\n6. 而 find()和 select()是结果查询方法（放在最后），并不是链式查询方法\n`Db::name('user')->where('id', 27)->order('id', 'desc')->find() `\n7. 除了查询方法可以使用链式连贯操作，CURD 操作也可以使用（后续课程研究)\n\n## 2)．更多查询 \n1. 如果多次使用数据库查询，那么每次静态创建都会生成一个实例，造成浪费； \n2. 我们可以把对象实例保存下来，再进行反复调用即可； \n`$userQuery = Db::name('user'); `\n`$dataFind = $userQuery->where('id', 27)->find();`\n`$dataSelect = $userQuery->select(); `\n3. 当同一个对象实例第二次查询后，会保留第一次查询的值；\n`$data1 = $userQuery->order('id', 'desc')->select();`\n`$data2 = $userQuery->select(); `\n`return Db::getLastSql(); `\n`SELECT * FROM tp_user ORDER BY id DESC` \n4. 使用 removeOption()方法，可以清理掉上一次查询保留的值； `$userQuery->removeOption('where')->select();`\n## 3). 链式查询方法\n> where\n\n+ 表达式查询，即where()方法的基础查询方式\n\n```php\n $result=Db::table('employees')->where('salary', '<', '10000')->select();\n```\n\n+ 关联数组查询，通过键值对来数组键值对匹配的查询方式\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where([\n                      'job_id'     =>      'IT_PROG',\n                      'salary'     =>       6000\n                  ])\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c6e81a82a067468d85edf632983316b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ 索引数组查询，通过数组里的数组拼装方式来查询\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where([\n                      ['employee_id', '<', 110],\n                      ['salary', '<', 10000]\n                  ])\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8b76eb78049b4d6dad35caa45893e240.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ 将复杂的数组组装后，通过变量传递，将增加可读性\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $map[] = ['employee_id', '<', 110];\n        $map[] = ['salary', 'in', [6000, 4200, 24000]];\n        $result=Db::table('employees')\n                  ->where($map)\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b8f85b61ddf84f46913615907af2dd02.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ 字符串形式传递，简单粗暴的查询方式，whereRaw()支持复杂字符串格式，也支持SQL预处理模式\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->whereRaw(\"employee_id<110 AND salary IN (24000, 6000, 4200)\")\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/37972e97295b48f5857c9ab221530b84.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> field\n\n+ 使用 field()方法，可以指定要查询的字段\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where('employee_id', '<', 105)\n                  ->field('employee_id, first_name, salary')\n//                  ->field(['employee_id', 'first_name', 'salary']) 或者这种数组形式\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/53753907ba864b4abd21b469bbb441f3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 field()方法，给指定的字段设置别名\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where('employee_id', '<', 105)\n                  ->field('employee_id as id, first_name as name, salary as 薪水')\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b2d7c18571cb45ca8593485641e7688f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 在 fieldRaw()方法里，可以直接给字段设置 MySQL 函数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where('employee_id', '<', 105)\n                  ->field('job_id, LENGTH(job_id)')\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/be296325d5d340e3905f0345e6166afd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 field(true)的布尔参数，可以显式的查询获取所有字段，而不是*\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where('employee_id', '<', 105)\n                  ->field(true)\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5409f59a808046cca1f56d89db7fddfc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 withoutField()方法中字段排除，可以屏蔽掉想要不显示的字段\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->where('employee_id', '<', 105)\n            ->withoutField('email, phone_number')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/92e26f2fee2944489ba4911ccd5a022e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 field()方法在新增时，验证字段的合法性\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->where('employee_id', '<', 105)\n            ->field('employee_id, first_name, last_name')\n            ->insert([\n                'first_name'       =>      '济钢',\n                'last_name'        =>       'aa'\n            ]);\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/59a075a1239b475ca2f07cd15f66087b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> alias\n\n使用 alias()方法，给数据库起一个别名:\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5a91a2f4743f47d09edfd0eea55b18c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> limit\n\n+ 使用 limit()方法，限制获取输出数据的个数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name')\n            ->limit(5)\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c963644518d141778524a4ac9fc26461.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 分页模式，即传递两个参数，比如从第 3 条开始显示 5 条 limit(2,5)\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name')\n            ->limit(2, 5)\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7751a3f98ed04a8d8aca6e32bf5a709f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> page\n\npage()分页方法，优化了 limit()方法，无须计算分页条数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name')\n            ->page(2, 5)  // 每页显示五条，第二页\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b324a307f6244e7292f6d7011b8572f7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> order\n\n+ 使用 order()方法，可以指定排序方式，没有指定第二参数，默认 asc\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name, salary')\n            ->order('salary', 'desc')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/04567b9d8c4a4798ba9efce62d8a3d74.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 支持数组的方式，对多个字段进行排序\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name, salary')\n            // 按工资升序，工资相同则按员工编号降序\n            ->order([\n                'salary'        =>       'asc',\n                'employee_id'   =>       'desc'\n            ])\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f4c3390934fb49769cf91aaad46a8654.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 orderRaw()方法，支持排序的时候指定 MySQL 函数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name, salary')\n            ->orderRaw('length(first_name) DESC')\n            ->select();\n        return Db::getLastSQL();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ff956ec3a0be4248af88cd6179f0ea77.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> group\n\n+ 使用 group()方法，给性别不同的人进行 price 字段的总和统计\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('job_id, SUM(salary)')\n            ->group('job_id')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/574cfa3bf1f24df7bb83c470a4f413f1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 也可以进行多字段分组统计\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('job_id, manager_id, SUM(salary)')\n            ->group('job_id, manager_id')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c27a8e90bf174de49fdd582ff55dcd3a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> having\n\n使用 group()分组之后，再使用 having()进行筛选\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('job_id, manager_id, SUM(salary)')\n            ->group('job_id, manager_id')\n            ->having('SUM(salary)>10000')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4fb4f87e747a4805941d6f85cfab57a5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 四：查询构造器(进阶)\n## 1) 聚合查询\n在应用中我们经常会用到一些统计数据，例如当前所有（或者满足某些条件）的用户数、所有用户的最大积分、用户的平均成绩等等，ThinkPHP为这些统计操作提供了一系列的内置方法，包括以下部分：\n<table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>count</td><td>统计数量，参数是要统计的字段名（可选）</td></tr><tr><td>max</td><td>获取最大值，参数是要统计的字段名（必须）</td></tr><tr><td>min</td><td>获取最小值，参数是要统计的字段名（必须）</td></tr><tr><td>avg</td><td>获取平均值，参数是要统计的字段名（必须）</td></tr><tr><td>sum</td><td>获取总分，参数是要统计的字段名（必须）</td></tr></tbody></table>\n\n1. 使用 count()方法，可以求出所查询数据的数量\n`Db::name('user')->count();` \n2. count()可设置指定 id，比如有空值(Null)的 uid，不会计算数量； \n`Db::name('user')->count('uid');` \n3. 使用 max()方法，求出所查询数据字段的最大值； \n`Db::name('user')->max('price');`\n4. 如果 max()方法，求出的值不是数值，则通过第二参数强制转换； \n`Db::name('user')->max('price', false);` \n5. 使用 min()方法，求出所查询数据字段的最小值，也可以强制转换； \n`Db::name('user')->min('price');`\n6. 使用 avg()方法，求出所查询数据字段的平均值； \n`Db::name('user')->avg('price');` \n7. 使用 sum()方法，求出所查询数据字段的总和； \n`Db::name('user')->sum('price');`\n## 2) 分页查询\n\n## 3) 时间查询\n> 传统方式\n\n+ 可以使用>、<、>=、<=来筛选匹配时间的数据； \n`Db::name('user')->where('create_time', '>', '2018-1-1')->select();` \n+ 可以使用 between 关键字来设置时间的区间\n`Db::name('user')->where('create_time', 'between', ['2018-1-1', '2019-12-31'])->select();` \n`Db::name('user')->where('create_time', 'not between', ['2018-1-1', '2019-12-31'])->select();`\n\n> 快捷方式\n\n+ 时间查询的快捷方法为 whereTime()，直接使用>、<、>=、<=； `Db::name('user')->whereTime('create_time', '>', '2018-1-1')->select();`\n+ 快捷方式也可以使用 between 和 not between；\n`Db::name('user')->whereBetween('create_time', ['2018-1-1', '2019-12-31'])->select();` \n+ 还有一种快捷方式为：whereBetweenTime()和 whereNotBetweenTime()； `Db::name('user')->whereBetweenTime('create_time', '2018-1-1', '2019-12-31')->select(); `\n+ 默认的大于>，可以省略；\n`Db::name('user')->whereTime('create_time', '2018-1-1')->select();`\n\n> 固定查询\n\n+ 使用 whereYear 查询今年的数据、去年的数据和某一年的数据\n`Db::name('user')->whereYear('create_time')->select(); `\n`Db::name('user')->whereYear('create_time', 'last year')->select(); `\n`Db::name('user')->whereYear('create_time', '2016')->select();`\n+ 使用 whereMonth 查询当月的数据、上月的数据和某一个月的数据\n`Db::name('user')->whereMonth('create_time')->select(); `\n`Db::name('user')->whereMonth('create_time', 'last month')->select(); `\n`Db::name('user')->whereMonth('create_time', '2016-6')->select();`\n+ 使用 whereDay 查询今天的数据、昨天的数据和某一个天的数据\n`Db::name('user')->whereDay('create_time')->select(); `\n`Db::name('user')->whereDay('create_time', 'last day')->select(); `\n`Db::name('user')->whereDay('create_time', '2016-6-27')->select();`\n> 其它查询\n\n+ 查询指定时间的数据，比如两小时内的\n`Db::name('user')->whereTime('create_time', '-2 hours')->select();`\n+ 查询两个时间字段时间有效期的数据，比如会员开始到结束的期间\n`Db::name('user')->whereBetweenTimeField('start_time', 'end_time')->select();`\n## 4) 高级查询\n> 快捷查询\n\n快捷查询方式是一种多字段相同查询条件的简化写法，可以进一步简化查询条件的写法，在多个字段之间用|分割表示OR查询，用&分割表示AND查询，可以实现下面的查询，例如：\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        Db::table('employees')\n            ->where('first_name|last_name', 'like', '%a%')\n            ->where('employee_id&manager_id', '>', 103)\n            ->select();\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/205fa6298d764be481ad99727c824e37.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/0f756f69b62a4364bafb1d7a21130459.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 闭包查询\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $jobId='IT_PROG';\n        $salary=11000;\n\n        $res=Db::table('employees')->where(function ($query) use($jobId, $salary) {\n            $query->where('job_id', $jobId)\n                  ->whereOr('salary', '>', $salary);\n        })->select();\n\n        return json($res);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b8981d5bc8f34c668af9b2015c0e8617.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 字符串条件查询\n\n对于一些实在复杂的查询，也可以直接使用原生SQL语句进行查询，例如:\n\n```php\nDb::table('think_user')\n    ->whereRaw('id > 0 AND name LIKE \"thinkphp%\"')\n    ->select();\n```\n为了安全起见，我们可以对字符串查询条件使用参数绑定，例如：\n```php\nDb::table('think_user')\n    ->whereRaw('id > :id AND name LIKE :name ', ['id' => 0, 'name' => 'thinkphp%'])\n    ->select();\n```\n\n> 快捷方法\n\n系统封装了一系列快捷方法，用于简化查询\n<table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>whereOr</code></td><td>字段OR查询</td></tr><tr><td><code>whereXor</code></td><td>字段XOR查询</td></tr><tr><td><code>whereNull</code></td><td>查询字段是否为Null</td></tr><tr><td><code>whereNotNull</code></td><td>查询字段是否不为Null</td></tr><tr><td><code>whereIn</code></td><td>字段IN查询</td></tr><tr><td><code>whereNotIn</code></td><td>字段NOT IN查询</td></tr><tr><td><code>whereBetween</code></td><td>字段BETWEEN查询</td></tr><tr><td><code>whereNotBetween</code></td><td>字段NOT BETWEEN查询</td></tr><tr><td><code>whereLike</code></td><td>字段LIKE查询</td></tr><tr><td><code>whereNotLike</code></td><td>字段NOT LIKE查询</td></tr><tr><td><code>whereExists</code></td><td>EXISTS条件查询</td></tr><tr><td><code>whereNotExists</code></td><td>NOT EXISTS条件查询</td></tr><tr><td><code>whereExp</code></td><td>表达式查询</td></tr><tr><td><code>whereColumn</code></td><td>比较两个字段</td></tr></tbody></table>\n\n> 动态查询\n\n查询构造器还提供了动态查询机制，用于简化查询条件\n<table><thead><tr><th>动态查询</th><th>描述</th></tr></thead><tbody><tr><td><code>whereFieldName</code></td><td>查询某个字段的值</td></tr><tr><td><code>whereOrFieldName</code></td><td>查询某个字段的值</td></tr><tr><td><code>getByFieldName</code></td><td>根据某个字段查询</td></tr><tr><td><code>getFieldByFieldName</code></td><td>根据某个字段获取某个值</td></tr></tbody></table>\n\n```php\n// 根据邮箱（email）查询用户信息\n$user = Db::table('user')\n\t->whereEmail('thinkphp@qq.com')\n    ->find();\n\n// 根据昵称（nick_name）查询用户\n$email = Db::table('user')\n    ->whereNickName('like', '%流年%')\n    ->select();\n    \n// 根据邮箱查询用户信息\n$user = Db::table('user')\n    ->getByEmail('thinkphp@qq.com');\n    \n// 根据昵称（nick_name）查询用户信息\n$user = Db::table('user')\n    ->field('id,name,nick_name,email')\n    ->getByNickName('流年');\n    \n// 根据邮箱查询用户的昵称\n$nickname = Db::table('user')\n    ->getFieldByEmail('thinkphp@qq.com', 'nick_name');\n    \n// 根据昵称（nick_name）查询用户邮箱\n$email = Db::table('user')\n    ->getFieldByNickName('流年', 'email');\n\n```\n\n## 5) 子查询\n使用 fetchSql()方法，可以设置不执行 SQL，而返回 SQL 语句，默认 true；\n`Db::name('user')->fetchSql(true)->select();`\n使用 buildSql()方法，也是返回 SQL 语句，不需要再执行 select()，且有括号\n`Db::name('user')->buildSql(true);`\n结合以上方法，我们实现一个子查询：\n\n```php\n$subQuery = Db::table('think_user')\n    ->field('id,name')\n    ->where('id', '>', 10)\n    ->buildSql();\nDb::table($subQuery . ' a')\n    ->where('a.name', 'like', 'thinkphp')\n    ->order('id', 'desc')\n    ->select();\n\n```\n\n子查询还有闭包模式，`IN/NOT IN`和`EXISTS/NOT EXISTS`之类的查询可以直接使用闭包作为子查询，例如：\n\n```php\nDb::table('think_user')\n    ->where('id', 'IN', function ($query) {\n        $query->table('think_profile')->where('status', 1)->field('id');\n    })\n    ->select();\n```\n\n## 6) 原生查询\n注意：V6.0.3+版本开始，原生查询仅支持Db类操作，不支持在模型中调用原生查询方法（包括query和execute方法）。\nDb类支持原生SQL查询操作，主要包括query方法和execute方法\n\nquery方法用于执行SQL查询操作，返回查询结果数据集（数组）。\n\n```php\nDb::query(\"select * from think_user where status=:id\", ['id' => 1]);\n```\nexecute用于更新和写入数据的sql操作，如果数据非法或者查询错误则返回false，否则返回影响的记录数。\n\n```php\nDb::execute(\"update think_user set name='thinkphp' where status=1\");\n```\n支持在原生查询的时候使用参数绑定，包括问号占位符或者命名占位符，例如：\n\n```php\nDb::query(\"select * from think_user where id=? AND status=?\", [8, 1]);\n// 命名绑定\nDb::execute(\"update think_user set name=:name where status=:status\", ['name' => 'thinkphp', 'status' => 1]);\n```\n","source":"_posts/PHP/thinkphp数据库(上).md","raw":"---\ntitle: thinkphp的数据库操作(上)\ndate:  2021-08-27 15:51:15\ncover: https://cdn.jsdelivr.net/gh/YuJiZhao/picbed/blog/article/8.jpg\ntags: \n  - 数据库\n  - thinkphp\ncategories: PHP\n---\n# 一：连接数据库与模型初探\nThinkPHP 采用内置抽象层将不同的数据库操作进行封装处理，数据抽象层基于 PDO 模式，无须针对不同的数据库编写相应的代码。使用数据库的第一步，就是连接数据库，在根目录的 config 下的 database.php 可以设置数据库连接信息，大部分系统已经给了默认值，你只需要修改和填写需要的值即可。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/cd44f832fe144d8b838a86b11d60fad1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)其中default配置用于设置默认使用的数据库连接配置。connections配置具体的数据库连接信息，default配置参数定义的连接配置必须要存在。\n<table><thead><tr><th>type</th><th>数据库</th></tr></thead><tbody><tr><td>mysql</td><td>MySQL</td></tr><tr><td>sqlite</td><td>SqLite</td></tr><tr><td>pgsql</td><td>PostgreSQL</td></tr><tr><td>sqlsrv</td><td>SqlServer</td></tr><tr><td>mongo</td><td>MongoDb</td></tr><tr><td>oracle</td><td>Oracle</td></tr></tbody></table>\n\n下面是默认支持的数据库连接信息：\n<table><thead><tr><th>参数名</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>数据库类型</td><td>无</td></tr><tr><td>hostname</td><td>数据库地址</td><td>127.0.0.1</td></tr><tr><td>database</td><td>数据库名称</td><td>无</td></tr><tr><td>username</td><td>数据库用户名</td><td>无</td></tr><tr><td>password</td><td>数据库密码</td><td>无</td></tr><tr><td>hostport</td><td>数据库端口号</td><td>无</td></tr><tr><td>dsn</td><td>数据库连接dsn信息</td><td>无</td></tr><tr><td>params</td><td>数据库连接参数</td><td>空</td></tr><tr><td>charset</td><td>数据库编码</td><td>utf8</td></tr><tr><td>prefix</td><td>数据库的表前缀</td><td>无</td></tr><tr><td>deploy</td><td>数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)</td><td>0</td></tr><tr><td>rw_separate</td><td>数据库读写是否分离 主从式有效</td><td>false</td></tr><tr><td>master_num</td><td>读写分离后 主服务器数量</td><td>1</td></tr><tr><td>slave_no</td><td>指定从服务器序号</td><td>无</td></tr><tr><td>fields_strict</td><td>是否严格检查字段是否存在</td><td>true</td></tr><tr><td>fields_cache</td><td>是否开启字段缓存</td><td>false</td></tr><tr><td>schema_cache_path</td><td>字段缓存目录</td><td>无</td></tr><tr><td>trigger_sql</td><td>是否开启SQL监听</td><td>true</td></tr><tr><td>auto_timestamp</td><td>自动写入时间戳字段</td><td>false</td></tr><tr><td>query</td><td>指定查询对象</td><td>think\\db\\Query</td></tr></tbody></table>\n我们还可以调用Db::connect方法动态配置数据库连接信息，例如：\n\n```php\n\\think\\facade\\Db::connect('demo')\n\t->table('user')\n    ->find();\n```\nconnect方法必须在查询的最开始调用，而且必须紧跟着调用查询方法，否则可能会导致部分查询失效或者依然使用默认的数据库连接。且动态连接数据库的connect方法仅对当次查询有效。这种方式的动态连接和切换数据库比较方便，经常用于多数据库连接的应用需求。\n\n对于本地测试，会优先采用.env 的配置信息，可以通过删除改变.env 的配置，或删除.env 来验证 database 的执行优先级，操作中我们和 database 配置对应上即可：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d736bd28493c415eab2c80c7c9be3630.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n现在来测试有没有成功连接：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/59b1812e8c6c491c8bca013ed8d5a3b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n# 二：查询构造器(基础)\n在学习查询之前可以先了解一下一个新方法：`Db::getLastSql()`，该方法可以返回最近一条SQL查询的原生语句。我在这里的演示是使用了我的myemployees库内容如下：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7e016d4ca9fe47aea82485b8367ea1d9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/c38a4efe94044ef880f1322879ee95ab.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 1) 查询数据\n> 查询单个数据\n\n查询单个数据一般使用find方法。如果没有任何的查询条件，并且也没有调用order方法的话 ，find查询不会返回任何结果。\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result = json(Db::table('employees')->where('employee_id', 100)->find());\n        return Db::getLastSql() . '<br>' . $result;\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4ebf5b70bb134ec58d4a9541ab7b706c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)find方法查询结果不存在，返回 null，否则返回结果数组，如果希望查询数据不存在的时候返回空数组，可以如下修改：\n\n```php\n$result = Db::table('employees')->where('employee_id', 99)->findOrEmpty();\n```\n如果希望在没有找到数据后抛出异常可以如下使用，如果没有查找到数据，则会抛出一个`think\\db\\exception\\DataNotFoundException`异常。\n```php\n$result = Db::table('employees')->where('employee_id', 99)->findOrFail();\n```\n\n> 查询数据集\n\n查询多个数据（数据集）使用select方法：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ff8e7968724e4f0a9e2187b45bf6cad6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\nselect 方法查询结果是一个数据集对象，如果需要转换为数组可以如下使用，但一般DB操作返回是默认是数组，这种情况下调用toArray()会报错，别问我是怎么知道的。。。。\n\n```php\n$result = Db::table('employees')->where('employee_id', 102)->select()->toArray();\n```\n如果希望在没有查找到数据后抛出异常可以如下使用，如果没有查找到数据，同样也会抛出一个`think\\db\\exception\\DataNotFoundException`异常\n```php\n$result = Db::table('employees')->where('employee_id', 102)->select()->selectOrFail();\n```\n如果设置了数据表前缀参数的话，可以使用name替代table，如果表名为\"tp_user\"，然后在数据库设置那里添加了表前缀\"tp_\"，那么查询时可以用`name('user')`替代`table('tp_user')`。如果你的数据表没有设置表前缀的话，那么name和table方法效果一致。\n\n> 值和列查询\n\n查询某个字段的值可以用value()，如果不存在则返回null，如果有多个结果则只返回第一个。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d377f87160db4d0bb7580c4200edcbad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)查询某一列的值可以用column()，第一个参数是返回的值，第二个参数的值作为索引。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/54dd78da1f8b4f779094a43f4a5c4244.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 数据分批处理\n\n如果处理的数据量巨大，成百上千那种，一次性读取有可能会导致内存开销过大，为了避免内存处理太多数据出错，可以使用 chunk()方法分批处理数据，该方法一次获取结果集的一小块，然后填充每一小块数据到要处理的闭包，该方法在编写处理大量数据库记录的时候非常有用。比如，我们可以全部员工表数据进行分批处理，每次处理 3 个员工记录，先展示chunk分批次处理的特性。\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        // function传入的$data代表所有数据\n        $result = Db::table('employees')->chunk(3, function ($data){\n            foreach ($data as $data) {\n                dump($data);\n            }\n            echo 1;\n        });\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0b3f3d56b9744a13bf68a75e141455d6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果要给员工计算年薪，那就是 月薪\\*12\\*(1+奖金率)，那样就可以通过如下方法计算了：\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        // function传入的$data代表所有数据\n        $result = Db::table('employees')->chunk(3, function ($data){\n            foreach ($data as $data) {\n                if (isset($data['commission_pct'])) {\n                    echo $data['employee_id'] . ' ' . (12*$data['salary']*(1+$data['commission_pct'])) . \"<br>\";\n                } else {\n                    echo $data['employee_id'] . ' ' . (12*$data['salary']) . \"<br>\";\n                }\n            }\n            echo 1 . \"<br>\";\n        });\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0fcaf7059739488581d3ac04cad12dd4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)chunk方法的处理默认是根据主键查询，支持指定字段，并且支持指定处理数据的顺序。\n\n```php\nDb::table('think_user')->chunk(100, function($users) {\n    // 处理结果集...\n    return false;\n},'create_time', 'desc');\n```\n> 游标查询\n\n可以利用游标查询功能，可以大幅度减少海量数据的内存开销，它利用了 PHP 生 成器特性。每次查询只读一行，然后再读取时，自动定位到下一行继续读取，cursor方法返回的是一个生成器对象。\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result = Db::table('employees')->cursor();\n        foreach ($result as $e){\n            echo $e['last_name'] . \"<br>\";\n        };\n    }\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0e364407ab294e77a1d20b4a93f6b372.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 2) 添加数据\n> 单数据新增\n\n单数据新增一般使用insert()方法插入，如果新增成功会返回一个1，没有指定的列的值默认为null。\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data = [\n            'employee_id'   =>  '99',\n            'first_name'    =>  'eyes',\n            'last_name'     =>  '++'\n        ];\n        return Db::table('employees')->insert($data);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/52c4cfeee5db469b92d29e9adb3fe4f0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果你添加一个不存在的字段数据，会抛出一个异常 Exception，如果想强行新增抛弃不存在的字段数据，则使用 strick(false)方法，忽略异常：\n\n```php\nreturn Db::table('employees')->strict(false)->insert($data);\n```\n\n我采用的数据库是 mysql，可以支持 replace 写入，insert 和 replace 写入的区别，前者遇到表中存在主键相同则报错，后者则修改。另外，使用 insertGetId()方法，可以在新增成功后返回当前数据 ID\n\n> 批量数据新增\n\n使用 insertAll()方法，可以添加二维数组批量新增数据，但要保持数组结构一致，成功则返回增加的行数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data =[\n            [\n                'employee_id'   =>  '98',\n                'first_name'    =>  '虚哥',\n                'last_name'     =>  'xx'\n            ],\n            [\n                'employee_id'   =>  '97',\n                'first_name'    =>  '鸡哥',\n                'last_name'     =>  'jj'\n            ]\n        ];\n        return Db::table('employees')->insertAll($data);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d18696c816524dd9b97d10f238ec1bc5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n如果是mysql数据库则可以使用replay()批量添加或修改：\n\n```php\nreturn Db::table('employees')->replay()->insertAll($data);\n```\n如果批量插入的数据比较多，可以指定分批插入，使用limit方法指定每次插入的数量限制:\n\n```php\n//分批次写入，每次最多100条数据\nDb::table('employees')\n  ->replay()\n  ->limit(100)\n  ->insertAll($data);\n```\n\n> save()新增\n\nsave()方法是一个通用方法，可以自行判断是新增还是修改(更新)数据，判断的依据是是否存在主键，不存在即新增。用法如insert，此处略。\n\n## 3) 更新数据\n更新数据可以使用save()方法或者update()方法，如果修改数据包括了主键信息，则可以省略where条件\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $data =[\n            'first_name'    =>  '东哥',\n            'last_name'     =>  'hh'\n        ];\n        return Db::table('employees')\n            ->where('employee_id', 97)\n            ->save($data);\n//        支持使用data方法传入要更新的数据，如果update方法和data方法同时传入更新数据，则以update方法为准。\n//        return Db::table('employees')\n//        ->where('employee_id', 97)\n//        ->data($data)\n//        ->save();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ae7909c56009487ebaa25814d5ce8d71.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)如果要更新的数据需要使用SQL函数或者其它字段，可以使用下面的方式:\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        return Db::table('employees')\n            ->where('employee_id', 99)\n            ->exp('first_name', 'UPPER(first_name)')\n            ->update();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/975d89407a5940cebb11d715a03ea5bf.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n可以使用inc/dec方法自增或自减一个字段的值（ 如不加第二个参数，默认步长为1）。\n\n```php\n// score 字段加 1\nDb::table('employees')\n    ->where('employee_id', 1)\n    ->inc('salary')\n    ->update();\n\n// score 字段加 5\nDb::table('employees')\n    ->where('employee_id', 1)\n    ->inc('salary', 5)\n    ->update();\n\n// score 字段减 1\nDb::table('employees')\n    ->where('employee_id', 1)\n    ->dec('salary')\n    ->update();\n\n// score 字段减 5\nDb::table('employees')\n    ->where('employee_id', 1)\n    ->dec('salary', 5)\n    ->update();\n```\n\n## 4) 删除数据\n+ 极简删除可以根据主键直接删除，删除成功返回影响行数，否则 0； \n`Db::table('employees')->delete(100); `\n+ 根据主键，还可以删除多条记录； \n`Db::table('employees')->delete([97,98,99]); `\n+ 正常情况下，通过 where()方法来删除； \n`Db::table('employees')->where('id', 100)->delete(); `\n+ 通过 true 参数删除数据表所有数据 \n`Db::table('employees')->delete(true);`\n\n一般情况下，业务数据不建议真实删除数据，系统提供了软删除机制（模型中使用软删除更为方便），useSoftDelete方法表示使用软删除，并且指定软删除字段为delete_time，写入数据为当前的时间戳。。\n\n```php\n// 软删除数据 使用delete_time字段标记删除\nDb::table('employees')\n\t->where('id', 100)\n\t->useSoftDelete('delete_time',time())\n    ->delete();\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/04e3f85a3e394a4e888ca67684f43ac6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 5) 查询表达式\n查询表达式支持大部分的SQL查询语法，也是ThinkPHP查询语言的精髓，查询表达式的使用格式：`where('字段名','查询表达式','查询条件')`。除了where方法外，还可以支持whereOr，用法是一样的。为了更加方便查询，大多数的查询表达式都提供了快捷查询方法。\n<table><thead><tr><th>表达式</th><th>含义</th><th>快捷查询方法</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td></td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td></td></tr><tr><td>&gt;</td><td>大于</td><td></td></tr><tr><td>&gt;=</td><td>大于等于</td><td></td></tr><tr><td>&lt;</td><td>小于</td><td></td></tr><tr><td>&lt;=</td><td>小于等于</td><td></td></tr><tr><td>[NOT] LIKE</td><td>模糊查询</td><td><code>whereLike/whereNotLike</code></td></tr><tr><td>[NOT] BETWEEN</td><td>（不在）区间查询</td><td><code>whereBetween/whereNotBetween</code></td></tr><tr><td>[NOT] IN</td><td>（不在）IN 查询</td><td><code>whereIn/whereNotIn</code></td></tr><tr><td>[NOT] NULL</td><td>查询字段是否（不）是NULL</td><td><code>whereNull/whereNotNull</code></td></tr><tr><td>[NOT] EXISTS</td><td>EXISTS查询</td><td><code>whereExists/whereNotExists</code></td></tr><tr><td>[NOT] REGEXP</td><td>正则（不）匹配查询（仅支持Mysql）</td><td></td></tr><tr><td>[NOT] BETWEEN TIME</td><td>时间区间比较</td><td>whereBetweenTime</td></tr><tr><td>&gt; TIME</td><td>大于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&lt; TIME</td><td>小于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&gt;= TIME</td><td>大于等于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&lt;= TIME</td><td>小于等于某个时间</td><td><code>whereTime</code></td></tr><tr><td>EXP</td><td>表达式查询，支持SQL语法</td><td><code>whereExp</code></td></tr><tr><td>find in set</td><td>FIND_IN_SET查询</td><td><code>whereFindInSet</code></td></tr></tbody></table>\n\n> 比较查询\n\n+ 查询表达式支持大部分常用的 SQL 语句，语法格式如下： \n`where('字段名','查询表达式','查询条件');` \n+ 在查询数据进行筛选时，我们采用 where()方法，比如 id=80； \n`Db::name('user')->where('id', 80)->find();`\n`Db::name('user')->where('id','=',80)->find();` \n+ 使用<>、>、<、>=、<=可以筛选出各种符合比较值的数据列表； `Db::name('user')->where('id','>',80)->select();`\n\n> 区间查询\n\n+ 使用 like 表达式进行模糊查询； \n`Db::name('user')->where('email','like','xiao%')->select();` \n+ like 表达式还可以支持数组传递进行模糊查询； \n`Db::name('user')->where('email','like',['xiao%','wu%'], 'or')->select(); `\n`SELECT * FROM tp_user WHERE (email LIKE xiao% OR email LIKE 'wu%')` \n+ like 表达式具有两个快捷方式 whereLike()和 whereNoLike()； `Db::name('user')->whereLike('email','xiao%')->select(); `\n`Db::name('user')->whereNotLike('email','xiao%')->select(); `\n+ between 表达式具有两个快捷方式 whereBetween()和 whereNotBetween()； `Db::name('user')->where('id','between','19,25')->select(); `\n`Db::name('user')->where('id','between',[19, 25])->select();`\n`Db::name('user')->whereBetween('id','19,25')->select();` `Db::name('user')->whereNotBetween('id','19,25')->select();` \n+ in 表达式具有两个快捷方式 whereIn()和 whereNotIn()； \n`Db::name('user')->where('id','in', '19,21,29')->select();`\n`Db::name('user')->where('id','in', [19, 21, 29])->select();`\n`Db::name('user')->whereIn('id','19,21,29')->select();` \n`Db::name('user')->whereNotIn('id','19,21,29')->select();`\n+ null 表达式具有两个快捷方式 whereNull()和 whereNotNull()； `Db::name('user')->where('uid','null')->select();`\n`Db::name('user')->where('uid','not null')->select();`\n`Db::name('user')->whereNull('uid')->select();`\n`Db::name('user')->whereNotNull('uid')->select();`\n\n> EXP查询\n\nEXP表达式支持更复杂的查询：\n\n```php\nDb::name('user')->where('id','in','1,3,8')->select();\n```\n可以改成：\n\n```php\nDb::name('user')->where('id','exp',' IN (1,3,8) ')->select();\n```\nexp查询的条件不会被当成字符串，所以后面的查询条件可以使用任何SQL支持的语法，包括使用函数和字段名称。因此推荐使用whereExp方法查询。\n\n```php\nDb::name('user')->whereExp('id', 'IN (1,3,8) ')->select();\n```\n\n# 三：查询构造器(链式)\n## 1)．查询规则 \n1. 前面课程中我们通过指向符号“->”多次连续调用方法称为：链式查询\n2. 当 Db::name('user')时，返回查询对象(Query)，即可连缀数据库对应的方法\n3. 而每次执行一个数据库查询方法时，比如 where()，还将返回查询对象(Query)\n4. 只要还是数据库对象，那么就可以一直使用指向符号进行链式查询\n5. 再利用 find()、select()等方法返回数组(Array)或数据集对象(Colletion)\n6. 而 find()和 select()是结果查询方法（放在最后），并不是链式查询方法\n`Db::name('user')->where('id', 27)->order('id', 'desc')->find() `\n7. 除了查询方法可以使用链式连贯操作，CURD 操作也可以使用（后续课程研究)\n\n## 2)．更多查询 \n1. 如果多次使用数据库查询，那么每次静态创建都会生成一个实例，造成浪费； \n2. 我们可以把对象实例保存下来，再进行反复调用即可； \n`$userQuery = Db::name('user'); `\n`$dataFind = $userQuery->where('id', 27)->find();`\n`$dataSelect = $userQuery->select(); `\n3. 当同一个对象实例第二次查询后，会保留第一次查询的值；\n`$data1 = $userQuery->order('id', 'desc')->select();`\n`$data2 = $userQuery->select(); `\n`return Db::getLastSql(); `\n`SELECT * FROM tp_user ORDER BY id DESC` \n4. 使用 removeOption()方法，可以清理掉上一次查询保留的值； `$userQuery->removeOption('where')->select();`\n## 3). 链式查询方法\n> where\n\n+ 表达式查询，即where()方法的基础查询方式\n\n```php\n $result=Db::table('employees')->where('salary', '<', '10000')->select();\n```\n\n+ 关联数组查询，通过键值对来数组键值对匹配的查询方式\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where([\n                      'job_id'     =>      'IT_PROG',\n                      'salary'     =>       6000\n                  ])\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c6e81a82a067468d85edf632983316b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ 索引数组查询，通过数组里的数组拼装方式来查询\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where([\n                      ['employee_id', '<', 110],\n                      ['salary', '<', 10000]\n                  ])\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8b76eb78049b4d6dad35caa45893e240.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ 将复杂的数组组装后，通过变量传递，将增加可读性\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $map[] = ['employee_id', '<', 110];\n        $map[] = ['salary', 'in', [6000, 4200, 24000]];\n        $result=Db::table('employees')\n                  ->where($map)\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b8f85b61ddf84f46913615907af2dd02.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n+ 字符串形式传递，简单粗暴的查询方式，whereRaw()支持复杂字符串格式，也支持SQL预处理模式\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->whereRaw(\"employee_id<110 AND salary IN (24000, 6000, 4200)\")\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/37972e97295b48f5857c9ab221530b84.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> field\n\n+ 使用 field()方法，可以指定要查询的字段\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where('employee_id', '<', 105)\n                  ->field('employee_id, first_name, salary')\n//                  ->field(['employee_id', 'first_name', 'salary']) 或者这种数组形式\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/53753907ba864b4abd21b469bbb441f3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 field()方法，给指定的字段设置别名\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where('employee_id', '<', 105)\n                  ->field('employee_id as id, first_name as name, salary as 薪水')\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b2d7c18571cb45ca8593485641e7688f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 在 fieldRaw()方法里，可以直接给字段设置 MySQL 函数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where('employee_id', '<', 105)\n                  ->field('job_id, LENGTH(job_id)')\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/be296325d5d340e3905f0345e6166afd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 field(true)的布尔参数，可以显式的查询获取所有字段，而不是*\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n                  ->where('employee_id', '<', 105)\n                  ->field(true)\n                  ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5409f59a808046cca1f56d89db7fddfc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 withoutField()方法中字段排除，可以屏蔽掉想要不显示的字段\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->where('employee_id', '<', 105)\n            ->withoutField('email, phone_number')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/92e26f2fee2944489ba4911ccd5a022e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 field()方法在新增时，验证字段的合法性\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->where('employee_id', '<', 105)\n            ->field('employee_id, first_name, last_name')\n            ->insert([\n                'first_name'       =>      '济钢',\n                'last_name'        =>       'aa'\n            ]);\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/59a075a1239b475ca2f07cd15f66087b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> alias\n\n使用 alias()方法，给数据库起一个别名:\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5a91a2f4743f47d09edfd0eea55b18c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> limit\n\n+ 使用 limit()方法，限制获取输出数据的个数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name')\n            ->limit(5)\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c963644518d141778524a4ac9fc26461.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 分页模式，即传递两个参数，比如从第 3 条开始显示 5 条 limit(2,5)\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name')\n            ->limit(2, 5)\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7751a3f98ed04a8d8aca6e32bf5a709f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> page\n\npage()分页方法，优化了 limit()方法，无须计算分页条数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name')\n            ->page(2, 5)  // 每页显示五条，第二页\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b324a307f6244e7292f6d7011b8572f7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> order\n\n+ 使用 order()方法，可以指定排序方式，没有指定第二参数，默认 asc\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name, salary')\n            ->order('salary', 'desc')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/04567b9d8c4a4798ba9efce62d8a3d74.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 支持数组的方式，对多个字段进行排序\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name, salary')\n            // 按工资升序，工资相同则按员工编号降序\n            ->order([\n                'salary'        =>       'asc',\n                'employee_id'   =>       'desc'\n            ])\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f4c3390934fb49769cf91aaad46a8654.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 使用 orderRaw()方法，支持排序的时候指定 MySQL 函数\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('employee_id, last_name, salary')\n            ->orderRaw('length(first_name) DESC')\n            ->select();\n        return Db::getLastSQL();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ff956ec3a0be4248af88cd6179f0ea77.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> group\n\n+ 使用 group()方法，给性别不同的人进行 price 字段的总和统计\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('job_id, SUM(salary)')\n            ->group('job_id')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/574cfa3bf1f24df7bb83c470a4f413f1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n+ 也可以进行多字段分组统计\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('job_id, manager_id, SUM(salary)')\n            ->group('job_id, manager_id')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c27a8e90bf174de49fdd582ff55dcd3a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> having\n\n使用 group()分组之后，再使用 having()进行筛选\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $result=Db::table('employees')\n            ->field('job_id, manager_id, SUM(salary)')\n            ->group('job_id, manager_id')\n            ->having('SUM(salary)>10000')\n            ->select();\n        return json($result);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4fb4f87e747a4805941d6f85cfab57a5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n# 四：查询构造器(进阶)\n## 1) 聚合查询\n在应用中我们经常会用到一些统计数据，例如当前所有（或者满足某些条件）的用户数、所有用户的最大积分、用户的平均成绩等等，ThinkPHP为这些统计操作提供了一系列的内置方法，包括以下部分：\n<table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>count</td><td>统计数量，参数是要统计的字段名（可选）</td></tr><tr><td>max</td><td>获取最大值，参数是要统计的字段名（必须）</td></tr><tr><td>min</td><td>获取最小值，参数是要统计的字段名（必须）</td></tr><tr><td>avg</td><td>获取平均值，参数是要统计的字段名（必须）</td></tr><tr><td>sum</td><td>获取总分，参数是要统计的字段名（必须）</td></tr></tbody></table>\n\n1. 使用 count()方法，可以求出所查询数据的数量\n`Db::name('user')->count();` \n2. count()可设置指定 id，比如有空值(Null)的 uid，不会计算数量； \n`Db::name('user')->count('uid');` \n3. 使用 max()方法，求出所查询数据字段的最大值； \n`Db::name('user')->max('price');`\n4. 如果 max()方法，求出的值不是数值，则通过第二参数强制转换； \n`Db::name('user')->max('price', false);` \n5. 使用 min()方法，求出所查询数据字段的最小值，也可以强制转换； \n`Db::name('user')->min('price');`\n6. 使用 avg()方法，求出所查询数据字段的平均值； \n`Db::name('user')->avg('price');` \n7. 使用 sum()方法，求出所查询数据字段的总和； \n`Db::name('user')->sum('price');`\n## 2) 分页查询\n\n## 3) 时间查询\n> 传统方式\n\n+ 可以使用>、<、>=、<=来筛选匹配时间的数据； \n`Db::name('user')->where('create_time', '>', '2018-1-1')->select();` \n+ 可以使用 between 关键字来设置时间的区间\n`Db::name('user')->where('create_time', 'between', ['2018-1-1', '2019-12-31'])->select();` \n`Db::name('user')->where('create_time', 'not between', ['2018-1-1', '2019-12-31'])->select();`\n\n> 快捷方式\n\n+ 时间查询的快捷方法为 whereTime()，直接使用>、<、>=、<=； `Db::name('user')->whereTime('create_time', '>', '2018-1-1')->select();`\n+ 快捷方式也可以使用 between 和 not between；\n`Db::name('user')->whereBetween('create_time', ['2018-1-1', '2019-12-31'])->select();` \n+ 还有一种快捷方式为：whereBetweenTime()和 whereNotBetweenTime()； `Db::name('user')->whereBetweenTime('create_time', '2018-1-1', '2019-12-31')->select(); `\n+ 默认的大于>，可以省略；\n`Db::name('user')->whereTime('create_time', '2018-1-1')->select();`\n\n> 固定查询\n\n+ 使用 whereYear 查询今年的数据、去年的数据和某一年的数据\n`Db::name('user')->whereYear('create_time')->select(); `\n`Db::name('user')->whereYear('create_time', 'last year')->select(); `\n`Db::name('user')->whereYear('create_time', '2016')->select();`\n+ 使用 whereMonth 查询当月的数据、上月的数据和某一个月的数据\n`Db::name('user')->whereMonth('create_time')->select(); `\n`Db::name('user')->whereMonth('create_time', 'last month')->select(); `\n`Db::name('user')->whereMonth('create_time', '2016-6')->select();`\n+ 使用 whereDay 查询今天的数据、昨天的数据和某一个天的数据\n`Db::name('user')->whereDay('create_time')->select(); `\n`Db::name('user')->whereDay('create_time', 'last day')->select(); `\n`Db::name('user')->whereDay('create_time', '2016-6-27')->select();`\n> 其它查询\n\n+ 查询指定时间的数据，比如两小时内的\n`Db::name('user')->whereTime('create_time', '-2 hours')->select();`\n+ 查询两个时间字段时间有效期的数据，比如会员开始到结束的期间\n`Db::name('user')->whereBetweenTimeField('start_time', 'end_time')->select();`\n## 4) 高级查询\n> 快捷查询\n\n快捷查询方式是一种多字段相同查询条件的简化写法，可以进一步简化查询条件的写法，在多个字段之间用|分割表示OR查询，用&分割表示AND查询，可以实现下面的查询，例如：\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        Db::table('employees')\n            ->where('first_name|last_name', 'like', '%a%')\n            ->where('employee_id&manager_id', '>', 103)\n            ->select();\n        return Db::getLastSql();\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/205fa6298d764be481ad99727c824e37.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)![在这里插入图片描述](https://img-blog.csdnimg.cn/0f756f69b62a4364bafb1d7a21130459.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n> 闭包查询\n\n```php\n<?php\nnamespace app\\controller;\nuse think\\facade\\Db;\n\nclass DbTest\n{\n    public function index()\n    {\n        $jobId='IT_PROG';\n        $salary=11000;\n\n        $res=Db::table('employees')->where(function ($query) use($jobId, $salary) {\n            $query->where('job_id', $jobId)\n                  ->whereOr('salary', '>', $salary);\n        })->select();\n\n        return json($res);\n    }\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/b8981d5bc8f34c668af9b2015c0e8617.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16)\n> 字符串条件查询\n\n对于一些实在复杂的查询，也可以直接使用原生SQL语句进行查询，例如:\n\n```php\nDb::table('think_user')\n    ->whereRaw('id > 0 AND name LIKE \"thinkphp%\"')\n    ->select();\n```\n为了安全起见，我们可以对字符串查询条件使用参数绑定，例如：\n```php\nDb::table('think_user')\n    ->whereRaw('id > :id AND name LIKE :name ', ['id' => 0, 'name' => 'thinkphp%'])\n    ->select();\n```\n\n> 快捷方法\n\n系统封装了一系列快捷方法，用于简化查询\n<table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>whereOr</code></td><td>字段OR查询</td></tr><tr><td><code>whereXor</code></td><td>字段XOR查询</td></tr><tr><td><code>whereNull</code></td><td>查询字段是否为Null</td></tr><tr><td><code>whereNotNull</code></td><td>查询字段是否不为Null</td></tr><tr><td><code>whereIn</code></td><td>字段IN查询</td></tr><tr><td><code>whereNotIn</code></td><td>字段NOT IN查询</td></tr><tr><td><code>whereBetween</code></td><td>字段BETWEEN查询</td></tr><tr><td><code>whereNotBetween</code></td><td>字段NOT BETWEEN查询</td></tr><tr><td><code>whereLike</code></td><td>字段LIKE查询</td></tr><tr><td><code>whereNotLike</code></td><td>字段NOT LIKE查询</td></tr><tr><td><code>whereExists</code></td><td>EXISTS条件查询</td></tr><tr><td><code>whereNotExists</code></td><td>NOT EXISTS条件查询</td></tr><tr><td><code>whereExp</code></td><td>表达式查询</td></tr><tr><td><code>whereColumn</code></td><td>比较两个字段</td></tr></tbody></table>\n\n> 动态查询\n\n查询构造器还提供了动态查询机制，用于简化查询条件\n<table><thead><tr><th>动态查询</th><th>描述</th></tr></thead><tbody><tr><td><code>whereFieldName</code></td><td>查询某个字段的值</td></tr><tr><td><code>whereOrFieldName</code></td><td>查询某个字段的值</td></tr><tr><td><code>getByFieldName</code></td><td>根据某个字段查询</td></tr><tr><td><code>getFieldByFieldName</code></td><td>根据某个字段获取某个值</td></tr></tbody></table>\n\n```php\n// 根据邮箱（email）查询用户信息\n$user = Db::table('user')\n\t->whereEmail('thinkphp@qq.com')\n    ->find();\n\n// 根据昵称（nick_name）查询用户\n$email = Db::table('user')\n    ->whereNickName('like', '%流年%')\n    ->select();\n    \n// 根据邮箱查询用户信息\n$user = Db::table('user')\n    ->getByEmail('thinkphp@qq.com');\n    \n// 根据昵称（nick_name）查询用户信息\n$user = Db::table('user')\n    ->field('id,name,nick_name,email')\n    ->getByNickName('流年');\n    \n// 根据邮箱查询用户的昵称\n$nickname = Db::table('user')\n    ->getFieldByEmail('thinkphp@qq.com', 'nick_name');\n    \n// 根据昵称（nick_name）查询用户邮箱\n$email = Db::table('user')\n    ->getFieldByNickName('流年', 'email');\n\n```\n\n## 5) 子查询\n使用 fetchSql()方法，可以设置不执行 SQL，而返回 SQL 语句，默认 true；\n`Db::name('user')->fetchSql(true)->select();`\n使用 buildSql()方法，也是返回 SQL 语句，不需要再执行 select()，且有括号\n`Db::name('user')->buildSql(true);`\n结合以上方法，我们实现一个子查询：\n\n```php\n$subQuery = Db::table('think_user')\n    ->field('id,name')\n    ->where('id', '>', 10)\n    ->buildSql();\nDb::table($subQuery . ' a')\n    ->where('a.name', 'like', 'thinkphp')\n    ->order('id', 'desc')\n    ->select();\n\n```\n\n子查询还有闭包模式，`IN/NOT IN`和`EXISTS/NOT EXISTS`之类的查询可以直接使用闭包作为子查询，例如：\n\n```php\nDb::table('think_user')\n    ->where('id', 'IN', function ($query) {\n        $query->table('think_profile')->where('status', 1)->field('id');\n    })\n    ->select();\n```\n\n## 6) 原生查询\n注意：V6.0.3+版本开始，原生查询仅支持Db类操作，不支持在模型中调用原生查询方法（包括query和execute方法）。\nDb类支持原生SQL查询操作，主要包括query方法和execute方法\n\nquery方法用于执行SQL查询操作，返回查询结果数据集（数组）。\n\n```php\nDb::query(\"select * from think_user where status=:id\", ['id' => 1]);\n```\nexecute用于更新和写入数据的sql操作，如果数据非法或者查询错误则返回false，否则返回影响的记录数。\n\n```php\nDb::execute(\"update think_user set name='thinkphp' where status=1\");\n```\n支持在原生查询的时候使用参数绑定，包括问号占位符或者命名占位符，例如：\n\n```php\nDb::query(\"select * from think_user where id=? AND status=?\", [8, 1]);\n// 命名绑定\nDb::execute(\"update think_user set name=:name where status=:status\", ['name' => 'thinkphp', 'status' => 1]);\n```\n","slug":"PHP/thinkphp数据库(上)","published":1,"updated":"2021-12-03T14:59:59.332Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckwt958cn005yasda4quxdwhr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一：连接数据库与模型初探\"><a href=\"#一：连接数据库与模型初探\" class=\"headerlink\" title=\"一：连接数据库与模型初探\"></a>一：连接数据库与模型初探</h1><p>ThinkPHP 采用内置抽象层将不同的数据库操作进行封装处理，数据抽象层基于 PDO 模式，无须针对不同的数据库编写相应的代码。使用数据库的第一步，就是连接数据库，在根目录的 config 下的 database.php 可以设置数据库连接信息，大部分系统已经给了默认值，你只需要修改和填写需要的值即可。<br><img src=\"https://img-blog.csdnimg.cn/cd44f832fe144d8b838a86b11d60fad1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">其中default配置用于设置默认使用的数据库连接配置。connections配置具体的数据库连接信息，default配置参数定义的连接配置必须要存在。</p>\n<table><thead><tr><th>type</th><th>数据库</th></tr></thead><tbody><tr><td>mysql</td><td>MySQL</td></tr><tr><td>sqlite</td><td>SqLite</td></tr><tr><td>pgsql</td><td>PostgreSQL</td></tr><tr><td>sqlsrv</td><td>SqlServer</td></tr><tr><td>mongo</td><td>MongoDb</td></tr><tr><td>oracle</td><td>Oracle</td></tr></tbody></table>\n\n<p>下面是默认支持的数据库连接信息：</p>\n<table><thead><tr><th>参数名</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>数据库类型</td><td>无</td></tr><tr><td>hostname</td><td>数据库地址</td><td>127.0.0.1</td></tr><tr><td>database</td><td>数据库名称</td><td>无</td></tr><tr><td>username</td><td>数据库用户名</td><td>无</td></tr><tr><td>password</td><td>数据库密码</td><td>无</td></tr><tr><td>hostport</td><td>数据库端口号</td><td>无</td></tr><tr><td>dsn</td><td>数据库连接dsn信息</td><td>无</td></tr><tr><td>params</td><td>数据库连接参数</td><td>空</td></tr><tr><td>charset</td><td>数据库编码</td><td>utf8</td></tr><tr><td>prefix</td><td>数据库的表前缀</td><td>无</td></tr><tr><td>deploy</td><td>数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)</td><td>0</td></tr><tr><td>rw_separate</td><td>数据库读写是否分离 主从式有效</td><td>false</td></tr><tr><td>master_num</td><td>读写分离后 主服务器数量</td><td>1</td></tr><tr><td>slave_no</td><td>指定从服务器序号</td><td>无</td></tr><tr><td>fields_strict</td><td>是否严格检查字段是否存在</td><td>true</td></tr><tr><td>fields_cache</td><td>是否开启字段缓存</td><td>false</td></tr><tr><td>schema_cache_path</td><td>字段缓存目录</td><td>无</td></tr><tr><td>trigger_sql</td><td>是否开启SQL监听</td><td>true</td></tr><tr><td>auto_timestamp</td><td>自动写入时间戳字段</td><td>false</td></tr><tr><td>query</td><td>指定查询对象</td><td>think\\db\\Query</td></tr></tbody></table>\n我们还可以调用Db::connect方法动态配置数据库连接信息，例如：\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\think\\facade\\Db::connect(<span class=\"string\">&#x27;demo&#x27;</span>)</span><br><span class=\"line\">\t-&gt;table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;find();</span><br></pre></td></tr></table></figure>\n<p>connect方法必须在查询的最开始调用，而且必须紧跟着调用查询方法，否则可能会导致部分查询失效或者依然使用默认的数据库连接。且动态连接数据库的connect方法仅对当次查询有效。这种方式的动态连接和切换数据库比较方便，经常用于多数据库连接的应用需求。</p>\n<p>对于本地测试，会优先采用.env 的配置信息，可以通过删除改变.env 的配置，或删除.env 来验证 database 的执行优先级，操作中我们和 database 配置对应上即可：<br><img src=\"https://img-blog.csdnimg.cn/d736bd28493c415eab2c80c7c9be3630.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>现在来测试有没有成功连接：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/59b1812e8c6c491c8bca013ed8d5a3b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"二：查询构造器-基础\"><a href=\"#二：查询构造器-基础\" class=\"headerlink\" title=\"二：查询构造器(基础)\"></a>二：查询构造器(基础)</h1><p>在学习查询之前可以先了解一下一个新方法：<code>Db::getLastSql()</code>，该方法可以返回最近一条SQL查询的原生语句。我在这里的演示是使用了我的myemployees库内容如下：<br><img src=\"https://img-blog.csdnimg.cn/7e016d4ca9fe47aea82485b8367ea1d9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/c38a4efe94044ef880f1322879ee95ab.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"1-查询数据\"><a href=\"#1-查询数据\" class=\"headerlink\" title=\"1) 查询数据\"></a>1) 查询数据</h2><blockquote>\n<p>查询单个数据</p>\n</blockquote>\n<p>查询单个数据一般使用find方法。如果没有任何的查询条件，并且也没有调用order方法的话 ，find查询不会返回任何结果。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = json(Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">100</span>)-&gt;find());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql() . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span> . <span class=\"variable\">$result</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/4ebf5b70bb134ec58d4a9541ab7b706c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">find方法查询结果不存在，返回 null，否则返回结果数组，如果希望查询数据不存在的时候返回空数组，可以如下修改：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">99</span>)-&gt;findOrEmpty();</span><br></pre></td></tr></table></figure>\n<p>如果希望在没有找到数据后抛出异常可以如下使用，如果没有查找到数据，则会抛出一个<code>think\\db\\exception\\DataNotFoundException</code>异常。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">99</span>)-&gt;findOrFail();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查询数据集</p>\n</blockquote>\n<p>查询多个数据（数据集）使用select方法：<br><img src=\"https://img-blog.csdnimg.cn/ff8e7968724e4f0a9e2187b45bf6cad6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>select 方法查询结果是一个数据集对象，如果需要转换为数组可以如下使用，但一般DB操作返回是默认是数组，这种情况下调用toArray()会报错，别问我是怎么知道的。。。。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">102</span>)-&gt;select()-&gt;toArray();</span><br></pre></td></tr></table></figure>\n<p>如果希望在没有查找到数据后抛出异常可以如下使用，如果没有查找到数据，同样也会抛出一个<code>think\\db\\exception\\DataNotFoundException</code>异常</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">102</span>)-&gt;select()-&gt;selectOrFail();</span><br></pre></td></tr></table></figure>\n<p>如果设置了数据表前缀参数的话，可以使用name替代table，如果表名为”tp_user”，然后在数据库设置那里添加了表前缀”tp_”，那么查询时可以用<code>name(&#39;user&#39;)</code>替代<code>table(&#39;tp_user&#39;)</code>。如果你的数据表没有设置表前缀的话，那么name和table方法效果一致。</p>\n<blockquote>\n<p>值和列查询</p>\n</blockquote>\n<p>查询某个字段的值可以用value()，如果不存在则返回null，如果有多个结果则只返回第一个。<br><img src=\"https://img-blog.csdnimg.cn/d377f87160db4d0bb7580c4200edcbad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">查询某一列的值可以用column()，第一个参数是返回的值，第二个参数的值作为索引。<br><img src=\"https://img-blog.csdnimg.cn/54dd78da1f8b4f779094a43f4a5c4244.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>数据分批处理</p>\n</blockquote>\n<p>如果处理的数据量巨大，成百上千那种，一次性读取有可能会导致内存开销过大，为了避免内存处理太多数据出错，可以使用 chunk()方法分批处理数据，该方法一次获取结果集的一小块，然后填充每一小块数据到要处理的闭包，该方法在编写处理大量数据库记录的时候非常有用。比如，我们可以全部员工表数据进行分批处理，每次处理 3 个员工记录，先展示chunk分批次处理的特性。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// function传入的$data代表所有数据</span></span><br><span class=\"line\">        <span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;chunk(<span class=\"number\">3</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$data</span></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"variable\">$data</span> <span class=\"keyword\">as</span> <span class=\"variable\">$data</span>) &#123;</span><br><span class=\"line\">                dump(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/0b3f3d56b9744a13bf68a75e141455d6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果要给员工计算年薪，那就是 月薪*12*(1+奖金率)，那样就可以通过如下方法计算了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// function传入的$data代表所有数据</span></span><br><span class=\"line\">        <span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;chunk(<span class=\"number\">3</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$data</span></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"variable\">$data</span> <span class=\"keyword\">as</span> <span class=\"variable\">$data</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;commission_pct&#x27;</span>])) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"variable\">$data</span>[<span class=\"string\">&#x27;employee_id&#x27;</span>] . <span class=\"string\">&#x27; &#x27;</span> . (<span class=\"number\">12</span>*<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;salary&#x27;</span>]*(<span class=\"number\">1</span>+<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;commission_pct&#x27;</span>])) . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"variable\">$data</span>[<span class=\"string\">&#x27;employee_id&#x27;</span>] . <span class=\"string\">&#x27; &#x27;</span> . (<span class=\"number\">12</span>*<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;salary&#x27;</span>]) . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"number\">1</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/0fcaf7059739488581d3ac04cad12dd4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">chunk方法的处理默认是根据主键查询，支持指定字段，并且支持指定处理数据的顺序。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)-&gt;chunk(<span class=\"number\">100</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"variable\">$users</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理结果集...</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;,<span class=\"string\">&#x27;create_time&#x27;</span>, <span class=\"string\">&#x27;desc&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>游标查询</p>\n</blockquote>\n<p>可以利用游标查询功能，可以大幅度减少海量数据的内存开销，它利用了 PHP 生 成器特性。每次查询只读一行，然后再读取时，自动定位到下一行继续读取，cursor方法返回的是一个生成器对象。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;cursor();</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"variable\">$result</span> <span class=\"keyword\">as</span> <span class=\"variable\">$e</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable\">$e</span>[<span class=\"string\">&#x27;last_name&#x27;</span>] . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/0e364407ab294e77a1d20b4a93f6b372.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-添加数据\"><a href=\"#2-添加数据\" class=\"headerlink\" title=\"2) 添加数据\"></a>2) 添加数据</h2><blockquote>\n<p>单数据新增</p>\n</blockquote>\n<p>单数据新增一般使用insert()方法插入，如果新增成功会返回一个1，没有指定的列的值默认为null。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> = [</span><br><span class=\"line\">            <span class=\"string\">&#x27;employee_id&#x27;</span>   =&gt;  <span class=\"string\">&#x27;99&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;eyes&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>     =&gt;  <span class=\"string\">&#x27;++&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;insert(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/52c4cfeee5db469b92d29e9adb3fe4f0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果你添加一个不存在的字段数据，会抛出一个异常 Exception，如果想强行新增抛弃不存在的字段数据，则使用 strick(false)方法，忽略异常：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;strict(<span class=\"literal\">false</span>)-&gt;insert(<span class=\"variable\">$data</span>);</span><br></pre></td></tr></table></figure>\n\n<p>我采用的数据库是 mysql，可以支持 replace 写入，insert 和 replace 写入的区别，前者遇到表中存在主键相同则报错，后者则修改。另外，使用 insertGetId()方法，可以在新增成功后返回当前数据 ID</p>\n<blockquote>\n<p>批量数据新增</p>\n</blockquote>\n<p>使用 insertAll()方法，可以添加二维数组批量新增数据，但要保持数组结构一致，成功则返回增加的行数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> =[</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>   =&gt;  <span class=\"string\">&#x27;98&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;虚哥&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>     =&gt;  <span class=\"string\">&#x27;xx&#x27;</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>   =&gt;  <span class=\"string\">&#x27;97&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;鸡哥&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>     =&gt;  <span class=\"string\">&#x27;jj&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;insertAll(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/d18696c816524dd9b97d10f238ec1bc5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>如果是mysql数据库则可以使用replay()批量添加或修改：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;replay()-&gt;insertAll(<span class=\"variable\">$data</span>);</span><br></pre></td></tr></table></figure>\n<p>如果批量插入的数据比较多，可以指定分批插入，使用limit方法指定每次插入的数量限制:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分批次写入，每次最多100条数据</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">  -&gt;replay()</span><br><span class=\"line\">  -&gt;limit(<span class=\"number\">100</span>)</span><br><span class=\"line\">  -&gt;insertAll(<span class=\"variable\">$data</span>);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>save()新增</p>\n</blockquote>\n<p>save()方法是一个通用方法，可以自行判断是新增还是修改(更新)数据，判断的依据是是否存在主键，不存在即新增。用法如insert，此处略。</p>\n<h2 id=\"3-更新数据\"><a href=\"#3-更新数据\" class=\"headerlink\" title=\"3) 更新数据\"></a>3) 更新数据</h2><p>更新数据可以使用save()方法或者update()方法，如果修改数据包括了主键信息，则可以省略where条件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> =[</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;东哥&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>     =&gt;  <span class=\"string\">&#x27;hh&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">97</span>)</span><br><span class=\"line\">            -&gt;save(<span class=\"variable\">$data</span>);</span><br><span class=\"line\"><span class=\"comment\">//        支持使用data方法传入要更新的数据，如果update方法和data方法同时传入更新数据，则以update方法为准。</span></span><br><span class=\"line\"><span class=\"comment\">//        return Db::table(&#x27;employees&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">//        -&gt;where(&#x27;employee_id&#x27;, 97)</span></span><br><span class=\"line\"><span class=\"comment\">//        -&gt;data($data)</span></span><br><span class=\"line\"><span class=\"comment\">//        -&gt;save();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/ae7909c56009487ebaa25814d5ce8d71.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果要更新的数据需要使用SQL函数或者其它字段，可以使用下面的方式:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">99</span>)</span><br><span class=\"line\">            -&gt;exp(<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;UPPER(first_name)&#x27;</span>)</span><br><span class=\"line\">            -&gt;update();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/975d89407a5940cebb11d715a03ea5bf.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>可以使用inc/dec方法自增或自减一个字段的值（ 如不加第二个参数，默认步长为1）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// score 字段加 1</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    -&gt;inc(<span class=\"string\">&#x27;salary&#x27;</span>)</span><br><span class=\"line\">    -&gt;update();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// score 字段加 5</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    -&gt;inc(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">    -&gt;update();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// score 字段减 1</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    -&gt;dec(<span class=\"string\">&#x27;salary&#x27;</span>)</span><br><span class=\"line\">    -&gt;update();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// score 字段减 5</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    -&gt;dec(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">    -&gt;update();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-删除数据\"><a href=\"#4-删除数据\" class=\"headerlink\" title=\"4) 删除数据\"></a>4) 删除数据</h2><ul>\n<li>极简删除可以根据主键直接删除，删除成功返回影响行数，否则 0；<br><code>Db::table(&#39;employees&#39;)-&gt;delete(100); </code></li>\n<li>根据主键，还可以删除多条记录；<br><code>Db::table(&#39;employees&#39;)-&gt;delete([97,98,99]); </code></li>\n<li>正常情况下，通过 where()方法来删除；<br><code>Db::table(&#39;employees&#39;)-&gt;where(&#39;id&#39;, 100)-&gt;delete(); </code></li>\n<li>通过 true 参数删除数据表所有数据<br><code>Db::table(&#39;employees&#39;)-&gt;delete(true);</code></li>\n</ul>\n<p>一般情况下，业务数据不建议真实删除数据，系统提供了软删除机制（模型中使用软删除更为方便），useSoftDelete方法表示使用软删除，并且指定软删除字段为delete_time，写入数据为当前的时间戳。。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 软删除数据 使用delete_time字段标记删除</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">\t-&gt;useSoftDelete(<span class=\"string\">&#x27;delete_time&#x27;</span>,time())</span><br><span class=\"line\">    -&gt;delete();</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/04e3f85a3e394a4e888ca67684f43ac6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"5-查询表达式\"><a href=\"#5-查询表达式\" class=\"headerlink\" title=\"5) 查询表达式\"></a>5) 查询表达式</h2><p>查询表达式支持大部分的SQL查询语法，也是ThinkPHP查询语言的精髓，查询表达式的使用格式：<code>where(&#39;字段名&#39;,&#39;查询表达式&#39;,&#39;查询条件&#39;)</code>。除了where方法外，还可以支持whereOr，用法是一样的。为了更加方便查询，大多数的查询表达式都提供了快捷查询方法。</p>\n<table><thead><tr><th>表达式</th><th>含义</th><th>快捷查询方法</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td></td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td></td></tr><tr><td>&gt;</td><td>大于</td><td></td></tr><tr><td>&gt;=</td><td>大于等于</td><td></td></tr><tr><td>&lt;</td><td>小于</td><td></td></tr><tr><td>&lt;=</td><td>小于等于</td><td></td></tr><tr><td>[NOT] LIKE</td><td>模糊查询</td><td><code>whereLike/whereNotLike</code></td></tr><tr><td>[NOT] BETWEEN</td><td>（不在）区间查询</td><td><code>whereBetween/whereNotBetween</code></td></tr><tr><td>[NOT] IN</td><td>（不在）IN 查询</td><td><code>whereIn/whereNotIn</code></td></tr><tr><td>[NOT] NULL</td><td>查询字段是否（不）是NULL</td><td><code>whereNull/whereNotNull</code></td></tr><tr><td>[NOT] EXISTS</td><td>EXISTS查询</td><td><code>whereExists/whereNotExists</code></td></tr><tr><td>[NOT] REGEXP</td><td>正则（不）匹配查询（仅支持Mysql）</td><td></td></tr><tr><td>[NOT] BETWEEN TIME</td><td>时间区间比较</td><td>whereBetweenTime</td></tr><tr><td>&gt; TIME</td><td>大于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&lt; TIME</td><td>小于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&gt;= TIME</td><td>大于等于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&lt;= TIME</td><td>小于等于某个时间</td><td><code>whereTime</code></td></tr><tr><td>EXP</td><td>表达式查询，支持SQL语法</td><td><code>whereExp</code></td></tr><tr><td>find in set</td><td>FIND_IN_SET查询</td><td><code>whereFindInSet</code></td></tr></tbody></table>\n\n<blockquote>\n<p>比较查询</p>\n</blockquote>\n<ul>\n<li>查询表达式支持大部分常用的 SQL 语句，语法格式如下：<br><code>where(&#39;字段名&#39;,&#39;查询表达式&#39;,&#39;查询条件&#39;);</code> </li>\n<li>在查询数据进行筛选时，我们采用 where()方法，比如 id=80；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;, 80)-&gt;find();</code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;=&#39;,80)-&gt;find();</code> </li>\n<li>使用&lt;&gt;、&gt;、&lt;、&gt;=、&lt;=可以筛选出各种符合比较值的数据列表； <code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;&gt;&#39;,80)-&gt;select();</code></li>\n</ul>\n<blockquote>\n<p>区间查询</p>\n</blockquote>\n<ul>\n<li>使用 like 表达式进行模糊查询；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;email&#39;,&#39;like&#39;,&#39;xiao%&#39;)-&gt;select();</code> </li>\n<li>like 表达式还可以支持数组传递进行模糊查询；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;email&#39;,&#39;like&#39;,[&#39;xiao%&#39;,&#39;wu%&#39;], &#39;or&#39;)-&gt;select(); </code><br><code>SELECT * FROM tp_user WHERE (email LIKE xiao% OR email LIKE &#39;wu%&#39;)</code> </li>\n<li>like 表达式具有两个快捷方式 whereLike()和 whereNoLike()； <code>Db::name(&#39;user&#39;)-&gt;whereLike(&#39;email&#39;,&#39;xiao%&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereNotLike(&#39;email&#39;,&#39;xiao%&#39;)-&gt;select(); </code></li>\n<li>between 表达式具有两个快捷方式 whereBetween()和 whereNotBetween()； <code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;between&#39;,&#39;19,25&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;between&#39;,[19, 25])-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereBetween(&#39;id&#39;,&#39;19,25&#39;)-&gt;select();</code> <code>Db::name(&#39;user&#39;)-&gt;whereNotBetween(&#39;id&#39;,&#39;19,25&#39;)-&gt;select();</code> </li>\n<li>in 表达式具有两个快捷方式 whereIn()和 whereNotIn()；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;in&#39;, &#39;19,21,29&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;in&#39;, [19, 21, 29])-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereIn(&#39;id&#39;,&#39;19,21,29&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereNotIn(&#39;id&#39;,&#39;19,21,29&#39;)-&gt;select();</code></li>\n<li>null 表达式具有两个快捷方式 whereNull()和 whereNotNull()； <code>Db::name(&#39;user&#39;)-&gt;where(&#39;uid&#39;,&#39;null&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;uid&#39;,&#39;not null&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereNull(&#39;uid&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereNotNull(&#39;uid&#39;)-&gt;select();</code></li>\n</ul>\n<blockquote>\n<p>EXP查询</p>\n</blockquote>\n<p>EXP表达式支持更复杂的查询：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::name(<span class=\"string\">&#x27;user&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;in&#x27;</span>,<span class=\"string\">&#x27;1,3,8&#x27;</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n<p>可以改成：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::name(<span class=\"string\">&#x27;user&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;exp&#x27;</span>,<span class=\"string\">&#x27; IN (1,3,8) &#x27;</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n<p>exp查询的条件不会被当成字符串，所以后面的查询条件可以使用任何SQL支持的语法，包括使用函数和字段名称。因此推荐使用whereExp方法查询。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::name(<span class=\"string\">&#x27;user&#x27;</span>)-&gt;whereExp(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;IN (1,3,8) &#x27;</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三：查询构造器-链式\"><a href=\"#三：查询构造器-链式\" class=\"headerlink\" title=\"三：查询构造器(链式)\"></a>三：查询构造器(链式)</h1><h2 id=\"1-．查询规则\"><a href=\"#1-．查询规则\" class=\"headerlink\" title=\"1)．查询规则\"></a>1)．查询规则</h2><ol>\n<li>前面课程中我们通过指向符号“-&gt;”多次连续调用方法称为：链式查询</li>\n<li>当 Db::name(‘user’)时，返回查询对象(Query)，即可连缀数据库对应的方法</li>\n<li>而每次执行一个数据库查询方法时，比如 where()，还将返回查询对象(Query)</li>\n<li>只要还是数据库对象，那么就可以一直使用指向符号进行链式查询</li>\n<li>再利用 find()、select()等方法返回数组(Array)或数据集对象(Colletion)</li>\n<li>而 find()和 select()是结果查询方法（放在最后），并不是链式查询方法<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;, 27)-&gt;order(&#39;id&#39;, &#39;desc&#39;)-&gt;find() </code></li>\n<li>除了查询方法可以使用链式连贯操作，CURD 操作也可以使用（后续课程研究)</li>\n</ol>\n<h2 id=\"2-．更多查询\"><a href=\"#2-．更多查询\" class=\"headerlink\" title=\"2)．更多查询\"></a>2)．更多查询</h2><ol>\n<li>如果多次使用数据库查询，那么每次静态创建都会生成一个实例，造成浪费； </li>\n<li>我们可以把对象实例保存下来，再进行反复调用即可；<br><code>$userQuery = Db::name(&#39;user&#39;); </code><br><code>$dataFind = $userQuery-&gt;where(&#39;id&#39;, 27)-&gt;find();</code><br><code>$dataSelect = $userQuery-&gt;select(); </code></li>\n<li>当同一个对象实例第二次查询后，会保留第一次查询的值；<br><code>$data1 = $userQuery-&gt;order(&#39;id&#39;, &#39;desc&#39;)-&gt;select();</code><br><code>$data2 = $userQuery-&gt;select(); </code><br><code>return Db::getLastSql(); </code><br><code>SELECT * FROM tp_user ORDER BY id DESC</code> </li>\n<li>使用 removeOption()方法，可以清理掉上一次查询保留的值； <code>$userQuery-&gt;removeOption(&#39;where&#39;)-&gt;select();</code><h2 id=\"3-链式查询方法\"><a href=\"#3-链式查询方法\" class=\"headerlink\" title=\"3). 链式查询方法\"></a>3). 链式查询方法</h2><blockquote>\n<p>where</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li>表达式查询，即where()方法的基础查询方式</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"string\">&#x27;10000&#x27;</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>关联数组查询，通过键值对来数组键值对匹配的查询方式</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where([</span><br><span class=\"line\">                      <span class=\"string\">&#x27;job_id&#x27;</span>     =&gt;      <span class=\"string\">&#x27;IT_PROG&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;salary&#x27;</span>     =&gt;       <span class=\"number\">6000</span></span><br><span class=\"line\">                  ])</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c6e81a82a067468d85edf632983316b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>索引数组查询，通过数组里的数组拼装方式来查询</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where([</span><br><span class=\"line\">                      [<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">110</span>],</span><br><span class=\"line\">                      [<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">10000</span>]</span><br><span class=\"line\">                  ])</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8b76eb78049b4d6dad35caa45893e240.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>将复杂的数组组装后，通过变量传递，将增加可读性</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$map</span>[] = [<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">110</span>];</span><br><span class=\"line\">        <span class=\"variable\">$map</span>[] = [<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;in&#x27;</span>, [<span class=\"number\">6000</span>, <span class=\"number\">4200</span>, <span class=\"number\">24000</span>]];</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"variable\">$map</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b8f85b61ddf84f46913615907af2dd02.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>字符串形式传递，简单粗暴的查询方式，whereRaw()支持复杂字符串格式，也支持SQL预处理模式</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;whereRaw(<span class=\"string\">&quot;employee_id&lt;110 AND salary IN (24000, 6000, 4200)&quot;</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/37972e97295b48f5857c9ab221530b84.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>field</p>\n</blockquote>\n<ul>\n<li>使用 field()方法，可以指定要查询的字段</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">                  -&gt;field(<span class=\"string\">&#x27;employee_id, first_name, salary&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//                  -&gt;field([&#x27;employee_id&#x27;, &#x27;first_name&#x27;, &#x27;salary&#x27;]) 或者这种数组形式</span></span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/53753907ba864b4abd21b469bbb441f3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 field()方法，给指定的字段设置别名</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">                  -&gt;field(<span class=\"string\">&#x27;employee_id as id, first_name as name, salary as 薪水&#x27;</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b2d7c18571cb45ca8593485641e7688f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>在 fieldRaw()方法里，可以直接给字段设置 MySQL 函数</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">                  -&gt;field(<span class=\"string\">&#x27;job_id, LENGTH(job_id)&#x27;</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/be296325d5d340e3905f0345e6166afd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 field(true)的布尔参数，可以显式的查询获取所有字段，而不是*</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">                  -&gt;field(<span class=\"literal\">true</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/5409f59a808046cca1f56d89db7fddfc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 withoutField()方法中字段排除，可以屏蔽掉想要不显示的字段</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">            -&gt;withoutField(<span class=\"string\">&#x27;email, phone_number&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/92e26f2fee2944489ba4911ccd5a022e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 field()方法在新增时，验证字段的合法性</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, first_name, last_name&#x27;</span>)</span><br><span class=\"line\">            -&gt;insert([</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>       =&gt;      <span class=\"string\">&#x27;济钢&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>        =&gt;       <span class=\"string\">&#x27;aa&#x27;</span></span><br><span class=\"line\">            ]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/59a075a1239b475ca2f07cd15f66087b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>alias</p>\n</blockquote>\n<p>使用 alias()方法，给数据库起一个别名:<br><img src=\"https://img-blog.csdnimg.cn/5a91a2f4743f47d09edfd0eea55b18c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>limit</p>\n</blockquote>\n<ul>\n<li>使用 limit()方法，限制获取输出数据的个数</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name&#x27;</span>)</span><br><span class=\"line\">            -&gt;limit(<span class=\"number\">5</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c963644518d141778524a4ac9fc26461.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>分页模式，即传递两个参数，比如从第 3 条开始显示 5 条 limit(2,5)</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name&#x27;</span>)</span><br><span class=\"line\">            -&gt;limit(<span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/7751a3f98ed04a8d8aca6e32bf5a709f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>page</p>\n</blockquote>\n<p>page()分页方法，优化了 limit()方法，无须计算分页条数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name&#x27;</span>)</span><br><span class=\"line\">            -&gt;page(<span class=\"number\">2</span>, <span class=\"number\">5</span>)  <span class=\"comment\">// 每页显示五条，第二页</span></span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b324a307f6244e7292f6d7011b8572f7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>order</p>\n</blockquote>\n<ul>\n<li>使用 order()方法，可以指定排序方式，没有指定第二参数，默认 asc</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name, salary&#x27;</span>)</span><br><span class=\"line\">            -&gt;order(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;desc&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/04567b9d8c4a4798ba9efce62d8a3d74.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>支持数组的方式，对多个字段进行排序</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name, salary&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\">// 按工资升序，工资相同则按员工编号降序</span></span><br><span class=\"line\">            -&gt;order([</span><br><span class=\"line\">                <span class=\"string\">&#x27;salary&#x27;</span>        =&gt;       <span class=\"string\">&#x27;asc&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>   =&gt;       <span class=\"string\">&#x27;desc&#x27;</span></span><br><span class=\"line\">            ])</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/f4c3390934fb49769cf91aaad46a8654.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 orderRaw()方法，支持排序的时候指定 MySQL 函数</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name, salary&#x27;</span>)</span><br><span class=\"line\">            -&gt;orderRaw(<span class=\"string\">&#x27;length(first_name) DESC&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSQL();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/ff956ec3a0be4248af88cd6179f0ea77.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>group</p>\n</blockquote>\n<ul>\n<li>使用 group()方法，给性别不同的人进行 price 字段的总和统计</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;job_id, SUM(salary)&#x27;</span>)</span><br><span class=\"line\">            -&gt;group(<span class=\"string\">&#x27;job_id&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/574cfa3bf1f24df7bb83c470a4f413f1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>也可以进行多字段分组统计</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;job_id, manager_id, SUM(salary)&#x27;</span>)</span><br><span class=\"line\">            -&gt;group(<span class=\"string\">&#x27;job_id, manager_id&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c27a8e90bf174de49fdd582ff55dcd3a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>having</p>\n</blockquote>\n<p>使用 group()分组之后，再使用 having()进行筛选</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;job_id, manager_id, SUM(salary)&#x27;</span>)</span><br><span class=\"line\">            -&gt;group(<span class=\"string\">&#x27;job_id, manager_id&#x27;</span>)</span><br><span class=\"line\">            -&gt;having(<span class=\"string\">&#x27;SUM(salary)&gt;10000&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/4fb4f87e747a4805941d6f85cfab57a5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：查询构造器-进阶\"><a href=\"#四：查询构造器-进阶\" class=\"headerlink\" title=\"四：查询构造器(进阶)\"></a>四：查询构造器(进阶)</h1><h2 id=\"1-聚合查询\"><a href=\"#1-聚合查询\" class=\"headerlink\" title=\"1) 聚合查询\"></a>1) 聚合查询</h2><p>在应用中我们经常会用到一些统计数据，例如当前所有（或者满足某些条件）的用户数、所有用户的最大积分、用户的平均成绩等等，ThinkPHP为这些统计操作提供了一系列的内置方法，包括以下部分：</p>\n<table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>count</td><td>统计数量，参数是要统计的字段名（可选）</td></tr><tr><td>max</td><td>获取最大值，参数是要统计的字段名（必须）</td></tr><tr><td>min</td><td>获取最小值，参数是要统计的字段名（必须）</td></tr><tr><td>avg</td><td>获取平均值，参数是要统计的字段名（必须）</td></tr><tr><td>sum</td><td>获取总分，参数是要统计的字段名（必须）</td></tr></tbody></table>\n\n<ol>\n<li>使用 count()方法，可以求出所查询数据的数量<br><code>Db::name(&#39;user&#39;)-&gt;count();</code> </li>\n<li>count()可设置指定 id，比如有空值(Null)的 uid，不会计算数量；<br><code>Db::name(&#39;user&#39;)-&gt;count(&#39;uid&#39;);</code> </li>\n<li>使用 max()方法，求出所查询数据字段的最大值；<br><code>Db::name(&#39;user&#39;)-&gt;max(&#39;price&#39;);</code></li>\n<li>如果 max()方法，求出的值不是数值，则通过第二参数强制转换；<br><code>Db::name(&#39;user&#39;)-&gt;max(&#39;price&#39;, false);</code> </li>\n<li>使用 min()方法，求出所查询数据字段的最小值，也可以强制转换；<br><code>Db::name(&#39;user&#39;)-&gt;min(&#39;price&#39;);</code></li>\n<li>使用 avg()方法，求出所查询数据字段的平均值；<br><code>Db::name(&#39;user&#39;)-&gt;avg(&#39;price&#39;);</code> </li>\n<li>使用 sum()方法，求出所查询数据字段的总和；<br><code>Db::name(&#39;user&#39;)-&gt;sum(&#39;price&#39;);</code><h2 id=\"2-分页查询\"><a href=\"#2-分页查询\" class=\"headerlink\" title=\"2) 分页查询\"></a>2) 分页查询</h2></li>\n</ol>\n<h2 id=\"3-时间查询\"><a href=\"#3-时间查询\" class=\"headerlink\" title=\"3) 时间查询\"></a>3) 时间查询</h2><blockquote>\n<p>传统方式</p>\n</blockquote>\n<ul>\n<li>可以使用&gt;、&lt;、&gt;=、&lt;=来筛选匹配时间的数据；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;create_time&#39;, &#39;&gt;&#39;, &#39;2018-1-1&#39;)-&gt;select();</code> </li>\n<li>可以使用 between 关键字来设置时间的区间<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;create_time&#39;, &#39;between&#39;, [&#39;2018-1-1&#39;, &#39;2019-12-31&#39;])-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;create_time&#39;, &#39;not between&#39;, [&#39;2018-1-1&#39;, &#39;2019-12-31&#39;])-&gt;select();</code></li>\n</ul>\n<blockquote>\n<p>快捷方式</p>\n</blockquote>\n<ul>\n<li>时间查询的快捷方法为 whereTime()，直接使用&gt;、&lt;、&gt;=、&lt;=； <code>Db::name(&#39;user&#39;)-&gt;whereTime(&#39;create_time&#39;, &#39;&gt;&#39;, &#39;2018-1-1&#39;)-&gt;select();</code></li>\n<li>快捷方式也可以使用 between 和 not between；<br><code>Db::name(&#39;user&#39;)-&gt;whereBetween(&#39;create_time&#39;, [&#39;2018-1-1&#39;, &#39;2019-12-31&#39;])-&gt;select();</code> </li>\n<li>还有一种快捷方式为：whereBetweenTime()和 whereNotBetweenTime()； <code>Db::name(&#39;user&#39;)-&gt;whereBetweenTime(&#39;create_time&#39;, &#39;2018-1-1&#39;, &#39;2019-12-31&#39;)-&gt;select(); </code></li>\n<li>默认的大于&gt;，可以省略；<br><code>Db::name(&#39;user&#39;)-&gt;whereTime(&#39;create_time&#39;, &#39;2018-1-1&#39;)-&gt;select();</code></li>\n</ul>\n<blockquote>\n<p>固定查询</p>\n</blockquote>\n<ul>\n<li><p>使用 whereYear 查询今年的数据、去年的数据和某一年的数据<br><code>Db::name(&#39;user&#39;)-&gt;whereYear(&#39;create_time&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereYear(&#39;create_time&#39;, &#39;last year&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereYear(&#39;create_time&#39;, &#39;2016&#39;)-&gt;select();</code></p>\n</li>\n<li><p>使用 whereMonth 查询当月的数据、上月的数据和某一个月的数据<br><code>Db::name(&#39;user&#39;)-&gt;whereMonth(&#39;create_time&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereMonth(&#39;create_time&#39;, &#39;last month&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereMonth(&#39;create_time&#39;, &#39;2016-6&#39;)-&gt;select();</code></p>\n</li>\n<li><p>使用 whereDay 查询今天的数据、昨天的数据和某一个天的数据<br><code>Db::name(&#39;user&#39;)-&gt;whereDay(&#39;create_time&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereDay(&#39;create_time&#39;, &#39;last day&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereDay(&#39;create_time&#39;, &#39;2016-6-27&#39;)-&gt;select();</code></p>\n<blockquote>\n<p>其它查询</p>\n</blockquote>\n</li>\n<li><p>查询指定时间的数据，比如两小时内的<br><code>Db::name(&#39;user&#39;)-&gt;whereTime(&#39;create_time&#39;, &#39;-2 hours&#39;)-&gt;select();</code></p>\n</li>\n<li><p>查询两个时间字段时间有效期的数据，比如会员开始到结束的期间<br><code>Db::name(&#39;user&#39;)-&gt;whereBetweenTimeField(&#39;start_time&#39;, &#39;end_time&#39;)-&gt;select();</code></p>\n<h2 id=\"4-高级查询\"><a href=\"#4-高级查询\" class=\"headerlink\" title=\"4) 高级查询\"></a>4) 高级查询</h2><blockquote>\n<p>快捷查询</p>\n</blockquote>\n</li>\n</ul>\n<p>快捷查询方式是一种多字段相同查询条件的简化写法，可以进一步简化查询条件的写法，在多个字段之间用|分割表示OR查询，用&amp;分割表示AND查询，可以实现下面的查询，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;first_name|last_name&#x27;</span>, <span class=\"string\">&#x27;like&#x27;</span>, <span class=\"string\">&#x27;%a%&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&amp;manager_id&#x27;</span>, <span class=\"string\">&#x27;&gt;&#x27;</span>, <span class=\"number\">103</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/205fa6298d764be481ad99727c824e37.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/0f756f69b62a4364bafb1d7a21130459.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>闭包查询</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$jobId</span>=<span class=\"string\">&#x27;IT_PROG&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$salary</span>=<span class=\"number\">11000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$res</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$query</span></span>) <span class=\"keyword\">use</span>(<span class=\"params\"><span class=\"variable\">$jobId</span>, <span class=\"variable\">$salary</span></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$query</span>-&gt;where(<span class=\"string\">&#x27;job_id&#x27;</span>, <span class=\"variable\">$jobId</span>)</span><br><span class=\"line\">                  -&gt;whereOr(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;&gt;&#x27;</span>, <span class=\"variable\">$salary</span>);</span><br><span class=\"line\">        &#125;)-&gt;select();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$res</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b8981d5bc8f34c668af9b2015c0e8617.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>字符串条件查询</p>\n</blockquote>\n<p>对于一些实在复杂的查询，也可以直接使用原生SQL语句进行查询，例如:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)</span><br><span class=\"line\">    -&gt;whereRaw(<span class=\"string\">&#x27;id &gt; 0 AND name LIKE &quot;thinkphp%&quot;&#x27;</span>)</span><br><span class=\"line\">    -&gt;select();</span><br></pre></td></tr></table></figure>\n<p>为了安全起见，我们可以对字符串查询条件使用参数绑定，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)</span><br><span class=\"line\">    -&gt;whereRaw(<span class=\"string\">&#x27;id &gt; :id AND name LIKE :name &#x27;</span>, [<span class=\"string\">&#x27;id&#x27;</span> =&gt; <span class=\"number\">0</span>, <span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"string\">&#x27;thinkphp%&#x27;</span>])</span><br><span class=\"line\">    -&gt;select();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>快捷方法</p>\n</blockquote>\n<p>系统封装了一系列快捷方法，用于简化查询</p>\n<table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>whereOr</code></td><td>字段OR查询</td></tr><tr><td><code>whereXor</code></td><td>字段XOR查询</td></tr><tr><td><code>whereNull</code></td><td>查询字段是否为Null</td></tr><tr><td><code>whereNotNull</code></td><td>查询字段是否不为Null</td></tr><tr><td><code>whereIn</code></td><td>字段IN查询</td></tr><tr><td><code>whereNotIn</code></td><td>字段NOT IN查询</td></tr><tr><td><code>whereBetween</code></td><td>字段BETWEEN查询</td></tr><tr><td><code>whereNotBetween</code></td><td>字段NOT BETWEEN查询</td></tr><tr><td><code>whereLike</code></td><td>字段LIKE查询</td></tr><tr><td><code>whereNotLike</code></td><td>字段NOT LIKE查询</td></tr><tr><td><code>whereExists</code></td><td>EXISTS条件查询</td></tr><tr><td><code>whereNotExists</code></td><td>NOT EXISTS条件查询</td></tr><tr><td><code>whereExp</code></td><td>表达式查询</td></tr><tr><td><code>whereColumn</code></td><td>比较两个字段</td></tr></tbody></table>\n\n<blockquote>\n<p>动态查询</p>\n</blockquote>\n<p>查询构造器还提供了动态查询机制，用于简化查询条件</p>\n<table><thead><tr><th>动态查询</th><th>描述</th></tr></thead><tbody><tr><td><code>whereFieldName</code></td><td>查询某个字段的值</td></tr><tr><td><code>whereOrFieldName</code></td><td>查询某个字段的值</td></tr><tr><td><code>getByFieldName</code></td><td>根据某个字段查询</td></tr><tr><td><code>getFieldByFieldName</code></td><td>根据某个字段获取某个值</td></tr></tbody></table>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据邮箱（email）查询用户信息</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">\t-&gt;whereEmail(<span class=\"string\">&#x27;thinkphp@qq.com&#x27;</span>)</span><br><span class=\"line\">    -&gt;find();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 根据昵称（nick_name）查询用户</span></span><br><span class=\"line\"><span class=\"variable\">$email</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;whereNickName(<span class=\"string\">&#x27;like&#x27;</span>, <span class=\"string\">&#x27;%流年%&#x27;</span>)</span><br><span class=\"line\">    -&gt;select();</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 根据邮箱查询用户信息</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;getByEmail(<span class=\"string\">&#x27;thinkphp@qq.com&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 根据昵称（nick_name）查询用户信息</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;field(<span class=\"string\">&#x27;id,name,nick_name,email&#x27;</span>)</span><br><span class=\"line\">    -&gt;getByNickName(<span class=\"string\">&#x27;流年&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 根据邮箱查询用户的昵称</span></span><br><span class=\"line\"><span class=\"variable\">$nickname</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;getFieldByEmail(<span class=\"string\">&#x27;thinkphp@qq.com&#x27;</span>, <span class=\"string\">&#x27;nick_name&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 根据昵称（nick_name）查询用户邮箱</span></span><br><span class=\"line\"><span class=\"variable\">$email</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;getFieldByNickName(<span class=\"string\">&#x27;流年&#x27;</span>, <span class=\"string\">&#x27;email&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-子查询\"><a href=\"#5-子查询\" class=\"headerlink\" title=\"5) 子查询\"></a>5) 子查询</h2><p>使用 fetchSql()方法，可以设置不执行 SQL，而返回 SQL 语句，默认 true；<br><code>Db::name(&#39;user&#39;)-&gt;fetchSql(true)-&gt;select();</code><br>使用 buildSql()方法，也是返回 SQL 语句，不需要再执行 select()，且有括号<br><code>Db::name(&#39;user&#39;)-&gt;buildSql(true);</code><br>结合以上方法，我们实现一个子查询：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$subQuery</span> = Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)</span><br><span class=\"line\">    -&gt;field(<span class=\"string\">&#x27;id,name&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;&gt;&#x27;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    -&gt;buildSql();</span><br><span class=\"line\">Db::table(<span class=\"variable\">$subQuery</span> . <span class=\"string\">&#x27; a&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;a.name&#x27;</span>, <span class=\"string\">&#x27;like&#x27;</span>, <span class=\"string\">&#x27;thinkphp&#x27;</span>)</span><br><span class=\"line\">    -&gt;order(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;desc&#x27;</span>)</span><br><span class=\"line\">    -&gt;select();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>子查询还有闭包模式，<code>IN/NOT IN</code>和<code>EXISTS/NOT EXISTS</code>之类的查询可以直接使用闭包作为子查询，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;IN&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$query</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$query</span>-&gt;table(<span class=\"string\">&#x27;think_profile&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;status&#x27;</span>, <span class=\"number\">1</span>)-&gt;field(<span class=\"string\">&#x27;id&#x27;</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    -&gt;select();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-原生查询\"><a href=\"#6-原生查询\" class=\"headerlink\" title=\"6) 原生查询\"></a>6) 原生查询</h2><p>注意：V6.0.3+版本开始，原生查询仅支持Db类操作，不支持在模型中调用原生查询方法（包括query和execute方法）。<br>Db类支持原生SQL查询操作，主要包括query方法和execute方法</p>\n<p>query方法用于执行SQL查询操作，返回查询结果数据集（数组）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::query(<span class=\"string\">&quot;select * from think_user where status=:id&quot;</span>, [<span class=\"string\">&#x27;id&#x27;</span> =&gt; <span class=\"number\">1</span>]);</span><br></pre></td></tr></table></figure>\n<p>execute用于更新和写入数据的sql操作，如果数据非法或者查询错误则返回false，否则返回影响的记录数。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::execute(<span class=\"string\">&quot;update think_user set name=&#x27;thinkphp&#x27; where status=1&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>支持在原生查询的时候使用参数绑定，包括问号占位符或者命名占位符，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::query(<span class=\"string\">&quot;select * from think_user where id=? AND status=?&quot;</span>, [<span class=\"number\">8</span>, <span class=\"number\">1</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 命名绑定</span></span><br><span class=\"line\">Db::execute(<span class=\"string\">&quot;update think_user set name=:name where status=:status&quot;</span>, [<span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"string\">&#x27;thinkphp&#x27;</span>, <span class=\"string\">&#x27;status&#x27;</span> =&gt; <span class=\"number\">1</span>]);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一：连接数据库与模型初探\"><a href=\"#一：连接数据库与模型初探\" class=\"headerlink\" title=\"一：连接数据库与模型初探\"></a>一：连接数据库与模型初探</h1><p>ThinkPHP 采用内置抽象层将不同的数据库操作进行封装处理，数据抽象层基于 PDO 模式，无须针对不同的数据库编写相应的代码。使用数据库的第一步，就是连接数据库，在根目录的 config 下的 database.php 可以设置数据库连接信息，大部分系统已经给了默认值，你只需要修改和填写需要的值即可。<br><img src=\"https://img-blog.csdnimg.cn/cd44f832fe144d8b838a86b11d60fad1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">其中default配置用于设置默认使用的数据库连接配置。connections配置具体的数据库连接信息，default配置参数定义的连接配置必须要存在。</p>\n<table><thead><tr><th>type</th><th>数据库</th></tr></thead><tbody><tr><td>mysql</td><td>MySQL</td></tr><tr><td>sqlite</td><td>SqLite</td></tr><tr><td>pgsql</td><td>PostgreSQL</td></tr><tr><td>sqlsrv</td><td>SqlServer</td></tr><tr><td>mongo</td><td>MongoDb</td></tr><tr><td>oracle</td><td>Oracle</td></tr></tbody></table>\n\n<p>下面是默认支持的数据库连接信息：</p>\n<table><thead><tr><th>参数名</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>数据库类型</td><td>无</td></tr><tr><td>hostname</td><td>数据库地址</td><td>127.0.0.1</td></tr><tr><td>database</td><td>数据库名称</td><td>无</td></tr><tr><td>username</td><td>数据库用户名</td><td>无</td></tr><tr><td>password</td><td>数据库密码</td><td>无</td></tr><tr><td>hostport</td><td>数据库端口号</td><td>无</td></tr><tr><td>dsn</td><td>数据库连接dsn信息</td><td>无</td></tr><tr><td>params</td><td>数据库连接参数</td><td>空</td></tr><tr><td>charset</td><td>数据库编码</td><td>utf8</td></tr><tr><td>prefix</td><td>数据库的表前缀</td><td>无</td></tr><tr><td>deploy</td><td>数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)</td><td>0</td></tr><tr><td>rw_separate</td><td>数据库读写是否分离 主从式有效</td><td>false</td></tr><tr><td>master_num</td><td>读写分离后 主服务器数量</td><td>1</td></tr><tr><td>slave_no</td><td>指定从服务器序号</td><td>无</td></tr><tr><td>fields_strict</td><td>是否严格检查字段是否存在</td><td>true</td></tr><tr><td>fields_cache</td><td>是否开启字段缓存</td><td>false</td></tr><tr><td>schema_cache_path</td><td>字段缓存目录</td><td>无</td></tr><tr><td>trigger_sql</td><td>是否开启SQL监听</td><td>true</td></tr><tr><td>auto_timestamp</td><td>自动写入时间戳字段</td><td>false</td></tr><tr><td>query</td><td>指定查询对象</td><td>think\\db\\Query</td></tr></tbody></table>\n我们还可以调用Db::connect方法动态配置数据库连接信息，例如：\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\think\\facade\\Db::connect(<span class=\"string\">&#x27;demo&#x27;</span>)</span><br><span class=\"line\">\t-&gt;table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;find();</span><br></pre></td></tr></table></figure>\n<p>connect方法必须在查询的最开始调用，而且必须紧跟着调用查询方法，否则可能会导致部分查询失效或者依然使用默认的数据库连接。且动态连接数据库的connect方法仅对当次查询有效。这种方式的动态连接和切换数据库比较方便，经常用于多数据库连接的应用需求。</p>\n<p>对于本地测试，会优先采用.env 的配置信息，可以通过删除改变.env 的配置，或删除.env 来验证 database 的执行优先级，操作中我们和 database 配置对应上即可：<br><img src=\"https://img-blog.csdnimg.cn/d736bd28493c415eab2c80c7c9be3630.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>现在来测试有没有成功连接：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/59b1812e8c6c491c8bca013ed8d5a3b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"二：查询构造器-基础\"><a href=\"#二：查询构造器-基础\" class=\"headerlink\" title=\"二：查询构造器(基础)\"></a>二：查询构造器(基础)</h1><p>在学习查询之前可以先了解一下一个新方法：<code>Db::getLastSql()</code>，该方法可以返回最近一条SQL查询的原生语句。我在这里的演示是使用了我的myemployees库内容如下：<br><img src=\"https://img-blog.csdnimg.cn/7e016d4ca9fe47aea82485b8367ea1d9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/c38a4efe94044ef880f1322879ee95ab.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"1-查询数据\"><a href=\"#1-查询数据\" class=\"headerlink\" title=\"1) 查询数据\"></a>1) 查询数据</h2><blockquote>\n<p>查询单个数据</p>\n</blockquote>\n<p>查询单个数据一般使用find方法。如果没有任何的查询条件，并且也没有调用order方法的话 ，find查询不会返回任何结果。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = json(Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">100</span>)-&gt;find());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql() . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span> . <span class=\"variable\">$result</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/4ebf5b70bb134ec58d4a9541ab7b706c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">find方法查询结果不存在，返回 null，否则返回结果数组，如果希望查询数据不存在的时候返回空数组，可以如下修改：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">99</span>)-&gt;findOrEmpty();</span><br></pre></td></tr></table></figure>\n<p>如果希望在没有找到数据后抛出异常可以如下使用，如果没有查找到数据，则会抛出一个<code>think\\db\\exception\\DataNotFoundException</code>异常。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">99</span>)-&gt;findOrFail();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查询数据集</p>\n</blockquote>\n<p>查询多个数据（数据集）使用select方法：<br><img src=\"https://img-blog.csdnimg.cn/ff8e7968724e4f0a9e2187b45bf6cad6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>select 方法查询结果是一个数据集对象，如果需要转换为数组可以如下使用，但一般DB操作返回是默认是数组，这种情况下调用toArray()会报错，别问我是怎么知道的。。。。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">102</span>)-&gt;select()-&gt;toArray();</span><br></pre></td></tr></table></figure>\n<p>如果希望在没有查找到数据后抛出异常可以如下使用，如果没有查找到数据，同样也会抛出一个<code>think\\db\\exception\\DataNotFoundException</code>异常</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">102</span>)-&gt;select()-&gt;selectOrFail();</span><br></pre></td></tr></table></figure>\n<p>如果设置了数据表前缀参数的话，可以使用name替代table，如果表名为”tp_user”，然后在数据库设置那里添加了表前缀”tp_”，那么查询时可以用<code>name(&#39;user&#39;)</code>替代<code>table(&#39;tp_user&#39;)</code>。如果你的数据表没有设置表前缀的话，那么name和table方法效果一致。</p>\n<blockquote>\n<p>值和列查询</p>\n</blockquote>\n<p>查询某个字段的值可以用value()，如果不存在则返回null，如果有多个结果则只返回第一个。<br><img src=\"https://img-blog.csdnimg.cn/d377f87160db4d0bb7580c4200edcbad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">查询某一列的值可以用column()，第一个参数是返回的值，第二个参数的值作为索引。<br><img src=\"https://img-blog.csdnimg.cn/54dd78da1f8b4f779094a43f4a5c4244.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>数据分批处理</p>\n</blockquote>\n<p>如果处理的数据量巨大，成百上千那种，一次性读取有可能会导致内存开销过大，为了避免内存处理太多数据出错，可以使用 chunk()方法分批处理数据，该方法一次获取结果集的一小块，然后填充每一小块数据到要处理的闭包，该方法在编写处理大量数据库记录的时候非常有用。比如，我们可以全部员工表数据进行分批处理，每次处理 3 个员工记录，先展示chunk分批次处理的特性。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// function传入的$data代表所有数据</span></span><br><span class=\"line\">        <span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;chunk(<span class=\"number\">3</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$data</span></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"variable\">$data</span> <span class=\"keyword\">as</span> <span class=\"variable\">$data</span>) &#123;</span><br><span class=\"line\">                dump(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/0b3f3d56b9744a13bf68a75e141455d6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果要给员工计算年薪，那就是 月薪*12*(1+奖金率)，那样就可以通过如下方法计算了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// function传入的$data代表所有数据</span></span><br><span class=\"line\">        <span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;chunk(<span class=\"number\">3</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$data</span></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"variable\">$data</span> <span class=\"keyword\">as</span> <span class=\"variable\">$data</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;commission_pct&#x27;</span>])) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"variable\">$data</span>[<span class=\"string\">&#x27;employee_id&#x27;</span>] . <span class=\"string\">&#x27; &#x27;</span> . (<span class=\"number\">12</span>*<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;salary&#x27;</span>]*(<span class=\"number\">1</span>+<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;commission_pct&#x27;</span>])) . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"variable\">$data</span>[<span class=\"string\">&#x27;employee_id&#x27;</span>] . <span class=\"string\">&#x27; &#x27;</span> . (<span class=\"number\">12</span>*<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;salary&#x27;</span>]) . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"number\">1</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/0fcaf7059739488581d3ac04cad12dd4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">chunk方法的处理默认是根据主键查询，支持指定字段，并且支持指定处理数据的顺序。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)-&gt;chunk(<span class=\"number\">100</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"variable\">$users</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理结果集...</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;,<span class=\"string\">&#x27;create_time&#x27;</span>, <span class=\"string\">&#x27;desc&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>游标查询</p>\n</blockquote>\n<p>可以利用游标查询功能，可以大幅度减少海量数据的内存开销，它利用了 PHP 生 成器特性。每次查询只读一行，然后再读取时，自动定位到下一行继续读取，cursor方法返回的是一个生成器对象。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;cursor();</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"variable\">$result</span> <span class=\"keyword\">as</span> <span class=\"variable\">$e</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable\">$e</span>[<span class=\"string\">&#x27;last_name&#x27;</span>] . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/0e364407ab294e77a1d20b4a93f6b372.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-添加数据\"><a href=\"#2-添加数据\" class=\"headerlink\" title=\"2) 添加数据\"></a>2) 添加数据</h2><blockquote>\n<p>单数据新增</p>\n</blockquote>\n<p>单数据新增一般使用insert()方法插入，如果新增成功会返回一个1，没有指定的列的值默认为null。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> = [</span><br><span class=\"line\">            <span class=\"string\">&#x27;employee_id&#x27;</span>   =&gt;  <span class=\"string\">&#x27;99&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;eyes&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>     =&gt;  <span class=\"string\">&#x27;++&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;insert(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/52c4cfeee5db469b92d29e9adb3fe4f0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果你添加一个不存在的字段数据，会抛出一个异常 Exception，如果想强行新增抛弃不存在的字段数据，则使用 strick(false)方法，忽略异常：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;strict(<span class=\"literal\">false</span>)-&gt;insert(<span class=\"variable\">$data</span>);</span><br></pre></td></tr></table></figure>\n\n<p>我采用的数据库是 mysql，可以支持 replace 写入，insert 和 replace 写入的区别，前者遇到表中存在主键相同则报错，后者则修改。另外，使用 insertGetId()方法，可以在新增成功后返回当前数据 ID</p>\n<blockquote>\n<p>批量数据新增</p>\n</blockquote>\n<p>使用 insertAll()方法，可以添加二维数组批量新增数据，但要保持数组结构一致，成功则返回增加的行数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> =[</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>   =&gt;  <span class=\"string\">&#x27;98&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;虚哥&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>     =&gt;  <span class=\"string\">&#x27;xx&#x27;</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>   =&gt;  <span class=\"string\">&#x27;97&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;鸡哥&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>     =&gt;  <span class=\"string\">&#x27;jj&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;insertAll(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/d18696c816524dd9b97d10f238ec1bc5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>如果是mysql数据库则可以使用replay()批量添加或修改：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;replay()-&gt;insertAll(<span class=\"variable\">$data</span>);</span><br></pre></td></tr></table></figure>\n<p>如果批量插入的数据比较多，可以指定分批插入，使用limit方法指定每次插入的数量限制:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分批次写入，每次最多100条数据</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">  -&gt;replay()</span><br><span class=\"line\">  -&gt;limit(<span class=\"number\">100</span>)</span><br><span class=\"line\">  -&gt;insertAll(<span class=\"variable\">$data</span>);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>save()新增</p>\n</blockquote>\n<p>save()方法是一个通用方法，可以自行判断是新增还是修改(更新)数据，判断的依据是是否存在主键，不存在即新增。用法如insert，此处略。</p>\n<h2 id=\"3-更新数据\"><a href=\"#3-更新数据\" class=\"headerlink\" title=\"3) 更新数据\"></a>3) 更新数据</h2><p>更新数据可以使用save()方法或者update()方法，如果修改数据包括了主键信息，则可以省略where条件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$data</span> =[</span><br><span class=\"line\">            <span class=\"string\">&#x27;first_name&#x27;</span>    =&gt;  <span class=\"string\">&#x27;东哥&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;last_name&#x27;</span>     =&gt;  <span class=\"string\">&#x27;hh&#x27;</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">97</span>)</span><br><span class=\"line\">            -&gt;save(<span class=\"variable\">$data</span>);</span><br><span class=\"line\"><span class=\"comment\">//        支持使用data方法传入要更新的数据，如果update方法和data方法同时传入更新数据，则以update方法为准。</span></span><br><span class=\"line\"><span class=\"comment\">//        return Db::table(&#x27;employees&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">//        -&gt;where(&#x27;employee_id&#x27;, 97)</span></span><br><span class=\"line\"><span class=\"comment\">//        -&gt;data($data)</span></span><br><span class=\"line\"><span class=\"comment\">//        -&gt;save();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/ae7909c56009487ebaa25814d5ce8d71.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\">如果要更新的数据需要使用SQL函数或者其它字段，可以使用下面的方式:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">99</span>)</span><br><span class=\"line\">            -&gt;exp(<span class=\"string\">&#x27;first_name&#x27;</span>, <span class=\"string\">&#x27;UPPER(first_name)&#x27;</span>)</span><br><span class=\"line\">            -&gt;update();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/975d89407a5940cebb11d715a03ea5bf.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><br>可以使用inc/dec方法自增或自减一个字段的值（ 如不加第二个参数，默认步长为1）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// score 字段加 1</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    -&gt;inc(<span class=\"string\">&#x27;salary&#x27;</span>)</span><br><span class=\"line\">    -&gt;update();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// score 字段加 5</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    -&gt;inc(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">    -&gt;update();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// score 字段减 1</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    -&gt;dec(<span class=\"string\">&#x27;salary&#x27;</span>)</span><br><span class=\"line\">    -&gt;update();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// score 字段减 5</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    -&gt;dec(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">    -&gt;update();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-删除数据\"><a href=\"#4-删除数据\" class=\"headerlink\" title=\"4) 删除数据\"></a>4) 删除数据</h2><ul>\n<li>极简删除可以根据主键直接删除，删除成功返回影响行数，否则 0；<br><code>Db::table(&#39;employees&#39;)-&gt;delete(100); </code></li>\n<li>根据主键，还可以删除多条记录；<br><code>Db::table(&#39;employees&#39;)-&gt;delete([97,98,99]); </code></li>\n<li>正常情况下，通过 where()方法来删除；<br><code>Db::table(&#39;employees&#39;)-&gt;where(&#39;id&#39;, 100)-&gt;delete(); </code></li>\n<li>通过 true 参数删除数据表所有数据<br><code>Db::table(&#39;employees&#39;)-&gt;delete(true);</code></li>\n</ul>\n<p>一般情况下，业务数据不建议真实删除数据，系统提供了软删除机制（模型中使用软删除更为方便），useSoftDelete方法表示使用软删除，并且指定软删除字段为delete_time，写入数据为当前的时间戳。。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 软删除数据 使用delete_time字段标记删除</span></span><br><span class=\"line\">Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">\t-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">\t-&gt;useSoftDelete(<span class=\"string\">&#x27;delete_time&#x27;</span>,time())</span><br><span class=\"line\">    -&gt;delete();</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/04e3f85a3e394a4e888ca67684f43ac6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"5-查询表达式\"><a href=\"#5-查询表达式\" class=\"headerlink\" title=\"5) 查询表达式\"></a>5) 查询表达式</h2><p>查询表达式支持大部分的SQL查询语法，也是ThinkPHP查询语言的精髓，查询表达式的使用格式：<code>where(&#39;字段名&#39;,&#39;查询表达式&#39;,&#39;查询条件&#39;)</code>。除了where方法外，还可以支持whereOr，用法是一样的。为了更加方便查询，大多数的查询表达式都提供了快捷查询方法。</p>\n<table><thead><tr><th>表达式</th><th>含义</th><th>快捷查询方法</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td></td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td></td></tr><tr><td>&gt;</td><td>大于</td><td></td></tr><tr><td>&gt;=</td><td>大于等于</td><td></td></tr><tr><td>&lt;</td><td>小于</td><td></td></tr><tr><td>&lt;=</td><td>小于等于</td><td></td></tr><tr><td>[NOT] LIKE</td><td>模糊查询</td><td><code>whereLike/whereNotLike</code></td></tr><tr><td>[NOT] BETWEEN</td><td>（不在）区间查询</td><td><code>whereBetween/whereNotBetween</code></td></tr><tr><td>[NOT] IN</td><td>（不在）IN 查询</td><td><code>whereIn/whereNotIn</code></td></tr><tr><td>[NOT] NULL</td><td>查询字段是否（不）是NULL</td><td><code>whereNull/whereNotNull</code></td></tr><tr><td>[NOT] EXISTS</td><td>EXISTS查询</td><td><code>whereExists/whereNotExists</code></td></tr><tr><td>[NOT] REGEXP</td><td>正则（不）匹配查询（仅支持Mysql）</td><td></td></tr><tr><td>[NOT] BETWEEN TIME</td><td>时间区间比较</td><td>whereBetweenTime</td></tr><tr><td>&gt; TIME</td><td>大于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&lt; TIME</td><td>小于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&gt;= TIME</td><td>大于等于某个时间</td><td><code>whereTime</code></td></tr><tr><td>&lt;= TIME</td><td>小于等于某个时间</td><td><code>whereTime</code></td></tr><tr><td>EXP</td><td>表达式查询，支持SQL语法</td><td><code>whereExp</code></td></tr><tr><td>find in set</td><td>FIND_IN_SET查询</td><td><code>whereFindInSet</code></td></tr></tbody></table>\n\n<blockquote>\n<p>比较查询</p>\n</blockquote>\n<ul>\n<li>查询表达式支持大部分常用的 SQL 语句，语法格式如下：<br><code>where(&#39;字段名&#39;,&#39;查询表达式&#39;,&#39;查询条件&#39;);</code> </li>\n<li>在查询数据进行筛选时，我们采用 where()方法，比如 id=80；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;, 80)-&gt;find();</code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;=&#39;,80)-&gt;find();</code> </li>\n<li>使用&lt;&gt;、&gt;、&lt;、&gt;=、&lt;=可以筛选出各种符合比较值的数据列表； <code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;&gt;&#39;,80)-&gt;select();</code></li>\n</ul>\n<blockquote>\n<p>区间查询</p>\n</blockquote>\n<ul>\n<li>使用 like 表达式进行模糊查询；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;email&#39;,&#39;like&#39;,&#39;xiao%&#39;)-&gt;select();</code> </li>\n<li>like 表达式还可以支持数组传递进行模糊查询；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;email&#39;,&#39;like&#39;,[&#39;xiao%&#39;,&#39;wu%&#39;], &#39;or&#39;)-&gt;select(); </code><br><code>SELECT * FROM tp_user WHERE (email LIKE xiao% OR email LIKE &#39;wu%&#39;)</code> </li>\n<li>like 表达式具有两个快捷方式 whereLike()和 whereNoLike()； <code>Db::name(&#39;user&#39;)-&gt;whereLike(&#39;email&#39;,&#39;xiao%&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereNotLike(&#39;email&#39;,&#39;xiao%&#39;)-&gt;select(); </code></li>\n<li>between 表达式具有两个快捷方式 whereBetween()和 whereNotBetween()； <code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;between&#39;,&#39;19,25&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;between&#39;,[19, 25])-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereBetween(&#39;id&#39;,&#39;19,25&#39;)-&gt;select();</code> <code>Db::name(&#39;user&#39;)-&gt;whereNotBetween(&#39;id&#39;,&#39;19,25&#39;)-&gt;select();</code> </li>\n<li>in 表达式具有两个快捷方式 whereIn()和 whereNotIn()；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;in&#39;, &#39;19,21,29&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;,&#39;in&#39;, [19, 21, 29])-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereIn(&#39;id&#39;,&#39;19,21,29&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereNotIn(&#39;id&#39;,&#39;19,21,29&#39;)-&gt;select();</code></li>\n<li>null 表达式具有两个快捷方式 whereNull()和 whereNotNull()； <code>Db::name(&#39;user&#39;)-&gt;where(&#39;uid&#39;,&#39;null&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;uid&#39;,&#39;not null&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereNull(&#39;uid&#39;)-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;whereNotNull(&#39;uid&#39;)-&gt;select();</code></li>\n</ul>\n<blockquote>\n<p>EXP查询</p>\n</blockquote>\n<p>EXP表达式支持更复杂的查询：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::name(<span class=\"string\">&#x27;user&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;in&#x27;</span>,<span class=\"string\">&#x27;1,3,8&#x27;</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n<p>可以改成：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::name(<span class=\"string\">&#x27;user&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;exp&#x27;</span>,<span class=\"string\">&#x27; IN (1,3,8) &#x27;</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n<p>exp查询的条件不会被当成字符串，所以后面的查询条件可以使用任何SQL支持的语法，包括使用函数和字段名称。因此推荐使用whereExp方法查询。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::name(<span class=\"string\">&#x27;user&#x27;</span>)-&gt;whereExp(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;IN (1,3,8) &#x27;</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三：查询构造器-链式\"><a href=\"#三：查询构造器-链式\" class=\"headerlink\" title=\"三：查询构造器(链式)\"></a>三：查询构造器(链式)</h1><h2 id=\"1-．查询规则\"><a href=\"#1-．查询规则\" class=\"headerlink\" title=\"1)．查询规则\"></a>1)．查询规则</h2><ol>\n<li>前面课程中我们通过指向符号“-&gt;”多次连续调用方法称为：链式查询</li>\n<li>当 Db::name(‘user’)时，返回查询对象(Query)，即可连缀数据库对应的方法</li>\n<li>而每次执行一个数据库查询方法时，比如 where()，还将返回查询对象(Query)</li>\n<li>只要还是数据库对象，那么就可以一直使用指向符号进行链式查询</li>\n<li>再利用 find()、select()等方法返回数组(Array)或数据集对象(Colletion)</li>\n<li>而 find()和 select()是结果查询方法（放在最后），并不是链式查询方法<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;id&#39;, 27)-&gt;order(&#39;id&#39;, &#39;desc&#39;)-&gt;find() </code></li>\n<li>除了查询方法可以使用链式连贯操作，CURD 操作也可以使用（后续课程研究)</li>\n</ol>\n<h2 id=\"2-．更多查询\"><a href=\"#2-．更多查询\" class=\"headerlink\" title=\"2)．更多查询\"></a>2)．更多查询</h2><ol>\n<li>如果多次使用数据库查询，那么每次静态创建都会生成一个实例，造成浪费； </li>\n<li>我们可以把对象实例保存下来，再进行反复调用即可；<br><code>$userQuery = Db::name(&#39;user&#39;); </code><br><code>$dataFind = $userQuery-&gt;where(&#39;id&#39;, 27)-&gt;find();</code><br><code>$dataSelect = $userQuery-&gt;select(); </code></li>\n<li>当同一个对象实例第二次查询后，会保留第一次查询的值；<br><code>$data1 = $userQuery-&gt;order(&#39;id&#39;, &#39;desc&#39;)-&gt;select();</code><br><code>$data2 = $userQuery-&gt;select(); </code><br><code>return Db::getLastSql(); </code><br><code>SELECT * FROM tp_user ORDER BY id DESC</code> </li>\n<li>使用 removeOption()方法，可以清理掉上一次查询保留的值； <code>$userQuery-&gt;removeOption(&#39;where&#39;)-&gt;select();</code><h2 id=\"3-链式查询方法\"><a href=\"#3-链式查询方法\" class=\"headerlink\" title=\"3). 链式查询方法\"></a>3). 链式查询方法</h2><blockquote>\n<p>where</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li>表达式查询，即where()方法的基础查询方式</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"string\">&#x27;10000&#x27;</span>)-&gt;select();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>关联数组查询，通过键值对来数组键值对匹配的查询方式</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where([</span><br><span class=\"line\">                      <span class=\"string\">&#x27;job_id&#x27;</span>     =&gt;      <span class=\"string\">&#x27;IT_PROG&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;salary&#x27;</span>     =&gt;       <span class=\"number\">6000</span></span><br><span class=\"line\">                  ])</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c6e81a82a067468d85edf632983316b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>索引数组查询，通过数组里的数组拼装方式来查询</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where([</span><br><span class=\"line\">                      [<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">110</span>],</span><br><span class=\"line\">                      [<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">10000</span>]</span><br><span class=\"line\">                  ])</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8b76eb78049b4d6dad35caa45893e240.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>将复杂的数组组装后，通过变量传递，将增加可读性</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$map</span>[] = [<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">110</span>];</span><br><span class=\"line\">        <span class=\"variable\">$map</span>[] = [<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;in&#x27;</span>, [<span class=\"number\">6000</span>, <span class=\"number\">4200</span>, <span class=\"number\">24000</span>]];</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"variable\">$map</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b8f85b61ddf84f46913615907af2dd02.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>字符串形式传递，简单粗暴的查询方式，whereRaw()支持复杂字符串格式，也支持SQL预处理模式</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;whereRaw(<span class=\"string\">&quot;employee_id&lt;110 AND salary IN (24000, 6000, 4200)&quot;</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/37972e97295b48f5857c9ab221530b84.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>field</p>\n</blockquote>\n<ul>\n<li>使用 field()方法，可以指定要查询的字段</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">                  -&gt;field(<span class=\"string\">&#x27;employee_id, first_name, salary&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//                  -&gt;field([&#x27;employee_id&#x27;, &#x27;first_name&#x27;, &#x27;salary&#x27;]) 或者这种数组形式</span></span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/53753907ba864b4abd21b469bbb441f3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 field()方法，给指定的字段设置别名</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">                  -&gt;field(<span class=\"string\">&#x27;employee_id as id, first_name as name, salary as 薪水&#x27;</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b2d7c18571cb45ca8593485641e7688f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>在 fieldRaw()方法里，可以直接给字段设置 MySQL 函数</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">                  -&gt;field(<span class=\"string\">&#x27;job_id, LENGTH(job_id)&#x27;</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/be296325d5d340e3905f0345e6166afd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 field(true)的布尔参数，可以显式的查询获取所有字段，而不是*</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">                  -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">                  -&gt;field(<span class=\"literal\">true</span>)</span><br><span class=\"line\">                  -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/5409f59a808046cca1f56d89db7fddfc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 withoutField()方法中字段排除，可以屏蔽掉想要不显示的字段</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">            -&gt;withoutField(<span class=\"string\">&#x27;email, phone_number&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/92e26f2fee2944489ba4911ccd5a022e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 field()方法在新增时，验证字段的合法性</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&#x27;</span>, <span class=\"string\">&#x27;&lt;&#x27;</span>, <span class=\"number\">105</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, first_name, last_name&#x27;</span>)</span><br><span class=\"line\">            -&gt;insert([</span><br><span class=\"line\">                <span class=\"string\">&#x27;first_name&#x27;</span>       =&gt;      <span class=\"string\">&#x27;济钢&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;last_name&#x27;</span>        =&gt;       <span class=\"string\">&#x27;aa&#x27;</span></span><br><span class=\"line\">            ]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/59a075a1239b475ca2f07cd15f66087b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>alias</p>\n</blockquote>\n<p>使用 alias()方法，给数据库起一个别名:<br><img src=\"https://img-blog.csdnimg.cn/5a91a2f4743f47d09edfd0eea55b18c6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>limit</p>\n</blockquote>\n<ul>\n<li>使用 limit()方法，限制获取输出数据的个数</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name&#x27;</span>)</span><br><span class=\"line\">            -&gt;limit(<span class=\"number\">5</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c963644518d141778524a4ac9fc26461.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>分页模式，即传递两个参数，比如从第 3 条开始显示 5 条 limit(2,5)</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name&#x27;</span>)</span><br><span class=\"line\">            -&gt;limit(<span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/7751a3f98ed04a8d8aca6e32bf5a709f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>page</p>\n</blockquote>\n<p>page()分页方法，优化了 limit()方法，无须计算分页条数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name&#x27;</span>)</span><br><span class=\"line\">            -&gt;page(<span class=\"number\">2</span>, <span class=\"number\">5</span>)  <span class=\"comment\">// 每页显示五条，第二页</span></span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b324a307f6244e7292f6d7011b8572f7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>order</p>\n</blockquote>\n<ul>\n<li>使用 order()方法，可以指定排序方式，没有指定第二参数，默认 asc</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name, salary&#x27;</span>)</span><br><span class=\"line\">            -&gt;order(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;desc&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/04567b9d8c4a4798ba9efce62d8a3d74.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>支持数组的方式，对多个字段进行排序</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name, salary&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\">// 按工资升序，工资相同则按员工编号降序</span></span><br><span class=\"line\">            -&gt;order([</span><br><span class=\"line\">                <span class=\"string\">&#x27;salary&#x27;</span>        =&gt;       <span class=\"string\">&#x27;asc&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;employee_id&#x27;</span>   =&gt;       <span class=\"string\">&#x27;desc&#x27;</span></span><br><span class=\"line\">            ])</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/f4c3390934fb49769cf91aaad46a8654.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>使用 orderRaw()方法，支持排序的时候指定 MySQL 函数</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;employee_id, last_name, salary&#x27;</span>)</span><br><span class=\"line\">            -&gt;orderRaw(<span class=\"string\">&#x27;length(first_name) DESC&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSQL();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/ff956ec3a0be4248af88cd6179f0ea77.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>group</p>\n</blockquote>\n<ul>\n<li>使用 group()方法，给性别不同的人进行 price 字段的总和统计</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;job_id, SUM(salary)&#x27;</span>)</span><br><span class=\"line\">            -&gt;group(<span class=\"string\">&#x27;job_id&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/574cfa3bf1f24df7bb83c470a4f413f1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>也可以进行多字段分组统计</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;job_id, manager_id, SUM(salary)&#x27;</span>)</span><br><span class=\"line\">            -&gt;group(<span class=\"string\">&#x27;job_id, manager_id&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c27a8e90bf174de49fdd582ff55dcd3a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>having</p>\n</blockquote>\n<p>使用 group()分组之后，再使用 having()进行筛选</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;field(<span class=\"string\">&#x27;job_id, manager_id, SUM(salary)&#x27;</span>)</span><br><span class=\"line\">            -&gt;group(<span class=\"string\">&#x27;job_id, manager_id&#x27;</span>)</span><br><span class=\"line\">            -&gt;having(<span class=\"string\">&#x27;SUM(salary)&gt;10000&#x27;</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$result</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/4fb4f87e747a4805941d6f85cfab57a5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"四：查询构造器-进阶\"><a href=\"#四：查询构造器-进阶\" class=\"headerlink\" title=\"四：查询构造器(进阶)\"></a>四：查询构造器(进阶)</h1><h2 id=\"1-聚合查询\"><a href=\"#1-聚合查询\" class=\"headerlink\" title=\"1) 聚合查询\"></a>1) 聚合查询</h2><p>在应用中我们经常会用到一些统计数据，例如当前所有（或者满足某些条件）的用户数、所有用户的最大积分、用户的平均成绩等等，ThinkPHP为这些统计操作提供了一系列的内置方法，包括以下部分：</p>\n<table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>count</td><td>统计数量，参数是要统计的字段名（可选）</td></tr><tr><td>max</td><td>获取最大值，参数是要统计的字段名（必须）</td></tr><tr><td>min</td><td>获取最小值，参数是要统计的字段名（必须）</td></tr><tr><td>avg</td><td>获取平均值，参数是要统计的字段名（必须）</td></tr><tr><td>sum</td><td>获取总分，参数是要统计的字段名（必须）</td></tr></tbody></table>\n\n<ol>\n<li>使用 count()方法，可以求出所查询数据的数量<br><code>Db::name(&#39;user&#39;)-&gt;count();</code> </li>\n<li>count()可设置指定 id，比如有空值(Null)的 uid，不会计算数量；<br><code>Db::name(&#39;user&#39;)-&gt;count(&#39;uid&#39;);</code> </li>\n<li>使用 max()方法，求出所查询数据字段的最大值；<br><code>Db::name(&#39;user&#39;)-&gt;max(&#39;price&#39;);</code></li>\n<li>如果 max()方法，求出的值不是数值，则通过第二参数强制转换；<br><code>Db::name(&#39;user&#39;)-&gt;max(&#39;price&#39;, false);</code> </li>\n<li>使用 min()方法，求出所查询数据字段的最小值，也可以强制转换；<br><code>Db::name(&#39;user&#39;)-&gt;min(&#39;price&#39;);</code></li>\n<li>使用 avg()方法，求出所查询数据字段的平均值；<br><code>Db::name(&#39;user&#39;)-&gt;avg(&#39;price&#39;);</code> </li>\n<li>使用 sum()方法，求出所查询数据字段的总和；<br><code>Db::name(&#39;user&#39;)-&gt;sum(&#39;price&#39;);</code><h2 id=\"2-分页查询\"><a href=\"#2-分页查询\" class=\"headerlink\" title=\"2) 分页查询\"></a>2) 分页查询</h2></li>\n</ol>\n<h2 id=\"3-时间查询\"><a href=\"#3-时间查询\" class=\"headerlink\" title=\"3) 时间查询\"></a>3) 时间查询</h2><blockquote>\n<p>传统方式</p>\n</blockquote>\n<ul>\n<li>可以使用&gt;、&lt;、&gt;=、&lt;=来筛选匹配时间的数据；<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;create_time&#39;, &#39;&gt;&#39;, &#39;2018-1-1&#39;)-&gt;select();</code> </li>\n<li>可以使用 between 关键字来设置时间的区间<br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;create_time&#39;, &#39;between&#39;, [&#39;2018-1-1&#39;, &#39;2019-12-31&#39;])-&gt;select();</code><br><code>Db::name(&#39;user&#39;)-&gt;where(&#39;create_time&#39;, &#39;not between&#39;, [&#39;2018-1-1&#39;, &#39;2019-12-31&#39;])-&gt;select();</code></li>\n</ul>\n<blockquote>\n<p>快捷方式</p>\n</blockquote>\n<ul>\n<li>时间查询的快捷方法为 whereTime()，直接使用&gt;、&lt;、&gt;=、&lt;=； <code>Db::name(&#39;user&#39;)-&gt;whereTime(&#39;create_time&#39;, &#39;&gt;&#39;, &#39;2018-1-1&#39;)-&gt;select();</code></li>\n<li>快捷方式也可以使用 between 和 not between；<br><code>Db::name(&#39;user&#39;)-&gt;whereBetween(&#39;create_time&#39;, [&#39;2018-1-1&#39;, &#39;2019-12-31&#39;])-&gt;select();</code> </li>\n<li>还有一种快捷方式为：whereBetweenTime()和 whereNotBetweenTime()； <code>Db::name(&#39;user&#39;)-&gt;whereBetweenTime(&#39;create_time&#39;, &#39;2018-1-1&#39;, &#39;2019-12-31&#39;)-&gt;select(); </code></li>\n<li>默认的大于&gt;，可以省略；<br><code>Db::name(&#39;user&#39;)-&gt;whereTime(&#39;create_time&#39;, &#39;2018-1-1&#39;)-&gt;select();</code></li>\n</ul>\n<blockquote>\n<p>固定查询</p>\n</blockquote>\n<ul>\n<li><p>使用 whereYear 查询今年的数据、去年的数据和某一年的数据<br><code>Db::name(&#39;user&#39;)-&gt;whereYear(&#39;create_time&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereYear(&#39;create_time&#39;, &#39;last year&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereYear(&#39;create_time&#39;, &#39;2016&#39;)-&gt;select();</code></p>\n</li>\n<li><p>使用 whereMonth 查询当月的数据、上月的数据和某一个月的数据<br><code>Db::name(&#39;user&#39;)-&gt;whereMonth(&#39;create_time&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereMonth(&#39;create_time&#39;, &#39;last month&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereMonth(&#39;create_time&#39;, &#39;2016-6&#39;)-&gt;select();</code></p>\n</li>\n<li><p>使用 whereDay 查询今天的数据、昨天的数据和某一个天的数据<br><code>Db::name(&#39;user&#39;)-&gt;whereDay(&#39;create_time&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereDay(&#39;create_time&#39;, &#39;last day&#39;)-&gt;select(); </code><br><code>Db::name(&#39;user&#39;)-&gt;whereDay(&#39;create_time&#39;, &#39;2016-6-27&#39;)-&gt;select();</code></p>\n<blockquote>\n<p>其它查询</p>\n</blockquote>\n</li>\n<li><p>查询指定时间的数据，比如两小时内的<br><code>Db::name(&#39;user&#39;)-&gt;whereTime(&#39;create_time&#39;, &#39;-2 hours&#39;)-&gt;select();</code></p>\n</li>\n<li><p>查询两个时间字段时间有效期的数据，比如会员开始到结束的期间<br><code>Db::name(&#39;user&#39;)-&gt;whereBetweenTimeField(&#39;start_time&#39;, &#39;end_time&#39;)-&gt;select();</code></p>\n<h2 id=\"4-高级查询\"><a href=\"#4-高级查询\" class=\"headerlink\" title=\"4) 高级查询\"></a>4) 高级查询</h2><blockquote>\n<p>快捷查询</p>\n</blockquote>\n</li>\n</ul>\n<p>快捷查询方式是一种多字段相同查询条件的简化写法，可以进一步简化查询条件的写法，在多个字段之间用|分割表示OR查询，用&amp;分割表示AND查询，可以实现下面的查询，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;first_name|last_name&#x27;</span>, <span class=\"string\">&#x27;like&#x27;</span>, <span class=\"string\">&#x27;%a%&#x27;</span>)</span><br><span class=\"line\">            -&gt;where(<span class=\"string\">&#x27;employee_id&amp;manager_id&#x27;</span>, <span class=\"string\">&#x27;&gt;&#x27;</span>, <span class=\"number\">103</span>)</span><br><span class=\"line\">            -&gt;select();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db::getLastSql();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/205fa6298d764be481ad99727c824e37.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/0f756f69b62a4364bafb1d7a21130459.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>闭包查询</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">facade</span>\\<span class=\"title\">Db</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbTest</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$jobId</span>=<span class=\"string\">&#x27;IT_PROG&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$salary</span>=<span class=\"number\">11000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$res</span>=Db::table(<span class=\"string\">&#x27;employees&#x27;</span>)-&gt;where(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$query</span></span>) <span class=\"keyword\">use</span>(<span class=\"params\"><span class=\"variable\">$jobId</span>, <span class=\"variable\">$salary</span></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$query</span>-&gt;where(<span class=\"string\">&#x27;job_id&#x27;</span>, <span class=\"variable\">$jobId</span>)</span><br><span class=\"line\">                  -&gt;whereOr(<span class=\"string\">&#x27;salary&#x27;</span>, <span class=\"string\">&#x27;&gt;&#x27;</span>, <span class=\"variable\">$salary</span>);</span><br><span class=\"line\">        &#125;)-&gt;select();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(<span class=\"variable\">$res</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b8981d5bc8f34c668af9b2015c0e8617.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZXllcysr,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>字符串条件查询</p>\n</blockquote>\n<p>对于一些实在复杂的查询，也可以直接使用原生SQL语句进行查询，例如:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)</span><br><span class=\"line\">    -&gt;whereRaw(<span class=\"string\">&#x27;id &gt; 0 AND name LIKE &quot;thinkphp%&quot;&#x27;</span>)</span><br><span class=\"line\">    -&gt;select();</span><br></pre></td></tr></table></figure>\n<p>为了安全起见，我们可以对字符串查询条件使用参数绑定，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)</span><br><span class=\"line\">    -&gt;whereRaw(<span class=\"string\">&#x27;id &gt; :id AND name LIKE :name &#x27;</span>, [<span class=\"string\">&#x27;id&#x27;</span> =&gt; <span class=\"number\">0</span>, <span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"string\">&#x27;thinkphp%&#x27;</span>])</span><br><span class=\"line\">    -&gt;select();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>快捷方法</p>\n</blockquote>\n<p>系统封装了一系列快捷方法，用于简化查询</p>\n<table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>whereOr</code></td><td>字段OR查询</td></tr><tr><td><code>whereXor</code></td><td>字段XOR查询</td></tr><tr><td><code>whereNull</code></td><td>查询字段是否为Null</td></tr><tr><td><code>whereNotNull</code></td><td>查询字段是否不为Null</td></tr><tr><td><code>whereIn</code></td><td>字段IN查询</td></tr><tr><td><code>whereNotIn</code></td><td>字段NOT IN查询</td></tr><tr><td><code>whereBetween</code></td><td>字段BETWEEN查询</td></tr><tr><td><code>whereNotBetween</code></td><td>字段NOT BETWEEN查询</td></tr><tr><td><code>whereLike</code></td><td>字段LIKE查询</td></tr><tr><td><code>whereNotLike</code></td><td>字段NOT LIKE查询</td></tr><tr><td><code>whereExists</code></td><td>EXISTS条件查询</td></tr><tr><td><code>whereNotExists</code></td><td>NOT EXISTS条件查询</td></tr><tr><td><code>whereExp</code></td><td>表达式查询</td></tr><tr><td><code>whereColumn</code></td><td>比较两个字段</td></tr></tbody></table>\n\n<blockquote>\n<p>动态查询</p>\n</blockquote>\n<p>查询构造器还提供了动态查询机制，用于简化查询条件</p>\n<table><thead><tr><th>动态查询</th><th>描述</th></tr></thead><tbody><tr><td><code>whereFieldName</code></td><td>查询某个字段的值</td></tr><tr><td><code>whereOrFieldName</code></td><td>查询某个字段的值</td></tr><tr><td><code>getByFieldName</code></td><td>根据某个字段查询</td></tr><tr><td><code>getFieldByFieldName</code></td><td>根据某个字段获取某个值</td></tr></tbody></table>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据邮箱（email）查询用户信息</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">\t-&gt;whereEmail(<span class=\"string\">&#x27;thinkphp@qq.com&#x27;</span>)</span><br><span class=\"line\">    -&gt;find();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 根据昵称（nick_name）查询用户</span></span><br><span class=\"line\"><span class=\"variable\">$email</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;whereNickName(<span class=\"string\">&#x27;like&#x27;</span>, <span class=\"string\">&#x27;%流年%&#x27;</span>)</span><br><span class=\"line\">    -&gt;select();</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 根据邮箱查询用户信息</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;getByEmail(<span class=\"string\">&#x27;thinkphp@qq.com&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 根据昵称（nick_name）查询用户信息</span></span><br><span class=\"line\"><span class=\"variable\">$user</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;field(<span class=\"string\">&#x27;id,name,nick_name,email&#x27;</span>)</span><br><span class=\"line\">    -&gt;getByNickName(<span class=\"string\">&#x27;流年&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 根据邮箱查询用户的昵称</span></span><br><span class=\"line\"><span class=\"variable\">$nickname</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;getFieldByEmail(<span class=\"string\">&#x27;thinkphp@qq.com&#x27;</span>, <span class=\"string\">&#x27;nick_name&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 根据昵称（nick_name）查询用户邮箱</span></span><br><span class=\"line\"><span class=\"variable\">$email</span> = Db::table(<span class=\"string\">&#x27;user&#x27;</span>)</span><br><span class=\"line\">    -&gt;getFieldByNickName(<span class=\"string\">&#x27;流年&#x27;</span>, <span class=\"string\">&#x27;email&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-子查询\"><a href=\"#5-子查询\" class=\"headerlink\" title=\"5) 子查询\"></a>5) 子查询</h2><p>使用 fetchSql()方法，可以设置不执行 SQL，而返回 SQL 语句，默认 true；<br><code>Db::name(&#39;user&#39;)-&gt;fetchSql(true)-&gt;select();</code><br>使用 buildSql()方法，也是返回 SQL 语句，不需要再执行 select()，且有括号<br><code>Db::name(&#39;user&#39;)-&gt;buildSql(true);</code><br>结合以上方法，我们实现一个子查询：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$subQuery</span> = Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)</span><br><span class=\"line\">    -&gt;field(<span class=\"string\">&#x27;id,name&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;&gt;&#x27;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    -&gt;buildSql();</span><br><span class=\"line\">Db::table(<span class=\"variable\">$subQuery</span> . <span class=\"string\">&#x27; a&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;a.name&#x27;</span>, <span class=\"string\">&#x27;like&#x27;</span>, <span class=\"string\">&#x27;thinkphp&#x27;</span>)</span><br><span class=\"line\">    -&gt;order(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;desc&#x27;</span>)</span><br><span class=\"line\">    -&gt;select();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>子查询还有闭包模式，<code>IN/NOT IN</code>和<code>EXISTS/NOT EXISTS</code>之类的查询可以直接使用闭包作为子查询，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::table(<span class=\"string\">&#x27;think_user&#x27;</span>)</span><br><span class=\"line\">    -&gt;where(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;IN&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$query</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$query</span>-&gt;table(<span class=\"string\">&#x27;think_profile&#x27;</span>)-&gt;where(<span class=\"string\">&#x27;status&#x27;</span>, <span class=\"number\">1</span>)-&gt;field(<span class=\"string\">&#x27;id&#x27;</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    -&gt;select();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-原生查询\"><a href=\"#6-原生查询\" class=\"headerlink\" title=\"6) 原生查询\"></a>6) 原生查询</h2><p>注意：V6.0.3+版本开始，原生查询仅支持Db类操作，不支持在模型中调用原生查询方法（包括query和execute方法）。<br>Db类支持原生SQL查询操作，主要包括query方法和execute方法</p>\n<p>query方法用于执行SQL查询操作，返回查询结果数据集（数组）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::query(<span class=\"string\">&quot;select * from think_user where status=:id&quot;</span>, [<span class=\"string\">&#x27;id&#x27;</span> =&gt; <span class=\"number\">1</span>]);</span><br></pre></td></tr></table></figure>\n<p>execute用于更新和写入数据的sql操作，如果数据非法或者查询错误则返回false，否则返回影响的记录数。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::execute(<span class=\"string\">&quot;update think_user set name=&#x27;thinkphp&#x27; where status=1&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>支持在原生查询的时候使用参数绑定，包括问号占位符或者命名占位符，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Db::query(<span class=\"string\">&quot;select * from think_user where id=? AND status=?&quot;</span>, [<span class=\"number\">8</span>, <span class=\"number\">1</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 命名绑定</span></span><br><span class=\"line\">Db::execute(<span class=\"string\">&quot;update think_user set name=:name where status=:status&quot;</span>, [<span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"string\">&#x27;thinkphp&#x27;</span>, <span class=\"string\">&#x27;status&#x27;</span> =&gt; <span class=\"number\">1</span>]);</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckwt958ae0001asda876h176f","category_id":"ckwt958aj0004asda1l3teuir","_id":"ckwt958as000fasda7pch70y0"},{"post_id":"ckwt958aq000dasda4um78pup","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958aw000kasda17la2dkl"},{"post_id":"ckwt958ah0003asdadh9696b7","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958az000oasdag2u9ha5h"},{"post_id":"ckwt958ar000easda1ditc2re","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958b0000rasda4bh03xmc"},{"post_id":"ckwt958at000iasda0hrpgyi2","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958b1000wasdagai6azsb"},{"post_id":"ckwt958am0007asda03tm9p17","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958b2000zasdabuyo8yz8"},{"post_id":"ckwt958an0009asdac7wi9bzf","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958b30012asda4xuwfuoe"},{"post_id":"ckwt958ao000aasdaec61dg3u","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958b50016asdae8gjdm1k"},{"post_id":"ckwt958b30011asdaaw9gc1c2","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958b7001casdafo291ssl"},{"post_id":"ckwt958av000jasdab9uteimk","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958b8001gasdaej1c5li2"},{"post_id":"ckwt958b40015asda85e60pyk","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958b9001jasda1i3thzrv"},{"post_id":"ckwt958b60019asdacvb14i18","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958ba001masdahykv4c2j"},{"post_id":"ckwt958ay000nasdabw9v9pk4","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958bd001pasdabjlg3y7l"},{"post_id":"ckwt958b6001basdacltadrcf","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958be001sasdaajceekqd"},{"post_id":"ckwt958b7001fasda9wwjf2ex","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958bf001vasda54yx1ipl"},{"post_id":"ckwt958az000qasdaglcc0a6f","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958bg001zasdaaq1naxbg"},{"post_id":"ckwt958b8001iasda22sx4o03","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958bh0023asda8mxp1qyw"},{"post_id":"ckwt958b9001lasdachko8e3u","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958bi0027asda1sy13ri5"},{"post_id":"ckwt958b1000vasda8uk4fk9t","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958bk0029asda9v1o2lei"},{"post_id":"ckwt958b2000yasda61ewc2e9","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958bk002dasdafe1rf6fo"},{"post_id":"ckwt958ba001oasda3avo8ai0","category_id":"ckwt958bf001wasda3a7rd84k","_id":"ckwt958bn002fasdaf0tscir5"},{"post_id":"ckwt958bd001rasda2n1ydilm","category_id":"ckwt958bf001wasda3a7rd84k","_id":"ckwt958bo002iasda60o82qgp"},{"post_id":"ckwt958be001uasdacohmdzlu","category_id":"ckwt958bf001wasda3a7rd84k","_id":"ckwt958bo002lasdagxzfbaci"},{"post_id":"ckwt958bf001yasda8lxuhoc0","category_id":"ckwt958bo002hasda1ognd3ol","_id":"ckwt958bq002pasda19xbe3lu"},{"post_id":"ckwt958bg0022asdaakpq07g1","category_id":"ckwt958bo002hasda1ognd3ol","_id":"ckwt958bq002sasda0rrghq7s"},{"post_id":"ckwt958bi0026asdadle085e2","category_id":"ckwt958bo002hasda1ognd3ol","_id":"ckwt958br002wasdadwgh51zq"},{"post_id":"ckwt958bj0028asdaf33r0xn5","category_id":"ckwt958bo002hasda1ognd3ol","_id":"ckwt958br002yasda6rau8gw5"},{"post_id":"ckwt958c7004nasdaa034bmtc","category_id":"ckwt958bo002hasda1ognd3ol","_id":"ckwt958ca004tasda7v868u37"},{"post_id":"ckwt958c8004qasdadoxv2dkq","category_id":"ckwt958aj0004asda1l3teuir","_id":"ckwt958cc004yasda7mlz3a9b"},{"post_id":"ckwt958cb004uasda16ifba0w","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958ce0055asdabbsm5521"},{"post_id":"ckwt958c8004oasdabuxrb6gq","category_id":"ckwt958c9004rasdaf4h9h4jc","_id":"ckwt958ce0058asda2fmceqrb"},{"post_id":"ckwt958cc004xasda9zub3202","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958cf005basda51r03v9k"},{"post_id":"ckwt958cd0051asda7iov2t7g","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958cf005dasdaeyzh5r7c"},{"post_id":"ckwt958c9004sasda6lj3gjhb","category_id":"ckwt958cc004zasdafs89a7ss","_id":"ckwt958cf005gasda5wf233pm"},{"post_id":"ckwt958cd0054asda588111nb","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958cf005iasda79gr7xbt"},{"post_id":"ckwt958ce0057asdab46n0jf4","category_id":"ckwt958b20010asdac9wpg8sz","_id":"ckwt958cf005kasda342e8z7f"},{"post_id":"ckwt958cl005vasda7f1ogt6q","category_id":"ckwt958c9004rasdaf4h9h4jc","_id":"ckwt958co005zasdabk7gdb3v"},{"post_id":"ckwt958cm005wasda0o9q84n4","category_id":"ckwt958cc004zasdafs89a7ss","_id":"ckwt958co0060asda92sd1i2r"},{"post_id":"ckwt958cn005yasda4quxdwhr","category_id":"ckwt958ap000basdabx721ocf","_id":"ckwt958cp0062asda3en82jqn"}],"PostTag":[{"post_id":"ckwt958ae0001asda876h176f","tag_id":"ckwt958al0005asda92213vfb","_id":"ckwt958az000pasdaghw6a9y4"},{"post_id":"ckwt958ae0001asda876h176f","tag_id":"ckwt958ap000casda6tbg25i4","_id":"ckwt958b0000tasdaeff9a716"},{"post_id":"ckwt958ae0001asda876h176f","tag_id":"ckwt958as000hasda85t53pb8","_id":"ckwt958b1000xasda8hgsaaks"},{"post_id":"ckwt958ah0003asdadh9696b7","tag_id":"ckwt958ax000masda8cmxdkwn","_id":"ckwt958b40014asda58up70ro"},{"post_id":"ckwt958ah0003asdadh9696b7","tag_id":"ckwt958b1000uasda2jio7xe1","_id":"ckwt958b50018asda7v7vfy3z"},{"post_id":"ckwt958am0007asda03tm9p17","tag_id":"ckwt958b30013asda8ob0azo8","_id":"ckwt958b7001dasda0tjqa7ze"},{"post_id":"ckwt958an0009asdac7wi9bzf","tag_id":"ckwt958b6001aasda617rcogo","_id":"ckwt958bf001xasda7qpk593m"},{"post_id":"ckwt958an0009asdac7wi9bzf","tag_id":"ckwt958b8001hasda08ip4hf6","_id":"ckwt958bg0020asdad7m9c5ys"},{"post_id":"ckwt958an0009asdac7wi9bzf","tag_id":"ckwt958ax000masda8cmxdkwn","_id":"ckwt958bh0024asda6al49hs6"},{"post_id":"ckwt958ao000aasdaec61dg3u","tag_id":"ckwt958as000hasda85t53pb8","_id":"ckwt958bk002casdaffz60esy"},{"post_id":"ckwt958ao000aasdaec61dg3u","tag_id":"ckwt958bg0021asdaax2s9q1d","_id":"ckwt958bn002easdagkujc85t"},{"post_id":"ckwt958aq000dasda4um78pup","tag_id":"ckwt958bk002aasdah1x38ewb","_id":"ckwt958bo002jasda58yc4kc1"},{"post_id":"ckwt958ar000easda1ditc2re","tag_id":"ckwt958bn002gasda4k1k2sne","_id":"ckwt958bq002tasda3jb870c7"},{"post_id":"ckwt958ar000easda1ditc2re","tag_id":"ckwt958b8001hasda08ip4hf6","_id":"ckwt958br002uasda2bzd2yga"},{"post_id":"ckwt958ar000easda1ditc2re","tag_id":"ckwt958ax000masda8cmxdkwn","_id":"ckwt958br002xasda86ymckd3"},{"post_id":"ckwt958at000iasda0hrpgyi2","tag_id":"ckwt958bq002qasdaauuugo8h","_id":"ckwt958br0030asdag7l9g5yk"},{"post_id":"ckwt958at000iasda0hrpgyi2","tag_id":"ckwt958br002vasda5ptkbm26","_id":"ckwt958br0031asda1jdrfmlh"},{"post_id":"ckwt958av000jasdab9uteimk","tag_id":"ckwt958br002zasda3rfte673","_id":"ckwt958bs0035asda74vy8n83"},{"post_id":"ckwt958av000jasdab9uteimk","tag_id":"ckwt958br0032asda1uv79x7x","_id":"ckwt958bs0036asda5kdn7utu"},{"post_id":"ckwt958av000jasdab9uteimk","tag_id":"ckwt958br0033asdags52b4vw","_id":"ckwt958bs0038asdagd3ke8vp"},{"post_id":"ckwt958ay000nasdabw9v9pk4","tag_id":"ckwt958bs0034asda9w1e2k08","_id":"ckwt958bs003aasdafamsf6vw"},{"post_id":"ckwt958ay000nasdabw9v9pk4","tag_id":"ckwt958br0032asda1uv79x7x","_id":"ckwt958bt003basda5de07oro"},{"post_id":"ckwt958az000qasdaglcc0a6f","tag_id":"ckwt958br002zasda3rfte673","_id":"ckwt958bt003easda1bkjbrkj"},{"post_id":"ckwt958az000qasdaglcc0a6f","tag_id":"ckwt958br0032asda1uv79x7x","_id":"ckwt958bt003fasda1mochq7d"},{"post_id":"ckwt958b1000vasda8uk4fk9t","tag_id":"ckwt958bt003dasda949e2el7","_id":"ckwt958bt003hasda2yzb3qy3"},{"post_id":"ckwt958b2000yasda61ewc2e9","tag_id":"ckwt958br0032asda1uv79x7x","_id":"ckwt958bu003kasda5yzp4mwl"},{"post_id":"ckwt958b2000yasda61ewc2e9","tag_id":"ckwt958bt003iasdacsyz4my6","_id":"ckwt958bu003lasda0ozj1h6r"},{"post_id":"ckwt958b30011asdaaw9gc1c2","tag_id":"ckwt958bu003jasdabmzh12kr","_id":"ckwt958bv003oasdaa4rhedbo"},{"post_id":"ckwt958b30011asdaaw9gc1c2","tag_id":"ckwt958bu003masda2y0iczjj","_id":"ckwt958bv003pasda24e47mzt"},{"post_id":"ckwt958b40015asda85e60pyk","tag_id":"ckwt958bu003nasda5x6ccf1h","_id":"ckwt958bv003rasdab3e42ybg"},{"post_id":"ckwt958b60019asdacvb14i18","tag_id":"ckwt958bv003qasda8grj8fgj","_id":"ckwt958bv003uasda7bb8dof2"},{"post_id":"ckwt958b60019asdacvb14i18","tag_id":"ckwt958bs0034asda9w1e2k08","_id":"ckwt958bw003vasda6xmf52op"},{"post_id":"ckwt958b6001basdacltadrcf","tag_id":"ckwt958bv003tasda50ik4q7q","_id":"ckwt958bw003yasda2d0l8kl7"},{"post_id":"ckwt958b6001basdacltadrcf","tag_id":"ckwt958bw003wasdah7i5ds2y","_id":"ckwt958bw003zasdaffnofz1v"},{"post_id":"ckwt958b7001fasda9wwjf2ex","tag_id":"ckwt958bw003xasda5qidfpyy","_id":"ckwt958bx0041asda2g81cru9"},{"post_id":"ckwt958b8001iasda22sx4o03","tag_id":"ckwt958bw0040asdae1zg2mx9","_id":"ckwt958bx0044asda9ab83oqh"},{"post_id":"ckwt958b8001iasda22sx4o03","tag_id":"ckwt958bx0042asdaerlp0ee2","_id":"ckwt958bx0045asda2b3y7k9d"},{"post_id":"ckwt958b9001lasdachko8e3u","tag_id":"ckwt958bx0043asdabe2w0ef4","_id":"ckwt958by0047asdaadhvgtt4"},{"post_id":"ckwt958ba001oasda3avo8ai0","tag_id":"ckwt958bx0046asda5zmh4ivk","_id":"ckwt958by0049asda2du4ech3"},{"post_id":"ckwt958bd001rasda2n1ydilm","tag_id":"ckwt958bx0046asda5zmh4ivk","_id":"ckwt958bz004basdaaful0w27"},{"post_id":"ckwt958be001uasdacohmdzlu","tag_id":"ckwt958bx0046asda5zmh4ivk","_id":"ckwt958bz004dasda9ql75tcs"},{"post_id":"ckwt958bf001yasda8lxuhoc0","tag_id":"ckwt958bz004casdafin563hd","_id":"ckwt958c0004fasdafew9f0yw"},{"post_id":"ckwt958bg0022asdaakpq07g1","tag_id":"ckwt958c0004easda8fj032uf","_id":"ckwt958c1004iasda7qbidoc8"},{"post_id":"ckwt958bg0022asdaakpq07g1","tag_id":"ckwt958bt003dasda949e2el7","_id":"ckwt958c2004jasdah0v71y4d"},{"post_id":"ckwt958bi0026asdadle085e2","tag_id":"ckwt958c1004hasda5agfh8qn","_id":"ckwt958c2004lasda6udjdmru"},{"post_id":"ckwt958bj0028asdaf33r0xn5","tag_id":"ckwt958c2004kasdagcz87ove","_id":"ckwt958c2004masda9047dt7a"},{"post_id":"ckwt958c7004nasdaa034bmtc","tag_id":"ckwt958c2004kasdagcz87ove","_id":"ckwt958cc004wasda3shecv5f"},{"post_id":"ckwt958c7004nasdaa034bmtc","tag_id":"ckwt958c8004pasdabfvp67sy","_id":"ckwt958cc0050asda0mnfb1r4"},{"post_id":"ckwt958cb004uasda16ifba0w","tag_id":"ckwt958b8001hasda08ip4hf6","_id":"ckwt958cd0053asdabgyi75f4"},{"post_id":"ckwt958cb004uasda16ifba0w","tag_id":"ckwt958ax000masda8cmxdkwn","_id":"ckwt958ce0056asdagdewhhx6"},{"post_id":"ckwt958cc004xasda9zub3202","tag_id":"ckwt958bt003dasda949e2el7","_id":"ckwt958cf005aasda8zfc8yj2"},{"post_id":"ckwt958c8004oasdabuxrb6gq","tag_id":"ckwt958cb004vasdagpsra45q","_id":"ckwt958cf005casda1ozbhxd7"},{"post_id":"ckwt958c8004qasdadoxv2dkq","tag_id":"ckwt958cd0052asda8oii48gu","_id":"ckwt958cf005fasdaftmfduqg"},{"post_id":"ckwt958c9004sasda6lj3gjhb","tag_id":"ckwt958ce0059asdag57ubwje","_id":"ckwt958cf005hasdag83i7cdt"},{"post_id":"ckwt958c9004sasda6lj3gjhb","tag_id":"ckwt958bt003dasda949e2el7","_id":"ckwt958cf005jasda5ccgfjtd"},{"post_id":"ckwt958cd0051asda7iov2t7g","tag_id":"ckwt958cf005easdafn0lap97","_id":"ckwt958cg005oasda988x243m"},{"post_id":"ckwt958cd0051asda7iov2t7g","tag_id":"ckwt958cf005lasda8xy0cdqu","_id":"ckwt958cg005pasdahbg92pzi"},{"post_id":"ckwt958cd0051asda7iov2t7g","tag_id":"ckwt958cg005masdacchrawxh","_id":"ckwt958cg005rasda3utghsrn"},{"post_id":"ckwt958cd0054asda588111nb","tag_id":"ckwt958bq002qasdaauuugo8h","_id":"ckwt958ch005sasdagjez5zox"},{"post_id":"ckwt958cd0054asda588111nb","tag_id":"ckwt958cg005nasda4sbc4rfo","_id":"ckwt958ch005tasdagi5m29wj"},{"post_id":"ckwt958ce0057asdab46n0jf4","tag_id":"ckwt958cg005qasdag0dxbvbd","_id":"ckwt958ch005uasdadze47wvb"},{"post_id":"ckwt958cl005vasda7f1ogt6q","tag_id":"ckwt958cn005xasdaeg7l7jrv","_id":"ckwt958cq0065asdah4d07qqe"},{"post_id":"ckwt958cl005vasda7f1ogt6q","tag_id":"ckwt958co0061asda3pbx23yq","_id":"ckwt958cq0066asdahc4a3ved"},{"post_id":"ckwt958cl005vasda7f1ogt6q","tag_id":"ckwt958cp0063asda7bqle06m","_id":"ckwt958cq0068asda9q5g883y"},{"post_id":"ckwt958cm005wasda0o9q84n4","tag_id":"ckwt958cp0064asdag3o9fm25","_id":"ckwt958cq006aasda2kjd9uv5"},{"post_id":"ckwt958cm005wasda0o9q84n4","tag_id":"ckwt958cq0067asdaetle9jb7","_id":"ckwt958cq006basda4ucw6zge"},{"post_id":"ckwt958cn005yasda4quxdwhr","tag_id":"ckwt958cq0069asdaafxeabdv","_id":"ckwt958cr006casdae8iu29ew"},{"post_id":"ckwt958cn005yasda4quxdwhr","tag_id":"ckwt958bq002qasdaauuugo8h","_id":"ckwt958cr006dasda9cs2he6f"}],"Tag":[{"name":"smtp协议","_id":"ckwt958al0005asda92213vfb"},{"name":"命令行","_id":"ckwt958ap000casda6tbg25i4"},{"name":"邮件","_id":"ckwt958as000hasda85t53pb8"},{"name":"GD库","_id":"ckwt958ax000masda8cmxdkwn"},{"name":"缩略图","_id":"ckwt958b1000uasda2jio7xe1"},{"name":"加密解密","_id":"ckwt958b30013asda8ob0azo8"},{"name":"水印图","_id":"ckwt958b6001aasda617rcogo"},{"name":"图像","_id":"ckwt958b8001hasda08ip4hf6"},{"name":"PHP","_id":"ckwt958bg0021asdaax2s9q1d"},{"name":"表单","_id":"ckwt958bk002aasdah1x38ewb"},{"name":"验证码","_id":"ckwt958bn002gasda4k1k2sne"},{"name":"thinkphp","_id":"ckwt958bq002qasdaauuugo8h"},{"name":"控制器","_id":"ckwt958br002vasda5ptkbm26"},{"name":"CommonJS","_id":"ckwt958br002zasda3rfte673"},{"name":"模块化","_id":"ckwt958br0032asda1uv79x7x"},{"name":"node.js","_id":"ckwt958br0033asdags52b4vw"},{"name":"ES6","_id":"ckwt958bs0034asda9w1e2k08"},{"name":"文件","_id":"ckwt958bt003dasda949e2el7"},{"name":"AMD规范","_id":"ckwt958bt003iasdacsyz4my6"},{"name":"防抖节流","_id":"ckwt958bu003jasdabmzh12kr"},{"name":"效率","_id":"ckwt958bu003masda2y0iczjj"},{"name":"uniCloud","_id":"ckwt958bu003nasda5x6ccf1h"},{"name":"promise","_id":"ckwt958bv003qasda8grj8fgj"},{"name":"axios","_id":"ckwt958bv003tasda50ik4q7q"},{"name":"json-server","_id":"ckwt958bw003wasdah7i5ds2y"},{"name":"Stotage","_id":"ckwt958bw003xasda5qidfpyy"},{"name":"geolocation","_id":"ckwt958bw0040asdae1zg2mx9"},{"name":"位置","_id":"ckwt958bx0042asdaerlp0ee2"},{"name":"拖放","_id":"ckwt958bx0043asdabe2w0ef4"},{"name":"脚本","_id":"ckwt958bx0046asda5zmh4ivk"},{"name":"pil","_id":"ckwt958bz004casdafin563hd"},{"name":"pip","_id":"ckwt958c0004easda8fj032uf"},{"name":"wordcloud","_id":"ckwt958c1004hasda5agfh8qn"},{"name":"爬虫","_id":"ckwt958c2004kasdagcz87ove"},{"name":"requests","_id":"ckwt958c8004pasdabfvp67sy"},{"name":"存储引擎","_id":"ckwt958cb004vasdagpsra45q"},{"name":"git","_id":"ckwt958cd0052asda8oii48gu"},{"name":"IO流","_id":"ckwt958ce0059asdag57ubwje"},{"name":"cookie","_id":"ckwt958cf005easdafn0lap97"},{"name":"session","_id":"ckwt958cf005lasda8xy0cdqu"},{"name":"会话","_id":"ckwt958cg005masdacchrawxh"},{"name":"模型","_id":"ckwt958cg005nasda4sbc4rfo"},{"name":"webpack","_id":"ckwt958cg005qasdag0dxbvbd"},{"name":"约束","_id":"ckwt958cn005xasdaeg7l7jrv"},{"name":"事务","_id":"ckwt958co0061asda3pbx23yq"},{"name":"视图","_id":"ckwt958cp0063asda7bqle06m"},{"name":"tomcat","_id":"ckwt958cp0064asdag3o9fm25"},{"name":"端口","_id":"ckwt958cq0067asdaetle9jb7"},{"name":"数据库","_id":"ckwt958cq0069asdaafxeabdv"}]}}